

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 26 18:17:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 23/03/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataBANK0
    88   002600                     __pidataBANK0:
    89                           	callstack 0
    90                           
    91                           ;initializer for _CANT
    92   002600  45                 	db	69
    93   002601  78                 	db	120
    94   002602  70                 	db	112
    95   002603  72                 	db	114
    96   002604  65                 	db	101
    97   002605  73                 	db	115
    98   002606  20                 	db	32
    99   002607  46                 	db	70
   100   002608  69                 	db	105
   101   002609  6C                 	db	108
   102   00260A  6C                 	db	108
   103                           
   104                           ;initializer for _Perfil
   105   00260B  55                 	db	85
   106   00260C  4E                 	db	78
   107   00260D  4E                 	db	78
   108   00260E  55                 	db	85
   109   00260F  53                 	db	83
   110                           
   111                           ;initializer for _CAL
   112   002610  60AA               	dw	24746
   113   002612  4018               	dw	16408
   114                           
   115                           	psect	smallconst
   116   000800                     __psmallconst:
   117                           	callstack 0
   118   000800  00                 	db	0
   119   000801                     _hand:
   120                           	callstack 0
   121   000801  10                 	db	16
   122   000802  19                 	db	25
   123   000803  1D                 	db	29
   124   000804  1F                 	db	31
   125   000805  1D                 	db	29
   126   000806  19                 	db	25
   127   000807  10                 	db	16
   128   000808  00                 	db	0
   129   000809                     __end_of_hand:
   130                           	callstack 0
   131   000000                     _TRISDbits	set	3989
   132   000000                     _TRISEbits	set	3990
   133   000000                     _TRISCbits	set	3988
   134   000000                     _TRISBbits	set	3987
   135   000000                     _ADCON1bits	set	4033
   136   000000                     _LATBbits	set	3978
   137   000000                     _LATCbits	set	3979
   138   000000                     _LATE	set	3981
   139   000000                     _TMR2ON	set	32338
   140   000000                     _PORTAbits	set	3968
   141   000000                     _PORTBbits	set	3969
   142   000000                     _LATB	set	3978
   143   000000                     _LATEbits	set	3981
   144   000000                     _INTCONbits	set	4082
   145   000000                     _TRISAbits	set	3986
   146   000000                     _TMR0L	set	4054
   147   000000                     _T2CON	set	4042
   148   000000                     _PR2	set	4043
   149   000000                     _CCP2CON	set	4026
   150   000000                     _CCPR2L	set	4027
   151   000000                     _CCPR1L	set	4030
   152   000000                     _LATC	set	3979
   153   000000                     _T0CONbits	set	4053
   154   000000                     _TMR2	set	4044
   155   000000                     _CCP1CON	set	4029
   156   000000                     _PORTDbits	set	3971
   157   000000                     _LATAbits	set	3977
   158   000809                     STR_3:
   159   000809  50                 	db	80	;'P'
   160   00080A  6F                 	db	111	;'o'
   161   00080B  6E                 	db	110	;'n'
   162   00080C  67                 	db	103	;'g'
   163   00080D  61                 	db	97	;'a'
   164   00080E  20                 	db	32
   165   00080F  75                 	db	117	;'u'
   166   000810  6E                 	db	110	;'n'
   167   000811  20                 	db	32
   168   000812  65                 	db	101	;'e'
   169   000813  6E                 	db	110	;'n'
   170   000814  76                 	db	118	;'v'
   171   000815  61                 	db	97	;'a'
   172   000816  73                 	db	115	;'s'
   173   000817  65                 	db	101	;'e'
   174   000818  20                 	db	32
   175   000819  00                 	db	0
   176   00081A                     STR_8:
   177   00081A  4C                 	db	76	;'L'
   178   00081B  6C                 	db	108	;'l'
   179   00081C  65                 	db	101	;'e'
   180   00081D  6E                 	db	110	;'n'
   181   00081E  61                 	db	97	;'a'
   182   00081F  6E                 	db	110	;'n'
   183   000820  64                 	db	100	;'d'
   184   000821  6F                 	db	111	;'o'
   185   000822  20                 	db	32
   186   000823  20                 	db	32
   187   000824  20                 	db	32
   188   000825  20                 	db	32
   189   000826  20                 	db	32
   190   000827  6D                 	db	109	;'m'
   191   000828  6C                 	db	108	;'l'
   192   000829  20                 	db	32
   193   00082A  00                 	db	0
   194   00082B                     STR_1:
   195   00082B  52                 	db	82	;'R'
   196   00082C  65                 	db	101	;'e'
   197   00082D  74                 	db	116	;'t'
   198   00082E  69                 	db	105	;'i'
   199   00082F  72                 	db	114	;'r'
   200   000830  65                 	db	101	;'e'
   201   000831  20                 	db	32
   202   000832  65                 	db	101	;'e'
   203   000833  6C                 	db	108	;'l'
   204   000834  20                 	db	32
   205   000835  65                 	db	101	;'e'
   206   000836  6E                 	db	110	;'n'
   207   000837  76                 	db	118	;'v'
   208   000838  61                 	db	97	;'a'
   209   000839  73                 	db	115	;'s'
   210   00083A  65                 	db	101	;'e'
   211   00083B  00                 	db	0
   212   00083C                     STR_5:
   213   00083C  43                 	db	67	;'C'
   214   00083D  61                 	db	97	;'a'
   215   00083E  6E                 	db	110	;'n'
   216   00083F  74                 	db	116	;'t'
   217   000840  69                 	db	105	;'i'
   218   000841  64                 	db	100	;'d'
   219   000842  61                 	db	97	;'a'
   220   000843  64                 	db	100	;'d'
   221   000844  3A                 	db	58	;':'
   222   000845  20                 	db	32
   223   000846  30                 	db	48	;'0'
   224   000847  30                 	db	48	;'0'
   225   000848  30                 	db	48	;'0'
   226   000849  30                 	db	48	;'0'
   227   00084A  6D                 	db	109	;'m'
   228   00084B  6C                 	db	108	;'l'
   229   00084C  00                 	db	0
   230   00084D                     STR_7:
   231   00084D  41                 	db	65	;'A'
   232   00084E  74                 	db	116	;'t'
   233   00084F  72                 	db	114	;'r'
   234   000850  61                 	db	97	;'a'
   235   000851  73                 	db	115	;'s'
   236   000852  2A                 	db	42
   237   000853  20                 	db	32
   238   000854  20                 	db	32
   239   000855  00                 	db	0
   240   000856                     STR_9:
   241   000856  53                 	db	83	;'S'
   242   000857  61                 	db	97	;'a'
   243   000858  6C                 	db	108	;'l'
   244   000859  69                 	db	105	;'i'
   245   00085A  72                 	db	114	;'r'
   246   00085B  20                 	db	32
   247   00085C  00                 	db	0
   248   00085D                     STR_6:
   249   00085D  49                 	db	73	;'I'
   250   00085E  6E                 	db	110	;'n'
   251   00085F  69                 	db	105	;'i'
   252   000860  63                 	db	99	;'c'
   253   000861  69                 	db	105	;'i'
   254   000862  6F                 	db	111	;'o'
   255   000863  00                 	db	0
   256   000864                     STR_2:
   257   000864  50                 	db	80	;'P'
   258   000865  61                 	db	97	;'a'
   259   000866  72                 	db	114	;'r'
   260   000867  61                 	db	97	;'a'
   261   000868  72                 	db	114	;'r'
   262   000869  00                 	db	0
   263   00086A                     STR_10:
   264   00086A  25                 	db	37
   265   00086B  75                 	db	117	;'u'
   266   00086C  00                 	db	0
   267   00086D  00                 	db	0	; dummy byte at the end
   268   000000                     
   269                           ; #config settings
   270                           
   271                           	psect	cinit
   272   002548                     __pcinit:
   273                           	callstack 0
   274   002548                     start_initialization:
   275                           	callstack 0
   276   002548                     __initialization:
   277                           	callstack 0
   278                           
   279                           ; Initialize objects allocated to BANK0 (20 bytes)
   280                           ; load TBLPTR registers with __pidataBANK0
   281   002548  0E00               	movlw	low __pidataBANK0
   282   00254A  6EF6               	movwf	tblptrl,c
   283   00254C  0E26               	movlw	high __pidataBANK0
   284   00254E  6EF7               	movwf	tblptrh,c
   285   002550  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   286   002552  6EF8               	movwf	tblptru,c
   287   002554  EE00  F0BF         	lfsr	0,__pdataBANK0
   288   002558  EE10 F014          	lfsr	1,20
   289   00255C                     copy_data0:
   290   00255C  0009               	tblrd		*+
   291   00255E  CFF5 FFEE          	movff	tablat,postinc0
   292   002562  50E5               	movf	postdec1,w,c
   293   002564  50E1               	movf	fsr1l,w,c
   294   002566  E1FA               	bnz	copy_data0
   295                           
   296                           ; Clear objects allocated to BANK0 (74 bytes)
   297   002568  EE00  F060         	lfsr	0,__pbssBANK0
   298   00256C  0E4A               	movlw	74
   299   00256E                     clear_0:
   300   00256E  6AEE               	clrf	postinc0,c
   301   002570  06E8               	decf	wreg,f,c
   302   002572  E1FD               	bnz	clear_0
   303                           
   304                           ; Clear objects allocated to COMRAM (2 bytes)
   305   002574  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   306   002576  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   307   002578                     end_of_initialization:
   308                           	callstack 0
   309   002578                     __end_of__initialization:
   310                           	callstack 0
   311   002578  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312   00257A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313   00257C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314   00257E  6EF8               	movwf	tblptru,c
   315   002580  0100               	movlb	0
   316   002582  EF7B  F00A         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMRAM
   319   00005B                     __pbssCOMRAM:
   320                           	callstack 0
   321   00005B                     __CHAR3:
   322                           	callstack 0
   323   00005B                     	ds	1
   324   00005C                     __CHAR4:
   325                           	callstack 0
   326   00005C                     	ds	1
   327                           
   328                           	psect	bssBANK0
   329   000060                     __pbssBANK0:
   330                           	callstack 0
   331   000060                     _PULSES_TO_REACH:
   332                           	callstack 0
   333   000060                     	ds	4
   334   000064                     _width:
   335                           	callstack 0
   336   000064                     	ds	2
   337   000066                     _prec:
   338                           	callstack 0
   339   000066                     	ds	2
   340   000068                     _num1:
   341                           	callstack 0
   342   000068                     	ds	2
   343   00006A                     _num2:
   344                           	callstack 0
   345   00006A                     	ds	2
   346   00006C                     _num3:
   347                           	callstack 0
   348   00006C                     	ds	2
   349   00006E                     _num4:
   350                           	callstack 0
   351   00006E                     	ds	2
   352   000070                     _flow_pulse:
   353                           	callstack 0
   354   000070                     	ds	2
   355   000072                     _VAL_TYPED:
   356                           	callstack 0
   357   000072                     	ds	2
   358   000074                     _CURRENT_OPTION:
   359                           	callstack 0
   360   000074                     	ds	2
   361   000076                     _VALUE_IN_ML:
   362                           	callstack 0
   363   000076                     	ds	2
   364   000078                     _PULSE:
   365                           	callstack 0
   366   000078                     	ds	2
   367   00007A                     _N:
   368                           	callstack 0
   369   00007A                     	ds	2
   370   00007C                     _flags:
   371                           	callstack 0
   372   00007C                     	ds	1
   373   00007D                     _SELECTED2:
   374                           	callstack 0
   375   00007D                     	ds	1
   376   00007E                     __CHAR1:
   377                           	callstack 0
   378   00007E                     	ds	1
   379   00007F                     __CHAR2:
   380                           	callstack 0
   381   00007F                     	ds	1
   382   000080                     _dbuf:
   383                           	callstack 0
   384   000080                     	ds	32
   385   0000A0                     _STRING_VALUE_IN_ML:
   386                           	callstack 0
   387   0000A0                     	ds	5
   388   0000A5                     _STRING_VAL_TYPED:
   389                           	callstack 0
   390   0000A5                     	ds	5
   391                           
   392                           	psect	dataBANK0
   393   0000BF                     __pdataBANK0:
   394                           	callstack 0
   395   0000BF                     _CANT:
   396                           	callstack 0
   397   0000BF                     	ds	11
   398   0000CA                     _Perfil:
   399                           	callstack 0
   400   0000CA                     	ds	5
   401   0000CF                     _CAL:
   402                           	callstack 0
   403   0000CF                     	ds	4
   404                           
   405                           	psect	cstackBANK0
   406   0000AA                     __pcstackBANK0:
   407                           	callstack 0
   408   0000AA                     ?_sprintf:
   409                           	callstack 0
   410   0000AA                     sprintf@s:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x0
   414   0000AA                     	ds	2
   415   0000AC                     sprintf@fmt:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419   0000AC                     	ds	4
   420   0000B0                     sprintf@ap:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x6
   424   0000B0                     	ds	2
   425   0000B2                     sprintf@f:
   426                           	callstack 0
   427                           
   428                           ; 11 bytes @ 0x8
   429   0000B2                     	ds	11
   430   0000BD                     ??_main:
   431                           
   432                           ; 1 bytes @ 0x13
   433   0000BD                     	ds	2
   434                           
   435                           	psect	cstackCOMRAM
   436   000001                     __pcstackCOMRAM:
   437                           	callstack 0
   438   000001                     ??_ISR_TIMER0:
   439   000001                     
   440                           ; 1 bytes @ 0x0
   441   000001                     	ds	1
   442   000002                     ??_Keypad_Get_Char:
   443   000002                     ?___wmul:
   444                           	callstack 0
   445   000002                     ?___xxtofl:
   446                           	callstack 0
   447   000002                     ?___lodiv:
   448                           	callstack 0
   449   000002                     ?___lomod:
   450                           	callstack 0
   451   000002                     Lcd_Port@a:
   452                           	callstack 0
   453   000002                     ___wmul@multiplier:
   454                           	callstack 0
   455   000002                     fputc@c:
   456                           	callstack 0
   457   000002                     ___xxtofl@val:
   458                           	callstack 0
   459   000002                     ___lodiv@dividend:
   460                           	callstack 0
   461   000002                     ___lomod@dividend:
   462                           	callstack 0
   463                           
   464                           ; 8 bytes @ 0x1
   465   000002                     	ds	1
   466   000003                     ??_Lcd_Cmd:
   467   000003                     Lcd_Write_Char@temp:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x2
   471   000003                     	ds	1
   472   000004                     Lcd_Cmd@a:
   473                           	callstack 0
   474   000004                     Lcd_Write_Char@y:
   475                           	callstack 0
   476   000004                     ___wmul@multiplicand:
   477                           	callstack 0
   478   000004                     fputc@fp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x3
   482   000004                     	ds	1
   483   000005                     ??_Lcd_Init:
   484   000005                     Lcd_Set_Cursor@b:
   485                           	callstack 0
   486   000005                     Lcd_Write_Char@a:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x4
   490   000005                     	ds	1
   491   000006                     ??_fputc:
   492   000006                     ??___xxtofl:
   493   000006                     Lcd_Set_Cursor@a:
   494                           	callstack 0
   495   000006                     Lcd_Write_String@a:
   496                           	callstack 0
   497   000006                     ___wmul@product:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x5
   501   000006                     	ds	1
   502   000007                     Lcd_Set_Cursor@z:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x6
   506   000007                     	ds	1
   507   000008                     ??_Lcd_Write_String:
   508   000008                     Lcd_Set_Cursor@y:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x7
   512   000008                     	ds	1
   513   000009                     Lcd_Set_Cursor@temp:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x8
   517   000009                     	ds	1
   518   00000A                     ??_WELCOME:
   519   00000A                     ___xxtofl@sign:
   520                           	callstack 0
   521   00000A                     Lcd_Write_String@i:
   522                           	callstack 0
   523   00000A                     ___lodiv@divisor:
   524                           	callstack 0
   525   00000A                     ___lomod@divisor:
   526                           	callstack 0
   527                           
   528                           ; 8 bytes @ 0x9
   529   00000A                     	ds	1
   530   00000B                     ___xxtofl@exp:
   531                           	callstack 0
   532   00000B                     fputs@s:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xA
   536   00000B                     	ds	1
   537   00000C                     ??_USER_VALUE:
   538   00000C                     WELCOME@a:
   539                           	callstack 0
   540   00000C                     ___xxtofl@arg:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0xB
   544   00000C                     	ds	1
   545   00000D                     fputs@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0xC
   549   00000D                     	ds	1
   550   00000E                     WELCOME@a_641:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xD
   554   00000E                     	ds	1
   555   00000F                     fputs@c:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xE
   559   00000F                     	ds	1
   560   000010                     ?___flmul:
   561                           	callstack 0
   562   000010                     fputs@i:
   563                           	callstack 0
   564   000010                     ___flge@ff1:
   565                           	callstack 0
   566   000010                     ___flmul@b:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0xF
   570   000010                     	ds	2
   571   000012                     ___lomod@counter:
   572                           	callstack 0
   573   000012                     pad@fp:
   574                           	callstack 0
   575   000012                     ___lodiv@quotient:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x11
   579   000012                     	ds	2
   580   000014                     pad@buf:
   581                           	callstack 0
   582   000014                     ___flge@ff2:
   583                           	callstack 0
   584   000014                     ___flmul@a:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x13
   588   000014                     	ds	2
   589   000016                     pad@p:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x15
   593   000016                     	ds	2
   594   000018                     ??___flmul:
   595   000018                     ??___flge:
   596   000018                     ??_pad:
   597                           
   598                           ; 1 bytes @ 0x17
   599   000018                     	ds	1
   600   000019                     pad@i:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x18
   604   000019                     	ds	1
   605   00001A                     ___lodiv@counter:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x19
   609   00001A                     	ds	1
   610   00001B                     pad@w:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x1A
   614   00001B                     	ds	1
   615   00001C                     ___flmul@sign:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x1B
   619   00001C                     	ds	1
   620   00001D                     utoa@fp:
   621                           	callstack 0
   622   00001D                     ___flmul@grs:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0x1C
   626   00001D                     	ds	2
   627   00001F                     utoa@d:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x1E
   631   00001F                     	ds	2
   632   000021                     ___flmul@aexp:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x20
   636   000021                     	ds	1
   637   000022                     ___flmul@bexp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x21
   641   000022                     	ds	1
   642   000023                     ___flmul@prod:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x22
   646   000023                     	ds	4
   647   000027                     ??_utoa:
   648   000027                     ___flmul@temp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x26
   652   000027                     	ds	2
   653   000029                     ?___fltol:
   654                           	callstack 0
   655   000029                     ___fltol@f1:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x28
   659   000029                     	ds	4
   660   00002D                     ??___fltol:
   661                           
   662                           ; 1 bytes @ 0x2C
   663   00002D                     	ds	2
   664   00002F                     utoa@w:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x2E
   668   00002F                     	ds	2
   669   000031                     ___fltol@sign1:
   670                           	callstack 0
   671   000031                     utoa@p:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x30
   675   000031                     	ds	1
   676   000032                     ___fltol@exp1:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x31
   680   000032                     	ds	1
   681   000033                     utoa@n:
   682                           	callstack 0
   683                           
   684                           ; 8 bytes @ 0x32
   685   000033                     	ds	8
   686   00003B                     utoa@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x3A
   690   00003B                     	ds	2
   691   00003D                     vfpfcnvrt@fp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x3C
   695   00003D                     	ds	2
   696   00003F                     vfpfcnvrt@fmt:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x3E
   700   00003F                     	ds	2
   701   000041                     vfpfcnvrt@ap:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x40
   705   000041                     	ds	2
   706   000043                     ??_vfpfcnvrt:
   707                           
   708                           ; 1 bytes @ 0x42
   709   000043                     	ds	4
   710   000047                     vfpfcnvrt@convarg:
   711                           	callstack 0
   712                           
   713                           ; 8 bytes @ 0x46
   714   000047                     	ds	8
   715   00004F                     vfpfcnvrt@cp:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x4E
   719   00004F                     	ds	2
   720   000051                     ?_vfprintf:
   721                           	callstack 0
   722   000051                     vfprintf@fp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x50
   726   000051                     	ds	2
   727   000053                     vfprintf@fmt:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x52
   731   000053                     	ds	2
   732   000055                     vfprintf@ap:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x54
   736   000055                     	ds	2
   737   000057                     vfprintf@cfmt:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x56
   741   000057                     	ds	2
   742   000059                     ??_FILL:
   743   000059                     
   744                           ; 1 bytes @ 0x58
   745   000059                     	ds	2
   746                           
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 72 in file "Main_program.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   766 ;;      Params:         0       0       0       0       0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0
   768 ;;      Temps:          0       2       0       0       0       0       0       0       0
   769 ;;      Totals:         0       2       0       0       0       0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels required when called: 10
   772 ;; This function calls:
   773 ;;		_FILL
   774 ;;		_Keypad_Get_Char
   775 ;;		_Keypad_Init
   776 ;;		_Lcd_Clear
   777 ;;		_Lcd_Init
   778 ;;		_Lcd_Set_Cursor
   779 ;;		_Lcd_Write_String
   780 ;;		_USER_VALUE
   781 ;;		_WELCOME
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text0
   788   0014F6                     __ptext0:
   789                           	callstack 0
   790   0014F6                     _main:
   791                           	callstack 21
   792   0014F6                     
   793                           ;Main_program.c: 77:     INTCONbits.GIE = 1;
   794   0014F6  8EF2               	bsf	242,7,c	;volatile
   795                           
   796                           ;Main_program.c: 78:     INTCONbits.T0IF = 0;
   797   0014F8  94F2               	bcf	242,2,c	;volatile
   798                           
   799                           ;Main_program.c: 79:     INTCONbits.TMR0IE = 1;
   800   0014FA  8AF2               	bsf	242,5,c	;volatile
   801                           
   802                           ;Main_program.c: 80:     TRISAbits.TRISA4 = 1;
   803   0014FC  8892               	bsf	146,4,c	;volatile
   804   0014FE                     
   805                           ;Main_program.c: 81:     ADCON1bits.PCFG = 0X0F;
   806   0014FE  0E0F               	movlw	15
   807   001500  12C1               	iorwf	193,f,c	;volatile
   808   001502                     
   809                           ;Main_program.c: 83:     TRISAbits.TRISA5 = 1;
   810   001502  8A92               	bsf	146,5,c	;volatile
   811   001504                     
   812                           ;Main_program.c: 84:     TRISBbits.TRISB0 = 1;
   813   001504  8093               	bsf	147,0,c	;volatile
   814   001506                     
   815                           ;Main_program.c: 85:     TRISBbits.TRISB3 = 0;
   816   001506  9693               	bcf	147,3,c	;volatile
   817   001508                     
   818                           ;Main_program.c: 86:     TRISCbits.TRISC2 = 0;
   819   001508  9494               	bcf	148,2,c	;volatile
   820   00150A                     
   821                           ;Main_program.c: 87:     TRISEbits.TRISE2 = 0;
   822   00150A  9496               	bcf	150,2,c	;volatile
   823   00150C                     
   824                           ;Main_program.c: 88:     TRISCbits.TRISC0 = 0;
   825   00150C  9094               	bcf	148,0,c	;volatile
   826                           
   827                           ;Main_program.c: 89:     LATB = 0;
   828   00150E  0E00               	movlw	0
   829   001510  6E8A               	movwf	138,c	;volatile
   830                           
   831                           ;Main_program.c: 90:     LATC = 0;
   832   001512  0E00               	movlw	0
   833   001514  6E8B               	movwf	139,c	;volatile
   834                           
   835                           ;Main_program.c: 91:     LATE = 0;
   836   001516  0E00               	movlw	0
   837   001518  6E8D               	movwf	141,c	;volatile
   838   00151A                     
   839                           ;Main_program.c: 93:     Keypad_Init();
   840   00151A  EC0A  F013         	call	_Keypad_Init	;wreg free
   841                           
   842                           ;Main_program.c: 94:     Lcd_Init();
   843   00151E  EC22  F011         	call	_Lcd_Init	;wreg free
   844                           
   845                           ;Main_program.c: 98:     Lcd_Clear();
   846   001522  EC27  F013         	call	_Lcd_Clear	;wreg free
   847   001526                     
   848                           ;Main_program.c: 104:     PR2 = 0X3E;
   849   001526  0E3E               	movlw	62
   850   001528  6ECB               	movwf	203,c	;volatile
   851   00152A                     
   852                           ;Main_program.c: 105:     CCPR1L = 0;
   853   00152A  0E00               	movlw	0
   854   00152C  6EBE               	movwf	190,c	;volatile
   855   00152E                     
   856                           ;Main_program.c: 106:     CCPR2L = 0;
   857   00152E  0E00               	movlw	0
   858   001530  6EBB               	movwf	187,c	;volatile
   859   001532                     
   860                           ;Main_program.c: 107:     TRISCbits.TRISC2 = 0;
   861   001532  9494               	bcf	148,2,c	;volatile
   862   001534                     
   863                           ;Main_program.c: 108:     TRISCbits.TRISC1 = 0;
   864   001534  9294               	bcf	148,1,c	;volatile
   865   001536                     
   866                           ;Main_program.c: 109:     T2CON = 0X03;
   867   001536  0E03               	movlw	3
   868   001538  6ECA               	movwf	202,c	;volatile
   869   00153A                     
   870                           ;Main_program.c: 110:     CCP1CON = 0X0C;
   871   00153A  0E0C               	movlw	12
   872   00153C  6EBD               	movwf	189,c	;volatile
   873   00153E                     
   874                           ;Main_program.c: 111:     CCP2CON = 0X0C;
   875   00153E  0E0C               	movlw	12
   876   001540  6EBA               	movwf	186,c	;volatile
   877   001542                     
   878                           ;Main_program.c: 112:     TMR2 = 255;
   879   001542  68CC               	setf	204,c	;volatile
   880   001544                     
   881                           ;Main_program.c: 113:     TMR2ON = 1;
   882   001544  84CA               	bsf	4042,2,c	;volatile
   883   001546  EF5B  F00B         	goto	l3379
   884   00154A                     l3327:
   885                           
   886                           ; BSR set to: 0
   887                           ;Main_program.c: 123:                 WELCOME();
   888   00154A  ECE4  F00D         	call	_WELCOME	;wreg free
   889   00154E                     
   890                           ;Main_program.c: 124:                 USER_VALUE();
   891   00154E  EC2E  F009         	call	_USER_VALUE	;wreg free
   892   001552                     
   893                           ;Main_program.c: 125:                 CURRENT_OPTION = 1;
   894   001552  0E00               	movlw	0
   895   001554  0100               	movlb	0	; () banked
   896   001556  6F75               	movwf	(_CURRENT_OPTION+1)& (0+255),b
   897   001558  0E01               	movlw	1
   898   00155A  6F74               	movwf	_CURRENT_OPTION& (0+255),b
   899                           
   900                           ;Main_program.c: 126:                 break;
   901   00155C  EF5B  F00B         	goto	l3379
   902   001560                     l3333:
   903                           
   904                           ; BSR set to: 0
   905                           ;Main_program.c: 131:                 {;Main_program.c: 132:                     SELECTE
      +                          D2 = Keypad_Get_Char();
   906   001560  EC4C  F006         	call	_Keypad_Get_Char	;wreg free
   907   001564  0100               	movlb	0	; () banked
   908   001566  6F7D               	movwf	_SELECTED2& (0+255),b
   909   001568                     
   910                           ; BSR set to: 0
   911                           ;Main_program.c: 133:                     if (SELECTED2 == '*')
   912   001568  0E2A               	movlw	42
   913   00156A  197D               	xorwf	_SELECTED2& (0+255),w,b
   914   00156C  A4D8               	btfss	status,2,c
   915   00156E  EFBB  F00A         	goto	u2791
   916   001572  EFBD  F00A         	goto	u2790
   917   001576                     u2791:
   918   001576  EFC1  F00A         	goto	l3339
   919   00157A                     u2790:
   920   00157A                     
   921                           ; BSR set to: 0
   922                           ;Main_program.c: 134:                     {;Main_program.c: 135:                        
      +                           CURRENT_OPTION = 0;
   923   00157A  0E00               	movlw	0
   924   00157C  6F75               	movwf	(_CURRENT_OPTION+1)& (0+255),b
   925   00157E  0E00               	movlw	0
   926   001580  6F74               	movwf	_CURRENT_OPTION& (0+255),b
   927   001582                     l3339:
   928                           
   929                           ; BSR set to: 0
   930                           ;Main_program.c: 139:                     if (PORTBbits.RB0 == 0 && PORTAbits.RA5 == 0)
   931   001582  B081               	btfsc	129,0,c	;volatile
   932   001584  EFC6  F00A         	goto	u2801
   933   001588  EFC8  F00A         	goto	u2800
   934   00158C                     u2801:
   935   00158C  EFDF  F00A         	goto	l3347
   936   001590                     u2800:
   937   001590                     
   938                           ; BSR set to: 0
   939   001590  BA80               	btfsc	128,5,c	;volatile
   940   001592  EFCD  F00A         	goto	u2811
   941   001596  EFCF  F00A         	goto	u2810
   942   00159A                     u2811:
   943   00159A  EFDF  F00A         	goto	l3347
   944   00159E                     u2810:
   945   00159E                     
   946                           ; BSR set to: 0
   947                           ;Main_program.c: 140:                     {;Main_program.c: 141:                        
      +                           CURRENT_OPTION = 2;
   948   00159E  0E00               	movlw	0
   949   0015A0  6F75               	movwf	(_CURRENT_OPTION+1)& (0+255),b
   950   0015A2  0E02               	movlw	2
   951   0015A4  6F74               	movwf	_CURRENT_OPTION& (0+255),b
   952   0015A6                     
   953                           ; BSR set to: 0
   954                           ;Main_program.c: 142:                         _delay((unsigned long)((700)*(48000000/400
      +                          0.0)));
   955   0015A6  0E2B               	movlw	43
   956   0015A8  0100               	movlb	0	; () banked
   957   0015AA  6FBE               	movwf	(??_main+1)& (0+255),b
   958   0015AC  0E9D               	movlw	157
   959   0015AE  6FBD               	movwf	??_main& (0+255),b
   960   0015B0  0EF9               	movlw	249
   961   0015B2                     u2887:
   962   0015B2  2EE8               	decfsz	wreg,f,c
   963   0015B4  D7FE               	bra	u2887
   964   0015B6  2FBD               	decfsz	??_main& (0+255),f,b
   965   0015B8  D7FC               	bra	u2887
   966   0015BA  2FBE               	decfsz	(??_main+1)& (0+255),f,b
   967   0015BC  D7FA               	bra	u2887
   968   0015BE                     l3347:
   969                           
   970                           ;Main_program.c: 130:                 while (CURRENT_OPTION == 1)
   971   0015BE  0100               	movlb	0	; () banked
   972   0015C0  0574               	decf	_CURRENT_OPTION& (0+255),w,b
   973   0015C2  1175               	iorwf	(_CURRENT_OPTION+1)& (0+255),w,b
   974   0015C4  B4D8               	btfsc	status,2,c
   975   0015C6  EFE7  F00A         	goto	u2821
   976   0015CA  EFE9  F00A         	goto	u2820
   977   0015CE                     u2821:
   978   0015CE  EFB0  F00A         	goto	l3333
   979   0015D2                     u2820:
   980   0015D2  EF5B  F00B         	goto	l3379
   981   0015D6                     l3349:
   982                           
   983                           ; BSR set to: 0
   984                           ;Main_program.c: 148:                 FILL();
   985   0015D6  ECDE  F007         	call	_FILL	;wreg free
   986   0015DA                     
   987                           ;Main_program.c: 149:                 Lcd_Init();
   988   0015DA  EC22  F011         	call	_Lcd_Init	;wreg free
   989                           
   990                           ;Main_program.c: 150:                 while (CURRENT_OPTION != 0) {
   991   0015DE  EF51  F00B         	goto	l3375
   992   0015E2                     l143:
   993                           
   994                           ; BSR set to: 0
   995                           ;Main_program.c: 151:                     if (PORTAbits.RA5 == 0)
   996   0015E2  BA80               	btfsc	128,5,c	;volatile
   997   0015E4  EFF6  F00A         	goto	u2831
   998   0015E8  EFF8  F00A         	goto	u2830
   999   0015EC                     u2831:
  1000   0015EC  EF10  F00B         	goto	l3359
  1001   0015F0                     u2830:
  1002   0015F0                     
  1003                           ; BSR set to: 0
  1004                           ;Main_program.c: 152:                     {;Main_program.c: 153:                        
      +                           Lcd_Set_Cursor(1, 1);
  1005   0015F0  0E01               	movlw	1
  1006   0015F2  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1007   0015F4  0E01               	movlw	1
  1008   0015F6  ECEC  F00F         	call	_Lcd_Set_Cursor
  1009   0015FA                     
  1010                           ;Main_program.c: 154:                         Lcd_Write_String("Retire el envase");
  1011   0015FA  0E2B               	movlw	low STR_1
  1012   0015FC  6E06               	movwf	Lcd_Write_String@a^0,c
  1013   0015FE  0E08               	movlw	high STR_1
  1014   001600  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1015   001602  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1016   001606                     
  1017                           ;Main_program.c: 155:                         Lcd_Set_Cursor(2, 1);
  1018   001606  0E01               	movlw	1
  1019   001608  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1020   00160A  0E02               	movlw	2
  1021   00160C  ECEC  F00F         	call	_Lcd_Set_Cursor
  1022                           
  1023                           ;Main_program.c: 156:                         Lcd_Write_String("Parar");
  1024   001610  0E64               	movlw	low STR_2
  1025   001612  6E06               	movwf	Lcd_Write_String@a^0,c
  1026   001614  0E08               	movlw	high STR_2
  1027   001616  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1028   001618  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1029                           
  1030                           ;Main_program.c: 157:                     } else {
  1031   00161C  EF43  F00B         	goto	l145
  1032   001620                     l3359:
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;Main_program.c: 158:                         Lcd_Set_Cursor(1, 1);
  1036   001620  0E01               	movlw	1
  1037   001622  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1038   001624  0E01               	movlw	1
  1039   001626  ECEC  F00F         	call	_Lcd_Set_Cursor
  1040   00162A                     
  1041                           ;Main_program.c: 159:                         Lcd_Write_String("Ponga un envase ");
  1042   00162A  0E09               	movlw	low STR_3
  1043   00162C  6E06               	movwf	Lcd_Write_String@a^0,c
  1044   00162E  0E08               	movlw	high STR_3
  1045   001630  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1046   001632  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1047   001636                     
  1048                           ;Main_program.c: 160:                         Lcd_Set_Cursor(2, 1);
  1049   001636  0E01               	movlw	1
  1050   001638  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1051   00163A  0E02               	movlw	2
  1052   00163C  ECEC  F00F         	call	_Lcd_Set_Cursor
  1053                           
  1054                           ;Main_program.c: 161:                         Lcd_Write_String("Parar");
  1055   001640  0E64               	movlw	low STR_2
  1056   001642  6E06               	movwf	Lcd_Write_String@a^0,c
  1057   001644  0E08               	movlw	high STR_2
  1058   001646  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1059   001648  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1060   00164C                     
  1061                           ;Main_program.c: 162:                         if (PORTAbits.RA5 == 0)
  1062   00164C  BA80               	btfsc	128,5,c	;volatile
  1063   00164E  EF2B  F00B         	goto	u2841
  1064   001652  EF2D  F00B         	goto	u2840
  1065   001656                     u2841:
  1066   001656  EF43  F00B         	goto	l145
  1067   00165A                     u2840:
  1068   00165A                     
  1069                           ;Main_program.c: 163:                         {;Main_program.c: 164:                    
      +                                   _delay((unsigned long)((500)*(48000000/4000.0)));
  1070   00165A  0E1F               	movlw	31
  1071   00165C  0100               	movlb	0	; () banked
  1072   00165E  6FBE               	movwf	(??_main+1)& (0+255),b
  1073   001660  0E71               	movlw	113
  1074   001662  6FBD               	movwf	??_main& (0+255),b
  1075   001664  0E1E               	movlw	30
  1076   001666                     u2897:
  1077   001666  2EE8               	decfsz	wreg,f,c
  1078   001668  D7FE               	bra	u2897
  1079   00166A  2FBD               	decfsz	??_main& (0+255),f,b
  1080   00166C  D7FC               	bra	u2897
  1081   00166E  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  1082   001670  D7FA               	bra	u2897
  1083   001672  F000               	nop	
  1084   001674                     
  1085                           ;Main_program.c: 165:                             if (PORTAbits.RA5 == 0)
  1086   001674  BA80               	btfsc	128,5,c	;volatile
  1087   001676  EF3F  F00B         	goto	u2851
  1088   00167A  EF41  F00B         	goto	u2850
  1089   00167E                     u2851:
  1090   00167E  EF43  F00B         	goto	l145
  1091   001682                     u2850:
  1092   001682  EF5B  F00B         	goto	l3379
  1093   001686                     l145:
  1094                           
  1095                           ;Main_program.c: 172:                     if (PORTBbits.RB0 == 0)
  1096   001686  B081               	btfsc	129,0,c	;volatile
  1097   001688  EF48  F00B         	goto	u2861
  1098   00168C  EF4A  F00B         	goto	u2860
  1099   001690                     u2861:
  1100   001690  EF51  F00B         	goto	l3375
  1101   001694                     u2860:
  1102   001694                     
  1103                           ;Main_program.c: 173:                     {;Main_program.c: 174:                        
      +                           CURRENT_OPTION = 0;
  1104   001694  0E00               	movlw	0
  1105   001696  0100               	movlb	0	; () banked
  1106   001698  6F75               	movwf	(_CURRENT_OPTION+1)& (0+255),b
  1107   00169A  0E00               	movlw	0
  1108   00169C  6F74               	movwf	_CURRENT_OPTION& (0+255),b
  1109                           
  1110                           ;Main_program.c: 175:                         break;
  1111   00169E  EF5B  F00B         	goto	l3379
  1112   0016A2                     l3375:
  1113                           
  1114                           ;Main_program.c: 150:                 while (CURRENT_OPTION != 0) {
  1115   0016A2  0100               	movlb	0	; () banked
  1116   0016A4  5174               	movf	_CURRENT_OPTION& (0+255),w,b
  1117   0016A6  1175               	iorwf	(_CURRENT_OPTION+1)& (0+255),w,b
  1118   0016A8  A4D8               	btfss	status,2,c
  1119   0016AA  EF59  F00B         	goto	u2871
  1120   0016AE  EF5B  F00B         	goto	u2870
  1121   0016B2                     u2871:
  1122   0016B2  EFF1  F00A         	goto	l143
  1123   0016B6                     u2870:
  1124   0016B6                     l3379:
  1125   0016B6  C074  F0BD         	movff	_CURRENT_OPTION,??_main
  1126   0016BA  C075  F0BE         	movff	_CURRENT_OPTION+1,??_main+1
  1127                           
  1128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1129                           ; Switch size 1, requested type "simple"
  1130                           ; Number of cases is 1, Range of values is 0 to 0
  1131                           ; switch strategies available:
  1132                           ; Name         Instructions Cycles
  1133                           ; simple_byte            4     3 (average)
  1134                           ;	Chosen strategy is simple_byte
  1135   0016BE  0100               	movlb	0	; () banked
  1136   0016C0  51BE               	movf	(??_main+1)& (0+255),w,b
  1137   0016C2  0A00               	xorlw	0	; case 0
  1138   0016C4  B4D8               	btfsc	status,2,c
  1139   0016C6  EF67  F00B         	goto	l3437
  1140   0016CA  EF5B  F00B         	goto	l3379
  1141   0016CE                     l3437:
  1142                           
  1143                           ; BSR set to: 0
  1144                           ; Switch size 1, requested type "simple"
  1145                           ; Number of cases is 3, Range of values is 0 to 2
  1146                           ; switch strategies available:
  1147                           ; Name         Instructions Cycles
  1148                           ; simple_byte           10     6 (average)
  1149                           ;	Chosen strategy is simple_byte
  1150   0016CE  51BD               	movf	??_main& (0+255),w,b
  1151   0016D0  0A00               	xorlw	0	; case 0
  1152   0016D2  B4D8               	btfsc	status,2,c
  1153   0016D4  EFA5  F00A         	goto	l3327
  1154   0016D8  0A01               	xorlw	1	; case 1
  1155   0016DA  B4D8               	btfsc	status,2,c
  1156   0016DC  EFDF  F00A         	goto	l3347
  1157   0016E0  0A03               	xorlw	3	; case 2
  1158   0016E2  B4D8               	btfsc	status,2,c
  1159   0016E4  EFEB  F00A         	goto	l3349
  1160   0016E8  EF5B  F00B         	goto	l3379
  1161   0016EC  EF07  F000         	goto	start
  1162   0016F0                     __end_of_main:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _WELCOME *****************
  1166 ;; Defined at:
  1167 ;;		line 202 in file "Main_program.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  a               2   13[COMRAM] int 
  1172 ;;  a               2   11[COMRAM] int 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        6 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 4
  1189 ;; This function calls:
  1190 ;;		_Lcd_Clear
  1191 ;;		_Lcd_Set_Cursor
  1192 ;;		_Lcd_Write_Char
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text1
  1199   001BC8                     __ptext1:
  1200                           	callstack 0
  1201   001BC8                     _WELCOME:
  1202                           	callstack 26
  1203   001BC8                     
  1204                           ;Main_program.c: 204:     Lcd_Clear();
  1205   001BC8  EC27  F013         	call	_Lcd_Clear	;wreg free
  1206   001BCC                     
  1207                           ;Main_program.c: 205:     Lcd_Set_Cursor(1, 4);
  1208   001BCC  0E04               	movlw	4
  1209   001BCE  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1210   001BD0  0E01               	movlw	1
  1211   001BD2  ECEC  F00F         	call	_Lcd_Set_Cursor
  1212   001BD6                     
  1213                           ;Main_program.c: 206:     for (int a = 0; a < 11; a++) {
  1214   001BD6  0E00               	movlw	0
  1215   001BD8  6E0D               	movwf	(WELCOME@a+1)^0,c
  1216   001BDA  0E00               	movlw	0
  1217   001BDC  6E0C               	movwf	WELCOME@a^0,c
  1218   001BDE                     l2807:
  1219                           
  1220                           ;Main_program.c: 207:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1221   001BDE  0E07               	movlw	7
  1222   001BE0  6E0B               	movwf	(??_WELCOME+1)^0,c
  1223   001BE2  0E17               	movlw	23
  1224   001BE4  6E0A               	movwf	??_WELCOME^0,c
  1225   001BE6  0E6A               	movlw	106
  1226   001BE8                     u2907:
  1227   001BE8  2EE8               	decfsz	wreg,f,c
  1228   001BEA  D7FE               	bra	u2907
  1229   001BEC  2E0A               	decfsz	??_WELCOME^0,f,c
  1230   001BEE  D7FC               	bra	u2907
  1231   001BF0  2E0B               	decfsz	(??_WELCOME+1)^0,f,c
  1232   001BF2  D7FA               	bra	u2907
  1233   001BF4  D000               	nop2	
  1234   001BF6                     
  1235                           ;Main_program.c: 208:         Lcd_Write_Char(CANT[a]);
  1236   001BF6  0EBF               	movlw	low _CANT
  1237   001BF8  240C               	addwf	WELCOME@a^0,w,c
  1238   001BFA  6ED9               	movwf	fsr2l,c
  1239   001BFC  0E00               	movlw	high _CANT
  1240   001BFE  200D               	addwfc	(WELCOME@a+1)^0,w,c
  1241   001C00  6EDA               	movwf	fsr2h,c
  1242   001C02  50DF               	movf	indf2,w,c
  1243   001C04  ECC3  F012         	call	_Lcd_Write_Char
  1244   001C08                     
  1245                           ;Main_program.c: 209:     }
  1246   001C08  4A0C               	infsnz	WELCOME@a^0,f,c
  1247   001C0A  2A0D               	incf	(WELCOME@a+1)^0,f,c
  1248   001C0C  BE0D               	btfsc	(WELCOME@a+1)^0,7,c
  1249   001C0E  EF12  F00E         	goto	u2371
  1250   001C12  500D               	movf	(WELCOME@a+1)^0,w,c
  1251   001C14  E109               	bnz	u2370
  1252   001C16  0E0B               	movlw	11
  1253   001C18  5C0C               	subwf	WELCOME@a^0,w,c
  1254   001C1A  A0D8               	btfss	status,0,c
  1255   001C1C  EF12  F00E         	goto	u2371
  1256   001C20  EF14  F00E         	goto	u2370
  1257   001C24                     u2371:
  1258   001C24  EFEF  F00D         	goto	l2807
  1259   001C28                     u2370:
  1260   001C28                     
  1261                           ;Main_program.c: 210:     Lcd_Set_Cursor(2, 6);
  1262   001C28  0E06               	movlw	6
  1263   001C2A  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1264   001C2C  0E02               	movlw	2
  1265   001C2E  ECEC  F00F         	call	_Lcd_Set_Cursor
  1266   001C32                     
  1267                           ;Main_program.c: 211:     for (int a = 0; a < 5; a++) {
  1268   001C32  0E00               	movlw	0
  1269   001C34  6E0F               	movwf	(WELCOME@a_641+1)^0,c
  1270   001C36  0E00               	movlw	0
  1271   001C38  6E0E               	movwf	WELCOME@a_641^0,c
  1272   001C3A                     l2823:
  1273                           
  1274                           ;Main_program.c: 212:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1275   001C3A  0E07               	movlw	7
  1276   001C3C  6E0B               	movwf	(??_WELCOME+1)^0,c
  1277   001C3E  0E17               	movlw	23
  1278   001C40  6E0A               	movwf	??_WELCOME^0,c
  1279   001C42  0E6A               	movlw	106
  1280   001C44                     u2917:
  1281   001C44  2EE8               	decfsz	wreg,f,c
  1282   001C46  D7FE               	bra	u2917
  1283   001C48  2E0A               	decfsz	??_WELCOME^0,f,c
  1284   001C4A  D7FC               	bra	u2917
  1285   001C4C  2E0B               	decfsz	(??_WELCOME+1)^0,f,c
  1286   001C4E  D7FA               	bra	u2917
  1287   001C50  D000               	nop2	
  1288   001C52                     
  1289                           ;Main_program.c: 213:         Lcd_Write_Char(Perfil[a]);
  1290   001C52  0ECA               	movlw	low _Perfil
  1291   001C54  240E               	addwf	WELCOME@a_641^0,w,c
  1292   001C56  6ED9               	movwf	fsr2l,c
  1293   001C58  0E00               	movlw	high _Perfil
  1294   001C5A  200F               	addwfc	(WELCOME@a_641+1)^0,w,c
  1295   001C5C  6EDA               	movwf	fsr2h,c
  1296   001C5E  50DF               	movf	indf2,w,c
  1297   001C60  ECC3  F012         	call	_Lcd_Write_Char
  1298   001C64                     
  1299                           ;Main_program.c: 214:     }
  1300   001C64  4A0E               	infsnz	WELCOME@a_641^0,f,c
  1301   001C66  2A0F               	incf	(WELCOME@a_641+1)^0,f,c
  1302   001C68  BE0F               	btfsc	(WELCOME@a_641+1)^0,7,c
  1303   001C6A  EF40  F00E         	goto	u2381
  1304   001C6E  500F               	movf	(WELCOME@a_641+1)^0,w,c
  1305   001C70  E109               	bnz	u2380
  1306   001C72  0E05               	movlw	5
  1307   001C74  5C0E               	subwf	WELCOME@a_641^0,w,c
  1308   001C76  A0D8               	btfss	status,0,c
  1309   001C78  EF40  F00E         	goto	u2381
  1310   001C7C  EF42  F00E         	goto	u2380
  1311   001C80                     u2381:
  1312   001C80  EF1D  F00E         	goto	l2823
  1313   001C84                     u2380:
  1314   001C84                     
  1315                           ;Main_program.c: 215:     LATCbits.LATC0 = 1;
  1316   001C84  808B               	bsf	139,0,c	;volatile
  1317                           
  1318                           ;Main_program.c: 216:     LATEbits.LATE2 = 1;
  1319   001C86  848D               	bsf	141,2,c	;volatile
  1320   001C88                     
  1321                           ;Main_program.c: 217:     _delay((unsigned long)((50)*(48000000/4000.0)));
  1322   001C88  0E04               	movlw	4
  1323   001C8A  6E0B               	movwf	(??_WELCOME+1)^0,c
  1324   001C8C  0E0C               	movlw	12
  1325   001C8E  6E0A               	movwf	??_WELCOME^0,c
  1326   001C90  0E34               	movlw	52
  1327   001C92                     u2927:
  1328   001C92  2EE8               	decfsz	wreg,f,c
  1329   001C94  D7FE               	bra	u2927
  1330   001C96  2E0A               	decfsz	??_WELCOME^0,f,c
  1331   001C98  D7FC               	bra	u2927
  1332   001C9A  2E0B               	decfsz	(??_WELCOME+1)^0,f,c
  1333   001C9C  D7FA               	bra	u2927
  1334   001C9E                     
  1335                           ;Main_program.c: 218:     LATCbits.LATC0 = 0;
  1336   001C9E  908B               	bcf	139,0,c	;volatile
  1337   001CA0                     
  1338                           ;Main_program.c: 219:     LATEbits.LATE2 = 0;
  1339   001CA0  948D               	bcf	141,2,c	;volatile
  1340                           
  1341                           ;Main_program.c: 220:     _delay((unsigned long)((100)*(48000000/4000.0)));
  1342   001CA2  0E07               	movlw	7
  1343   001CA4  6E0B               	movwf	(??_WELCOME+1)^0,c
  1344   001CA6  0E17               	movlw	23
  1345   001CA8  6E0A               	movwf	??_WELCOME^0,c
  1346   001CAA  0E6A               	movlw	106
  1347   001CAC                     u2937:
  1348   001CAC  2EE8               	decfsz	wreg,f,c
  1349   001CAE  D7FE               	bra	u2937
  1350   001CB0  2E0A               	decfsz	??_WELCOME^0,f,c
  1351   001CB2  D7FC               	bra	u2937
  1352   001CB4  2E0B               	decfsz	(??_WELCOME+1)^0,f,c
  1353   001CB6  D7FA               	bra	u2937
  1354   001CB8  D000               	nop2	
  1355   001CBA                     
  1356                           ;Main_program.c: 221:     LATCbits.LATC0 = 1;
  1357   001CBA  808B               	bsf	139,0,c	;volatile
  1358   001CBC                     
  1359                           ;Main_program.c: 222:     LATEbits.LATE2 = 1;
  1360   001CBC  848D               	bsf	141,2,c	;volatile
  1361                           
  1362                           ;Main_program.c: 223:     _delay((unsigned long)((50)*(48000000/4000.0)));
  1363   001CBE  0E04               	movlw	4
  1364   001CC0  6E0B               	movwf	(??_WELCOME+1)^0,c
  1365   001CC2  0E0C               	movlw	12
  1366   001CC4  6E0A               	movwf	??_WELCOME^0,c
  1367   001CC6  0E34               	movlw	52
  1368   001CC8                     u2947:
  1369   001CC8  2EE8               	decfsz	wreg,f,c
  1370   001CCA  D7FE               	bra	u2947
  1371   001CCC  2E0A               	decfsz	??_WELCOME^0,f,c
  1372   001CCE  D7FC               	bra	u2947
  1373   001CD0  2E0B               	decfsz	(??_WELCOME+1)^0,f,c
  1374   001CD2  D7FA               	bra	u2947
  1375   001CD4                     
  1376                           ;Main_program.c: 224:     LATCbits.LATC0 = 0;
  1377   001CD4  908B               	bcf	139,0,c	;volatile
  1378   001CD6                     
  1379                           ;Main_program.c: 225:     LATEbits.LATE2 = 0;
  1380   001CD6  948D               	bcf	141,2,c	;volatile
  1381   001CD8                     
  1382                           ;Main_program.c: 226:     Lcd_Clear();
  1383   001CD8  EC27  F013         	call	_Lcd_Clear	;wreg free
  1384   001CDC  0012               	return		;funcret
  1385   001CDE                     __end_of_WELCOME:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _USER_VALUE *****************
  1389 ;; Defined at:
  1390 ;;		line 230 in file "Main_program.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1406 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1407 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1408 ;;Total ram usage:        6 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 4
  1411 ;; This function calls:
  1412 ;;		_Keypad_Get_Char
  1413 ;;		_Lcd_Blink
  1414 ;;		_Lcd_NoBlink
  1415 ;;		_Lcd_Set_Cursor
  1416 ;;		_Lcd_Write_Char
  1417 ;;		_Lcd_Write_String
  1418 ;;		___wmul
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text2
  1425   00125C                     __ptext2:
  1426                           	callstack 0
  1427   00125C                     _USER_VALUE:
  1428                           	callstack 26
  1429   00125C                     
  1430                           ;Main_program.c: 232:     VAL_TYPED = 0;
  1431   00125C  0E00               	movlw	0
  1432   00125E  0100               	movlb	0	; () banked
  1433   001260  6F73               	movwf	(_VAL_TYPED+1)& (0+255),b
  1434   001262  0E00               	movlw	0
  1435   001264  6F72               	movwf	_VAL_TYPED& (0+255),b
  1436   001266                     
  1437                           ; BSR set to: 0
  1438                           ;Main_program.c: 233:     Lcd_Set_Cursor(1, 1);
  1439   001266  0E01               	movlw	1
  1440   001268  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1441   00126A  0E01               	movlw	1
  1442   00126C  ECEC  F00F         	call	_Lcd_Set_Cursor
  1443   001270                     
  1444                           ;Main_program.c: 234:     Lcd_Write_String("Cantidad: 0000ml");
  1445   001270  0E3C               	movlw	low STR_5
  1446   001272  6E06               	movwf	Lcd_Write_String@a^0,c
  1447   001274  0E08               	movlw	high STR_5
  1448   001276  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1449   001278  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1450   00127C                     
  1451                           ;Main_program.c: 235:     Lcd_Set_Cursor(1, 11);
  1452   00127C  0E0B               	movlw	11
  1453   00127E  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1454   001280  0E01               	movlw	1
  1455   001282  ECEC  F00F         	call	_Lcd_Set_Cursor
  1456   001286                     
  1457                           ;Main_program.c: 236:     Lcd_Blink();
  1458   001286  EC19  F013         	call	_Lcd_Blink	;wreg free
  1459   00128A                     
  1460                           ;Main_program.c: 237:     _CHAR4 = 0;
  1461   00128A  0E00               	movlw	0
  1462   00128C  6E5C               	movwf	__CHAR4^0,c
  1463   00128E                     
  1464                           ;Main_program.c: 238:     _CHAR3 = 0;
  1465   00128E  0E00               	movlw	0
  1466   001290  6E5B               	movwf	__CHAR3^0,c
  1467   001292                     
  1468                           ;Main_program.c: 239:     _CHAR2 = 0;
  1469   001292  0E00               	movlw	0
  1470   001294  0100               	movlb	0	; () banked
  1471   001296  6F7F               	movwf	__CHAR2& (0+255),b
  1472   001298                     
  1473                           ; BSR set to: 0
  1474                           ;Main_program.c: 240:     _CHAR1 = 0;
  1475   001298  0E00               	movlw	0
  1476   00129A  6F7E               	movwf	__CHAR1& (0+255),b
  1477                           
  1478                           ;Main_program.c: 242:     while (_CHAR4 == 0) {
  1479   00129C  EF79  F009         	goto	l2879
  1480   0012A0                     l2865:
  1481                           
  1482                           ;Main_program.c: 243:         _CHAR4 = Keypad_Get_Char();
  1483   0012A0  EC4C  F006         	call	_Keypad_Get_Char	;wreg free
  1484   0012A4  6E5C               	movwf	__CHAR4^0,c
  1485   0012A6                     
  1486                           ;Main_program.c: 244:         if (_CHAR4)
  1487   0012A6  505C               	movf	__CHAR4^0,w,c
  1488   0012A8  B4D8               	btfsc	status,2,c
  1489   0012AA  EF59  F009         	goto	u2391
  1490   0012AE  EF5B  F009         	goto	u2390
  1491   0012B2                     u2391:
  1492   0012B2  EF79  F009         	goto	l2879
  1493   0012B6                     u2390:
  1494   0012B6                     
  1495                           ;Main_program.c: 245:         {;Main_program.c: 246:             if (_CHAR4 == '*' || _C
      +                          HAR4 == '#')
  1496   0012B6  0E2A               	movlw	42
  1497   0012B8  185C               	xorwf	__CHAR4^0,w,c
  1498   0012BA  B4D8               	btfsc	status,2,c
  1499   0012BC  EF62  F009         	goto	u2401
  1500   0012C0  EF64  F009         	goto	u2400
  1501   0012C4                     u2401:
  1502   0012C4  EF6D  F009         	goto	l2873
  1503   0012C8                     u2400:
  1504   0012C8  0E23               	movlw	35
  1505   0012CA  185C               	xorwf	__CHAR4^0,w,c
  1506   0012CC  A4D8               	btfss	status,2,c
  1507   0012CE  EF6B  F009         	goto	u2411
  1508   0012D2  EF6D  F009         	goto	u2410
  1509   0012D6                     u2411:
  1510   0012D6  EF6F  F009         	goto	l2875
  1511   0012DA                     u2410:
  1512   0012DA                     l2873:
  1513                           
  1514                           ;Main_program.c: 247:                 _CHAR4 = '0';
  1515   0012DA  0E30               	movlw	48
  1516   0012DC  6E5C               	movwf	__CHAR4^0,c
  1517   0012DE                     l2875:
  1518                           
  1519                           ;Main_program.c: 248:             Lcd_Write_Char(_CHAR4);
  1520   0012DE  505C               	movf	__CHAR4^0,w,c
  1521   0012E0  ECC3  F012         	call	_Lcd_Write_Char
  1522   0012E4                     
  1523                           ;Main_program.c: 249:             num4 = _CHAR4 - '0';
  1524   0012E4  0ED0               	movlw	208
  1525   0012E6  245C               	addwf	__CHAR4^0,w,c
  1526   0012E8  0100               	movlb	0	; () banked
  1527   0012EA  6F6E               	movwf	_num4& (0+255),b
  1528   0012EC  6B6F               	clrf	(_num4+1)& (0+255),b
  1529   0012EE  0EFF               	movlw	255
  1530   0012F0  236F               	addwfc	(_num4+1)& (0+255),f,b
  1531   0012F2                     l2879:
  1532                           
  1533                           ;Main_program.c: 242:     while (_CHAR4 == 0) {
  1534   0012F2  505C               	movf	__CHAR4^0,w,c
  1535   0012F4  B4D8               	btfsc	status,2,c
  1536   0012F6  EF7F  F009         	goto	u2421
  1537   0012FA  EF81  F009         	goto	u2420
  1538   0012FE                     u2421:
  1539   0012FE  EF50  F009         	goto	l2865
  1540   001302                     u2420:
  1541   001302  EFAC  F009         	goto	l2895
  1542   001306                     l2881:
  1543                           
  1544                           ;Main_program.c: 253:         _CHAR3 = Keypad_Get_Char();
  1545   001306  EC4C  F006         	call	_Keypad_Get_Char	;wreg free
  1546   00130A  6E5B               	movwf	__CHAR3^0,c
  1547   00130C                     
  1548                           ;Main_program.c: 254:         if (_CHAR3)
  1549   00130C  505B               	movf	__CHAR3^0,w,c
  1550   00130E  B4D8               	btfsc	status,2,c
  1551   001310  EF8C  F009         	goto	u2431
  1552   001314  EF8E  F009         	goto	u2430
  1553   001318                     u2431:
  1554   001318  EFAC  F009         	goto	l2895
  1555   00131C                     u2430:
  1556   00131C                     
  1557                           ;Main_program.c: 255:         {;Main_program.c: 256:             if (_CHAR3 == '*' || _C
      +                          HAR3 == '#')
  1558   00131C  0E2A               	movlw	42
  1559   00131E  185B               	xorwf	__CHAR3^0,w,c
  1560   001320  B4D8               	btfsc	status,2,c
  1561   001322  EF95  F009         	goto	u2441
  1562   001326  EF97  F009         	goto	u2440
  1563   00132A                     u2441:
  1564   00132A  EFA0  F009         	goto	l2889
  1565   00132E                     u2440:
  1566   00132E  0E23               	movlw	35
  1567   001330  185B               	xorwf	__CHAR3^0,w,c
  1568   001332  A4D8               	btfss	status,2,c
  1569   001334  EF9E  F009         	goto	u2451
  1570   001338  EFA0  F009         	goto	u2450
  1571   00133C                     u2451:
  1572   00133C  EFA2  F009         	goto	l2891
  1573   001340                     u2450:
  1574   001340                     l2889:
  1575                           
  1576                           ;Main_program.c: 257:                 _CHAR3 = '0';
  1577   001340  0E30               	movlw	48
  1578   001342  6E5B               	movwf	__CHAR3^0,c
  1579   001344                     l2891:
  1580                           
  1581                           ;Main_program.c: 258:             Lcd_Write_Char(_CHAR3);
  1582   001344  505B               	movf	__CHAR3^0,w,c
  1583   001346  ECC3  F012         	call	_Lcd_Write_Char
  1584   00134A                     
  1585                           ;Main_program.c: 259:             num3 = _CHAR3 - '0';
  1586   00134A  0ED0               	movlw	208
  1587   00134C  245B               	addwf	__CHAR3^0,w,c
  1588   00134E  0100               	movlb	0	; () banked
  1589   001350  6F6C               	movwf	_num3& (0+255),b
  1590   001352  6B6D               	clrf	(_num3+1)& (0+255),b
  1591   001354  0EFF               	movlw	255
  1592   001356  236D               	addwfc	(_num3+1)& (0+255),f,b
  1593   001358                     l2895:
  1594                           
  1595                           ;Main_program.c: 252:     while (_CHAR3 == 0) {
  1596   001358  505B               	movf	__CHAR3^0,w,c
  1597   00135A  B4D8               	btfsc	status,2,c
  1598   00135C  EFB2  F009         	goto	u2461
  1599   001360  EFB4  F009         	goto	u2460
  1600   001364                     u2461:
  1601   001364  EF83  F009         	goto	l2881
  1602   001368                     u2460:
  1603   001368  EFE0  F009         	goto	l2911
  1604   00136C                     l2897:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;Main_program.c: 263:         _CHAR2 = Keypad_Get_Char();
  1608   00136C  EC4C  F006         	call	_Keypad_Get_Char	;wreg free
  1609   001370  0100               	movlb	0	; () banked
  1610   001372  6F7F               	movwf	__CHAR2& (0+255),b
  1611   001374                     
  1612                           ; BSR set to: 0
  1613                           ;Main_program.c: 264:         if (_CHAR2)
  1614   001374  517F               	movf	__CHAR2& (0+255),w,b
  1615   001376  B4D8               	btfsc	status,2,c
  1616   001378  EFC0  F009         	goto	u2471
  1617   00137C  EFC2  F009         	goto	u2470
  1618   001380                     u2471:
  1619   001380  EFE0  F009         	goto	l2911
  1620   001384                     u2470:
  1621   001384                     
  1622                           ; BSR set to: 0
  1623                           ;Main_program.c: 265:         {;Main_program.c: 266:             if (_CHAR2 == '*' || _C
      +                          HAR2 == '#')
  1624   001384  0E2A               	movlw	42
  1625   001386  197F               	xorwf	__CHAR2& (0+255),w,b
  1626   001388  B4D8               	btfsc	status,2,c
  1627   00138A  EFC9  F009         	goto	u2481
  1628   00138E  EFCB  F009         	goto	u2480
  1629   001392                     u2481:
  1630   001392  EFD4  F009         	goto	l2905
  1631   001396                     u2480:
  1632   001396                     
  1633                           ; BSR set to: 0
  1634   001396  0E23               	movlw	35
  1635   001398  197F               	xorwf	__CHAR2& (0+255),w,b
  1636   00139A  A4D8               	btfss	status,2,c
  1637   00139C  EFD2  F009         	goto	u2491
  1638   0013A0  EFD4  F009         	goto	u2490
  1639   0013A4                     u2491:
  1640   0013A4  EFD6  F009         	goto	l2907
  1641   0013A8                     u2490:
  1642   0013A8                     l2905:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;Main_program.c: 267:                 _CHAR2 = '0';
  1646   0013A8  0E30               	movlw	48
  1647   0013AA  6F7F               	movwf	__CHAR2& (0+255),b
  1648   0013AC                     l2907:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;Main_program.c: 268:             Lcd_Write_Char(_CHAR2);
  1652   0013AC  517F               	movf	__CHAR2& (0+255),w,b
  1653   0013AE  ECC3  F012         	call	_Lcd_Write_Char
  1654   0013B2                     
  1655                           ;Main_program.c: 269:             num2 = _CHAR2 - '0';
  1656   0013B2  0ED0               	movlw	208
  1657   0013B4  0100               	movlb	0	; () banked
  1658   0013B6  257F               	addwf	__CHAR2& (0+255),w,b
  1659   0013B8  6F6A               	movwf	_num2& (0+255),b
  1660   0013BA  6B6B               	clrf	(_num2+1)& (0+255),b
  1661   0013BC  0EFF               	movlw	255
  1662   0013BE  236B               	addwfc	(_num2+1)& (0+255),f,b
  1663   0013C0                     l2911:
  1664                           
  1665                           ;Main_program.c: 262:     while (_CHAR2 == 0) {
  1666   0013C0  0100               	movlb	0	; () banked
  1667   0013C2  517F               	movf	__CHAR2& (0+255),w,b
  1668   0013C4  B4D8               	btfsc	status,2,c
  1669   0013C6  EFE7  F009         	goto	u2501
  1670   0013CA  EFE9  F009         	goto	u2500
  1671   0013CE                     u2501:
  1672   0013CE  EFB6  F009         	goto	l2897
  1673   0013D2                     u2500:
  1674   0013D2  EF17  F00A         	goto	l2927
  1675   0013D6                     l2913:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;Main_program.c: 273:         _CHAR1 = Keypad_Get_Char();
  1679   0013D6  EC4C  F006         	call	_Keypad_Get_Char	;wreg free
  1680   0013DA  0100               	movlb	0	; () banked
  1681   0013DC  6F7E               	movwf	__CHAR1& (0+255),b
  1682   0013DE                     
  1683                           ; BSR set to: 0
  1684                           ;Main_program.c: 274:         if (_CHAR1)
  1685   0013DE  517E               	movf	__CHAR1& (0+255),w,b
  1686   0013E0  B4D8               	btfsc	status,2,c
  1687   0013E2  EFF5  F009         	goto	u2511
  1688   0013E6  EFF7  F009         	goto	u2510
  1689   0013EA                     u2511:
  1690   0013EA  EF17  F00A         	goto	l2927
  1691   0013EE                     u2510:
  1692   0013EE                     
  1693                           ; BSR set to: 0
  1694                           ;Main_program.c: 275:         {;Main_program.c: 276:             if (_CHAR1 == '*' || _C
      +                          HAR1 == '#')
  1695   0013EE  0E2A               	movlw	42
  1696   0013F0  197E               	xorwf	__CHAR1& (0+255),w,b
  1697   0013F2  B4D8               	btfsc	status,2,c
  1698   0013F4  EFFE  F009         	goto	u2521
  1699   0013F8  EF00  F00A         	goto	u2520
  1700   0013FC                     u2521:
  1701   0013FC  EF09  F00A         	goto	l2921
  1702   001400                     u2520:
  1703   001400                     
  1704                           ; BSR set to: 0
  1705   001400  0E23               	movlw	35
  1706   001402  197E               	xorwf	__CHAR1& (0+255),w,b
  1707   001404  A4D8               	btfss	status,2,c
  1708   001406  EF07  F00A         	goto	u2531
  1709   00140A  EF09  F00A         	goto	u2530
  1710   00140E                     u2531:
  1711   00140E  EF0B  F00A         	goto	l2923
  1712   001412                     u2530:
  1713   001412                     l2921:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;Main_program.c: 277:                 _CHAR1 = '0';
  1717   001412  0E30               	movlw	48
  1718   001414  6F7E               	movwf	__CHAR1& (0+255),b
  1719   001416                     l2923:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;Main_program.c: 278:             Lcd_Write_Char(_CHAR1);
  1723   001416  517E               	movf	__CHAR1& (0+255),w,b
  1724   001418  ECC3  F012         	call	_Lcd_Write_Char
  1725   00141C                     
  1726                           ;Main_program.c: 279:             Lcd_NoBlink();
  1727   00141C  EC12  F013         	call	_Lcd_NoBlink	;wreg free
  1728                           
  1729                           ;Main_program.c: 280:             num1 = _CHAR1 - '0';
  1730   001420  0ED0               	movlw	208
  1731   001422  0100               	movlb	0	; () banked
  1732   001424  257E               	addwf	__CHAR1& (0+255),w,b
  1733   001426  6F68               	movwf	_num1& (0+255),b
  1734   001428  6B69               	clrf	(_num1+1)& (0+255),b
  1735   00142A  0EFF               	movlw	255
  1736   00142C  2369               	addwfc	(_num1+1)& (0+255),f,b
  1737   00142E                     l2927:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;Main_program.c: 272:     while (_CHAR1 == 0) {
  1741   00142E  517E               	movf	__CHAR1& (0+255),w,b
  1742   001430  B4D8               	btfsc	status,2,c
  1743   001432  EF1D  F00A         	goto	u2541
  1744   001436  EF1F  F00A         	goto	u2540
  1745   00143A                     u2541:
  1746   00143A  EFEB  F009         	goto	l2913
  1747   00143E                     u2540:
  1748   00143E                     
  1749                           ; BSR set to: 0
  1750                           ;Main_program.c: 283:     VAL_TYPED = num4 * 1000 + num3 * 100 + num2 * 10 + num1;
  1751   00143E  C06E  F002         	movff	_num4,___wmul@multiplier
  1752   001442  C06F  F003         	movff	_num4+1,___wmul@multiplier+1
  1753   001446  0E03               	movlw	3
  1754   001448  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1755   00144A  0EE8               	movlw	232
  1756   00144C  6E04               	movwf	___wmul@multiplicand^0,c
  1757   00144E  ECDD  F012         	call	___wmul	;wreg free
  1758   001452  C002  F00C         	movff	?___wmul,??_USER_VALUE
  1759   001456  C003  F00D         	movff	?___wmul+1,??_USER_VALUE+1
  1760   00145A  C06C  F002         	movff	_num3,___wmul@multiplier
  1761   00145E  C06D  F003         	movff	_num3+1,___wmul@multiplier+1
  1762   001462  0E00               	movlw	0
  1763   001464  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1764   001466  0E64               	movlw	100
  1765   001468  6E04               	movwf	___wmul@multiplicand^0,c
  1766   00146A  ECDD  F012         	call	___wmul	;wreg free
  1767   00146E  5002               	movf	?___wmul^0,w,c
  1768   001470  240C               	addwf	??_USER_VALUE^0,w,c
  1769   001472  6E0E               	movwf	(??_USER_VALUE+2)^0,c
  1770   001474  5003               	movf	(?___wmul+1)^0,w,c
  1771   001476  200D               	addwfc	(??_USER_VALUE+1)^0,w,c
  1772   001478  6E0F               	movwf	(??_USER_VALUE+3)^0,c
  1773   00147A  C06A  F002         	movff	_num2,___wmul@multiplier
  1774   00147E  C06B  F003         	movff	_num2+1,___wmul@multiplier+1
  1775   001482  0E00               	movlw	0
  1776   001484  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1777   001486  0E0A               	movlw	10
  1778   001488  6E04               	movwf	___wmul@multiplicand^0,c
  1779   00148A  ECDD  F012         	call	___wmul	;wreg free
  1780   00148E  5002               	movf	?___wmul^0,w,c
  1781   001490  240E               	addwf	(??_USER_VALUE+2)^0,w,c
  1782   001492  6E10               	movwf	(??_USER_VALUE+4)^0,c
  1783   001494  5003               	movf	(?___wmul+1)^0,w,c
  1784   001496  200F               	addwfc	(??_USER_VALUE+3)^0,w,c
  1785   001498  6E11               	movwf	(??_USER_VALUE+5)^0,c
  1786   00149A  0100               	movlb	0	; () banked
  1787   00149C  5168               	movf	_num1& (0+255),w,b
  1788   00149E  2410               	addwf	(??_USER_VALUE+4)^0,w,c
  1789   0014A0  6F72               	movwf	_VAL_TYPED& (0+255),b
  1790   0014A2  5169               	movf	(_num1+1)& (0+255),w,b
  1791   0014A4  2011               	addwfc	(??_USER_VALUE+5)^0,w,c
  1792   0014A6  6F73               	movwf	(_VAL_TYPED+1)& (0+255),b
  1793   0014A8                     
  1794                           ; BSR set to: 0
  1795                           ;Main_program.c: 284:     Lcd_Set_Cursor(2, 9);
  1796   0014A8  0E09               	movlw	9
  1797   0014AA  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1798   0014AC  0E02               	movlw	2
  1799   0014AE  ECEC  F00F         	call	_Lcd_Set_Cursor
  1800   0014B2                     
  1801                           ;Main_program.c: 285:     Lcd_Write_String("Inicio");
  1802   0014B2  0E5D               	movlw	low STR_6
  1803   0014B4  6E06               	movwf	Lcd_Write_String@a^0,c
  1804   0014B6  0E08               	movlw	high STR_6
  1805   0014B8  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1806   0014BA  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1807   0014BE                     
  1808                           ;Main_program.c: 286:     Lcd_Set_Cursor(2, 16);
  1809   0014BE  0E10               	movlw	16
  1810   0014C0  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1811   0014C2  0E02               	movlw	2
  1812   0014C4  ECEC  F00F         	call	_Lcd_Set_Cursor
  1813   0014C8                     
  1814                           ;Main_program.c: 288:     Lcd_Set_Cursor(2, 1);
  1815   0014C8  0E01               	movlw	1
  1816   0014CA  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  1817   0014CC  0E02               	movlw	2
  1818   0014CE  ECEC  F00F         	call	_Lcd_Set_Cursor
  1819   0014D2                     
  1820                           ;Main_program.c: 289:     Lcd_Write_String("Atras*  ");
  1821   0014D2  0E4D               	movlw	low STR_7
  1822   0014D4  6E06               	movwf	Lcd_Write_String@a^0,c
  1823   0014D6  0E08               	movlw	high STR_7
  1824   0014D8  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1825   0014DA  EC68  F011         	call	_Lcd_Write_String	;wreg free
  1826   0014DE                     
  1827                           ;Main_program.c: 290:     _delay((unsigned long)((200)*(48000000/4000.0)));
  1828   0014DE  0E0D               	movlw	13
  1829   0014E0  6E0D               	movwf	(??_USER_VALUE+1)^0,c
  1830   0014E2  0E2D               	movlw	45
  1831   0014E4  6E0C               	movwf	??_USER_VALUE^0,c
  1832   0014E6  0ED8               	movlw	216
  1833   0014E8                     u2957:
  1834   0014E8  2EE8               	decfsz	wreg,f,c
  1835   0014EA  D7FE               	bra	u2957
  1836   0014EC  2E0C               	decfsz	??_USER_VALUE^0,f,c
  1837   0014EE  D7FC               	bra	u2957
  1838   0014F0  2E0D               	decfsz	(??_USER_VALUE+1)^0,f,c
  1839   0014F2  D7FA               	bra	u2957
  1840   0014F4  0012               	return		;funcret
  1841   0014F6                     __end_of_USER_VALUE:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function ___wmul *****************
  1845 ;; Defined at:
  1846 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  multiplier      2    1[COMRAM] unsigned int 
  1849 ;;  multiplicand    2    3[COMRAM] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  product         2    5[COMRAM] unsigned int 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    1[COMRAM] unsigned int 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, prodl, prodh
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         4       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1864 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:        6 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_USER_VALUE
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text3
  1876   0025BA                     __ptext3:
  1877                           	callstack 0
  1878   0025BA                     ___wmul:
  1879                           	callstack 28
  1880   0025BA  5002               	movf	___wmul@multiplier^0,w,c
  1881   0025BC  0204               	mulwf	___wmul@multiplicand^0,c
  1882   0025BE  CFF3 F006          	movff	prodl,___wmul@product
  1883   0025C2  CFF4 F007          	movff	prodh,___wmul@product+1
  1884   0025C6  5002               	movf	___wmul@multiplier^0,w,c
  1885   0025C8  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  1886   0025CA  50F3               	movf	243,w,c
  1887   0025CC  2607               	addwf	(___wmul@product+1)^0,f,c
  1888   0025CE  5003               	movf	(___wmul@multiplier+1)^0,w,c
  1889   0025D0  0204               	mulwf	___wmul@multiplicand^0,c
  1890   0025D2  50F3               	movf	243,w,c
  1891   0025D4  2607               	addwf	(___wmul@product+1)^0,f,c
  1892   0025D6  C006  F002         	movff	___wmul@product,?___wmul
  1893   0025DA  C007  F003         	movff	___wmul@product+1,?___wmul+1
  1894   0025DE  0012               	return		;funcret
  1895   0025E0                     __end_of___wmul:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _Lcd_NoBlink *****************
  1899 ;; Defined at:
  1900 ;;		line 129 in file "lcd.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 3
  1921 ;; This function calls:
  1922 ;;		_Lcd_Cmd
  1923 ;; This function is called by:
  1924 ;;		_USER_VALUE
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text4
  1929   002624                     __ptext4:
  1930                           	callstack 0
  1931   002624                     _Lcd_NoBlink:
  1932                           	callstack 26
  1933   002624                     
  1934                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  1935   002624  0E00               	movlw	0
  1936   002626  ECF0  F012         	call	_Lcd_Cmd
  1937                           
  1938                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  1939   00262A  0E0C               	movlw	12
  1940   00262C  ECF0  F012         	call	_Lcd_Cmd
  1941   002630  0012               	return		;funcret
  1942   002632                     __end_of_Lcd_NoBlink:
  1943                           	callstack 0
  1944                           
  1945 ;; *************** function _Lcd_Blink *****************
  1946 ;; Defined at:
  1947 ;;		line 123 in file "lcd.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 3
  1968 ;; This function calls:
  1969 ;;		_Lcd_Cmd
  1970 ;; This function is called by:
  1971 ;;		_USER_VALUE
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text5
  1976   002632                     __ptext5:
  1977                           	callstack 0
  1978   002632                     _Lcd_Blink:
  1979                           	callstack 26
  1980   002632                     
  1981                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  1982   002632  0E00               	movlw	0
  1983   002634  ECF0  F012         	call	_Lcd_Cmd
  1984                           
  1985                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  1986   002638  0E0F               	movlw	15
  1987   00263A  ECF0  F012         	call	_Lcd_Cmd
  1988   00263E  0012               	return		;funcret
  1989   002640                     __end_of_Lcd_Blink:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _Keypad_Get_Char *****************
  1993 ;; Defined at:
  1994 ;;		line 23 in file "kbd4x4.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      unsigned char 
  2001 ;; Registers used:
  2002 ;;		wreg
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2010 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2011 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2012 ;;Total ram usage:        1 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;;		_USER_VALUE
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text6
  2024   000C98                     __ptext6:
  2025                           	callstack 0
  2026   000C98                     _Keypad_Get_Char:
  2027                           	callstack 28
  2028   000C98                     
  2029                           ;kbd4x4.c: 25:     PORTDbits.RD7 = 0;
  2030   000C98  9E83               	bcf	131,7,c	;volatile
  2031                           
  2032                           ;kbd4x4.c: 26:     PORTDbits.RD6 = 1;
  2033   000C9A  8C83               	bsf	131,6,c	;volatile
  2034                           
  2035                           ;kbd4x4.c: 27:     PORTDbits.RD5 = 1;
  2036   000C9C  8A83               	bsf	131,5,c	;volatile
  2037                           
  2038                           ;kbd4x4.c: 28:     PORTDbits.RD4 = 1;
  2039   000C9E  8883               	bsf	131,4,c	;volatile
  2040                           
  2041                           ;kbd4x4.c: 29:     if(PORTDbits.RD3 == 0){
  2042   000CA0  B683               	btfsc	131,3,c	;volatile
  2043   000CA2  EF55  F006         	goto	u1651
  2044   000CA6  EF57  F006         	goto	u1650
  2045   000CAA                     u1651:
  2046   000CAA  EF70  F006         	goto	l319
  2047   000CAE                     u1650:
  2048   000CAE                     
  2049                           ;kbd4x4.c: 30:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2050   000CAE  0E20               	movlw	32
  2051   000CB0  6E02               	movwf	??_Keypad_Get_Char^0,c
  2052   000CB2  0E2A               	movlw	42
  2053   000CB4                     u2967:
  2054   000CB4  2EE8               	decfsz	wreg,f,c
  2055   000CB6  D7FE               	bra	u2967
  2056   000CB8  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2057   000CBA  D7FC               	bra	u2967
  2058   000CBC                     l320:
  2059   000CBC  A683               	btfss	131,3,c	;volatile
  2060   000CBE  EF63  F006         	goto	u1661
  2061   000CC2  EF65  F006         	goto	u1660
  2062   000CC6                     u1661:
  2063   000CC6  EF5E  F006         	goto	l320
  2064   000CCA                     u1660:
  2065   000CCA                     
  2066                           ;kbd4x4.c: 32:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2067   000CCA  0E4E               	movlw	78
  2068   000CCC  6E02               	movwf	??_Keypad_Get_Char^0,c
  2069   000CCE  0EEB               	movlw	235
  2070   000CD0                     u2977:
  2071   000CD0  2EE8               	decfsz	wreg,f,c
  2072   000CD2  D7FE               	bra	u2977
  2073   000CD4  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2074   000CD6  D7FC               	bra	u2977
  2075   000CD8  F000               	nop	
  2076                           
  2077                           ;kbd4x4.c: 33:         return '1';
  2078   000CDA  0E31               	movlw	49
  2079   000CDC  EFDD  F007         	goto	l323
  2080   000CE0                     l319:
  2081                           
  2082                           ;kbd4x4.c: 35:     if(PORTDbits.RD2 == 0){
  2083   000CE0  B483               	btfsc	131,2,c	;volatile
  2084   000CE2  EF75  F006         	goto	u1671
  2085   000CE6  EF77  F006         	goto	u1670
  2086   000CEA                     u1671:
  2087   000CEA  EF90  F006         	goto	l324
  2088   000CEE                     u1670:
  2089   000CEE                     
  2090                           ;kbd4x4.c: 36:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2091   000CEE  0E20               	movlw	32
  2092   000CF0  6E02               	movwf	??_Keypad_Get_Char^0,c
  2093   000CF2  0E2A               	movlw	42
  2094   000CF4                     u2987:
  2095   000CF4  2EE8               	decfsz	wreg,f,c
  2096   000CF6  D7FE               	bra	u2987
  2097   000CF8  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2098   000CFA  D7FC               	bra	u2987
  2099   000CFC                     l325:
  2100   000CFC  A483               	btfss	131,2,c	;volatile
  2101   000CFE  EF83  F006         	goto	u1681
  2102   000D02  EF85  F006         	goto	u1680
  2103   000D06                     u1681:
  2104   000D06  EF7E  F006         	goto	l325
  2105   000D0A                     u1680:
  2106   000D0A                     
  2107                           ;kbd4x4.c: 38:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2108   000D0A  0E4E               	movlw	78
  2109   000D0C  6E02               	movwf	??_Keypad_Get_Char^0,c
  2110   000D0E  0EEB               	movlw	235
  2111   000D10                     u2997:
  2112   000D10  2EE8               	decfsz	wreg,f,c
  2113   000D12  D7FE               	bra	u2997
  2114   000D14  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2115   000D16  D7FC               	bra	u2997
  2116   000D18  F000               	nop	
  2117                           
  2118                           ;kbd4x4.c: 39:         return '2';
  2119   000D1A  0E32               	movlw	50
  2120   000D1C  EFDD  F007         	goto	l323
  2121   000D20                     l324:
  2122                           
  2123                           ;kbd4x4.c: 41:     if(PORTDbits.RD1 == 0){
  2124   000D20  B283               	btfsc	131,1,c	;volatile
  2125   000D22  EF95  F006         	goto	u1691
  2126   000D26  EF97  F006         	goto	u1690
  2127   000D2A                     u1691:
  2128   000D2A  EFB0  F006         	goto	l328
  2129   000D2E                     u1690:
  2130   000D2E                     
  2131                           ;kbd4x4.c: 42:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2132   000D2E  0E20               	movlw	32
  2133   000D30  6E02               	movwf	??_Keypad_Get_Char^0,c
  2134   000D32  0E2A               	movlw	42
  2135   000D34                     u3007:
  2136   000D34  2EE8               	decfsz	wreg,f,c
  2137   000D36  D7FE               	bra	u3007
  2138   000D38  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2139   000D3A  D7FC               	bra	u3007
  2140   000D3C                     l329:
  2141   000D3C  A283               	btfss	131,1,c	;volatile
  2142   000D3E  EFA3  F006         	goto	u1701
  2143   000D42  EFA5  F006         	goto	u1700
  2144   000D46                     u1701:
  2145   000D46  EF9E  F006         	goto	l329
  2146   000D4A                     u1700:
  2147   000D4A                     
  2148                           ;kbd4x4.c: 44:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2149   000D4A  0E4E               	movlw	78
  2150   000D4C  6E02               	movwf	??_Keypad_Get_Char^0,c
  2151   000D4E  0EEB               	movlw	235
  2152   000D50                     u3017:
  2153   000D50  2EE8               	decfsz	wreg,f,c
  2154   000D52  D7FE               	bra	u3017
  2155   000D54  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2156   000D56  D7FC               	bra	u3017
  2157   000D58  F000               	nop	
  2158                           
  2159                           ;kbd4x4.c: 45:         return '3';
  2160   000D5A  0E33               	movlw	51
  2161   000D5C  EFDD  F007         	goto	l323
  2162   000D60                     l328:
  2163                           
  2164                           ;kbd4x4.c: 54:     PORTDbits.RD7 = 1;
  2165   000D60  8E83               	bsf	131,7,c	;volatile
  2166                           
  2167                           ;kbd4x4.c: 55:     PORTDbits.RD6 = 0;
  2168   000D62  9C83               	bcf	131,6,c	;volatile
  2169                           
  2170                           ;kbd4x4.c: 56:     PORTDbits.RD5 = 1;
  2171   000D64  8A83               	bsf	131,5,c	;volatile
  2172                           
  2173                           ;kbd4x4.c: 57:     PORTDbits.RD4 = 1;
  2174   000D66  8883               	bsf	131,4,c	;volatile
  2175                           
  2176                           ;kbd4x4.c: 58:     if(PORTDbits.RD3 == 0){
  2177   000D68  B683               	btfsc	131,3,c	;volatile
  2178   000D6A  EFB9  F006         	goto	u1711
  2179   000D6E  EFBB  F006         	goto	u1710
  2180   000D72                     u1711:
  2181   000D72  EFD4  F006         	goto	l332
  2182   000D76                     u1710:
  2183   000D76                     
  2184                           ;kbd4x4.c: 59:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2185   000D76  0E20               	movlw	32
  2186   000D78  6E02               	movwf	??_Keypad_Get_Char^0,c
  2187   000D7A  0E2A               	movlw	42
  2188   000D7C                     u3027:
  2189   000D7C  2EE8               	decfsz	wreg,f,c
  2190   000D7E  D7FE               	bra	u3027
  2191   000D80  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2192   000D82  D7FC               	bra	u3027
  2193   000D84                     l333:
  2194   000D84  A683               	btfss	131,3,c	;volatile
  2195   000D86  EFC7  F006         	goto	u1721
  2196   000D8A  EFC9  F006         	goto	u1720
  2197   000D8E                     u1721:
  2198   000D8E  EFC2  F006         	goto	l333
  2199   000D92                     u1720:
  2200   000D92                     
  2201                           ;kbd4x4.c: 61:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2202   000D92  0E4E               	movlw	78
  2203   000D94  6E02               	movwf	??_Keypad_Get_Char^0,c
  2204   000D96  0EEB               	movlw	235
  2205   000D98                     u3037:
  2206   000D98  2EE8               	decfsz	wreg,f,c
  2207   000D9A  D7FE               	bra	u3037
  2208   000D9C  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2209   000D9E  D7FC               	bra	u3037
  2210   000DA0  F000               	nop	
  2211                           
  2212                           ;kbd4x4.c: 62:         return '4';
  2213   000DA2  0E34               	movlw	52
  2214   000DA4  EFDD  F007         	goto	l323
  2215   000DA8                     l332:
  2216                           
  2217                           ;kbd4x4.c: 64:     if(PORTDbits.RD2 == 0){
  2218   000DA8  B483               	btfsc	131,2,c	;volatile
  2219   000DAA  EFD9  F006         	goto	u1731
  2220   000DAE  EFDB  F006         	goto	u1730
  2221   000DB2                     u1731:
  2222   000DB2  EFF4  F006         	goto	l336
  2223   000DB6                     u1730:
  2224   000DB6                     
  2225                           ;kbd4x4.c: 65:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2226   000DB6  0E20               	movlw	32
  2227   000DB8  6E02               	movwf	??_Keypad_Get_Char^0,c
  2228   000DBA  0E2A               	movlw	42
  2229   000DBC                     u3047:
  2230   000DBC  2EE8               	decfsz	wreg,f,c
  2231   000DBE  D7FE               	bra	u3047
  2232   000DC0  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2233   000DC2  D7FC               	bra	u3047
  2234   000DC4                     l337:
  2235   000DC4  A483               	btfss	131,2,c	;volatile
  2236   000DC6  EFE7  F006         	goto	u1741
  2237   000DCA  EFE9  F006         	goto	u1740
  2238   000DCE                     u1741:
  2239   000DCE  EFE2  F006         	goto	l337
  2240   000DD2                     u1740:
  2241   000DD2                     
  2242                           ;kbd4x4.c: 67:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2243   000DD2  0E4E               	movlw	78
  2244   000DD4  6E02               	movwf	??_Keypad_Get_Char^0,c
  2245   000DD6  0EEB               	movlw	235
  2246   000DD8                     u3057:
  2247   000DD8  2EE8               	decfsz	wreg,f,c
  2248   000DDA  D7FE               	bra	u3057
  2249   000DDC  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2250   000DDE  D7FC               	bra	u3057
  2251   000DE0  F000               	nop	
  2252                           
  2253                           ;kbd4x4.c: 68:         return '5';
  2254   000DE2  0E35               	movlw	53
  2255   000DE4  EFDD  F007         	goto	l323
  2256   000DE8                     l336:
  2257                           
  2258                           ;kbd4x4.c: 70:     if(PORTDbits.RD1 == 0){
  2259   000DE8  B283               	btfsc	131,1,c	;volatile
  2260   000DEA  EFF9  F006         	goto	u1751
  2261   000DEE  EFFB  F006         	goto	u1750
  2262   000DF2                     u1751:
  2263   000DF2  EF14  F007         	goto	l340
  2264   000DF6                     u1750:
  2265   000DF6                     
  2266                           ;kbd4x4.c: 71:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2267   000DF6  0E20               	movlw	32
  2268   000DF8  6E02               	movwf	??_Keypad_Get_Char^0,c
  2269   000DFA  0E2A               	movlw	42
  2270   000DFC                     u3067:
  2271   000DFC  2EE8               	decfsz	wreg,f,c
  2272   000DFE  D7FE               	bra	u3067
  2273   000E00  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2274   000E02  D7FC               	bra	u3067
  2275   000E04                     l341:
  2276   000E04  A283               	btfss	131,1,c	;volatile
  2277   000E06  EF07  F007         	goto	u1761
  2278   000E0A  EF09  F007         	goto	u1760
  2279   000E0E                     u1761:
  2280   000E0E  EF02  F007         	goto	l341
  2281   000E12                     u1760:
  2282   000E12                     
  2283                           ;kbd4x4.c: 73:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2284   000E12  0E4E               	movlw	78
  2285   000E14  6E02               	movwf	??_Keypad_Get_Char^0,c
  2286   000E16  0EEB               	movlw	235
  2287   000E18                     u3077:
  2288   000E18  2EE8               	decfsz	wreg,f,c
  2289   000E1A  D7FE               	bra	u3077
  2290   000E1C  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2291   000E1E  D7FC               	bra	u3077
  2292   000E20  F000               	nop	
  2293                           
  2294                           ;kbd4x4.c: 74:         return '6';
  2295   000E22  0E36               	movlw	54
  2296   000E24  EFDD  F007         	goto	l323
  2297   000E28                     l340:
  2298                           
  2299                           ;kbd4x4.c: 83:     PORTDbits.RD7 = 1;
  2300   000E28  8E83               	bsf	131,7,c	;volatile
  2301                           
  2302                           ;kbd4x4.c: 84:     PORTDbits.RD6 = 1;
  2303   000E2A  8C83               	bsf	131,6,c	;volatile
  2304                           
  2305                           ;kbd4x4.c: 85:     PORTDbits.RD5 = 0;
  2306   000E2C  9A83               	bcf	131,5,c	;volatile
  2307                           
  2308                           ;kbd4x4.c: 86:     PORTDbits.RD4 = 1;
  2309   000E2E  8883               	bsf	131,4,c	;volatile
  2310                           
  2311                           ;kbd4x4.c: 87:     if(PORTDbits.RD3 == 0){
  2312   000E30  B683               	btfsc	131,3,c	;volatile
  2313   000E32  EF1D  F007         	goto	u1771
  2314   000E36  EF1F  F007         	goto	u1770
  2315   000E3A                     u1771:
  2316   000E3A  EF38  F007         	goto	l344
  2317   000E3E                     u1770:
  2318   000E3E                     
  2319                           ;kbd4x4.c: 88:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2320   000E3E  0E20               	movlw	32
  2321   000E40  6E02               	movwf	??_Keypad_Get_Char^0,c
  2322   000E42  0E2A               	movlw	42
  2323   000E44                     u3087:
  2324   000E44  2EE8               	decfsz	wreg,f,c
  2325   000E46  D7FE               	bra	u3087
  2326   000E48  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2327   000E4A  D7FC               	bra	u3087
  2328   000E4C                     l345:
  2329   000E4C  A683               	btfss	131,3,c	;volatile
  2330   000E4E  EF2B  F007         	goto	u1781
  2331   000E52  EF2D  F007         	goto	u1780
  2332   000E56                     u1781:
  2333   000E56  EF26  F007         	goto	l345
  2334   000E5A                     u1780:
  2335   000E5A                     
  2336                           ;kbd4x4.c: 90:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2337   000E5A  0E4E               	movlw	78
  2338   000E5C  6E02               	movwf	??_Keypad_Get_Char^0,c
  2339   000E5E  0EEB               	movlw	235
  2340   000E60                     u3097:
  2341   000E60  2EE8               	decfsz	wreg,f,c
  2342   000E62  D7FE               	bra	u3097
  2343   000E64  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2344   000E66  D7FC               	bra	u3097
  2345   000E68  F000               	nop	
  2346                           
  2347                           ;kbd4x4.c: 91:         return '7';
  2348   000E6A  0E37               	movlw	55
  2349   000E6C  EFDD  F007         	goto	l323
  2350   000E70                     l344:
  2351                           
  2352                           ;kbd4x4.c: 93:     if(PORTDbits.RD2 == 0){
  2353   000E70  B483               	btfsc	131,2,c	;volatile
  2354   000E72  EF3D  F007         	goto	u1791
  2355   000E76  EF3F  F007         	goto	u1790
  2356   000E7A                     u1791:
  2357   000E7A  EF58  F007         	goto	l348
  2358   000E7E                     u1790:
  2359   000E7E                     
  2360                           ;kbd4x4.c: 94:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2361   000E7E  0E20               	movlw	32
  2362   000E80  6E02               	movwf	??_Keypad_Get_Char^0,c
  2363   000E82  0E2A               	movlw	42
  2364   000E84                     u3107:
  2365   000E84  2EE8               	decfsz	wreg,f,c
  2366   000E86  D7FE               	bra	u3107
  2367   000E88  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2368   000E8A  D7FC               	bra	u3107
  2369   000E8C                     l349:
  2370   000E8C  A483               	btfss	131,2,c	;volatile
  2371   000E8E  EF4B  F007         	goto	u1801
  2372   000E92  EF4D  F007         	goto	u1800
  2373   000E96                     u1801:
  2374   000E96  EF46  F007         	goto	l349
  2375   000E9A                     u1800:
  2376   000E9A                     
  2377                           ;kbd4x4.c: 96:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2378   000E9A  0E4E               	movlw	78
  2379   000E9C  6E02               	movwf	??_Keypad_Get_Char^0,c
  2380   000E9E  0EEB               	movlw	235
  2381   000EA0                     u3117:
  2382   000EA0  2EE8               	decfsz	wreg,f,c
  2383   000EA2  D7FE               	bra	u3117
  2384   000EA4  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2385   000EA6  D7FC               	bra	u3117
  2386   000EA8  F000               	nop	
  2387                           
  2388                           ;kbd4x4.c: 97:         return '8';
  2389   000EAA  0E38               	movlw	56
  2390   000EAC  EFDD  F007         	goto	l323
  2391   000EB0                     l348:
  2392                           
  2393                           ;kbd4x4.c: 99:     if(PORTDbits.RD1 == 0){
  2394   000EB0  B283               	btfsc	131,1,c	;volatile
  2395   000EB2  EF5D  F007         	goto	u1811
  2396   000EB6  EF5F  F007         	goto	u1810
  2397   000EBA                     u1811:
  2398   000EBA  EF78  F007         	goto	l352
  2399   000EBE                     u1810:
  2400   000EBE                     
  2401                           ;kbd4x4.c: 100:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2402   000EBE  0E20               	movlw	32
  2403   000EC0  6E02               	movwf	??_Keypad_Get_Char^0,c
  2404   000EC2  0E2A               	movlw	42
  2405   000EC4                     u3127:
  2406   000EC4  2EE8               	decfsz	wreg,f,c
  2407   000EC6  D7FE               	bra	u3127
  2408   000EC8  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2409   000ECA  D7FC               	bra	u3127
  2410   000ECC                     l353:
  2411   000ECC  A283               	btfss	131,1,c	;volatile
  2412   000ECE  EF6B  F007         	goto	u1821
  2413   000ED2  EF6D  F007         	goto	u1820
  2414   000ED6                     u1821:
  2415   000ED6  EF66  F007         	goto	l353
  2416   000EDA                     u1820:
  2417   000EDA                     
  2418                           ;kbd4x4.c: 102:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2419   000EDA  0E4E               	movlw	78
  2420   000EDC  6E02               	movwf	??_Keypad_Get_Char^0,c
  2421   000EDE  0EEB               	movlw	235
  2422   000EE0                     u3137:
  2423   000EE0  2EE8               	decfsz	wreg,f,c
  2424   000EE2  D7FE               	bra	u3137
  2425   000EE4  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2426   000EE6  D7FC               	bra	u3137
  2427   000EE8  F000               	nop	
  2428                           
  2429                           ;kbd4x4.c: 103:         return '9';
  2430   000EEA  0E39               	movlw	57
  2431   000EEC  EFDD  F007         	goto	l323
  2432   000EF0                     l352:
  2433                           
  2434                           ;kbd4x4.c: 112:     PORTDbits.RD7 = 1;
  2435   000EF0  8E83               	bsf	131,7,c	;volatile
  2436                           
  2437                           ;kbd4x4.c: 113:     PORTDbits.RD6 = 1;
  2438   000EF2  8C83               	bsf	131,6,c	;volatile
  2439                           
  2440                           ;kbd4x4.c: 114:     PORTDbits.RD5 = 1;
  2441   000EF4  8A83               	bsf	131,5,c	;volatile
  2442                           
  2443                           ;kbd4x4.c: 115:     PORTDbits.RD4 = 0;
  2444   000EF6  9883               	bcf	131,4,c	;volatile
  2445                           
  2446                           ;kbd4x4.c: 116:     if(PORTDbits.RD3 == 0){
  2447   000EF8  B683               	btfsc	131,3,c	;volatile
  2448   000EFA  EF81  F007         	goto	u1831
  2449   000EFE  EF83  F007         	goto	u1830
  2450   000F02                     u1831:
  2451   000F02  EF9C  F007         	goto	l356
  2452   000F06                     u1830:
  2453   000F06                     
  2454                           ;kbd4x4.c: 117:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2455   000F06  0E20               	movlw	32
  2456   000F08  6E02               	movwf	??_Keypad_Get_Char^0,c
  2457   000F0A  0E2A               	movlw	42
  2458   000F0C                     u3147:
  2459   000F0C  2EE8               	decfsz	wreg,f,c
  2460   000F0E  D7FE               	bra	u3147
  2461   000F10  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2462   000F12  D7FC               	bra	u3147
  2463   000F14                     l357:
  2464   000F14  A683               	btfss	131,3,c	;volatile
  2465   000F16  EF8F  F007         	goto	u1841
  2466   000F1A  EF91  F007         	goto	u1840
  2467   000F1E                     u1841:
  2468   000F1E  EF8A  F007         	goto	l357
  2469   000F22                     u1840:
  2470   000F22                     
  2471                           ;kbd4x4.c: 119:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2472   000F22  0E4E               	movlw	78
  2473   000F24  6E02               	movwf	??_Keypad_Get_Char^0,c
  2474   000F26  0EEB               	movlw	235
  2475   000F28                     u3157:
  2476   000F28  2EE8               	decfsz	wreg,f,c
  2477   000F2A  D7FE               	bra	u3157
  2478   000F2C  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2479   000F2E  D7FC               	bra	u3157
  2480   000F30  F000               	nop	
  2481                           
  2482                           ;kbd4x4.c: 120:         return '*';
  2483   000F32  0E2A               	movlw	42
  2484   000F34  EFDD  F007         	goto	l323
  2485   000F38                     l356:
  2486                           
  2487                           ;kbd4x4.c: 122:     if(PORTDbits.RD2 == 0){
  2488   000F38  B483               	btfsc	131,2,c	;volatile
  2489   000F3A  EFA1  F007         	goto	u1851
  2490   000F3E  EFA3  F007         	goto	u1850
  2491   000F42                     u1851:
  2492   000F42  EFBC  F007         	goto	l360
  2493   000F46                     u1850:
  2494   000F46                     
  2495                           ;kbd4x4.c: 123:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2496   000F46  0E20               	movlw	32
  2497   000F48  6E02               	movwf	??_Keypad_Get_Char^0,c
  2498   000F4A  0E2A               	movlw	42
  2499   000F4C                     u3167:
  2500   000F4C  2EE8               	decfsz	wreg,f,c
  2501   000F4E  D7FE               	bra	u3167
  2502   000F50  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2503   000F52  D7FC               	bra	u3167
  2504   000F54                     l361:
  2505   000F54  A483               	btfss	131,2,c	;volatile
  2506   000F56  EFAF  F007         	goto	u1861
  2507   000F5A  EFB1  F007         	goto	u1860
  2508   000F5E                     u1861:
  2509   000F5E  EFAA  F007         	goto	l361
  2510   000F62                     u1860:
  2511   000F62                     
  2512                           ;kbd4x4.c: 125:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2513   000F62  0E4E               	movlw	78
  2514   000F64  6E02               	movwf	??_Keypad_Get_Char^0,c
  2515   000F66  0EEB               	movlw	235
  2516   000F68                     u3177:
  2517   000F68  2EE8               	decfsz	wreg,f,c
  2518   000F6A  D7FE               	bra	u3177
  2519   000F6C  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2520   000F6E  D7FC               	bra	u3177
  2521   000F70  F000               	nop	
  2522                           
  2523                           ;kbd4x4.c: 126:         return '0';
  2524   000F72  0E30               	movlw	48
  2525   000F74  EFDD  F007         	goto	l323
  2526   000F78                     l360:
  2527                           
  2528                           ;kbd4x4.c: 128:     if(PORTDbits.RD1 == 0){
  2529   000F78  B283               	btfsc	131,1,c	;volatile
  2530   000F7A  EFC1  F007         	goto	u1871
  2531   000F7E  EFC3  F007         	goto	u1870
  2532   000F82                     u1871:
  2533   000F82  EFDC  F007         	goto	l2455
  2534   000F86                     u1870:
  2535   000F86                     
  2536                           ;kbd4x4.c: 129:         _delay((unsigned long)((2)*(48000000/4000.0)));
  2537   000F86  0E20               	movlw	32
  2538   000F88  6E02               	movwf	??_Keypad_Get_Char^0,c
  2539   000F8A  0E2A               	movlw	42
  2540   000F8C                     u3187:
  2541   000F8C  2EE8               	decfsz	wreg,f,c
  2542   000F8E  D7FE               	bra	u3187
  2543   000F90  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2544   000F92  D7FC               	bra	u3187
  2545   000F94                     l365:
  2546   000F94  A283               	btfss	131,1,c	;volatile
  2547   000F96  EFCF  F007         	goto	u1881
  2548   000F9A  EFD1  F007         	goto	u1880
  2549   000F9E                     u1881:
  2550   000F9E  EFCA  F007         	goto	l365
  2551   000FA2                     u1880:
  2552   000FA2                     
  2553                           ;kbd4x4.c: 131:         _delay((unsigned long)((5)*(48000000/4000.0)));
  2554   000FA2  0E4E               	movlw	78
  2555   000FA4  6E02               	movwf	??_Keypad_Get_Char^0,c
  2556   000FA6  0EEB               	movlw	235
  2557   000FA8                     u3197:
  2558   000FA8  2EE8               	decfsz	wreg,f,c
  2559   000FAA  D7FE               	bra	u3197
  2560   000FAC  2E02               	decfsz	??_Keypad_Get_Char^0,f,c
  2561   000FAE  D7FC               	bra	u3197
  2562   000FB0  F000               	nop	
  2563                           
  2564                           ;kbd4x4.c: 132:         return '#';
  2565   000FB2  0E23               	movlw	35
  2566   000FB4  EFDD  F007         	goto	l323
  2567   000FB8                     l2455:
  2568                           
  2569                           ;kbd4x4.c: 140:     return 0;
  2570   000FB8  0E00               	movlw	0
  2571   000FBA                     l323:
  2572   000FBA  0012               	return		;funcret
  2573   000FBC                     __end_of_Keypad_Get_Char:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _Lcd_Init *****************
  2577 ;; Defined at:
  2578 ;;		line 63 in file "lcd.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2592 ;;      Params:         0       0       0       0       0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2594 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2595 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 4
  2599 ;; This function calls:
  2600 ;;		_Lcd_Clear
  2601 ;;		_Lcd_Cmd
  2602 ;;		_Lcd_Port
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text7
  2609   002244                     __ptext7:
  2610                           	callstack 0
  2611   002244                     _Lcd_Init:
  2612                           	callstack 26
  2613   002244                     
  2614                           ;lcd.c: 65:  TRISAbits.TRISA0 = 0;
  2615   002244  9092               	bcf	146,0,c	;volatile
  2616                           
  2617                           ;lcd.c: 66:  TRISAbits.TRISA1 = 0;
  2618   002246  9292               	bcf	146,1,c	;volatile
  2619                           
  2620                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  2621   002248  9893               	bcf	147,4,c	;volatile
  2622                           
  2623                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  2624   00224A  9A93               	bcf	147,5,c	;volatile
  2625                           
  2626                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  2627   00224C  9C93               	bcf	147,6,c	;volatile
  2628                           
  2629                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  2630   00224E  9E93               	bcf	147,7,c	;volatile
  2631   002250                     
  2632                           ;lcd.c: 71:     Lcd_Port(0x00);
  2633   002250  0E00               	movlw	0
  2634   002252  ECE4  F011         	call	_Lcd_Port
  2635   002256                     
  2636                           ;lcd.c: 72:     _delay((unsigned long)((20)*(48000000/4000.0)));
  2637   002256  0E02               	movlw	2
  2638   002258  6E06               	movwf	(??_Lcd_Init+1)^0,c
  2639   00225A  0E38               	movlw	56
  2640   00225C  6E05               	movwf	??_Lcd_Init^0,c
  2641   00225E  0EAD               	movlw	173
  2642   002260                     u3207:
  2643   002260  2EE8               	decfsz	wreg,f,c
  2644   002262  D7FE               	bra	u3207
  2645   002264  2E05               	decfsz	??_Lcd_Init^0,f,c
  2646   002266  D7FC               	bra	u3207
  2647   002268  2E06               	decfsz	(??_Lcd_Init+1)^0,f,c
  2648   00226A  D7FA               	bra	u3207
  2649   00226C  F000               	nop	
  2650   00226E                     
  2651                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  2652   00226E  0E03               	movlw	3
  2653   002270  ECF0  F012         	call	_Lcd_Cmd
  2654   002274                     
  2655                           ;lcd.c: 74:     _delay((unsigned long)((5)*(48000000/4000.0)));
  2656   002274  0E4E               	movlw	78
  2657   002276  6E05               	movwf	??_Lcd_Init^0,c
  2658   002278  0EEB               	movlw	235
  2659   00227A                     u3217:
  2660   00227A  2EE8               	decfsz	wreg,f,c
  2661   00227C  D7FE               	bra	u3217
  2662   00227E  2E05               	decfsz	??_Lcd_Init^0,f,c
  2663   002280  D7FC               	bra	u3217
  2664   002282  F000               	nop	
  2665   002284                     
  2666                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  2667   002284  0E03               	movlw	3
  2668   002286  ECF0  F012         	call	_Lcd_Cmd
  2669   00228A                     
  2670                           ;lcd.c: 76:     _delay((unsigned long)((11)*(48000000/4000.0)));
  2671   00228A  0EAC               	movlw	172
  2672   00228C  6E05               	movwf	??_Lcd_Init^0,c
  2673   00228E  0E6C               	movlw	108
  2674   002290                     u3227:
  2675   002290  2EE8               	decfsz	wreg,f,c
  2676   002292  D7FE               	bra	u3227
  2677   002294  2E05               	decfsz	??_Lcd_Init^0,f,c
  2678   002296  D7FC               	bra	u3227
  2679   002298  D000               	nop2	
  2680   00229A                     
  2681                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  2682   00229A  0E03               	movlw	3
  2683   00229C  ECF0  F012         	call	_Lcd_Cmd
  2684   0022A0                     
  2685                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  2686   0022A0  0E02               	movlw	2
  2687   0022A2  ECF0  F012         	call	_Lcd_Cmd
  2688   0022A6                     
  2689                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  2690   0022A6  0E02               	movlw	2
  2691   0022A8  ECF0  F012         	call	_Lcd_Cmd
  2692   0022AC                     
  2693                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  2694   0022AC  0E08               	movlw	8
  2695   0022AE  ECF0  F012         	call	_Lcd_Cmd
  2696   0022B2                     
  2697                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  2698   0022B2  0E00               	movlw	0
  2699   0022B4  ECF0  F012         	call	_Lcd_Cmd
  2700   0022B8                     
  2701                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  2702   0022B8  0E0C               	movlw	12
  2703   0022BA  ECF0  F012         	call	_Lcd_Cmd
  2704   0022BE                     
  2705                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  2706   0022BE  0E00               	movlw	0
  2707   0022C0  ECF0  F012         	call	_Lcd_Cmd
  2708   0022C4                     
  2709                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  2710   0022C4  0E06               	movlw	6
  2711   0022C6  ECF0  F012         	call	_Lcd_Cmd
  2712   0022CA                     
  2713                           ;lcd.c: 85:     Lcd_Clear();
  2714   0022CA  EC27  F013         	call	_Lcd_Clear	;wreg free
  2715   0022CE  0012               	return		;funcret
  2716   0022D0                     __end_of_Lcd_Init:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _Keypad_Init *****************
  2720 ;; Defined at:
  2721 ;;		line 11 in file "kbd4x4.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		None
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2735 ;;      Params:         0       0       0       0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text8
  2750   002614                     __ptext8:
  2751                           	callstack 0
  2752   002614                     _Keypad_Init:
  2753                           	callstack 29
  2754   002614                     
  2755                           ;kbd4x4.c: 13:     TRISDbits.TRISD7 = 0;
  2756   002614  9E95               	bcf	149,7,c	;volatile
  2757                           
  2758                           ;kbd4x4.c: 14:     TRISDbits.TRISD6 = 0;
  2759   002616  9C95               	bcf	149,6,c	;volatile
  2760                           
  2761                           ;kbd4x4.c: 15:     TRISDbits.TRISD5 = 0;
  2762   002618  9A95               	bcf	149,5,c	;volatile
  2763                           
  2764                           ;kbd4x4.c: 16:     TRISDbits.TRISD4 = 0;
  2765   00261A  9895               	bcf	149,4,c	;volatile
  2766                           
  2767                           ;kbd4x4.c: 17:     TRISDbits.TRISD3 = 1;
  2768   00261C  8695               	bsf	149,3,c	;volatile
  2769                           
  2770                           ;kbd4x4.c: 18:     TRISDbits.TRISD2 = 1;
  2771   00261E  8495               	bsf	149,2,c	;volatile
  2772                           
  2773                           ;kbd4x4.c: 19:     TRISDbits.TRISD1 = 1;
  2774   002620  8295               	bsf	149,1,c	;volatile
  2775   002622  0012               	return		;funcret
  2776   002624                     __end_of_Keypad_Init:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _FILL *****************
  2780 ;; Defined at:
  2781 ;;		line 294 in file "Main_program.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 9
  2802 ;; This function calls:
  2803 ;;		_Lcd_Clear
  2804 ;;		_Lcd_Set_Cursor
  2805 ;;		_Lcd_Write_String
  2806 ;;		_TMR0_COUNT
  2807 ;;		___flge
  2808 ;;		___flmul
  2809 ;;		___fltol
  2810 ;;		___xxtofl
  2811 ;;		_sprintf
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text9
  2818   000FBC                     __ptext9:
  2819                           	callstack 0
  2820   000FBC                     _FILL:
  2821                           	callstack 21
  2822   000FBC                     
  2823                           ;Main_program.c: 296:     Lcd_Clear();
  2824   000FBC  EC27  F013         	call	_Lcd_Clear	;wreg free
  2825   000FC0                     
  2826                           ;Main_program.c: 297:     Lcd_Set_Cursor(1, 1);
  2827   000FC0  0E01               	movlw	1
  2828   000FC2  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  2829   000FC4  0E01               	movlw	1
  2830   000FC6  ECEC  F00F         	call	_Lcd_Set_Cursor
  2831   000FCA                     
  2832                           ;Main_program.c: 298:     Lcd_Write_String("Llenando     ml ");
  2833   000FCA  0E1A               	movlw	low STR_8
  2834   000FCC  6E06               	movwf	Lcd_Write_String@a^0,c
  2835   000FCE  0E08               	movlw	high STR_8
  2836   000FD0  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  2837   000FD2  EC68  F011         	call	_Lcd_Write_String	;wreg free
  2838   000FD6                     
  2839                           ;Main_program.c: 299:     Lcd_Set_Cursor(2, 1);
  2840   000FD6  0E01               	movlw	1
  2841   000FD8  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  2842   000FDA  0E02               	movlw	2
  2843   000FDC  ECEC  F00F         	call	_Lcd_Set_Cursor
  2844   000FE0                     
  2845                           ;Main_program.c: 300:     Lcd_Write_String("Salir ");
  2846   000FE0  0E56               	movlw	low STR_9
  2847   000FE2  6E06               	movwf	Lcd_Write_String@a^0,c
  2848   000FE4  0E08               	movlw	high STR_9
  2849   000FE6  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  2850   000FE8  EC68  F011         	call	_Lcd_Write_String	;wreg free
  2851   000FEC                     
  2852                           ;Main_program.c: 301:     Lcd_Set_Cursor(2, 7);
  2853   000FEC  0E07               	movlw	7
  2854   000FEE  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  2855   000FF0  0E02               	movlw	2
  2856   000FF2  ECEC  F00F         	call	_Lcd_Set_Cursor
  2857   000FF6                     
  2858                           ;Main_program.c: 303:     sprintf(STRING_VAL_TYPED, "%u", VAL_TYPED);
  2859   000FF6  0EA5               	movlw	low _STRING_VAL_TYPED
  2860   000FF8  0100               	movlb	0	; () banked
  2861   000FFA  6FAA               	movwf	sprintf@s& (0+255),b
  2862   000FFC  0E00               	movlw	high _STRING_VAL_TYPED
  2863   000FFE  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  2864   001000  0E6A               	movlw	low STR_10
  2865   001002  6FAC               	movwf	sprintf@fmt& (0+255),b
  2866   001004  0E08               	movlw	high STR_10
  2867   001006  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  2868   001008  C072  F0AE         	movff	_VAL_TYPED,?_sprintf+4
  2869   00100C  C073  F0AF         	movff	_VAL_TYPED+1,?_sprintf+5
  2870   001010  EC12  F012         	call	_sprintf	;wreg free
  2871   001014                     
  2872                           ;Main_program.c: 304:     Lcd_Set_Cursor(1, 10);
  2873   001014  0E0A               	movlw	10
  2874   001016  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  2875   001018  0E01               	movlw	1
  2876   00101A  ECEC  F00F         	call	_Lcd_Set_Cursor
  2877   00101E                     
  2878                           ;Main_program.c: 305:     Lcd_Write_String(STRING_VAL_TYPED);
  2879   00101E  0EA5               	movlw	low _STRING_VAL_TYPED
  2880   001020  6E06               	movwf	Lcd_Write_String@a^0,c
  2881   001022  0E00               	movlw	high _STRING_VAL_TYPED
  2882   001024  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  2883   001026  EC68  F011         	call	_Lcd_Write_String	;wreg free
  2884   00102A                     
  2885                           ;Main_program.c: 307:     Lcd_Set_Cursor(2, 9);
  2886   00102A  0E09               	movlw	9
  2887   00102C  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  2888   00102E  0E02               	movlw	2
  2889   001030  ECEC  F00F         	call	_Lcd_Set_Cursor
  2890   001034                     
  2891                           ;Main_program.c: 308:     Lcd_Write_String("     ml ");
  2892   001034  0E22               	movlw	low (STR_8+8)
  2893   001036  6E06               	movwf	Lcd_Write_String@a^0,c
  2894   001038  0E08               	movlw	high (STR_8+8)
  2895   00103A  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  2896   00103C  EC68  F011         	call	_Lcd_Write_String	;wreg free
  2897   001040                     
  2898                           ;Main_program.c: 309:     LATCbits.LATC0 = 1;
  2899   001040  808B               	bsf	139,0,c	;volatile
  2900   001042                     
  2901                           ;Main_program.c: 310:     _delay((unsigned long)((600)*(48000000/4000.0)));
  2902   001042  0E25               	movlw	37
  2903   001044  6E5A               	movwf	(??_FILL+1)^0,c
  2904   001046  0E87               	movlw	135
  2905   001048  6E59               	movwf	??_FILL^0,c
  2906   00104A  0E8C               	movlw	140
  2907   00104C                     u3237:
  2908   00104C  2EE8               	decfsz	wreg,f,c
  2909   00104E  D7FE               	bra	u3237
  2910   001050  2E59               	decfsz	??_FILL^0,f,c
  2911   001052  D7FC               	bra	u3237
  2912   001054  2E5A               	decfsz	(??_FILL+1)^0,f,c
  2913   001056  D7FA               	bra	u3237
  2914   001058                     
  2915                           ;Main_program.c: 311:     LATCbits.LATC0 = 0;
  2916   001058  908B               	bcf	139,0,c	;volatile
  2917   00105A                     
  2918                           ;Main_program.c: 312:     PULSES_TO_REACH = (VAL_TYPED * 0.37);
  2919   00105A  C072  F002         	movff	_VAL_TYPED,___xxtofl@val
  2920   00105E  C073  F003         	movff	_VAL_TYPED+1,___xxtofl@val+1
  2921   001062  0E00               	movlw	0
  2922   001064  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  2923   001066  0EFF               	movlw	-1
  2924   001068  6E04               	movwf	(___xxtofl@val+2)^0,c
  2925   00106A  6E05               	movwf	(___xxtofl@val+3)^0,c
  2926   00106C  0E01               	movlw	1
  2927   00106E  EC58  F00C         	call	___xxtofl
  2928   001072  C002  F010         	movff	?___xxtofl,___flmul@b
  2929   001076  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  2930   00107A  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  2931   00107E  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  2932   001082  0EA4               	movlw	164
  2933   001084  6E14               	movwf	___flmul@a^0,c
  2934   001086  0E70               	movlw	112
  2935   001088  6E15               	movwf	(___flmul@a+1)^0,c
  2936   00108A  0EBD               	movlw	189
  2937   00108C  6E16               	movwf	(___flmul@a+2)^0,c
  2938   00108E  0E3E               	movlw	62
  2939   001090  6E17               	movwf	(___flmul@a+3)^0,c
  2940   001092  EC37  F004         	call	___flmul	;wreg free
  2941   001096  C010  F060         	movff	?___flmul,_PULSES_TO_REACH
  2942   00109A  C011  F061         	movff	?___flmul+1,_PULSES_TO_REACH+1
  2943   00109E  C012  F062         	movff	?___flmul+2,_PULSES_TO_REACH+2
  2944   0010A2  C013  F063         	movff	?___flmul+3,_PULSES_TO_REACH+3
  2945   0010A6                     
  2946                           ;Main_program.c: 313:     PULSE = 0;
  2947   0010A6  0E00               	movlw	0
  2948   0010A8  0100               	movlb	0	; () banked
  2949   0010AA  6F79               	movwf	(_PULSE+1)& (0+255),b
  2950   0010AC  0E00               	movlw	0
  2951   0010AE  6F78               	movwf	_PULSE& (0+255),b
  2952   0010B0                     
  2953                           ; BSR set to: 0
  2954                           ;Main_program.c: 314:     VALUE_IN_ML = 0;
  2955   0010B0  0E00               	movlw	0
  2956   0010B2  6F77               	movwf	(_VALUE_IN_ML+1)& (0+255),b
  2957   0010B4  0E00               	movlw	0
  2958   0010B6  6F76               	movwf	_VALUE_IN_ML& (0+255),b
  2959   0010B8                     
  2960                           ; BSR set to: 0
  2961                           ;Main_program.c: 315:     TMR0_COUNT();
  2962   0010B8  EC20  F013         	call	_TMR0_COUNT	;wreg free
  2963   0010BC                     
  2964                           ;Main_program.c: 316:     LATBbits.LATB3 = 1;
  2965   0010BC  868A               	bsf	138,3,c	;volatile
  2966                           
  2967                           ;Main_program.c: 318:     while (PULSE <= PULSES_TO_REACH)
  2968   0010BE  EFCF  F008         	goto	l3003
  2969   0010C2                     l2981:
  2970                           
  2971                           ;Main_program.c: 319:     {;Main_program.c: 320:         VALUE_IN_ML = (PULSE * CAL);
  2972   0010C2  0EAA               	movlw	170
  2973   0010C4  6E14               	movwf	___flmul@a^0,c
  2974   0010C6  0E60               	movlw	96
  2975   0010C8  6E15               	movwf	(___flmul@a+1)^0,c
  2976   0010CA  0E18               	movlw	24
  2977   0010CC  6E16               	movwf	(___flmul@a+2)^0,c
  2978   0010CE  0E40               	movlw	64
  2979   0010D0  6E17               	movwf	(___flmul@a+3)^0,c
  2980   0010D2  C078  F002         	movff	_PULSE,___xxtofl@val
  2981   0010D6  C079  F003         	movff	_PULSE+1,___xxtofl@val+1
  2982   0010DA  0E00               	movlw	0
  2983   0010DC  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  2984   0010DE  0EFF               	movlw	-1
  2985   0010E0  6E04               	movwf	(___xxtofl@val+2)^0,c
  2986   0010E2  6E05               	movwf	(___xxtofl@val+3)^0,c
  2987   0010E4  0E01               	movlw	1
  2988   0010E6  EC58  F00C         	call	___xxtofl
  2989   0010EA  C002  F010         	movff	?___xxtofl,___flmul@b
  2990   0010EE  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  2991   0010F2  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  2992   0010F6  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  2993   0010FA  EC37  F004         	call	___flmul	;wreg free
  2994   0010FE  C010  F029         	movff	?___flmul,___fltol@f1
  2995   001102  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  2996   001106  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  2997   00110A  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  2998   00110E  EC6F  F00E         	call	___fltol	;wreg free
  2999   001112  C029  F076         	movff	?___fltol,_VALUE_IN_ML
  3000   001116  C02A  F077         	movff	?___fltol+1,_VALUE_IN_ML+1
  3001   00111A                     
  3002                           ;Main_program.c: 321:         sprintf(STRING_VALUE_IN_ML, "%u", VALUE_IN_ML);
  3003   00111A  0EA0               	movlw	low _STRING_VALUE_IN_ML
  3004   00111C  0100               	movlb	0	; () banked
  3005   00111E  6FAA               	movwf	sprintf@s& (0+255),b
  3006   001120  0E00               	movlw	high _STRING_VALUE_IN_ML
  3007   001122  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  3008   001124  0E6A               	movlw	low STR_10
  3009   001126  6FAC               	movwf	sprintf@fmt& (0+255),b
  3010   001128  0E08               	movlw	high STR_10
  3011   00112A  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  3012   00112C  C076  F0AE         	movff	_VALUE_IN_ML,?_sprintf+4
  3013   001130  C077  F0AF         	movff	_VALUE_IN_ML+1,?_sprintf+5
  3014   001134  EC12  F012         	call	_sprintf	;wreg free
  3015   001138                     
  3016                           ;Main_program.c: 322:         Lcd_Set_Cursor(2,9);
  3017   001138  0E09               	movlw	9
  3018   00113A  6E05               	movwf	Lcd_Set_Cursor@b^0,c
  3019   00113C  0E02               	movlw	2
  3020   00113E  ECEC  F00F         	call	_Lcd_Set_Cursor
  3021   001142                     
  3022                           ;Main_program.c: 323:         Lcd_Write_String(STRING_VALUE_IN_ML);
  3023   001142  0EA0               	movlw	low _STRING_VALUE_IN_ML
  3024   001144  6E06               	movwf	Lcd_Write_String@a^0,c
  3025   001146  0E00               	movlw	high _STRING_VALUE_IN_ML
  3026   001148  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  3027   00114A  EC68  F011         	call	_Lcd_Write_String	;wreg free
  3028   00114E                     
  3029                           ;Main_program.c: 325:         if (PORTBbits.RB0 == 0 || PORTAbits.RA5 == 1)
  3030   00114E  A081               	btfss	129,0,c	;volatile
  3031   001150  EFAC  F008         	goto	u2551
  3032   001154  EFAE  F008         	goto	u2550
  3033   001158                     u2551:
  3034   001158  EFB5  F008         	goto	l200
  3035   00115C                     u2550:
  3036   00115C  AA80               	btfss	128,5,c	;volatile
  3037   00115E  EFB3  F008         	goto	u2561
  3038   001162  EFB5  F008         	goto	u2560
  3039   001166                     u2561:
  3040   001166  EFCF  F008         	goto	l3003
  3041   00116A                     u2560:
  3042   00116A                     l200:
  3043                           
  3044                           ;Main_program.c: 326:         {;Main_program.c: 327:             LATBbits.LATB3 = 0;
  3045   00116A  968A               	bcf	138,3,c	;volatile
  3046                           
  3047                           ;Main_program.c: 328:             LATCbits.LATC0 = 1;
  3048   00116C  808B               	bsf	139,0,c	;volatile
  3049   00116E                     
  3050                           ;Main_program.c: 329:             _delay((unsigned long)((1000)*(48000000/4000.0)));
  3051   00116E  0E3D               	movlw	61
  3052   001170  6E5A               	movwf	(??_FILL+1)^0,c
  3053   001172  0EE1               	movlw	225
  3054   001174  6E59               	movwf	??_FILL^0,c
  3055   001176  0E40               	movlw	64
  3056   001178                     u3247:
  3057   001178  2EE8               	decfsz	wreg,f,c
  3058   00117A  D7FE               	bra	u3247
  3059   00117C  2E59               	decfsz	??_FILL^0,f,c
  3060   00117E  D7FC               	bra	u3247
  3061   001180  2E5A               	decfsz	(??_FILL+1)^0,f,c
  3062   001182  D7FA               	bra	u3247
  3063   001184                     
  3064                           ;Main_program.c: 330:             LATCbits.LATC0 = 0;
  3065   001184  908B               	bcf	139,0,c	;volatile
  3066   001186                     
  3067                           ;Main_program.c: 331:             LATEbits.LATE2 = 0;
  3068   001186  948D               	bcf	141,2,c	;volatile
  3069   001188                     
  3070                           ;Main_program.c: 332:             PULSE = 0;
  3071   001188  0E00               	movlw	0
  3072   00118A  0100               	movlb	0	; () banked
  3073   00118C  6F79               	movwf	(_PULSE+1)& (0+255),b
  3074   00118E  0E00               	movlw	0
  3075   001190  6F78               	movwf	_PULSE& (0+255),b
  3076   001192                     
  3077                           ; BSR set to: 0
  3078                           ;Main_program.c: 333:             CURRENT_OPTION = 0;
  3079   001192  0E00               	movlw	0
  3080   001194  6F75               	movwf	(_CURRENT_OPTION+1)& (0+255),b
  3081   001196  0E00               	movlw	0
  3082   001198  6F74               	movwf	_CURRENT_OPTION& (0+255),b
  3083                           
  3084                           ;Main_program.c: 334:             break;
  3085   00119A  EFF4  F008         	goto	l3005
  3086   00119E                     l3003:
  3087                           
  3088                           ;Main_program.c: 318:     while (PULSE <= PULSES_TO_REACH)
  3089   00119E  C060  F010         	movff	_PULSES_TO_REACH,___flge@ff1
  3090   0011A2  C061  F011         	movff	_PULSES_TO_REACH+1,___flge@ff1+1
  3091   0011A6  C062  F012         	movff	_PULSES_TO_REACH+2,___flge@ff1+2
  3092   0011AA  C063  F013         	movff	_PULSES_TO_REACH+3,___flge@ff1+3
  3093   0011AE  C078  F002         	movff	_PULSE,___xxtofl@val
  3094   0011B2  C079  F003         	movff	_PULSE+1,___xxtofl@val+1
  3095   0011B6  0E00               	movlw	0
  3096   0011B8  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  3097   0011BA  0EFF               	movlw	-1
  3098   0011BC  6E04               	movwf	(___xxtofl@val+2)^0,c
  3099   0011BE  6E05               	movwf	(___xxtofl@val+3)^0,c
  3100   0011C0  0E01               	movlw	1
  3101   0011C2  EC58  F00C         	call	___xxtofl
  3102   0011C6  C002  F014         	movff	?___xxtofl,___flge@ff2
  3103   0011CA  C003  F015         	movff	?___xxtofl+1,___flge@ff2+1
  3104   0011CE  C004  F016         	movff	?___xxtofl+2,___flge@ff2+2
  3105   0011D2  C005  F017         	movff	?___xxtofl+3,___flge@ff2+3
  3106   0011D6  ECF2  F00E         	call	___flge	;wreg free
  3107   0011DA  B0D8               	btfsc	status,0,c
  3108   0011DC  EFF2  F008         	goto	u2571
  3109   0011E0  EFF4  F008         	goto	u2570
  3110   0011E4                     u2571:
  3111   0011E4  EF61  F008         	goto	l2981
  3112   0011E8                     u2570:
  3113   0011E8                     l3005:
  3114                           
  3115                           ;Main_program.c: 337:     if (PULSE >= PULSES_TO_REACH)
  3116   0011E8  C078  F002         	movff	_PULSE,___xxtofl@val
  3117   0011EC  C079  F003         	movff	_PULSE+1,___xxtofl@val+1
  3118   0011F0  0E00               	movlw	0
  3119   0011F2  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  3120   0011F4  0EFF               	movlw	-1
  3121   0011F6  6E04               	movwf	(___xxtofl@val+2)^0,c
  3122   0011F8  6E05               	movwf	(___xxtofl@val+3)^0,c
  3123   0011FA  0E01               	movlw	1
  3124   0011FC  EC58  F00C         	call	___xxtofl
  3125   001200  C002  F010         	movff	?___xxtofl,___flge@ff1
  3126   001204  C003  F011         	movff	?___xxtofl+1,___flge@ff1+1
  3127   001208  C004  F012         	movff	?___xxtofl+2,___flge@ff1+2
  3128   00120C  C005  F013         	movff	?___xxtofl+3,___flge@ff1+3
  3129   001210  C060  F014         	movff	_PULSES_TO_REACH,___flge@ff2
  3130   001214  C061  F015         	movff	_PULSES_TO_REACH+1,___flge@ff2+1
  3131   001218  C062  F016         	movff	_PULSES_TO_REACH+2,___flge@ff2+2
  3132   00121C  C063  F017         	movff	_PULSES_TO_REACH+3,___flge@ff2+3
  3133   001220  ECF2  F00E         	call	___flge	;wreg free
  3134   001224  A0D8               	btfss	status,0,c
  3135   001226  EF17  F009         	goto	u2581
  3136   00122A  EF19  F009         	goto	u2580
  3137   00122E                     u2581:
  3138   00122E  EF2D  F009         	goto	l203
  3139   001232                     u2580:
  3140   001232                     
  3141                           ;Main_program.c: 338:     {;Main_program.c: 339:         LATBbits.LATB3 = 0;
  3142   001232  968A               	bcf	138,3,c	;volatile
  3143                           
  3144                           ;Main_program.c: 340:         LATEbits.LATE2 = 0;
  3145   001234  948D               	bcf	141,2,c	;volatile
  3146   001236                     
  3147                           ;Main_program.c: 341:         PULSE = 0;
  3148   001236  0E00               	movlw	0
  3149   001238  0100               	movlb	0	; () banked
  3150   00123A  6F79               	movwf	(_PULSE+1)& (0+255),b
  3151   00123C  0E00               	movlw	0
  3152   00123E  6F78               	movwf	_PULSE& (0+255),b
  3153   001240                     
  3154                           ; BSR set to: 0
  3155                           ;Main_program.c: 342:         LATCbits.LATC0 = 1;
  3156   001240  808B               	bsf	139,0,c	;volatile
  3157   001242                     
  3158                           ; BSR set to: 0
  3159                           ;Main_program.c: 343:         _delay((unsigned long)((600)*(48000000/4000.0)));
  3160   001242  0E25               	movlw	37
  3161   001244  6E5A               	movwf	(??_FILL+1)^0,c
  3162   001246  0E87               	movlw	135
  3163   001248  6E59               	movwf	??_FILL^0,c
  3164   00124A  0E8C               	movlw	140
  3165   00124C                     u3257:
  3166   00124C  2EE8               	decfsz	wreg,f,c
  3167   00124E  D7FE               	bra	u3257
  3168   001250  2E59               	decfsz	??_FILL^0,f,c
  3169   001252  D7FC               	bra	u3257
  3170   001254  2E5A               	decfsz	(??_FILL+1)^0,f,c
  3171   001256  D7FA               	bra	u3257
  3172   001258                     
  3173                           ;Main_program.c: 344:         LATCbits.LATC0 = 0;
  3174   001258  908B               	bcf	139,0,c	;volatile
  3175   00125A                     l203:
  3176   00125A  0012               	return		;funcret
  3177   00125C                     __end_of_FILL:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function _sprintf *****************
  3181 ;; Defined at:
  3182 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3185 ;;		 -> STRING_VALUE_IN_ML(5), STRING_VAL_TYPED(5), 
  3186 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3187 ;;		 -> STR_12(3), STR_10(3), 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  f              11    8[BANK0 ] struct _IO_FILE
  3190 ;;  ap              2    6[BANK0 ] PTR void [1]
  3191 ;;		 -> ?_sprintf(2), 
  3192 ;;  ret             2    0        int 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  2    0[BANK0 ] int 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3202 ;;      Params:         0       6       0       0       0       0       0       0       0
  3203 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3205 ;;      Totals:         0      19       0       0       0       0       0       0       0
  3206 ;;Total ram usage:       19 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 8
  3209 ;; This function calls:
  3210 ;;		_vfprintf
  3211 ;; This function is called by:
  3212 ;;		_FILL
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text10
  3217   002424                     __ptext10:
  3218                           	callstack 0
  3219   002424                     _sprintf:
  3220                           	callstack 21
  3221   002424  0EAE               	movlw	low (?_sprintf+4)
  3222   002426  0100               	movlb	0	; () banked
  3223   002428  6FB0               	movwf	sprintf@ap& (0+255),b
  3224   00242A  0E00               	movlw	high (?_sprintf+4)
  3225   00242C  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  3226   00242E  C0AA  F0B2         	movff	sprintf@s,sprintf@f
  3227   002432  C0AB  F0B3         	movff	sprintf@s+1,sprintf@f+1
  3228   002436                     
  3229                           ; BSR set to: 0
  3230   002436  0E00               	movlw	0
  3231   002438  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  3232   00243A  0E00               	movlw	0
  3233   00243C  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  3234   00243E                     
  3235                           ; BSR set to: 0
  3236   00243E  0E00               	movlw	0
  3237   002440  6FBC               	movwf	(sprintf@f+10)& (0+255),b
  3238   002442  0E00               	movlw	0
  3239   002444  6FBB               	movwf	(sprintf@f+9)& (0+255),b
  3240   002446                     
  3241                           ; BSR set to: 0
  3242   002446  0EB2               	movlw	low sprintf@f
  3243   002448  6E51               	movwf	vfprintf@fp^0,c
  3244   00244A  0E00               	movlw	high sprintf@f
  3245   00244C  6E52               	movwf	(vfprintf@fp+1)^0,c
  3246   00244E  C0AC  F053         	movff	sprintf@fmt,vfprintf@fmt
  3247   002452  C0AD  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3248   002456  0EB0               	movlw	low sprintf@ap
  3249   002458  6E55               	movwf	vfprintf@ap^0,c
  3250   00245A  0E00               	movlw	high sprintf@ap
  3251   00245C  6E56               	movwf	(vfprintf@ap+1)^0,c
  3252   00245E  EC3B  F012         	call	_vfprintf	;wreg free
  3253   002462  0100               	movlb	0	; () banked
  3254   002464  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  3255   002466  25AA               	addwf	sprintf@s& (0+255),w,b
  3256   002468  6ED9               	movwf	fsr2l,c
  3257   00246A  51B6               	movf	(sprintf@f+4)& (0+255),w,b
  3258   00246C  21AB               	addwfc	(sprintf@s+1)& (0+255),w,b
  3259   00246E  6EDA               	movwf	fsr2h,c
  3260   002470  0E00               	movlw	0
  3261   002472  6EDF               	movwf	indf2,c
  3262   002474                     
  3263                           ; BSR set to: 0
  3264   002474  0012               	return		;funcret
  3265   002476                     __end_of_sprintf:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _vfprintf *****************
  3269 ;; Defined at:
  3270 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  3273 ;;		 -> sprintf@f(11), 
  3274 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  3275 ;;		 -> STR_12(3), STR_10(3), 
  3276 ;;  ap              2   84[COMRAM] PTR PTR void 
  3277 ;;		 -> sprintf@ap(2), 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  3280 ;;		 -> STR_12(3), STR_10(3), 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2   80[COMRAM] int 
  3283 ;; Registers used:
  3284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3290 ;;      Params:         6       0       0       0       0       0       0       0       0
  3291 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3293 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3294 ;;Total ram usage:        8 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 7
  3297 ;; This function calls:
  3298 ;;		_vfpfcnvrt
  3299 ;; This function is called by:
  3300 ;;		_sprintf
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text11
  3305   002476                     __ptext11:
  3306                           	callstack 0
  3307   002476                     _vfprintf:
  3308                           	callstack 21
  3309   002476                     
  3310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3311   002476  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  3312   00247A  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3315   00247E  EF4F  F012         	goto	l2373
  3316   002482                     l2371:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3319   002482  C051  F03D         	movff	vfprintf@fp,vfpfcnvrt@fp
  3320   002486  C052  F03E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3321   00248A  0E57               	movlw	low vfprintf@cfmt
  3322   00248C  6E3F               	movwf	vfpfcnvrt@fmt^0,c
  3323   00248E  0E00               	movlw	high vfprintf@cfmt
  3324   002490  6E40               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3325   002492  C055  F041         	movff	vfprintf@ap,vfpfcnvrt@ap
  3326   002496  C056  F042         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3327   00249A  EC32  F00D         	call	_vfpfcnvrt	;wreg free
  3328   00249E                     l2373:
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3331   00249E  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  3332   0024A2  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3333   0024A6                     	if	0	;tblptru may be non-zero
  3334   0024A6                     	endif
  3335   0024A6                     	if	0	;tblptru may be non-zero
  3336   0024A6                     	endif
  3337   0024A6  0008               	tblrd		*
  3338   0024A8  50F5               	movf	tablat,w,c
  3339   0024AA  0900               	iorlw	0
  3340   0024AC  A4D8               	btfss	status,2,c
  3341   0024AE  EF5B  F012         	goto	u1641
  3342   0024B2  EF5D  F012         	goto	u1640
  3343   0024B6                     u1641:
  3344   0024B6  EF41  F012         	goto	l2371
  3345   0024BA                     u1640:
  3346   0024BA                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3348   0024BA  0E00               	movlw	0
  3349   0024BC  6E52               	movwf	(?_vfprintf+1)^0,c
  3350   0024BE  0E00               	movlw	0
  3351   0024C0  6E51               	movwf	?_vfprintf^0,c
  3352   0024C2  0012               	return		;funcret
  3353   0024C4                     __end_of_vfprintf:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _vfpfcnvrt *****************
  3357 ;; Defined at:
  3358 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  fp              2   60[COMRAM] PTR struct _IO_FILE
  3361 ;;		 -> sprintf@f(11), 
  3362 ;;  fmt             2   62[COMRAM] PTR PTR unsigned char 
  3363 ;;		 -> vfprintf@cfmt(2), 
  3364 ;;  ap              2   64[COMRAM] PTR PTR void 
  3365 ;;		 -> sprintf@ap(2), 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  convarg         8   70[COMRAM] struct .
  3368 ;;  cp              2   78[COMRAM] PTR unsigned char 
  3369 ;;		 -> STR_12(3), STR_10(3), 
  3370 ;;  i               2    0        int 
  3371 ;;  done            2    0        int 
  3372 ;;  c               1    0        unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3382 ;;      Params:         6       0       0       0       0       0       0       0       0
  3383 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3384 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3385 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3386 ;;Total ram usage:       20 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 6
  3389 ;; This function calls:
  3390 ;;		_fputc
  3391 ;;		_utoa
  3392 ;; This function is called by:
  3393 ;;		_vfprintf
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text12
  3398   001A64                     __ptext12:
  3399                           	callstack 0
  3400   001A64                     _vfpfcnvrt:
  3401                           	callstack 21
  3402   001A64                     
  3403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3404   001A64  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3405   001A68  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3406   001A6C  CFDE FFF6          	movff	postinc2,tblptrl
  3407   001A70  CFDD FFF7          	movff	postdec2,tblptrh
  3408   001A74                     	if	0	;tblptru may be non-zero
  3409   001A74                     	endif
  3410   001A74                     	if	0	;tblptru may be non-zero
  3411   001A74                     	endif
  3412   001A74  0008               	tblrd		*
  3413   001A76  50F5               	movf	tablat,w,c
  3414   001A78  0A25               	xorlw	37
  3415   001A7A  A4D8               	btfss	status,2,c
  3416   001A7C  EF42  F00D         	goto	u1621
  3417   001A80  EF44  F00D         	goto	u1620
  3418   001A84                     u1621:
  3419   001A84  EFCF  F00D         	goto	l2329
  3420   001A88                     u1620:
  3421   001A88                     
  3422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3423   001A88  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3424   001A8C  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3425   001A90  2ADE               	incf	postinc2,f,c
  3426   001A92  0E00               	movlw	0
  3427   001A94  22DD               	addwfc	postdec2,f,c
  3428   001A96                     
  3429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3430   001A96  0E00               	movlw	0
  3431   001A98  0100               	movlb	0	; () banked
  3432   001A9A  6F65               	movwf	(_width+1)& (0+255),b
  3433   001A9C  0E00               	movlw	0
  3434   001A9E  6F64               	movwf	_width& (0+255),b
  3435   001AA0  C064  F07C         	movff	_width,_flags
  3436   001AA4                     
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3439   001AA4  6966               	setf	_prec& (0+255),b
  3440   001AA6  6967               	setf	(_prec+1)& (0+255),b
  3441   001AA8                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  3444   001AA8  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3445   001AAC  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3446   001AB0  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  3447   001AB4  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  3448   001AB8                     
  3449                           ; BSR set to: 0
  3450   001AB8  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3451   001ABC  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3452   001AC0                     	if	0	;tblptru may be non-zero
  3453   001AC0                     	endif
  3454   001AC0                     	if	0	;tblptru may be non-zero
  3455   001AC0                     	endif
  3456   001AC0  0008               	tblrd		*
  3457   001AC2  50F5               	movf	tablat,w,c
  3458   001AC4  0A75               	xorlw	117
  3459   001AC6  A4D8               	btfss	status,2,c
  3460   001AC8  EF68  F00D         	goto	u1631
  3461   001ACC  EF6A  F00D         	goto	u1630
  3462   001AD0                     u1631:
  3463   001AD0  EFC6  F00D         	goto	l2325
  3464   001AD4                     u1630:
  3465   001AD4                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3468   001AD4  C041  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3469   001AD8  C042  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3470   001ADC  CFDF F043          	movff	indf2,??_vfpfcnvrt
  3471   001AE0  0E02               	movlw	2
  3472   001AE2  26DE               	addwf	postinc2,f,c
  3473   001AE4  CFDF F044          	movff	indf2,??_vfpfcnvrt+1
  3474   001AE8  0E00               	movlw	0
  3475   001AEA  22DD               	addwfc	postdec2,f,c
  3476   001AEC  C043  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3477   001AF0  C044  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3478   001AF4  CFDE F045          	movff	postinc2,??_vfpfcnvrt+2
  3479   001AF8  CFDD F046          	movff	postdec2,??_vfpfcnvrt+3
  3480   001AFC  C045  F047         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3481   001B00  C046  F048         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3482   001B04  6A49               	clrf	(vfpfcnvrt@convarg+2)^0,c
  3483   001B06  6A4A               	clrf	(vfpfcnvrt@convarg+3)^0,c
  3484   001B08  6A4B               	clrf	(vfpfcnvrt@convarg+4)^0,c
  3485   001B0A  6A4C               	clrf	(vfpfcnvrt@convarg+5)^0,c
  3486   001B0C  6A4D               	clrf	(vfpfcnvrt@convarg+6)^0,c
  3487   001B0E  6A4E               	clrf	(vfpfcnvrt@convarg+7)^0,c
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  3490   001B10  0E01               	movlw	1
  3491   001B12  244F               	addwf	vfpfcnvrt@cp^0,w,c
  3492   001B14  6E43               	movwf	??_vfpfcnvrt^0,c
  3493   001B16  0E00               	movlw	0
  3494   001B18  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3495   001B1A  6E44               	movwf	(??_vfpfcnvrt+1)^0,c
  3496   001B1C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3497   001B20  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3498   001B24  C043  FFDE         	movff	??_vfpfcnvrt,postinc2
  3499   001B28  C044  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  3502   001B2C  EFB0  F00D         	goto	l2323
  3503   001B30                     l2317:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  3507   001B30  C03D  F01D         	movff	vfpfcnvrt@fp,utoa@fp
  3508   001B34  C03E  F01E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3509   001B38  C047  F01F         	movff	vfpfcnvrt@convarg,utoa@d
  3510   001B3C  C048  F020         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  3511   001B40  C049  F021         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  3512   001B44  C04A  F022         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  3513   001B48  C04B  F023         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  3514   001B4C  C04C  F024         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  3515   001B50  C04D  F025         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  3516   001B54  C04E  F026         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  3517   001B58  EC78  F00B         	call	_utoa	;wreg free
  3518   001B5C  EFE3  F00D         	goto	l1093
  3519   001B60                     l2323:
  3520                           
  3521                           ; BSR set to: 0
  3522   001B60  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3523   001B64  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3524   001B68                     	if	0	;tblptru may be non-zero
  3525   001B68                     	endif
  3526   001B68                     	if	0	;tblptru may be non-zero
  3527   001B68                     	endif
  3528   001B68  0008               	tblrd		*
  3529   001B6A  50F5               	movf	tablat,w,c
  3530   001B6C  6E43               	movwf	??_vfpfcnvrt^0,c
  3531   001B6E  6A44               	clrf	(??_vfpfcnvrt+1)^0,c
  3532                           
  3533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3534                           ; Switch size 1, requested type "simple"
  3535                           ; Number of cases is 1, Range of values is 0 to 0
  3536                           ; switch strategies available:
  3537                           ; Name         Instructions Cycles
  3538                           ; simple_byte            4     3 (average)
  3539                           ;	Chosen strategy is simple_byte
  3540   001B70  5044               	movf	(??_vfpfcnvrt+1)^0,w,c
  3541   001B72  0A00               	xorlw	0	; case 0
  3542   001B74  B4D8               	btfsc	status,2,c
  3543   001B76  EFBF  F00D         	goto	l3439
  3544   001B7A  EFC6  F00D         	goto	l2325
  3545   001B7E                     l3439:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ; Switch size 1, requested type "simple"
  3549                           ; Number of cases is 1, Range of values is 117 to 117
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte            4     3 (average)
  3553                           ;	Chosen strategy is simple_byte
  3554   001B7E  5043               	movf	??_vfpfcnvrt^0,w,c
  3555   001B80  0A75               	xorlw	117	; case 117
  3556   001B82  B4D8               	btfsc	status,2,c
  3557   001B84  EF98  F00D         	goto	l2317
  3558   001B88  EFC6  F00D         	goto	l2325
  3559   001B8C                     l2325:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3562   001B8C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3563   001B90  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3564   001B94  2ADE               	incf	postinc2,f,c
  3565   001B96  0E00               	movlw	0
  3566   001B98  22DD               	addwfc	postdec2,f,c
  3567   001B9A  EFE3  F00D         	goto	l1093
  3568   001B9E                     l2329:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3571   001B9E  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3572   001BA2  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3573   001BA6  CFDE FFF6          	movff	postinc2,tblptrl
  3574   001BAA  CFDD FFF7          	movff	postdec2,tblptrh
  3575   001BAE                     	if	0	;tblptru may be non-zero
  3576   001BAE                     	endif
  3577   001BAE                     	if	0	;tblptru may be non-zero
  3578   001BAE                     	endif
  3579   001BAE  0008               	tblrd		*
  3580   001BB0  50F5               	movf	tablat,w,c
  3581   001BB2  6E02               	movwf	fputc@c^0,c
  3582   001BB4  6A03               	clrf	(fputc@c+1)^0,c
  3583   001BB6  C03D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3584   001BBA  C03E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3585   001BBE  ECBD  F010         	call	_fputc	;wreg free
  3586   001BC2  EFC6  F00D         	goto	l2325
  3587   001BC6                     l1093:
  3588   001BC6  0012               	return		;funcret
  3589   001BC8                     __end_of_vfpfcnvrt:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _utoa *****************
  3593 ;; Defined at:
  3594 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3597 ;;		 -> sprintf@f(11), 
  3598 ;;  d               8   30[COMRAM] unsigned long long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  n               8   50[COMRAM] unsigned long long 
  3601 ;;  i               2   58[COMRAM] int 
  3602 ;;  p               2   48[COMRAM] int 
  3603 ;;  w               2   46[COMRAM] int 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3613 ;;      Params:        10       0       0       0       0       0       0       0       0
  3614 ;;      Locals:        14       0       0       0       0       0       0       0       0
  3615 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3616 ;;      Totals:        32       0       0       0       0       0       0       0       0
  3617 ;;Total ram usage:       32 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 5
  3620 ;; This function calls:
  3621 ;;		___lodiv
  3622 ;;		___lomod
  3623 ;;		_pad
  3624 ;; This function is called by:
  3625 ;;		_vfpfcnvrt
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text13
  3630   0016F0                     __ptext13:
  3631                           	callstack 0
  3632   0016F0                     _utoa:
  3633                           	callstack 21
  3634   0016F0                     
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  3636   0016F0  0100               	movlb	0	; () banked
  3637   0016F2  BF67               	btfsc	(_prec+1)& (0+255),7,b
  3638   0016F4  EF86  F00B         	goto	u1540
  3639   0016F8  5167               	movf	(_prec+1)& (0+255),w,b
  3640   0016FA  E106               	bnz	u1541
  3641   0016FC  0566               	decf	_prec& (0+255),w,b
  3642   0016FE  B0D8               	btfsc	status,0,c
  3643   001700  EF84  F00B         	goto	u1541
  3644   001704  EF86  F00B         	goto	u1540
  3645   001708                     u1541:
  3646   001708  EF8C  F00B         	goto	l1076
  3647   00170C                     u1540:
  3648   00170C                     
  3649                           ; BSR set to: 0
  3650   00170C  0E00               	movlw	0
  3651   00170E  6E32               	movwf	(utoa@p+1)^0,c
  3652   001710  0E01               	movlw	1
  3653   001712  6E31               	movwf	utoa@p^0,c
  3654   001714  EF90  F00B         	goto	l1078
  3655   001718                     l1076:
  3656                           
  3657                           ; BSR set to: 0
  3658   001718  C066  F031         	movff	_prec,utoa@p
  3659   00171C  C067  F032         	movff	_prec+1,utoa@p+1
  3660   001720                     l1078:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  3664   001720  C064  F02F         	movff	_width,utoa@w
  3665   001724  C065  F030         	movff	_width+1,utoa@w+1
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  3668   001728  C01F  F033         	movff	utoa@d,utoa@n
  3669   00172C  C020  F034         	movff	utoa@d+1,utoa@n+1
  3670   001730  C021  F035         	movff	utoa@d+2,utoa@n+2
  3671   001734  C022  F036         	movff	utoa@d+3,utoa@n+3
  3672   001738  C023  F037         	movff	utoa@d+4,utoa@n+4
  3673   00173C  C024  F038         	movff	utoa@d+5,utoa@n+5
  3674   001740  C025  F039         	movff	utoa@d+6,utoa@n+6
  3675   001744  C026  F03A         	movff	utoa@d+7,utoa@n+7
  3676   001748                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  3679   001748  0E00               	movlw	0
  3680   00174A  6E3C               	movwf	(utoa@i+1)^0,c
  3681   00174C  0E1F               	movlw	31
  3682   00174E  6E3B               	movwf	utoa@i^0,c
  3683   001750                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  3686   001750  0E00               	movlw	0
  3687   001752  6F9F               	movwf	(_dbuf+31)& (0+255),b
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3690   001754  EF22  F00C         	goto	l2277
  3691   001758                     l2267:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  3694   001758  063B               	decf	utoa@i^0,f,c
  3695   00175A  A0D8               	btfss	status,0,c
  3696   00175C  063C               	decf	(utoa@i+1)^0,f,c
  3697   00175E                     
  3698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  3699   00175E  0E80               	movlw	low _dbuf
  3700   001760  243B               	addwf	utoa@i^0,w,c
  3701   001762  6ED9               	movwf	fsr2l,c
  3702   001764  0E00               	movlw	high _dbuf
  3703   001766  203C               	addwfc	(utoa@i+1)^0,w,c
  3704   001768  6EDA               	movwf	fsr2h,c
  3705   00176A  C033  F002         	movff	utoa@n,___lomod@dividend
  3706   00176E  C034  F003         	movff	utoa@n+1,___lomod@dividend+1
  3707   001772  C035  F004         	movff	utoa@n+2,___lomod@dividend+2
  3708   001776  C036  F005         	movff	utoa@n+3,___lomod@dividend+3
  3709   00177A  C037  F006         	movff	utoa@n+4,___lomod@dividend+4
  3710   00177E  C038  F007         	movff	utoa@n+5,___lomod@dividend+5
  3711   001782  C039  F008         	movff	utoa@n+6,___lomod@dividend+6
  3712   001786  C03A  F009         	movff	utoa@n+7,___lomod@dividend+7
  3713   00178A  0E0A               	movlw	10
  3714   00178C  6E0A               	movwf	___lomod@divisor^0,c
  3715   00178E  0E00               	movlw	0
  3716   001790  6E0B               	movwf	(___lomod@divisor+1)^0,c
  3717   001792  0E00               	movlw	0
  3718   001794  6E0C               	movwf	(___lomod@divisor+2)^0,c
  3719   001796  0E00               	movlw	0
  3720   001798  6E0D               	movwf	(___lomod@divisor+3)^0,c
  3721   00179A  0E00               	movlw	0
  3722   00179C  6E0E               	movwf	(___lomod@divisor+4)^0,c
  3723   00179E  0E00               	movlw	0
  3724   0017A0  6E0F               	movwf	(___lomod@divisor+5)^0,c
  3725   0017A2  0E00               	movlw	0
  3726   0017A4  6E10               	movwf	(___lomod@divisor+6)^0,c
  3727   0017A6  0E00               	movlw	0
  3728   0017A8  6E11               	movwf	(___lomod@divisor+7)^0,c
  3729   0017AA  EC55  F010         	call	___lomod	;wreg free
  3730   0017AE  C002  F027         	movff	?___lomod,??_utoa
  3731   0017B2  C003  F028         	movff	?___lomod+1,??_utoa+1
  3732   0017B6  C004  F029         	movff	?___lomod+2,??_utoa+2
  3733   0017BA  C005  F02A         	movff	?___lomod+3,??_utoa+3
  3734   0017BE  C006  F02B         	movff	?___lomod+4,??_utoa+4
  3735   0017C2  C007  F02C         	movff	?___lomod+5,??_utoa+5
  3736   0017C6  C008  F02D         	movff	?___lomod+6,??_utoa+6
  3737   0017CA  C009  F02E         	movff	?___lomod+7,??_utoa+7
  3738   0017CE  5027               	movf	??_utoa^0,w,c
  3739   0017D0  0F30               	addlw	48
  3740   0017D2  6EDF               	movwf	indf2,c
  3741   0017D4                     
  3742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3743   0017D4  0631               	decf	utoa@p^0,f,c
  3744   0017D6  A0D8               	btfss	status,0,c
  3745   0017D8  0632               	decf	(utoa@p+1)^0,f,c
  3746   0017DA                     
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3748   0017DA  062F               	decf	utoa@w^0,f,c
  3749   0017DC  A0D8               	btfss	status,0,c
  3750   0017DE  0630               	decf	(utoa@w+1)^0,f,c
  3751   0017E0                     
  3752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3753   0017E0  C033  F002         	movff	utoa@n,___lodiv@dividend
  3754   0017E4  C034  F003         	movff	utoa@n+1,___lodiv@dividend+1
  3755   0017E8  C035  F004         	movff	utoa@n+2,___lodiv@dividend+2
  3756   0017EC  C036  F005         	movff	utoa@n+3,___lodiv@dividend+3
  3757   0017F0  C037  F006         	movff	utoa@n+4,___lodiv@dividend+4
  3758   0017F4  C038  F007         	movff	utoa@n+5,___lodiv@dividend+5
  3759   0017F8  C039  F008         	movff	utoa@n+6,___lodiv@dividend+6
  3760   0017FC  C03A  F009         	movff	utoa@n+7,___lodiv@dividend+7
  3761   001800  0E0A               	movlw	10
  3762   001802  6E0A               	movwf	___lodiv@divisor^0,c
  3763   001804  0E00               	movlw	0
  3764   001806  6E0B               	movwf	(___lodiv@divisor+1)^0,c
  3765   001808  0E00               	movlw	0
  3766   00180A  6E0C               	movwf	(___lodiv@divisor+2)^0,c
  3767   00180C  0E00               	movlw	0
  3768   00180E  6E0D               	movwf	(___lodiv@divisor+3)^0,c
  3769   001810  0E00               	movlw	0
  3770   001812  6E0E               	movwf	(___lodiv@divisor+4)^0,c
  3771   001814  0E00               	movlw	0
  3772   001816  6E0F               	movwf	(___lodiv@divisor+5)^0,c
  3773   001818  0E00               	movlw	0
  3774   00181A  6E10               	movwf	(___lodiv@divisor+6)^0,c
  3775   00181C  0E00               	movlw	0
  3776   00181E  6E11               	movwf	(___lodiv@divisor+7)^0,c
  3777   001820  EC74  F00F         	call	___lodiv	;wreg free
  3778   001824  C002  F033         	movff	?___lodiv,utoa@n
  3779   001828  C003  F034         	movff	?___lodiv+1,utoa@n+1
  3780   00182C  C004  F035         	movff	?___lodiv+2,utoa@n+2
  3781   001830  C005  F036         	movff	?___lodiv+3,utoa@n+3
  3782   001834  C006  F037         	movff	?___lodiv+4,utoa@n+4
  3783   001838  C007  F038         	movff	?___lodiv+5,utoa@n+5
  3784   00183C  C008  F039         	movff	?___lodiv+6,utoa@n+6
  3785   001840  C009  F03A         	movff	?___lodiv+7,utoa@n+7
  3786   001844                     l2277:
  3787                           
  3788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3789   001844  503B               	movf	utoa@i^0,w,c
  3790   001846  103C               	iorwf	(utoa@i+1)^0,w,c
  3791   001848  B4D8               	btfsc	status,2,c
  3792   00184A  EF29  F00C         	goto	u1551
  3793   00184E  EF2B  F00C         	goto	u1550
  3794   001852                     u1551:
  3795   001852  EF47  F00C         	goto	l2283
  3796   001856                     u1550:
  3797   001856  5033               	movf	utoa@n^0,w,c
  3798   001858  1034               	iorwf	(utoa@n+1)^0,w,c
  3799   00185A  1035               	iorwf	(utoa@n+2)^0,w,c
  3800   00185C  1036               	iorwf	(utoa@n+3)^0,w,c
  3801   00185E  1037               	iorwf	(utoa@n+4)^0,w,c
  3802   001860  1038               	iorwf	(utoa@n+5)^0,w,c
  3803   001862  1039               	iorwf	(utoa@n+6)^0,w,c
  3804   001864  103A               	iorwf	(utoa@n+7)^0,w,c
  3805   001866  A4D8               	btfss	status,2,c
  3806   001868  EF38  F00C         	goto	u1561
  3807   00186C  EF3A  F00C         	goto	u1560
  3808   001870                     u1561:
  3809   001870  EFAC  F00B         	goto	l2267
  3810   001874                     u1560:
  3811   001874  BE32               	btfsc	(utoa@p+1)^0,7,c
  3812   001876  EF47  F00C         	goto	u1570
  3813   00187A  5032               	movf	(utoa@p+1)^0,w,c
  3814   00187C  E106               	bnz	u1571
  3815   00187E  0431               	decf	utoa@p^0,w,c
  3816   001880  B0D8               	btfsc	status,0,c
  3817   001882  EF45  F00C         	goto	u1571
  3818   001886  EF47  F00C         	goto	u1570
  3819   00188A                     u1571:
  3820   00188A  EFAC  F00B         	goto	l2267
  3821   00188E                     u1570:
  3822   00188E                     l2283:
  3823                           
  3824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3825   00188E  C01D  F012         	movff	utoa@fp,pad@fp
  3826   001892  C01E  F013         	movff	utoa@fp+1,pad@fp+1
  3827   001896  0E80               	movlw	low _dbuf
  3828   001898  243B               	addwf	utoa@i^0,w,c
  3829   00189A  6E14               	movwf	pad@buf^0,c
  3830   00189C  0E00               	movlw	high _dbuf
  3831   00189E  203C               	addwfc	(utoa@i+1)^0,w,c
  3832   0018A0  6E15               	movwf	(pad@buf+1)^0,c
  3833   0018A2  C02F  F016         	movff	utoa@w,pad@p
  3834   0018A6  C030  F017         	movff	utoa@w+1,pad@p+1
  3835   0018AA  ECA7  F011         	call	_pad	;wreg free
  3836   0018AE  0012               	return		;funcret
  3837   0018B0                     __end_of_utoa:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _pad *****************
  3841 ;; Defined at:
  3842 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3845 ;;		 -> sprintf@f(11), 
  3846 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3847 ;;		 -> dbuf(32), 
  3848 ;;  p               2   21[COMRAM] int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  w               2   26[COMRAM] int 
  3851 ;;  i               2   24[COMRAM] int 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3861 ;;      Params:         6       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3864 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:       11 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 4
  3868 ;; This function calls:
  3869 ;;		_fputc
  3870 ;;		_fputs
  3871 ;; This function is called by:
  3872 ;;		_utoa
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text14
  3877   00234E                     __ptext14:
  3878                           	callstack 0
  3879   00234E                     _pad:
  3880                           	callstack 21
  3881   00234E                     
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3883   00234E  BE17               	btfsc	(pad@p+1)^0,7,c
  3884   002350  EFAC  F011         	goto	u1521
  3885   002354  EFAE  F011         	goto	u1520
  3886   002358                     u1521:
  3887   002358  EFB4  F011         	goto	l2249
  3888   00235C                     u1520:
  3889   00235C  C016  F01B         	movff	pad@p,pad@w
  3890   002360  C017  F01C         	movff	pad@p+1,pad@w+1
  3891   002364  EFB8  F011         	goto	l1068
  3892   002368                     l2249:
  3893   002368  0E00               	movlw	0
  3894   00236A  6E1C               	movwf	(pad@w+1)^0,c
  3895   00236C  0E00               	movlw	0
  3896   00236E  6E1B               	movwf	pad@w^0,c
  3897   002370                     l1068:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3900   002370  0E00               	movlw	0
  3901   002372  6E1A               	movwf	(pad@i+1)^0,c
  3902   002374  0E00               	movlw	0
  3903   002376  6E19               	movwf	pad@i^0,c
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3906   002378  EFCA  F011         	goto	l2255
  3907   00237C                     l2251:
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3910   00237C  0E00               	movlw	0
  3911   00237E  6E03               	movwf	(fputc@c+1)^0,c
  3912   002380  0E20               	movlw	32
  3913   002382  6E02               	movwf	fputc@c^0,c
  3914   002384  C012  F004         	movff	pad@fp,fputc@fp
  3915   002388  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3916   00238C  ECBD  F010         	call	_fputc	;wreg free
  3917   002390                     
  3918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3919   002390  4A19               	infsnz	pad@i^0,f,c
  3920   002392  2A1A               	incf	(pad@i+1)^0,f,c
  3921   002394                     l2255:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3924   002394  501B               	movf	pad@w^0,w,c
  3925   002396  5C19               	subwf	pad@i^0,w,c
  3926   002398  501A               	movf	(pad@i+1)^0,w,c
  3927   00239A  0A80               	xorlw	128
  3928   00239C  6E18               	movwf	??_pad^0,c
  3929   00239E  501C               	movf	(pad@w+1)^0,w,c
  3930   0023A0  0A80               	xorlw	128
  3931   0023A2  5818               	subwfb	??_pad^0,w,c
  3932   0023A4  A0D8               	btfss	status,0,c
  3933   0023A6  EFD7  F011         	goto	u1531
  3934   0023AA  EFD9  F011         	goto	u1530
  3935   0023AE                     u1531:
  3936   0023AE  EFBE  F011         	goto	l2251
  3937   0023B2                     u1530:
  3938   0023B2                     
  3939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3940   0023B2  C014  F00B         	movff	pad@buf,fputs@s
  3941   0023B6  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3942   0023BA  C012  F00D         	movff	pad@fp,fputs@fp
  3943   0023BE  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3944   0023C2  EC62  F012         	call	_fputs	;wreg free
  3945   0023C6  0012               	return		;funcret
  3946   0023C8                     __end_of_pad:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _fputs *****************
  3950 ;; Defined at:
  3951 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3954 ;;		 -> dbuf(32), 
  3955 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3956 ;;		 -> sprintf@f(11), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  i               2   15[COMRAM] int 
  3959 ;;  c               1   14[COMRAM] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2   10[COMRAM] int 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         4       0       0       0       0       0       0       0       0
  3970 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3972 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3973 ;;Total ram usage:        7 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 3
  3976 ;; This function calls:
  3977 ;;		_fputc
  3978 ;; This function is called by:
  3979 ;;		_pad
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text15
  3984   0024C4                     __ptext15:
  3985                           	callstack 0
  3986   0024C4                     _fputs:
  3987                           	callstack 21
  3988   0024C4  0E00               	movlw	0
  3989   0024C6  6E11               	movwf	(fputs@i+1)^0,c
  3990   0024C8  0E00               	movlw	0
  3991   0024CA  6E10               	movwf	fputs@i^0,c
  3992   0024CC  EF73  F012         	goto	l2205
  3993   0024D0                     l2201:
  3994   0024D0  C00F  F002         	movff	fputs@c,fputc@c
  3995   0024D4  6A03               	clrf	(fputc@c+1)^0,c
  3996   0024D6  C00D  F004         	movff	fputs@fp,fputc@fp
  3997   0024DA  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3998   0024DE  ECBD  F010         	call	_fputc	;wreg free
  3999   0024E2  4A10               	infsnz	fputs@i^0,f,c
  4000   0024E4  2A11               	incf	(fputs@i+1)^0,f,c
  4001   0024E6                     l2205:
  4002   0024E6  5010               	movf	fputs@i^0,w,c
  4003   0024E8  240B               	addwf	fputs@s^0,w,c
  4004   0024EA  6ED9               	movwf	fsr2l,c
  4005   0024EC  5011               	movf	(fputs@i+1)^0,w,c
  4006   0024EE  200C               	addwfc	(fputs@s+1)^0,w,c
  4007   0024F0  6EDA               	movwf	fsr2h,c
  4008   0024F2  50DF               	movf	indf2,w,c
  4009   0024F4  6E0F               	movwf	fputs@c^0,c
  4010   0024F6  500F               	movf	fputs@c^0,w,c
  4011   0024F8  A4D8               	btfss	status,2,c
  4012   0024FA  EF81  F012         	goto	u1441
  4013   0024FE  EF83  F012         	goto	u1440
  4014   002502                     u1441:
  4015   002502  EF68  F012         	goto	l2201
  4016   002506                     u1440:
  4017   002506  0012               	return		;funcret
  4018   002508                     __end_of_fputs:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _fputc *****************
  4022 ;; Defined at:
  4023 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  c               2    1[COMRAM] int 
  4026 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  4027 ;;		 -> sprintf@f(11), 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2    1[COMRAM] int 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4039 ;;      Params:         4       0       0       0       0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4041 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4042 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4043 ;;Total ram usage:        9 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 2
  4046 ;; This function calls:
  4047 ;;		_putch
  4048 ;; This function is called by:
  4049 ;;		_pad
  4050 ;;		_vfpfcnvrt
  4051 ;;		_fputs
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text16
  4056   00217A                     __ptext16:
  4057                           	callstack 0
  4058   00217A                     _fputc:
  4059                           	callstack 21
  4060   00217A  5004               	movf	fputc@fp^0,w,c
  4061   00217C  1005               	iorwf	(fputc@fp+1)^0,w,c
  4062   00217E  B4D8               	btfsc	status,2,c
  4063   002180  EFC4  F010         	goto	u1401
  4064   002184  EFC6  F010         	goto	u1400
  4065   002188                     u1401:
  4066   002188  EFCF  F010         	goto	l2189
  4067   00218C                     u1400:
  4068   00218C  5004               	movf	fputc@fp^0,w,c
  4069   00218E  1005               	iorwf	(fputc@fp+1)^0,w,c
  4070   002190  A4D8               	btfss	status,2,c
  4071   002192  EFCD  F010         	goto	u1411
  4072   002196  EFCF  F010         	goto	u1410
  4073   00219A                     u1411:
  4074   00219A  EFD4  F010         	goto	l2191
  4075   00219E                     u1410:
  4076   00219E                     l2189:
  4077   00219E  5002               	movf	fputc@c^0,w,c
  4078   0021A0  EC2E  F013         	call	_putch
  4079   0021A4  EF21  F011         	goto	l1112
  4080   0021A8                     l2191:
  4081   0021A8  EE20 F009          	lfsr	2,9
  4082   0021AC  5004               	movf	fputc@fp^0,w,c
  4083   0021AE  26D9               	addwf	fsr2l,f,c
  4084   0021B0  5005               	movf	(fputc@fp+1)^0,w,c
  4085   0021B2  22DA               	addwfc	fsr2h,f,c
  4086   0021B4  50DE               	movf	postinc2,w,c
  4087   0021B6  10DE               	iorwf	postinc2,w,c
  4088   0021B8  B4D8               	btfsc	status,2,c
  4089   0021BA  EFE1  F010         	goto	u1421
  4090   0021BE  EFE3  F010         	goto	u1420
  4091   0021C2                     u1421:
  4092   0021C2  EFFE  F010         	goto	l2195
  4093   0021C6                     u1420:
  4094   0021C6  EE20 F009          	lfsr	2,9
  4095   0021CA  5004               	movf	fputc@fp^0,w,c
  4096   0021CC  26D9               	addwf	fsr2l,f,c
  4097   0021CE  5005               	movf	(fputc@fp+1)^0,w,c
  4098   0021D0  22DA               	addwfc	fsr2h,f,c
  4099   0021D2  EE10 F003          	lfsr	1,3
  4100   0021D6  5004               	movf	fputc@fp^0,w,c
  4101   0021D8  26E1               	addwf	fsr1l,f,c
  4102   0021DA  5005               	movf	(fputc@fp+1)^0,w,c
  4103   0021DC  22E2               	addwfc	fsr1h,f,c
  4104   0021DE  50DE               	movf	postinc2,w,c
  4105   0021E0  5CE6               	subwf	postinc1,w,c
  4106   0021E2  50E6               	movf	postinc1,w,c
  4107   0021E4  0A80               	xorlw	128
  4108   0021E6  6E0A               	movwf	(??_fputc+4)^0,c
  4109   0021E8  50DE               	movf	postinc2,w,c
  4110   0021EA  0A80               	xorlw	128
  4111   0021EC  580A               	subwfb	(??_fputc+4)^0,w,c
  4112   0021EE  B0D8               	btfsc	status,0,c
  4113   0021F0  EFFC  F010         	goto	u1431
  4114   0021F4  EFFE  F010         	goto	u1430
  4115   0021F8                     u1431:
  4116   0021F8  EF21  F011         	goto	l1112
  4117   0021FC                     u1430:
  4118   0021FC                     l2195:
  4119   0021FC  EE20 F003          	lfsr	2,3
  4120   002200  5004               	movf	fputc@fp^0,w,c
  4121   002202  26D9               	addwf	fsr2l,f,c
  4122   002204  5005               	movf	(fputc@fp+1)^0,w,c
  4123   002206  22DA               	addwfc	fsr2h,f,c
  4124   002208  CFDE F006          	movff	postinc2,??_fputc
  4125   00220C  CFDD F007          	movff	postdec2,??_fputc+1
  4126   002210  C004  FFD9         	movff	fputc@fp,fsr2l
  4127   002214  C005  FFDA         	movff	fputc@fp+1,fsr2h
  4128   002218  CFDE F008          	movff	postinc2,??_fputc+2
  4129   00221C  CFDD F009          	movff	postdec2,??_fputc+3
  4130   002220  5006               	movf	??_fputc^0,w,c
  4131   002222  2408               	addwf	(??_fputc+2)^0,w,c
  4132   002224  6ED9               	movwf	fsr2l,c
  4133   002226  5007               	movf	(??_fputc+1)^0,w,c
  4134   002228  2009               	addwfc	(??_fputc+3)^0,w,c
  4135   00222A  6EDA               	movwf	fsr2h,c
  4136   00222C  C002  FFDF         	movff	fputc@c,indf2
  4137   002230  EE20 F003          	lfsr	2,3
  4138   002234  5004               	movf	fputc@fp^0,w,c
  4139   002236  26D9               	addwf	fsr2l,f,c
  4140   002238  5005               	movf	(fputc@fp+1)^0,w,c
  4141   00223A  22DA               	addwfc	fsr2h,f,c
  4142   00223C  2ADE               	incf	postinc2,f,c
  4143   00223E  0E00               	movlw	0
  4144   002240  22DD               	addwfc	postdec2,f,c
  4145   002242                     l1112:
  4146   002242  0012               	return		;funcret
  4147   002244                     __end_of_fputc:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _putch *****************
  4151 ;; Defined at:
  4152 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  c               1    wreg     unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  c               1    0[COMRAM] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_fputc
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text17
  4181   00265C                     __ptext17:
  4182                           	callstack 0
  4183   00265C                     _putch:
  4184                           	callstack 21
  4185   00265C  0012               	return		;funcret
  4186   00265E                     __end_of_putch:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function ___lomod *****************
  4190 ;; Defined at:
  4191 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  dividend        8    1[COMRAM] unsigned long long 
  4194 ;;  divisor         8    9[COMRAM] unsigned long long 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  counter         1   17[COMRAM] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  8    1[COMRAM] unsigned long long 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4206 ;;      Params:        16       0       0       0       0       0       0       0       0
  4207 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4209 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4210 ;;Total ram usage:       17 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_utoa
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text18
  4221   0020AA                     __ptext18:
  4222                           	callstack 0
  4223   0020AA                     ___lomod:
  4224                           	callstack 24
  4225   0020AA  500A               	movf	___lomod@divisor^0,w,c
  4226   0020AC  100B               	iorwf	(___lomod@divisor+1)^0,w,c
  4227   0020AE  100C               	iorwf	(___lomod@divisor+2)^0,w,c
  4228   0020B0  100D               	iorwf	(___lomod@divisor+3)^0,w,c
  4229   0020B2  100E               	iorwf	(___lomod@divisor+4)^0,w,c
  4230   0020B4  100F               	iorwf	(___lomod@divisor+5)^0,w,c
  4231   0020B6  1010               	iorwf	(___lomod@divisor+6)^0,w,c
  4232   0020B8  1011               	iorwf	(___lomod@divisor+7)^0,w,c
  4233   0020BA  B4D8               	btfsc	status,2,c
  4234   0020BC  EF62  F010         	goto	u1491
  4235   0020C0  EF64  F010         	goto	u1490
  4236   0020C4                     u1491:
  4237   0020C4  EFAC  F010         	goto	l818
  4238   0020C8                     u1490:
  4239   0020C8  0E01               	movlw	1
  4240   0020CA  6E12               	movwf	___lomod@counter^0,c
  4241   0020CC  EF72  F010         	goto	l2235
  4242   0020D0                     l2233:
  4243   0020D0  90D8               	bcf	status,0,c
  4244   0020D2  360A               	rlcf	___lomod@divisor^0,f,c
  4245   0020D4  360B               	rlcf	(___lomod@divisor+1)^0,f,c
  4246   0020D6  360C               	rlcf	(___lomod@divisor+2)^0,f,c
  4247   0020D8  360D               	rlcf	(___lomod@divisor+3)^0,f,c
  4248   0020DA  360E               	rlcf	(___lomod@divisor+4)^0,f,c
  4249   0020DC  360F               	rlcf	(___lomod@divisor+5)^0,f,c
  4250   0020DE  3610               	rlcf	(___lomod@divisor+6)^0,f,c
  4251   0020E0  3611               	rlcf	(___lomod@divisor+7)^0,f,c
  4252   0020E2  2A12               	incf	___lomod@counter^0,f,c
  4253   0020E4                     l2235:
  4254   0020E4  AE11               	btfss	(___lomod@divisor+7)^0,7,c
  4255   0020E6  EF77  F010         	goto	u1501
  4256   0020EA  EF79  F010         	goto	u1500
  4257   0020EE                     u1501:
  4258   0020EE  EF68  F010         	goto	l2233
  4259   0020F2                     u1500:
  4260   0020F2                     l2237:
  4261   0020F2  500A               	movf	___lomod@divisor^0,w,c
  4262   0020F4  5C02               	subwf	___lomod@dividend^0,w,c
  4263   0020F6  500B               	movf	(___lomod@divisor+1)^0,w,c
  4264   0020F8  5803               	subwfb	(___lomod@dividend+1)^0,w,c
  4265   0020FA  500C               	movf	(___lomod@divisor+2)^0,w,c
  4266   0020FC  5804               	subwfb	(___lomod@dividend+2)^0,w,c
  4267   0020FE  500D               	movf	(___lomod@divisor+3)^0,w,c
  4268   002100  5805               	subwfb	(___lomod@dividend+3)^0,w,c
  4269   002102  500E               	movf	(___lomod@divisor+4)^0,w,c
  4270   002104  5806               	subwfb	(___lomod@dividend+4)^0,w,c
  4271   002106  500F               	movf	(___lomod@divisor+5)^0,w,c
  4272   002108  5807               	subwfb	(___lomod@dividend+5)^0,w,c
  4273   00210A  5010               	movf	(___lomod@divisor+6)^0,w,c
  4274   00210C  5808               	subwfb	(___lomod@dividend+6)^0,w,c
  4275   00210E  5011               	movf	(___lomod@divisor+7)^0,w,c
  4276   002110  5809               	subwfb	(___lomod@dividend+7)^0,w,c
  4277   002112  A0D8               	btfss	status,0,c
  4278   002114  EF8E  F010         	goto	u1511
  4279   002118  EF90  F010         	goto	u1510
  4280   00211C                     u1511:
  4281   00211C  EFA0  F010         	goto	l2241
  4282   002120                     u1510:
  4283   002120  500A               	movf	___lomod@divisor^0,w,c
  4284   002122  5E02               	subwf	___lomod@dividend^0,f,c
  4285   002124  500B               	movf	(___lomod@divisor+1)^0,w,c
  4286   002126  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
  4287   002128  500C               	movf	(___lomod@divisor+2)^0,w,c
  4288   00212A  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
  4289   00212C  500D               	movf	(___lomod@divisor+3)^0,w,c
  4290   00212E  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
  4291   002130  500E               	movf	(___lomod@divisor+4)^0,w,c
  4292   002132  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
  4293   002134  500F               	movf	(___lomod@divisor+5)^0,w,c
  4294   002136  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
  4295   002138  5010               	movf	(___lomod@divisor+6)^0,w,c
  4296   00213A  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
  4297   00213C  5011               	movf	(___lomod@divisor+7)^0,w,c
  4298   00213E  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
  4299   002140                     l2241:
  4300   002140  90D8               	bcf	status,0,c
  4301   002142  3211               	rrcf	(___lomod@divisor+7)^0,f,c
  4302   002144  3210               	rrcf	(___lomod@divisor+6)^0,f,c
  4303   002146  320F               	rrcf	(___lomod@divisor+5)^0,f,c
  4304   002148  320E               	rrcf	(___lomod@divisor+4)^0,f,c
  4305   00214A  320D               	rrcf	(___lomod@divisor+3)^0,f,c
  4306   00214C  320C               	rrcf	(___lomod@divisor+2)^0,f,c
  4307   00214E  320B               	rrcf	(___lomod@divisor+1)^0,f,c
  4308   002150  320A               	rrcf	___lomod@divisor^0,f,c
  4309   002152  2E12               	decfsz	___lomod@counter^0,f,c
  4310   002154  EF79  F010         	goto	l2237
  4311   002158                     l818:
  4312   002158  C002  F002         	movff	___lomod@dividend,?___lomod
  4313   00215C  C003  F003         	movff	___lomod@dividend+1,?___lomod+1
  4314   002160  C004  F004         	movff	___lomod@dividend+2,?___lomod+2
  4315   002164  C005  F005         	movff	___lomod@dividend+3,?___lomod+3
  4316   002168  C006  F006         	movff	___lomod@dividend+4,?___lomod+4
  4317   00216C  C007  F007         	movff	___lomod@dividend+5,?___lomod+5
  4318   002170  C008  F008         	movff	___lomod@dividend+6,?___lomod+6
  4319   002174  C009  F009         	movff	___lomod@dividend+7,?___lomod+7
  4320   002178  0012               	return		;funcret
  4321   00217A                     __end_of___lomod:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function ___lodiv *****************
  4325 ;; Defined at:
  4326 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  dividend        8    1[COMRAM] unsigned long long 
  4329 ;;  divisor         8    9[COMRAM] unsigned long long 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  quotient        8   17[COMRAM] unsigned long long 
  4332 ;;  counter         1   25[COMRAM] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  8    1[COMRAM] unsigned long long 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4342 ;;      Params:        16       0       0       0       0       0       0       0       0
  4343 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4345 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4346 ;;Total ram usage:       25 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_utoa
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text19
  4357   001EE8                     __ptext19:
  4358                           	callstack 0
  4359   001EE8                     ___lodiv:
  4360                           	callstack 24
  4361   001EE8  EE20  F012         	lfsr	2,___lodiv@quotient
  4362   001EEC  0E07               	movlw	7
  4363   001EEE                     u1451:
  4364   001EEE  6ADE               	clrf	postinc2,c
  4365   001EF0  06E8               	decf	wreg,f,c
  4366   001EF2  E2FD               	bc	u1451
  4367   001EF4  500A               	movf	___lodiv@divisor^0,w,c
  4368   001EF6  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
  4369   001EF8  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
  4370   001EFA  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
  4371   001EFC  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
  4372   001EFE  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
  4373   001F00  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
  4374   001F02  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
  4375   001F04  B4D8               	btfsc	status,2,c
  4376   001F06  EF87  F00F         	goto	u1461
  4377   001F0A  EF89  F00F         	goto	u1460
  4378   001F0E                     u1461:
  4379   001F0E  EFDB  F00F         	goto	l808
  4380   001F12                     u1460:
  4381   001F12  0E01               	movlw	1
  4382   001F14  6E1A               	movwf	___lodiv@counter^0,c
  4383   001F16  EF97  F00F         	goto	l2215
  4384   001F1A                     l2213:
  4385   001F1A  90D8               	bcf	status,0,c
  4386   001F1C  360A               	rlcf	___lodiv@divisor^0,f,c
  4387   001F1E  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
  4388   001F20  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
  4389   001F22  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
  4390   001F24  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
  4391   001F26  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
  4392   001F28  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
  4393   001F2A  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
  4394   001F2C  2A1A               	incf	___lodiv@counter^0,f,c
  4395   001F2E                     l2215:
  4396   001F2E  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
  4397   001F30  EF9C  F00F         	goto	u1471
  4398   001F34  EF9E  F00F         	goto	u1470
  4399   001F38                     u1471:
  4400   001F38  EF8D  F00F         	goto	l2213
  4401   001F3C                     u1470:
  4402   001F3C                     l2217:
  4403   001F3C  90D8               	bcf	status,0,c
  4404   001F3E  3612               	rlcf	___lodiv@quotient^0,f,c
  4405   001F40  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
  4406   001F42  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
  4407   001F44  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
  4408   001F46  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
  4409   001F48  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
  4410   001F4A  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
  4411   001F4C  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
  4412   001F4E  500A               	movf	___lodiv@divisor^0,w,c
  4413   001F50  5C02               	subwf	___lodiv@dividend^0,w,c
  4414   001F52  500B               	movf	(___lodiv@divisor+1)^0,w,c
  4415   001F54  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
  4416   001F56  500C               	movf	(___lodiv@divisor+2)^0,w,c
  4417   001F58  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
  4418   001F5A  500D               	movf	(___lodiv@divisor+3)^0,w,c
  4419   001F5C  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
  4420   001F5E  500E               	movf	(___lodiv@divisor+4)^0,w,c
  4421   001F60  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
  4422   001F62  500F               	movf	(___lodiv@divisor+5)^0,w,c
  4423   001F64  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
  4424   001F66  5010               	movf	(___lodiv@divisor+6)^0,w,c
  4425   001F68  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
  4426   001F6A  5011               	movf	(___lodiv@divisor+7)^0,w,c
  4427   001F6C  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
  4428   001F6E  A0D8               	btfss	status,0,c
  4429   001F70  EFBC  F00F         	goto	u1481
  4430   001F74  EFBE  F00F         	goto	u1480
  4431   001F78                     u1481:
  4432   001F78  EFCF  F00F         	goto	l2225
  4433   001F7C                     u1480:
  4434   001F7C  500A               	movf	___lodiv@divisor^0,w,c
  4435   001F7E  5E02               	subwf	___lodiv@dividend^0,f,c
  4436   001F80  500B               	movf	(___lodiv@divisor+1)^0,w,c
  4437   001F82  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
  4438   001F84  500C               	movf	(___lodiv@divisor+2)^0,w,c
  4439   001F86  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
  4440   001F88  500D               	movf	(___lodiv@divisor+3)^0,w,c
  4441   001F8A  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
  4442   001F8C  500E               	movf	(___lodiv@divisor+4)^0,w,c
  4443   001F8E  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
  4444   001F90  500F               	movf	(___lodiv@divisor+5)^0,w,c
  4445   001F92  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
  4446   001F94  5010               	movf	(___lodiv@divisor+6)^0,w,c
  4447   001F96  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
  4448   001F98  5011               	movf	(___lodiv@divisor+7)^0,w,c
  4449   001F9A  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
  4450   001F9C  8012               	bsf	___lodiv@quotient^0,0,c
  4451   001F9E                     l2225:
  4452   001F9E  90D8               	bcf	status,0,c
  4453   001FA0  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
  4454   001FA2  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
  4455   001FA4  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
  4456   001FA6  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
  4457   001FA8  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
  4458   001FAA  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
  4459   001FAC  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
  4460   001FAE  320A               	rrcf	___lodiv@divisor^0,f,c
  4461   001FB0  2E1A               	decfsz	___lodiv@counter^0,f,c
  4462   001FB2  EF9E  F00F         	goto	l2217
  4463   001FB6                     l808:
  4464   001FB6  C012  F002         	movff	___lodiv@quotient,?___lodiv
  4465   001FBA  C013  F003         	movff	___lodiv@quotient+1,?___lodiv+1
  4466   001FBE  C014  F004         	movff	___lodiv@quotient+2,?___lodiv+2
  4467   001FC2  C015  F005         	movff	___lodiv@quotient+3,?___lodiv+3
  4468   001FC6  C016  F006         	movff	___lodiv@quotient+4,?___lodiv+4
  4469   001FCA  C017  F007         	movff	___lodiv@quotient+5,?___lodiv+5
  4470   001FCE  C018  F008         	movff	___lodiv@quotient+6,?___lodiv+6
  4471   001FD2  C019  F009         	movff	___lodiv@quotient+7,?___lodiv+7
  4472   001FD6  0012               	return		;funcret
  4473   001FD8                     __end_of___lodiv:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function ___xxtofl *****************
  4477 ;; Defined at:
  4478 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  sign            1    wreg     unsigned char 
  4481 ;;  val             4    1[COMRAM] long 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  sign            1    9[COMRAM] unsigned char 
  4484 ;;  arg             4   11[COMRAM] unsigned long 
  4485 ;;  exp             1   10[COMRAM] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  4    1[COMRAM] unsigned char 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4495 ;;      Params:         4       0       0       0       0       0       0       0       0
  4496 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4497 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4498 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:       14 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_FILL
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text20
  4510   0018B0                     __ptext20:
  4511                           	callstack 0
  4512   0018B0                     ___xxtofl:
  4513                           	callstack 28
  4514                           
  4515                           ;incstack = 0
  4516                           ;___xxtofl@sign stored from wreg
  4517   0018B0  6E0A               	movwf	___xxtofl@sign^0,c
  4518   0018B2  500A               	movf	___xxtofl@sign^0,w,c
  4519   0018B4  B4D8               	btfsc	status,2,c
  4520   0018B6  EF5F  F00C         	goto	u2271
  4521   0018BA  EF61  F00C         	goto	u2270
  4522   0018BE                     u2271:
  4523   0018BE  EF83  F00C         	goto	l1025
  4524   0018C2                     u2270:
  4525   0018C2  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  4526   0018C4  EF68  F00C         	goto	u2280
  4527   0018C8  EF66  F00C         	goto	u2281
  4528   0018CC                     u2281:
  4529   0018CC  EF83  F00C         	goto	l1025
  4530   0018D0                     u2280:
  4531   0018D0  C002  F006         	movff	___xxtofl@val,??___xxtofl
  4532   0018D4  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  4533   0018D8  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  4534   0018DC  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  4535   0018E0  1E06               	comf	??___xxtofl^0,f,c
  4536   0018E2  1E07               	comf	(??___xxtofl+1)^0,f,c
  4537   0018E4  1E08               	comf	(??___xxtofl+2)^0,f,c
  4538   0018E6  1E09               	comf	(??___xxtofl+3)^0,f,c
  4539   0018E8  2A06               	incf	??___xxtofl^0,f,c
  4540   0018EA  0E00               	movlw	0
  4541   0018EC  2207               	addwfc	(??___xxtofl+1)^0,f,c
  4542   0018EE  2208               	addwfc	(??___xxtofl+2)^0,f,c
  4543   0018F0  2209               	addwfc	(??___xxtofl+3)^0,f,c
  4544   0018F2  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  4545   0018F6  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  4546   0018FA  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  4547   0018FE  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  4548   001902  EF8B  F00C         	goto	l2725
  4549   001906                     l1025:
  4550   001906  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  4551   00190A  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4552   00190E  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4553   001912  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4554   001916                     l2725:
  4555   001916  5002               	movf	___xxtofl@val^0,w,c
  4556   001918  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  4557   00191A  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  4558   00191C  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  4559   00191E  A4D8               	btfss	status,2,c
  4560   001920  EF94  F00C         	goto	u2291
  4561   001924  EF96  F00C         	goto	u2290
  4562   001928                     u2291:
  4563   001928  EFA0  F00C         	goto	l2731
  4564   00192C                     u2290:
  4565   00192C  0E00               	movlw	0
  4566   00192E  6E02               	movwf	?___xxtofl^0,c
  4567   001930  0E00               	movlw	0
  4568   001932  6E03               	movwf	(?___xxtofl+1)^0,c
  4569   001934  0E00               	movlw	0
  4570   001936  6E04               	movwf	(?___xxtofl+2)^0,c
  4571   001938  0E00               	movlw	0
  4572   00193A  6E05               	movwf	(?___xxtofl+3)^0,c
  4573   00193C  EF31  F00D         	goto	l1028
  4574   001940                     l2731:
  4575   001940  0E96               	movlw	150
  4576   001942  6E0B               	movwf	___xxtofl@exp^0,c
  4577   001944  EFAA  F00C         	goto	l2735
  4578   001948                     l2733:
  4579   001948  2A0B               	incf	___xxtofl@exp^0,f,c
  4580   00194A  90D8               	bcf	status,0,c
  4581   00194C  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  4582   00194E  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  4583   001950  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  4584   001952  320C               	rrcf	___xxtofl@arg^0,f,c
  4585   001954                     l2735:
  4586   001954  0E00               	movlw	0
  4587   001956  140C               	andwf	___xxtofl@arg^0,w,c
  4588   001958  6E06               	movwf	??___xxtofl^0,c
  4589   00195A  0E00               	movlw	0
  4590   00195C  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  4591   00195E  6E07               	movwf	(??___xxtofl+1)^0,c
  4592   001960  0E00               	movlw	0
  4593   001962  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  4594   001964  6E08               	movwf	(??___xxtofl+2)^0,c
  4595   001966  0EFE               	movlw	254
  4596   001968  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  4597   00196A  6E09               	movwf	(??___xxtofl+3)^0,c
  4598   00196C  5006               	movf	??___xxtofl^0,w,c
  4599   00196E  1007               	iorwf	(??___xxtofl+1)^0,w,c
  4600   001970  1008               	iorwf	(??___xxtofl+2)^0,w,c
  4601   001972  1009               	iorwf	(??___xxtofl+3)^0,w,c
  4602   001974  A4D8               	btfss	status,2,c
  4603   001976  EFBF  F00C         	goto	u2301
  4604   00197A  EFC1  F00C         	goto	u2300
  4605   00197E                     u2301:
  4606   00197E  EFA4  F00C         	goto	l2733
  4607   001982                     u2300:
  4608   001982  EFCF  F00C         	goto	l1032
  4609   001986                     l2737:
  4610   001986  2A0B               	incf	___xxtofl@exp^0,f,c
  4611   001988  0E01               	movlw	1
  4612   00198A  260C               	addwf	___xxtofl@arg^0,f,c
  4613   00198C  0E00               	movlw	0
  4614   00198E  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  4615   001990  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  4616   001992  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  4617   001994  90D8               	bcf	status,0,c
  4618   001996  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  4619   001998  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  4620   00199A  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  4621   00199C  320C               	rrcf	___xxtofl@arg^0,f,c
  4622   00199E                     l1032:
  4623   00199E  0E00               	movlw	0
  4624   0019A0  140C               	andwf	___xxtofl@arg^0,w,c
  4625   0019A2  6E06               	movwf	??___xxtofl^0,c
  4626   0019A4  0E00               	movlw	0
  4627   0019A6  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  4628   0019A8  6E07               	movwf	(??___xxtofl+1)^0,c
  4629   0019AA  0E00               	movlw	0
  4630   0019AC  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  4631   0019AE  6E08               	movwf	(??___xxtofl+2)^0,c
  4632   0019B0  0EFF               	movlw	255
  4633   0019B2  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  4634   0019B4  6E09               	movwf	(??___xxtofl+3)^0,c
  4635   0019B6  5006               	movf	??___xxtofl^0,w,c
  4636   0019B8  1007               	iorwf	(??___xxtofl+1)^0,w,c
  4637   0019BA  1008               	iorwf	(??___xxtofl+2)^0,w,c
  4638   0019BC  1009               	iorwf	(??___xxtofl+3)^0,w,c
  4639   0019BE  A4D8               	btfss	status,2,c
  4640   0019C0  EFE4  F00C         	goto	u2311
  4641   0019C4  EFE6  F00C         	goto	u2310
  4642   0019C8                     u2311:
  4643   0019C8  EFC3  F00C         	goto	l2737
  4644   0019CC                     u2310:
  4645   0019CC  EFEE  F00C         	goto	l2745
  4646   0019D0                     l2743:
  4647   0019D0  060B               	decf	___xxtofl@exp^0,f,c
  4648   0019D2  90D8               	bcf	status,0,c
  4649   0019D4  360C               	rlcf	___xxtofl@arg^0,f,c
  4650   0019D6  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  4651   0019D8  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  4652   0019DA  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  4653   0019DC                     l2745:
  4654   0019DC  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  4655   0019DE  EFF3  F00C         	goto	u2321
  4656   0019E2  EFF5  F00C         	goto	u2320
  4657   0019E6                     u2321:
  4658   0019E6  EFFD  F00C         	goto	l1039
  4659   0019EA                     u2320:
  4660   0019EA  0E02               	movlw	2
  4661   0019EC  600B               	cpfslt	___xxtofl@exp^0,c
  4662   0019EE  EFFB  F00C         	goto	u2331
  4663   0019F2  EFFD  F00C         	goto	u2330
  4664   0019F6                     u2331:
  4665   0019F6  EFE8  F00C         	goto	l2743
  4666   0019FA                     u2330:
  4667   0019FA                     l1039:
  4668   0019FA  B00B               	btfsc	___xxtofl@exp^0,0,c
  4669   0019FC  EF02  F00D         	goto	u2341
  4670   001A00  EF04  F00D         	goto	u2340
  4671   001A04                     u2341:
  4672   001A04  EF05  F00D         	goto	l2751
  4673   001A08                     u2340:
  4674   001A08  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  4675   001A0A                     l2751:
  4676   001A0A  90D8               	bcf	status,0,c
  4677   001A0C  320B               	rrcf	___xxtofl@exp^0,f,c
  4678   001A0E  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  4679   001A12  6A07               	clrf	(??___xxtofl+1)^0,c
  4680   001A14  6A08               	clrf	(??___xxtofl+2)^0,c
  4681   001A16  6A09               	clrf	(??___xxtofl+3)^0,c
  4682   001A18  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  4683   001A1C  6A08               	clrf	(??___xxtofl+2)^0,c
  4684   001A1E  6A07               	clrf	(??___xxtofl+1)^0,c
  4685   001A20  6A06               	clrf	??___xxtofl^0,c
  4686   001A22  5006               	movf	??___xxtofl^0,w,c
  4687   001A24  120C               	iorwf	___xxtofl@arg^0,f,c
  4688   001A26  5007               	movf	(??___xxtofl+1)^0,w,c
  4689   001A28  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  4690   001A2A  5008               	movf	(??___xxtofl+2)^0,w,c
  4691   001A2C  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  4692   001A2E  5009               	movf	(??___xxtofl+3)^0,w,c
  4693   001A30  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  4694   001A32  500A               	movf	___xxtofl@sign^0,w,c
  4695   001A34  B4D8               	btfsc	status,2,c
  4696   001A36  EF1F  F00D         	goto	u2351
  4697   001A3A  EF21  F00D         	goto	u2350
  4698   001A3E                     u2351:
  4699   001A3E  EF29  F00D         	goto	l2761
  4700   001A42                     u2350:
  4701   001A42  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  4702   001A44  EF28  F00D         	goto	u2360
  4703   001A48  EF26  F00D         	goto	u2361
  4704   001A4C                     u2361:
  4705   001A4C  EF29  F00D         	goto	l2761
  4706   001A50                     u2360:
  4707   001A50  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  4708   001A52                     l2761:
  4709   001A52  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  4710   001A56  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  4711   001A5A  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  4712   001A5E  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  4713   001A62                     l1028:
  4714   001A62  0012               	return		;funcret
  4715   001A64                     __end_of___xxtofl:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function ___fltol *****************
  4719 ;; Defined at:
  4720 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  f1              4   40[COMRAM] unsigned char 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  exp1            1   49[COMRAM] unsigned char 
  4725 ;;  sign1           1   48[COMRAM] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  4   40[COMRAM] long 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4735 ;;      Params:         4       0       0       0       0       0       0       0       0
  4736 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4737 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4738 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4739 ;;Total ram usage:       10 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 1
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_FILL
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text21
  4750   001CDE                     __ptext21:
  4751                           	callstack 0
  4752   001CDE                     ___fltol:
  4753                           	callstack 28
  4754   001CDE  342B               	rlcf	(___fltol@f1+2)^0,w,c
  4755   001CE0  342C               	rlcf	(___fltol@f1+3)^0,w,c
  4756   001CE2  6E32               	movwf	___fltol@exp1^0,c
  4757   001CE4  5032               	movf	___fltol@exp1^0,w,c
  4758   001CE6  A4D8               	btfss	status,2,c
  4759   001CE8  EF78  F00E         	goto	u2201
  4760   001CEC  EF7A  F00E         	goto	u2200
  4761   001CF0                     u2201:
  4762   001CF0  EF84  F00E         	goto	l2681
  4763   001CF4                     u2200:
  4764   001CF4                     l2677:
  4765   001CF4  0E00               	movlw	0
  4766   001CF6  6E29               	movwf	?___fltol^0,c
  4767   001CF8  0E00               	movlw	0
  4768   001CFA  6E2A               	movwf	(?___fltol+1)^0,c
  4769   001CFC  0E00               	movlw	0
  4770   001CFE  6E2B               	movwf	(?___fltol+2)^0,c
  4771   001D00  0E00               	movlw	0
  4772   001D02  6E2C               	movwf	(?___fltol+3)^0,c
  4773   001D04  EFF1  F00E         	goto	l667
  4774   001D08                     l2681:
  4775   001D08  C029  F02D         	movff	___fltol@f1,??___fltol
  4776   001D0C  C02A  F02E         	movff	___fltol@f1+1,??___fltol+1
  4777   001D10  C02B  F02F         	movff	___fltol@f1+2,??___fltol+2
  4778   001D14  C02C  F030         	movff	___fltol@f1+3,??___fltol+3
  4779   001D18  0E20               	movlw	32
  4780   001D1A  EF94  F00E         	goto	u2210
  4781   001D1E                     u2215:
  4782   001D1E  90D8               	bcf	status,0,c
  4783   001D20  3230               	rrcf	(??___fltol+3)^0,f,c
  4784   001D22  322F               	rrcf	(??___fltol+2)^0,f,c
  4785   001D24  322E               	rrcf	(??___fltol+1)^0,f,c
  4786   001D26  322D               	rrcf	??___fltol^0,f,c
  4787   001D28                     u2210:
  4788   001D28  2EE8               	decfsz	wreg,f,c
  4789   001D2A  EF8F  F00E         	goto	u2215
  4790   001D2E  502D               	movf	??___fltol^0,w,c
  4791   001D30  6E31               	movwf	___fltol@sign1^0,c
  4792   001D32  8E2B               	bsf	(___fltol@f1+2)^0,7,c
  4793   001D34  0EFF               	movlw	255
  4794   001D36  1629               	andwf	___fltol@f1^0,f,c
  4795   001D38  0EFF               	movlw	255
  4796   001D3A  162A               	andwf	(___fltol@f1+1)^0,f,c
  4797   001D3C  0EFF               	movlw	255
  4798   001D3E  162B               	andwf	(___fltol@f1+2)^0,f,c
  4799   001D40  0E00               	movlw	0
  4800   001D42  162C               	andwf	(___fltol@f1+3)^0,f,c
  4801   001D44  0E96               	movlw	150
  4802   001D46  5E32               	subwf	___fltol@exp1^0,f,c
  4803   001D48  BE32               	btfsc	___fltol@exp1^0,7,c
  4804   001D4A  EFAB  F00E         	goto	u2220
  4805   001D4E  EFA9  F00E         	goto	u2221
  4806   001D52                     u2221:
  4807   001D52  EFC1  F00E         	goto	l2701
  4808   001D56                     u2220:
  4809   001D56  5032               	movf	___fltol@exp1^0,w,c
  4810   001D58  0A80               	xorlw	128
  4811   001D5A  0F97               	addlw	151
  4812   001D5C  B0D8               	btfsc	status,0,c
  4813   001D5E  EFB3  F00E         	goto	u2231
  4814   001D62  EFB5  F00E         	goto	u2230
  4815   001D66                     u2231:
  4816   001D66  EFB7  F00E         	goto	l2697
  4817   001D6A                     u2230:
  4818   001D6A  EF7A  F00E         	goto	l2677
  4819   001D6E                     l2697:
  4820   001D6E  90D8               	bcf	status,0,c
  4821   001D70  322C               	rrcf	(___fltol@f1+3)^0,f,c
  4822   001D72  322B               	rrcf	(___fltol@f1+2)^0,f,c
  4823   001D74  322A               	rrcf	(___fltol@f1+1)^0,f,c
  4824   001D76  3229               	rrcf	___fltol@f1^0,f,c
  4825   001D78  3E32               	incfsz	___fltol@exp1^0,f,c
  4826   001D7A  EFB7  F00E         	goto	l2697
  4827   001D7E  EFD9  F00E         	goto	l2711
  4828   001D82                     l2701:
  4829   001D82  0E1F               	movlw	31
  4830   001D84  6432               	cpfsgt	___fltol@exp1^0,c
  4831   001D86  EFC7  F00E         	goto	u2241
  4832   001D8A  EFC9  F00E         	goto	u2240
  4833   001D8E                     u2241:
  4834   001D8E  EFD1  F00E         	goto	l2709
  4835   001D92                     u2240:
  4836   001D92  EF7A  F00E         	goto	l2677
  4837   001D96                     l2707:
  4838   001D96  90D8               	bcf	status,0,c
  4839   001D98  3629               	rlcf	___fltol@f1^0,f,c
  4840   001D9A  362A               	rlcf	(___fltol@f1+1)^0,f,c
  4841   001D9C  362B               	rlcf	(___fltol@f1+2)^0,f,c
  4842   001D9E  362C               	rlcf	(___fltol@f1+3)^0,f,c
  4843   001DA0  0632               	decf	___fltol@exp1^0,f,c
  4844   001DA2                     l2709:
  4845   001DA2  5032               	movf	___fltol@exp1^0,w,c
  4846   001DA4  A4D8               	btfss	status,2,c
  4847   001DA6  EFD7  F00E         	goto	u2251
  4848   001DAA  EFD9  F00E         	goto	u2250
  4849   001DAE                     u2251:
  4850   001DAE  EFCB  F00E         	goto	l2707
  4851   001DB2                     u2250:
  4852   001DB2                     l2711:
  4853   001DB2  5031               	movf	___fltol@sign1^0,w,c
  4854   001DB4  B4D8               	btfsc	status,2,c
  4855   001DB6  EFDF  F00E         	goto	u2261
  4856   001DBA  EFE1  F00E         	goto	u2260
  4857   001DBE                     u2261:
  4858   001DBE  EFE9  F00E         	goto	l2715
  4859   001DC2                     u2260:
  4860   001DC2  1E2C               	comf	(___fltol@f1+3)^0,f,c
  4861   001DC4  1E2B               	comf	(___fltol@f1+2)^0,f,c
  4862   001DC6  1E2A               	comf	(___fltol@f1+1)^0,f,c
  4863   001DC8  6C29               	negf	___fltol@f1^0,c
  4864   001DCA  0E00               	movlw	0
  4865   001DCC  222A               	addwfc	(___fltol@f1+1)^0,f,c
  4866   001DCE  222B               	addwfc	(___fltol@f1+2)^0,f,c
  4867   001DD0  222C               	addwfc	(___fltol@f1+3)^0,f,c
  4868   001DD2                     l2715:
  4869   001DD2  C029  F029         	movff	___fltol@f1,?___fltol
  4870   001DD6  C02A  F02A         	movff	___fltol@f1+1,?___fltol+1
  4871   001DDA  C02B  F02B         	movff	___fltol@f1+2,?___fltol+2
  4872   001DDE  C02C  F02C         	movff	___fltol@f1+3,?___fltol+3
  4873   001DE2                     l667:
  4874   001DE2  0012               	return		;funcret
  4875   001DE4                     __end_of___fltol:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function ___flmul *****************
  4879 ;; Defined at:
  4880 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  b               4   15[COMRAM] long 
  4883 ;;  a               4   19[COMRAM] long 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  prod            4   34[COMRAM] struct .
  4886 ;;  grs             4   28[COMRAM] unsigned long 
  4887 ;;  temp            2   38[COMRAM] struct .
  4888 ;;  bexp            1   33[COMRAM] unsigned char 
  4889 ;;  aexp            1   32[COMRAM] unsigned char 
  4890 ;;  sign            1   27[COMRAM] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  4   15[COMRAM] unsigned char 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0, prodl, prodh
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4900 ;;      Params:         8       0       0       0       0       0       0       0       0
  4901 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4902 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4903 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4904 ;;Total ram usage:       25 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_FILL
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text22
  4915   00086E                     __ptext22:
  4916                           	callstack 0
  4917   00086E                     ___flmul:
  4918                           	callstack 28
  4919   00086E  5013               	movf	(___flmul@b+3)^0,w,c
  4920   000870  0B80               	andlw	128
  4921   000872  6E1C               	movwf	___flmul@sign^0,c
  4922   000874  5013               	movf	(___flmul@b+3)^0,w,c
  4923   000876  2413               	addwf	(___flmul@b+3)^0,w,c
  4924   000878  6E22               	movwf	___flmul@bexp^0,c
  4925   00087A  AE12               	btfss	(___flmul@b+2)^0,7,c
  4926   00087C  EF42  F004         	goto	u1961
  4927   000880  EF44  F004         	goto	u1960
  4928   000884                     u1961:
  4929   000884  EF45  F004         	goto	l2529
  4930   000888                     u1960:
  4931   000888  8022               	bsf	___flmul@bexp^0,0,c
  4932   00088A                     l2529:
  4933   00088A  5022               	movf	___flmul@bexp^0,w,c
  4934   00088C  B4D8               	btfsc	status,2,c
  4935   00088E  EF4B  F004         	goto	u1971
  4936   000892  EF4D  F004         	goto	u1970
  4937   000896                     u1971:
  4938   000896  EF60  F004         	goto	l2537
  4939   00089A                     u1970:
  4940   00089A  2822               	incf	___flmul@bexp^0,w,c
  4941   00089C  A4D8               	btfss	status,2,c
  4942   00089E  EF53  F004         	goto	u1981
  4943   0008A2  EF55  F004         	goto	u1980
  4944   0008A6                     u1981:
  4945   0008A6  EF5D  F004         	goto	l2535
  4946   0008AA                     u1980:
  4947   0008AA  0E00               	movlw	0
  4948   0008AC  6E10               	movwf	___flmul@b^0,c
  4949   0008AE  0E00               	movlw	0
  4950   0008B0  6E11               	movwf	(___flmul@b+1)^0,c
  4951   0008B2  0E00               	movlw	0
  4952   0008B4  6E12               	movwf	(___flmul@b+2)^0,c
  4953   0008B6  0E00               	movlw	0
  4954   0008B8  6E13               	movwf	(___flmul@b+3)^0,c
  4955   0008BA                     l2535:
  4956   0008BA  8E12               	bsf	(___flmul@b+2)^0,7,c
  4957   0008BC  EF68  F004         	goto	l2539
  4958   0008C0                     l2537:
  4959   0008C0  0E00               	movlw	0
  4960   0008C2  6E10               	movwf	___flmul@b^0,c
  4961   0008C4  0E00               	movlw	0
  4962   0008C6  6E11               	movwf	(___flmul@b+1)^0,c
  4963   0008C8  0E00               	movlw	0
  4964   0008CA  6E12               	movwf	(___flmul@b+2)^0,c
  4965   0008CC  0E00               	movlw	0
  4966   0008CE  6E13               	movwf	(___flmul@b+3)^0,c
  4967   0008D0                     l2539:
  4968   0008D0  5017               	movf	(___flmul@a+3)^0,w,c
  4969   0008D2  0B80               	andlw	128
  4970   0008D4  1A1C               	xorwf	___flmul@sign^0,f,c
  4971   0008D6  5017               	movf	(___flmul@a+3)^0,w,c
  4972   0008D8  2417               	addwf	(___flmul@a+3)^0,w,c
  4973   0008DA  6E21               	movwf	___flmul@aexp^0,c
  4974   0008DC  AE16               	btfss	(___flmul@a+2)^0,7,c
  4975   0008DE  EF73  F004         	goto	u1991
  4976   0008E2  EF75  F004         	goto	u1990
  4977   0008E6                     u1991:
  4978   0008E6  EF76  F004         	goto	l2547
  4979   0008EA                     u1990:
  4980   0008EA  8021               	bsf	___flmul@aexp^0,0,c
  4981   0008EC                     l2547:
  4982   0008EC  5021               	movf	___flmul@aexp^0,w,c
  4983   0008EE  B4D8               	btfsc	status,2,c
  4984   0008F0  EF7C  F004         	goto	u2001
  4985   0008F4  EF7E  F004         	goto	u2000
  4986   0008F8                     u2001:
  4987   0008F8  EF91  F004         	goto	l2555
  4988   0008FC                     u2000:
  4989   0008FC  2821               	incf	___flmul@aexp^0,w,c
  4990   0008FE  A4D8               	btfss	status,2,c
  4991   000900  EF84  F004         	goto	u2011
  4992   000904  EF86  F004         	goto	u2010
  4993   000908                     u2011:
  4994   000908  EF8E  F004         	goto	l2553
  4995   00090C                     u2010:
  4996   00090C  0E00               	movlw	0
  4997   00090E  6E14               	movwf	___flmul@a^0,c
  4998   000910  0E00               	movlw	0
  4999   000912  6E15               	movwf	(___flmul@a+1)^0,c
  5000   000914  0E00               	movlw	0
  5001   000916  6E16               	movwf	(___flmul@a+2)^0,c
  5002   000918  0E00               	movlw	0
  5003   00091A  6E17               	movwf	(___flmul@a+3)^0,c
  5004   00091C                     l2553:
  5005   00091C  8E16               	bsf	(___flmul@a+2)^0,7,c
  5006   00091E  EF99  F004         	goto	l984
  5007   000922                     l2555:
  5008   000922  0E00               	movlw	0
  5009   000924  6E14               	movwf	___flmul@a^0,c
  5010   000926  0E00               	movlw	0
  5011   000928  6E15               	movwf	(___flmul@a+1)^0,c
  5012   00092A  0E00               	movlw	0
  5013   00092C  6E16               	movwf	(___flmul@a+2)^0,c
  5014   00092E  0E00               	movlw	0
  5015   000930  6E17               	movwf	(___flmul@a+3)^0,c
  5016   000932                     l984:
  5017   000932  5021               	movf	___flmul@aexp^0,w,c
  5018   000934  B4D8               	btfsc	status,2,c
  5019   000936  EF9F  F004         	goto	u2021
  5020   00093A  EFA1  F004         	goto	u2020
  5021   00093E                     u2021:
  5022   00093E  EFA9  F004         	goto	l2559
  5023   000942                     u2020:
  5024   000942  5022               	movf	___flmul@bexp^0,w,c
  5025   000944  A4D8               	btfss	status,2,c
  5026   000946  EFA7  F004         	goto	u2031
  5027   00094A  EFA9  F004         	goto	u2030
  5028   00094E                     u2031:
  5029   00094E  EFB3  F004         	goto	l2563
  5030   000952                     u2030:
  5031   000952                     l2559:
  5032   000952  0E00               	movlw	0
  5033   000954  6E10               	movwf	?___flmul^0,c
  5034   000956  0E00               	movlw	0
  5035   000958  6E11               	movwf	(?___flmul+1)^0,c
  5036   00095A  0E00               	movlw	0
  5037   00095C  6E12               	movwf	(?___flmul+2)^0,c
  5038   00095E  0E00               	movlw	0
  5039   000960  6E13               	movwf	(?___flmul+3)^0,c
  5040   000962  EF4B  F006         	goto	l988
  5041   000966                     l2563:
  5042   000966  5016               	movf	(___flmul@a+2)^0,w,c
  5043   000968  0210               	mulwf	___flmul@b^0,c
  5044   00096A  CFF3 F027          	movff	prodl,___flmul@temp
  5045   00096E  CFF4 F028          	movff	prodh,___flmul@temp+1
  5046   000972  5027               	movf	___flmul@temp^0,w,c
  5047   000974  6E1D               	movwf	___flmul@grs^0,c
  5048   000976  6A1E               	clrf	(___flmul@grs+1)^0,c
  5049   000978  6A1F               	clrf	(___flmul@grs+2)^0,c
  5050   00097A  6A20               	clrf	(___flmul@grs+3)^0,c
  5051   00097C  5028               	movf	(___flmul@temp+1)^0,w,c
  5052   00097E  6E23               	movwf	___flmul@prod^0,c
  5053   000980  6A24               	clrf	(___flmul@prod+1)^0,c
  5054   000982  6A25               	clrf	(___flmul@prod+2)^0,c
  5055   000984  6A26               	clrf	(___flmul@prod+3)^0,c
  5056   000986  5015               	movf	(___flmul@a+1)^0,w,c
  5057   000988  0211               	mulwf	(___flmul@b+1)^0,c
  5058   00098A  CFF3 F027          	movff	prodl,___flmul@temp
  5059   00098E  CFF4 F028          	movff	prodh,___flmul@temp+1
  5060   000992  5027               	movf	___flmul@temp^0,w,c
  5061   000994  261D               	addwf	___flmul@grs^0,f,c
  5062   000996  0E00               	movlw	0
  5063   000998  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5064   00099A  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5065   00099C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5066   00099E  5028               	movf	(___flmul@temp+1)^0,w,c
  5067   0009A0  2623               	addwf	___flmul@prod^0,f,c
  5068   0009A2  0E00               	movlw	0
  5069   0009A4  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5070   0009A6  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5071   0009A8  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5072   0009AA  5014               	movf	___flmul@a^0,w,c
  5073   0009AC  0212               	mulwf	(___flmul@b+2)^0,c
  5074   0009AE  CFF3 F027          	movff	prodl,___flmul@temp
  5075   0009B2  CFF4 F028          	movff	prodh,___flmul@temp+1
  5076   0009B6  5027               	movf	___flmul@temp^0,w,c
  5077   0009B8  261D               	addwf	___flmul@grs^0,f,c
  5078   0009BA  0E00               	movlw	0
  5079   0009BC  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5080   0009BE  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5081   0009C0  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5082   0009C2  5028               	movf	(___flmul@temp+1)^0,w,c
  5083   0009C4  2623               	addwf	___flmul@prod^0,f,c
  5084   0009C6  0E00               	movlw	0
  5085   0009C8  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5086   0009CA  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5087   0009CC  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5088   0009CE  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  5089   0009D2  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  5090   0009D6  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  5091   0009DA  6A1D               	clrf	___flmul@grs^0,c
  5092   0009DC  5014               	movf	___flmul@a^0,w,c
  5093   0009DE  0211               	mulwf	(___flmul@b+1)^0,c
  5094   0009E0  CFF3 F027          	movff	prodl,___flmul@temp
  5095   0009E4  CFF4 F028          	movff	prodh,___flmul@temp+1
  5096   0009E8  5027               	movf	___flmul@temp^0,w,c
  5097   0009EA  261D               	addwf	___flmul@grs^0,f,c
  5098   0009EC  5028               	movf	(___flmul@temp+1)^0,w,c
  5099   0009EE  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5100   0009F0  0E00               	movlw	0
  5101   0009F2  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5102   0009F4  0E00               	movlw	0
  5103   0009F6  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5104   0009F8  5015               	movf	(___flmul@a+1)^0,w,c
  5105   0009FA  0210               	mulwf	___flmul@b^0,c
  5106   0009FC  CFF3 F027          	movff	prodl,___flmul@temp
  5107   000A00  CFF4 F028          	movff	prodh,___flmul@temp+1
  5108   000A04  5027               	movf	___flmul@temp^0,w,c
  5109   000A06  261D               	addwf	___flmul@grs^0,f,c
  5110   000A08  5028               	movf	(___flmul@temp+1)^0,w,c
  5111   000A0A  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5112   000A0C  0E00               	movlw	0
  5113   000A0E  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5114   000A10  0E00               	movlw	0
  5115   000A12  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5116   000A14  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  5117   000A18  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  5118   000A1C  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  5119   000A20  6A1D               	clrf	___flmul@grs^0,c
  5120   000A22  5014               	movf	___flmul@a^0,w,c
  5121   000A24  0210               	mulwf	___flmul@b^0,c
  5122   000A26  CFF3 F027          	movff	prodl,___flmul@temp
  5123   000A2A  CFF4 F028          	movff	prodh,___flmul@temp+1
  5124   000A2E  5027               	movf	___flmul@temp^0,w,c
  5125   000A30  261D               	addwf	___flmul@grs^0,f,c
  5126   000A32  5028               	movf	(___flmul@temp+1)^0,w,c
  5127   000A34  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5128   000A36  0E00               	movlw	0
  5129   000A38  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5130   000A3A  0E00               	movlw	0
  5131   000A3C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5132   000A3E  5016               	movf	(___flmul@a+2)^0,w,c
  5133   000A40  0211               	mulwf	(___flmul@b+1)^0,c
  5134   000A42  CFF3 F027          	movff	prodl,___flmul@temp
  5135   000A46  CFF4 F028          	movff	prodh,___flmul@temp+1
  5136   000A4A  5027               	movf	___flmul@temp^0,w,c
  5137   000A4C  2623               	addwf	___flmul@prod^0,f,c
  5138   000A4E  5028               	movf	(___flmul@temp+1)^0,w,c
  5139   000A50  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5140   000A52  0E00               	movlw	0
  5141   000A54  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5142   000A56  0E00               	movlw	0
  5143   000A58  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5144   000A5A  5015               	movf	(___flmul@a+1)^0,w,c
  5145   000A5C  0212               	mulwf	(___flmul@b+2)^0,c
  5146   000A5E  CFF3 F027          	movff	prodl,___flmul@temp
  5147   000A62  CFF4 F028          	movff	prodh,___flmul@temp+1
  5148   000A66  5027               	movf	___flmul@temp^0,w,c
  5149   000A68  2623               	addwf	___flmul@prod^0,f,c
  5150   000A6A  5028               	movf	(___flmul@temp+1)^0,w,c
  5151   000A6C  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5152   000A6E  0E00               	movlw	0
  5153   000A70  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5154   000A72  0E00               	movlw	0
  5155   000A74  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5156   000A76  5016               	movf	(___flmul@a+2)^0,w,c
  5157   000A78  0212               	mulwf	(___flmul@b+2)^0,c
  5158   000A7A  CFF3 F027          	movff	prodl,___flmul@temp
  5159   000A7E  CFF4 F028          	movff	prodh,___flmul@temp+1
  5160   000A82  5027               	movf	___flmul@temp^0,w,c
  5161   000A84  6E18               	movwf	??___flmul^0,c
  5162   000A86  5028               	movf	(___flmul@temp+1)^0,w,c
  5163   000A88  6E19               	movwf	(??___flmul+1)^0,c
  5164   000A8A  6A1A               	clrf	(??___flmul+2)^0,c
  5165   000A8C  6A1B               	clrf	(??___flmul+3)^0,c
  5166   000A8E  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  5167   000A92  C019  F01A         	movff	??___flmul+1,??___flmul+2
  5168   000A96  C018  F019         	movff	??___flmul,??___flmul+1
  5169   000A9A  6A18               	clrf	??___flmul^0,c
  5170   000A9C  5018               	movf	??___flmul^0,w,c
  5171   000A9E  2623               	addwf	___flmul@prod^0,f,c
  5172   000AA0  5019               	movf	(??___flmul+1)^0,w,c
  5173   000AA2  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5174   000AA4  501A               	movf	(??___flmul+2)^0,w,c
  5175   000AA6  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5176   000AA8  501B               	movf	(??___flmul+3)^0,w,c
  5177   000AAA  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5178   000AAC  C01D  F018         	movff	___flmul@grs,??___flmul
  5179   000AB0  C01E  F019         	movff	___flmul@grs+1,??___flmul+1
  5180   000AB4  C01F  F01A         	movff	___flmul@grs+2,??___flmul+2
  5181   000AB8  C020  F01B         	movff	___flmul@grs+3,??___flmul+3
  5182   000ABC  0E19               	movlw	25
  5183   000ABE  EF66  F005         	goto	u2040
  5184   000AC2                     u2045:
  5185   000AC2  90D8               	bcf	status,0,c
  5186   000AC4  321B               	rrcf	(??___flmul+3)^0,f,c
  5187   000AC6  321A               	rrcf	(??___flmul+2)^0,f,c
  5188   000AC8  3219               	rrcf	(??___flmul+1)^0,f,c
  5189   000ACA  3218               	rrcf	??___flmul^0,f,c
  5190   000ACC                     u2040:
  5191   000ACC  2EE8               	decfsz	wreg,f,c
  5192   000ACE  EF61  F005         	goto	u2045
  5193   000AD2  5018               	movf	??___flmul^0,w,c
  5194   000AD4  2623               	addwf	___flmul@prod^0,f,c
  5195   000AD6  5019               	movf	(??___flmul+1)^0,w,c
  5196   000AD8  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5197   000ADA  501A               	movf	(??___flmul+2)^0,w,c
  5198   000ADC  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5199   000ADE  501B               	movf	(??___flmul+3)^0,w,c
  5200   000AE0  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5201   000AE2  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  5202   000AE6  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  5203   000AEA  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  5204   000AEE  6A1D               	clrf	___flmul@grs^0,c
  5205   000AF0  5021               	movf	___flmul@aexp^0,w,c
  5206   000AF2  C022  F018         	movff	___flmul@bexp,??___flmul
  5207   000AF6  6A19               	clrf	(??___flmul+1)^0,c
  5208   000AF8  2618               	addwf	??___flmul^0,f,c
  5209   000AFA  0E00               	movlw	0
  5210   000AFC  2219               	addwfc	(??___flmul+1)^0,f,c
  5211   000AFE  0E82               	movlw	130
  5212   000B00  2418               	addwf	??___flmul^0,w,c
  5213   000B02  6E27               	movwf	___flmul@temp^0,c
  5214   000B04  0EFF               	movlw	255
  5215   000B06  2019               	addwfc	(??___flmul+1)^0,w,c
  5216   000B08  6E28               	movwf	(___flmul@temp+1)^0,c
  5217   000B0A  EF9C  F005         	goto	l2611
  5218   000B0E                     l2605:
  5219   000B0E  90D8               	bcf	status,0,c
  5220   000B10  3623               	rlcf	___flmul@prod^0,f,c
  5221   000B12  3624               	rlcf	(___flmul@prod+1)^0,f,c
  5222   000B14  3625               	rlcf	(___flmul@prod+2)^0,f,c
  5223   000B16  3626               	rlcf	(___flmul@prod+3)^0,f,c
  5224   000B18  AE20               	btfss	(___flmul@grs+3)^0,7,c
  5225   000B1A  EF91  F005         	goto	u2051
  5226   000B1E  EF93  F005         	goto	u2050
  5227   000B22                     u2051:
  5228   000B22  EF94  F005         	goto	l991
  5229   000B26                     u2050:
  5230   000B26  8023               	bsf	___flmul@prod^0,0,c
  5231   000B28                     l991:
  5232   000B28  90D8               	bcf	status,0,c
  5233   000B2A  361D               	rlcf	___flmul@grs^0,f,c
  5234   000B2C  361E               	rlcf	(___flmul@grs+1)^0,f,c
  5235   000B2E  361F               	rlcf	(___flmul@grs+2)^0,f,c
  5236   000B30  3620               	rlcf	(___flmul@grs+3)^0,f,c
  5237   000B32  0627               	decf	___flmul@temp^0,f,c
  5238   000B34  A0D8               	btfss	status,0,c
  5239   000B36  0628               	decf	(___flmul@temp+1)^0,f,c
  5240   000B38                     l2611:
  5241   000B38  AE25               	btfss	(___flmul@prod+2)^0,7,c
  5242   000B3A  EFA1  F005         	goto	u2061
  5243   000B3E  EFA3  F005         	goto	u2060
  5244   000B42                     u2061:
  5245   000B42  EF87  F005         	goto	l2605
  5246   000B46                     u2060:
  5247   000B46  0E00               	movlw	0
  5248   000B48  6E21               	movwf	___flmul@aexp^0,c
  5249   000B4A  AE20               	btfss	(___flmul@grs+3)^0,7,c
  5250   000B4C  EFAA  F005         	goto	u2071
  5251   000B50  EFAC  F005         	goto	u2070
  5252   000B54                     u2071:
  5253   000B54  EFD0  F005         	goto	l993
  5254   000B58                     u2070:
  5255   000B58  0EFF               	movlw	255
  5256   000B5A  141D               	andwf	___flmul@grs^0,w,c
  5257   000B5C  6E18               	movwf	??___flmul^0,c
  5258   000B5E  0EFF               	movlw	255
  5259   000B60  141E               	andwf	(___flmul@grs+1)^0,w,c
  5260   000B62  6E19               	movwf	(??___flmul+1)^0,c
  5261   000B64  0EFF               	movlw	255
  5262   000B66  141F               	andwf	(___flmul@grs+2)^0,w,c
  5263   000B68  6E1A               	movwf	(??___flmul+2)^0,c
  5264   000B6A  0E7F               	movlw	127
  5265   000B6C  1420               	andwf	(___flmul@grs+3)^0,w,c
  5266   000B6E  6E1B               	movwf	(??___flmul+3)^0,c
  5267   000B70  5018               	movf	??___flmul^0,w,c
  5268   000B72  1019               	iorwf	(??___flmul+1)^0,w,c
  5269   000B74  101A               	iorwf	(??___flmul+2)^0,w,c
  5270   000B76  101B               	iorwf	(??___flmul+3)^0,w,c
  5271   000B78  B4D8               	btfsc	status,2,c
  5272   000B7A  EFC1  F005         	goto	u2081
  5273   000B7E  EFC3  F005         	goto	u2080
  5274   000B82                     u2081:
  5275   000B82  EFC7  F005         	goto	l994
  5276   000B86                     u2080:
  5277   000B86                     l2619:
  5278   000B86  0E01               	movlw	1
  5279   000B88  6E21               	movwf	___flmul@aexp^0,c
  5280   000B8A  EFD0  F005         	goto	l993
  5281   000B8E                     l994:
  5282   000B8E  A023               	btfss	___flmul@prod^0,0,c
  5283   000B90  EFCC  F005         	goto	u2091
  5284   000B94  EFCE  F005         	goto	u2090
  5285   000B98                     u2091:
  5286   000B98  EFD0  F005         	goto	l993
  5287   000B9C                     u2090:
  5288   000B9C  EFC3  F005         	goto	l2619
  5289   000BA0                     l993:
  5290   000BA0  5021               	movf	___flmul@aexp^0,w,c
  5291   000BA2  B4D8               	btfsc	status,2,c
  5292   000BA4  EFD6  F005         	goto	u2101
  5293   000BA8  EFD8  F005         	goto	u2100
  5294   000BAC                     u2101:
  5295   000BAC  EFFC  F005         	goto	l2631
  5296   000BB0                     u2100:
  5297   000BB0  0E01               	movlw	1
  5298   000BB2  2623               	addwf	___flmul@prod^0,f,c
  5299   000BB4  0E00               	movlw	0
  5300   000BB6  2224               	addwfc	(___flmul@prod+1)^0,f,c
  5301   000BB8  2225               	addwfc	(___flmul@prod+2)^0,f,c
  5302   000BBA  2226               	addwfc	(___flmul@prod+3)^0,f,c
  5303   000BBC  A026               	btfss	(___flmul@prod+3)^0,0,c
  5304   000BBE  EFE3  F005         	goto	u2111
  5305   000BC2  EFE5  F005         	goto	u2110
  5306   000BC6                     u2111:
  5307   000BC6  EFFC  F005         	goto	l2631
  5308   000BCA                     u2110:
  5309   000BCA  C023  F018         	movff	___flmul@prod,??___flmul
  5310   000BCE  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  5311   000BD2  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  5312   000BD6  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  5313   000BDA  341B               	rlcf	(??___flmul+3)^0,w,c
  5314   000BDC  321B               	rrcf	(??___flmul+3)^0,f,c
  5315   000BDE  321A               	rrcf	(??___flmul+2)^0,f,c
  5316   000BE0  3219               	rrcf	(??___flmul+1)^0,f,c
  5317   000BE2  3218               	rrcf	??___flmul^0,f,c
  5318   000BE4  C018  F023         	movff	??___flmul,___flmul@prod
  5319   000BE8  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  5320   000BEC  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  5321   000BF0  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  5322   000BF4  4A27               	infsnz	___flmul@temp^0,f,c
  5323   000BF6  2A28               	incf	(___flmul@temp+1)^0,f,c
  5324   000BF8                     l2631:
  5325   000BF8  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  5326   000BFA  EF07  F006         	goto	u2121
  5327   000BFE  5028               	movf	(___flmul@temp+1)^0,w,c
  5328   000C00  E108               	bnz	u2120
  5329   000C02  2827               	incf	___flmul@temp^0,w,c
  5330   000C04  A0D8               	btfss	status,0,c
  5331   000C06  EF07  F006         	goto	u2121
  5332   000C0A  EF09  F006         	goto	u2120
  5333   000C0E                     u2121:
  5334   000C0E  EF13  F006         	goto	l2635
  5335   000C12                     u2120:
  5336   000C12  0E00               	movlw	0
  5337   000C14  6E23               	movwf	___flmul@prod^0,c
  5338   000C16  0E00               	movlw	0
  5339   000C18  6E24               	movwf	(___flmul@prod+1)^0,c
  5340   000C1A  0E80               	movlw	128
  5341   000C1C  6E25               	movwf	(___flmul@prod+2)^0,c
  5342   000C1E  0E7F               	movlw	127
  5343   000C20  6E26               	movwf	(___flmul@prod+3)^0,c
  5344   000C22  EF41  F006         	goto	l2647
  5345   000C26                     l2635:
  5346   000C26  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  5347   000C28  EF20  F006         	goto	u2130
  5348   000C2C  5028               	movf	(___flmul@temp+1)^0,w,c
  5349   000C2E  E106               	bnz	u2131
  5350   000C30  0427               	decf	___flmul@temp^0,w,c
  5351   000C32  B0D8               	btfsc	status,0,c
  5352   000C34  EF1E  F006         	goto	u2131
  5353   000C38  EF20  F006         	goto	u2130
  5354   000C3C                     u2131:
  5355   000C3C  EF2C  F006         	goto	l1001
  5356   000C40                     u2130:
  5357   000C40  0E00               	movlw	0
  5358   000C42  6E23               	movwf	___flmul@prod^0,c
  5359   000C44  0E00               	movlw	0
  5360   000C46  6E24               	movwf	(___flmul@prod+1)^0,c
  5361   000C48  0E00               	movlw	0
  5362   000C4A  6E25               	movwf	(___flmul@prod+2)^0,c
  5363   000C4C  0E00               	movlw	0
  5364   000C4E  6E26               	movwf	(___flmul@prod+3)^0,c
  5365   000C50  0E00               	movlw	0
  5366   000C52  6E1C               	movwf	___flmul@sign^0,c
  5367   000C54  EF41  F006         	goto	l2647
  5368   000C58                     l1001:
  5369   000C58  C027  F022         	movff	___flmul@temp,___flmul@bexp
  5370   000C5C  0EFF               	movlw	255
  5371   000C5E  1623               	andwf	___flmul@prod^0,f,c
  5372   000C60  0EFF               	movlw	255
  5373   000C62  1624               	andwf	(___flmul@prod+1)^0,f,c
  5374   000C64  0E7F               	movlw	127
  5375   000C66  1625               	andwf	(___flmul@prod+2)^0,f,c
  5376   000C68  0E00               	movlw	0
  5377   000C6A  1626               	andwf	(___flmul@prod+3)^0,f,c
  5378   000C6C  A022               	btfss	___flmul@bexp^0,0,c
  5379   000C6E  EF3B  F006         	goto	u2141
  5380   000C72  EF3D  F006         	goto	u2140
  5381   000C76                     u2141:
  5382   000C76  EF3E  F006         	goto	l2645
  5383   000C7A                     u2140:
  5384   000C7A  8E25               	bsf	(___flmul@prod+2)^0,7,c
  5385   000C7C                     l2645:
  5386   000C7C  90D8               	bcf	status,0,c
  5387   000C7E  3022               	rrcf	___flmul@bexp^0,w,c
  5388   000C80  6E26               	movwf	(___flmul@prod+3)^0,c
  5389   000C82                     l2647:
  5390   000C82  501C               	movf	___flmul@sign^0,w,c
  5391   000C84  1226               	iorwf	(___flmul@prod+3)^0,f,c
  5392   000C86  C023  F010         	movff	___flmul@prod,?___flmul
  5393   000C8A  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  5394   000C8E  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  5395   000C92  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  5396   000C96                     l988:
  5397   000C96  0012               	return		;funcret
  5398   000C98                     __end_of___flmul:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function ___flge *****************
  5402 ;; Defined at:
  5403 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  ff1             4   15[COMRAM] unsigned char 
  5406 ;;  ff2             4   19[COMRAM] unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         8       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5421 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:       12 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_FILL
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text23
  5433   001DE4                     __ptext23:
  5434                           	callstack 0
  5435   001DE4                     ___flge:
  5436                           	callstack 28
  5437   001DE4  0E00               	movlw	0
  5438   001DE6  1410               	andwf	___flge@ff1^0,w,c
  5439   001DE8  6E18               	movwf	??___flge^0,c
  5440   001DEA  0E00               	movlw	0
  5441   001DEC  1411               	andwf	(___flge@ff1+1)^0,w,c
  5442   001DEE  6E19               	movwf	(??___flge+1)^0,c
  5443   001DF0  0E80               	movlw	128
  5444   001DF2  1412               	andwf	(___flge@ff1+2)^0,w,c
  5445   001DF4  6E1A               	movwf	(??___flge+2)^0,c
  5446   001DF6  0E7F               	movlw	127
  5447   001DF8  1413               	andwf	(___flge@ff1+3)^0,w,c
  5448   001DFA  6E1B               	movwf	(??___flge+3)^0,c
  5449   001DFC  5018               	movf	??___flge^0,w,c
  5450   001DFE  1019               	iorwf	(??___flge+1)^0,w,c
  5451   001E00  101A               	iorwf	(??___flge+2)^0,w,c
  5452   001E02  101B               	iorwf	(??___flge+3)^0,w,c
  5453   001E04  A4D8               	btfss	status,2,c
  5454   001E06  EF07  F00F         	goto	u2151
  5455   001E0A  EF09  F00F         	goto	u2150
  5456   001E0E                     u2151:
  5457   001E0E  EF11  F00F         	goto	l2657
  5458   001E12                     u2150:
  5459   001E12  0E00               	movlw	0
  5460   001E14  6E10               	movwf	___flge@ff1^0,c
  5461   001E16  0E00               	movlw	0
  5462   001E18  6E11               	movwf	(___flge@ff1+1)^0,c
  5463   001E1A  0E00               	movlw	0
  5464   001E1C  6E12               	movwf	(___flge@ff1+2)^0,c
  5465   001E1E  0E00               	movlw	0
  5466   001E20  6E13               	movwf	(___flge@ff1+3)^0,c
  5467   001E22                     l2657:
  5468   001E22  0E00               	movlw	0
  5469   001E24  1414               	andwf	___flge@ff2^0,w,c
  5470   001E26  6E18               	movwf	??___flge^0,c
  5471   001E28  0E00               	movlw	0
  5472   001E2A  1415               	andwf	(___flge@ff2+1)^0,w,c
  5473   001E2C  6E19               	movwf	(??___flge+1)^0,c
  5474   001E2E  0E80               	movlw	128
  5475   001E30  1416               	andwf	(___flge@ff2+2)^0,w,c
  5476   001E32  6E1A               	movwf	(??___flge+2)^0,c
  5477   001E34  0E7F               	movlw	127
  5478   001E36  1417               	andwf	(___flge@ff2+3)^0,w,c
  5479   001E38  6E1B               	movwf	(??___flge+3)^0,c
  5480   001E3A  5018               	movf	??___flge^0,w,c
  5481   001E3C  1019               	iorwf	(??___flge+1)^0,w,c
  5482   001E3E  101A               	iorwf	(??___flge+2)^0,w,c
  5483   001E40  101B               	iorwf	(??___flge+3)^0,w,c
  5484   001E42  A4D8               	btfss	status,2,c
  5485   001E44  EF26  F00F         	goto	u2161
  5486   001E48  EF28  F00F         	goto	u2160
  5487   001E4C                     u2161:
  5488   001E4C  EF30  F00F         	goto	l2661
  5489   001E50                     u2160:
  5490   001E50  0E00               	movlw	0
  5491   001E52  6E14               	movwf	___flge@ff2^0,c
  5492   001E54  0E00               	movlw	0
  5493   001E56  6E15               	movwf	(___flge@ff2+1)^0,c
  5494   001E58  0E00               	movlw	0
  5495   001E5A  6E16               	movwf	(___flge@ff2+2)^0,c
  5496   001E5C  0E00               	movlw	0
  5497   001E5E  6E17               	movwf	(___flge@ff2+3)^0,c
  5498   001E60                     l2661:
  5499   001E60  AE13               	btfss	(___flge@ff1+3)^0,7,c
  5500   001E62  EF35  F00F         	goto	u2171
  5501   001E66  EF37  F00F         	goto	u2170
  5502   001E6A                     u2171:
  5503   001E6A  EF40  F00F         	goto	l2665
  5504   001E6E                     u2170:
  5505   001E6E  6C10               	negf	___flge@ff1^0,c
  5506   001E70  1E11               	comf	(___flge@ff1+1)^0,f,c
  5507   001E72  B0D8               	btfsc	status,0,c
  5508   001E74  2A11               	incf	(___flge@ff1+1)^0,f,c
  5509   001E76  1E12               	comf	(___flge@ff1+2)^0,f,c
  5510   001E78  B0D8               	btfsc	status,0,c
  5511   001E7A  2A12               	incf	(___flge@ff1+2)^0,f,c
  5512   001E7C  0E80               	movlw	128
  5513   001E7E  5613               	subfwb	(___flge@ff1+3)^0,f,c
  5514   001E80                     l2665:
  5515   001E80  AE17               	btfss	(___flge@ff2+3)^0,7,c
  5516   001E82  EF45  F00F         	goto	u2181
  5517   001E86  EF47  F00F         	goto	u2180
  5518   001E8A                     u2181:
  5519   001E8A  EF50  F00F         	goto	l635
  5520   001E8E                     u2180:
  5521   001E8E  6C14               	negf	___flge@ff2^0,c
  5522   001E90  1E15               	comf	(___flge@ff2+1)^0,f,c
  5523   001E92  B0D8               	btfsc	status,0,c
  5524   001E94  2A15               	incf	(___flge@ff2+1)^0,f,c
  5525   001E96  1E16               	comf	(___flge@ff2+2)^0,f,c
  5526   001E98  B0D8               	btfsc	status,0,c
  5527   001E9A  2A16               	incf	(___flge@ff2+2)^0,f,c
  5528   001E9C  0E80               	movlw	128
  5529   001E9E  5617               	subfwb	(___flge@ff2+3)^0,f,c
  5530   001EA0                     l635:
  5531   001EA0  0E00               	movlw	0
  5532   001EA2  1A10               	xorwf	___flge@ff1^0,f,c
  5533   001EA4  0E00               	movlw	0
  5534   001EA6  1A11               	xorwf	(___flge@ff1+1)^0,f,c
  5535   001EA8  0E00               	movlw	0
  5536   001EAA  1A12               	xorwf	(___flge@ff1+2)^0,f,c
  5537   001EAC  0E80               	movlw	128
  5538   001EAE  1A13               	xorwf	(___flge@ff1+3)^0,f,c
  5539   001EB0  0E00               	movlw	0
  5540   001EB2  1A14               	xorwf	___flge@ff2^0,f,c
  5541   001EB4  0E00               	movlw	0
  5542   001EB6  1A15               	xorwf	(___flge@ff2+1)^0,f,c
  5543   001EB8  0E00               	movlw	0
  5544   001EBA  1A16               	xorwf	(___flge@ff2+2)^0,f,c
  5545   001EBC  0E80               	movlw	128
  5546   001EBE  1A17               	xorwf	(___flge@ff2+3)^0,f,c
  5547   001EC0  5014               	movf	___flge@ff2^0,w,c
  5548   001EC2  5C10               	subwf	___flge@ff1^0,w,c
  5549   001EC4  5015               	movf	(___flge@ff2+1)^0,w,c
  5550   001EC6  5811               	subwfb	(___flge@ff1+1)^0,w,c
  5551   001EC8  5016               	movf	(___flge@ff2+2)^0,w,c
  5552   001ECA  5812               	subwfb	(___flge@ff1+2)^0,w,c
  5553   001ECC  5017               	movf	(___flge@ff2+3)^0,w,c
  5554   001ECE  5813               	subwfb	(___flge@ff1+3)^0,w,c
  5555   001ED0  B0D8               	btfsc	status,0,c
  5556   001ED2  EF6D  F00F         	goto	u2191
  5557   001ED6  EF6F  F00F         	goto	u2190
  5558   001EDA                     u2191:
  5559   001EDA  EF72  F00F         	goto	l2671
  5560   001EDE                     u2190:
  5561   001EDE  90D8               	bcf	status,0,c
  5562   001EE0  EF73  F00F         	goto	l640
  5563   001EE4                     l2671:
  5564   001EE4  80D8               	bsf	status,0,c
  5565   001EE6                     l640:
  5566   001EE6  0012               	return		;funcret
  5567   001EE8                     __end_of___flge:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _TMR0_COUNT *****************
  5571 ;; Defined at:
  5572 ;;		line 190 in file "Main_program.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;		None
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		None
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5589 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5590 ;;Total ram usage:        0 bytes
  5591 ;; Hardware stack levels used: 1
  5592 ;; Hardware stack levels required when called: 1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_FILL
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text24
  5601   002640                     __ptext24:
  5602                           	callstack 0
  5603   002640                     _TMR0_COUNT:
  5604                           	callstack 28
  5605   002640                     
  5606                           ;Main_program.c: 193:     T0CONbits.T08BIT = 1;
  5607   002640  8CD5               	bsf	213,6,c	;volatile
  5608                           
  5609                           ;Main_program.c: 194:     T0CONbits.T0CS = 1;
  5610   002642  8AD5               	bsf	213,5,c	;volatile
  5611                           
  5612                           ;Main_program.c: 195:     T0CONbits.PSA = 1;
  5613   002644  86D5               	bsf	213,3,c	;volatile
  5614                           
  5615                           ;Main_program.c: 196:     T0CONbits.T0SE = 1;
  5616   002646  88D5               	bsf	213,4,c	;volatile
  5617                           
  5618                           ;Main_program.c: 197:     TMR0L = 255;
  5619   002648  68D6               	setf	214,c	;volatile
  5620                           
  5621                           ;Main_program.c: 198:     T0CONbits.TMR0ON = 1;
  5622   00264A  8ED5               	bsf	213,7,c	;volatile
  5623   00264C  0012               	return		;funcret
  5624   00264E                     __end_of_TMR0_COUNT:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function _Lcd_Write_String *****************
  5628 ;; Defined at:
  5629 ;;		line 104 in file "lcd.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  a               2    5[COMRAM] PTR const unsigned char 
  5632 ;;		 -> STRING_VALUE_IN_ML(5), STR_11(9), STRING_VAL_TYPED(5), STR_9(7), 
  5633 ;;		 -> STR_8(17), STR_7(9), STR_6(7), STR_5(17), 
  5634 ;;		 -> STR_4(6), STR_3(17), STR_2(6), STR_1(17), 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  i               2    9[COMRAM] int 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5646 ;;      Params:         2       0       0       0       0       0       0       0       0
  5647 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5648 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5649 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5650 ;;Total ram usage:        6 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 3
  5653 ;; This function calls:
  5654 ;;		_Lcd_Write_Char
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;;		_USER_VALUE
  5658 ;;		_FILL
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text25
  5663   0022D0                     __ptext25:
  5664                           	callstack 0
  5665   0022D0                     _Lcd_Write_String:
  5666                           	callstack 26
  5667   0022D0                     
  5668                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  5669   0022D0  0E00               	movlw	0
  5670   0022D2  6E0B               	movwf	(Lcd_Write_String@i+1)^0,c
  5671   0022D4  0E00               	movlw	0
  5672   0022D6  6E0A               	movwf	Lcd_Write_String@i^0,c
  5673   0022D8  EF88  F011         	goto	l2497
  5674   0022DC                     l2493:
  5675                           
  5676                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  5677   0022DC  500A               	movf	Lcd_Write_String@i^0,w,c
  5678   0022DE  2406               	addwf	Lcd_Write_String@a^0,w,c
  5679   0022E0  6E08               	movwf	??_Lcd_Write_String^0,c
  5680   0022E2  500B               	movf	(Lcd_Write_String@i+1)^0,w,c
  5681   0022E4  2007               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  5682   0022E6  6E09               	movwf	(??_Lcd_Write_String+1)^0,c
  5683   0022E8  C008  FFF6         	movff	??_Lcd_Write_String,tblptrl
  5684   0022EC  C009  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  5685   0022F0  6AF8               	clrf	tblptru,c
  5686   0022F2  0E07               	movlw	(high __ramtop+-1)
  5687   0022F4  64F7               	cpfsgt	tblptrh,c
  5688   0022F6  D003               	bra	u1937
  5689   0022F8  0008               	tblrd		*
  5690   0022FA  50F5               	movf	tablat,w,c
  5691   0022FC  D005               	bra	u1930
  5692   0022FE                     u1937:
  5693   0022FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  5694   002302  CFF7 FFE2          	movff	tblptrh,fsr1h
  5695   002306  50E7               	movf	indf1,w,c
  5696   002308                     u1930:
  5697   002308  ECC3  F012         	call	_Lcd_Write_Char
  5698   00230C  4A0A               	infsnz	Lcd_Write_String@i^0,f,c
  5699   00230E  2A0B               	incf	(Lcd_Write_String@i+1)^0,f,c
  5700   002310                     l2497:
  5701   002310  500A               	movf	Lcd_Write_String@i^0,w,c
  5702   002312  2406               	addwf	Lcd_Write_String@a^0,w,c
  5703   002314  6E08               	movwf	??_Lcd_Write_String^0,c
  5704   002316  500B               	movf	(Lcd_Write_String@i+1)^0,w,c
  5705   002318  2007               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  5706   00231A  6E09               	movwf	(??_Lcd_Write_String+1)^0,c
  5707   00231C  C008  FFF6         	movff	??_Lcd_Write_String,tblptrl
  5708   002320  C009  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  5709   002324  6AF8               	clrf	tblptru,c
  5710   002326  0E07               	movlw	(high __ramtop+-1)
  5711   002328  64F7               	cpfsgt	tblptrh,c
  5712   00232A  D003               	bra	u1947
  5713   00232C  0008               	tblrd		*
  5714   00232E  50F5               	movf	tablat,w,c
  5715   002330  D005               	bra	u1940
  5716   002332                     u1947:
  5717   002332  CFF6 FFE1          	movff	tblptrl,fsr1l
  5718   002336  CFF7 FFE2          	movff	tblptrh,fsr1h
  5719   00233A  50E7               	movf	indf1,w,c
  5720   00233C                     u1940:
  5721   00233C  0900               	iorlw	0
  5722   00233E  A4D8               	btfss	status,2,c
  5723   002340  EFA4  F011         	goto	u1951
  5724   002344  EFA6  F011         	goto	u1950
  5725   002348                     u1951:
  5726   002348  EF6E  F011         	goto	l2493
  5727   00234C                     u1950:
  5728   00234C  0012               	return		;funcret
  5729   00234E                     __end_of_Lcd_Write_String:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _Lcd_Write_Char *****************
  5733 ;; Defined at:
  5734 ;;		line 88 in file "lcd.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  a               1    wreg     unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  a               1    4[COMRAM] unsigned char 
  5739 ;;  y               1    3[COMRAM] unsigned char 
  5740 ;;  temp            1    2[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0
  5751 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5753 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:        3 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 2
  5757 ;; This function calls:
  5758 ;;		_Lcd_Port
  5759 ;; This function is called by:
  5760 ;;		_WELCOME
  5761 ;;		_USER_VALUE
  5762 ;;		_Lcd_Write_String
  5763 ;;		_Lcd_CGRAM_CreateChar
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text26
  5768   002586                     __ptext26:
  5769                           	callstack 0
  5770   002586                     _Lcd_Write_Char:
  5771                           	callstack 27
  5772                           
  5773                           ;incstack = 0
  5774                           ;Lcd_Write_Char@a stored from wreg
  5775   002586  6E05               	movwf	Lcd_Write_Char@a^0,c
  5776   002588                     
  5777                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  5778   002588  5005               	movf	Lcd_Write_Char@a^0,w,c
  5779   00258A  0B0F               	andlw	15
  5780   00258C  6E03               	movwf	Lcd_Write_Char@temp^0,c
  5781                           
  5782                           ;lcd.c: 92:     y = a&0xF0;
  5783   00258E  5005               	movf	Lcd_Write_Char@a^0,w,c
  5784   002590  0BF0               	andlw	240
  5785   002592  6E04               	movwf	Lcd_Write_Char@y^0,c
  5786   002594                     
  5787                           ;lcd.c: 93:     LATAbits.LA0 = 1;
  5788   002594  8089               	bsf	137,0,c	;volatile
  5789   002596                     
  5790                           ;lcd.c: 94:     Lcd_Port(y>>4);
  5791   002596  3804               	swapf	Lcd_Write_Char@y^0,w,c
  5792   002598  0B0F               	andlw	15
  5793   00259A  ECE4  F011         	call	_Lcd_Port
  5794   00259E                     
  5795                           ;lcd.c: 95:     LATAbits.LA1 = 1;
  5796   00259E  8289               	bsf	137,1,c	;volatile
  5797   0025A0                     
  5798                           ;lcd.c: 96:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  5799   0025A0  0EA0               	movlw	160
  5800   0025A2                     u3267:
  5801   0025A2  2EE8               	decfsz	wreg,f,c
  5802   0025A4  D7FE               	bra	u3267
  5803   0025A6                     
  5804                           ;lcd.c: 97:     LATAbits.LA1 = 0;
  5805   0025A6  9289               	bcf	137,1,c	;volatile
  5806   0025A8                     
  5807                           ;lcd.c: 98:     Lcd_Port(temp);
  5808   0025A8  5003               	movf	Lcd_Write_Char@temp^0,w,c
  5809   0025AA  ECE4  F011         	call	_Lcd_Port
  5810   0025AE                     
  5811                           ;lcd.c: 99:     LATAbits.LA1 = 1;
  5812   0025AE  8289               	bsf	137,1,c	;volatile
  5813   0025B0                     
  5814                           ;lcd.c: 100:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  5815   0025B0  0EA0               	movlw	160
  5816   0025B2                     u3277:
  5817   0025B2  2EE8               	decfsz	wreg,f,c
  5818   0025B4  D7FE               	bra	u3277
  5819   0025B6                     
  5820                           ;lcd.c: 101:     LATAbits.LA1 = 0;
  5821   0025B6  9289               	bcf	137,1,c	;volatile
  5822   0025B8  0012               	return		;funcret
  5823   0025BA                     __end_of_Lcd_Write_Char:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function _Lcd_Set_Cursor *****************
  5827 ;; Defined at:
  5828 ;;		line 26 in file "lcd.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  a               1    wreg     unsigned char 
  5831 ;;  b               1    4[COMRAM] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  a               1    5[COMRAM] unsigned char 
  5834 ;;  temp            1    8[COMRAM] unsigned char 
  5835 ;;  y               1    7[COMRAM] unsigned char 
  5836 ;;  z               1    6[COMRAM] unsigned char 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2, status,0, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5846 ;;      Params:         1       0       0       0       0       0       0       0       0
  5847 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5849 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5850 ;;Total ram usage:        5 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 3
  5853 ;; This function calls:
  5854 ;;		_Lcd_Cmd
  5855 ;; This function is called by:
  5856 ;;		_main
  5857 ;;		_WELCOME
  5858 ;;		_USER_VALUE
  5859 ;;		_FILL
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text27
  5864   001FD8                     __ptext27:
  5865                           	callstack 0
  5866   001FD8                     _Lcd_Set_Cursor:
  5867                           	callstack 26
  5868                           
  5869                           ;incstack = 0
  5870                           ;Lcd_Set_Cursor@a stored from wreg
  5871   001FD8  6E06               	movwf	Lcd_Set_Cursor@a^0,c
  5872   001FDA                     
  5873                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  5874   001FDA  0406               	decf	Lcd_Set_Cursor@a^0,w,c
  5875   001FDC  A4D8               	btfss	status,2,c
  5876   001FDE  EFF3  F00F         	goto	u1891
  5877   001FE2  EFF5  F00F         	goto	u1890
  5878   001FE6                     u1891:
  5879   001FE6  EF06  F010         	goto	l2467
  5880   001FEA                     u1890:
  5881   001FEA                     
  5882                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  5883   001FEA  5005               	movf	Lcd_Set_Cursor@b^0,w,c
  5884   001FEC  0F7F               	addlw	127
  5885   001FEE  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  5886                           
  5887                           ;lcd.c: 32:         z = temp>>4;
  5888   001FF0  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  5889   001FF2  0B0F               	andlw	15
  5890   001FF4  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  5891                           
  5892                           ;lcd.c: 33:         y = temp & 0x0F;
  5893   001FF6  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  5894   001FF8  0B0F               	andlw	15
  5895   001FFA  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  5896   001FFC                     
  5897                           ;lcd.c: 34:         Lcd_Cmd(z);
  5898   001FFC  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  5899   001FFE  ECF0  F012         	call	_Lcd_Cmd
  5900   002002                     
  5901                           ;lcd.c: 35:         Lcd_Cmd(y);
  5902   002002  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  5903   002004  ECF0  F012         	call	_Lcd_Cmd
  5904                           
  5905                           ;lcd.c: 36:     }
  5906   002008  EF54  F010         	goto	l248
  5907   00200C                     l2467:
  5908   00200C  0E02               	movlw	2
  5909   00200E  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  5910   002010  A4D8               	btfss	status,2,c
  5911   002012  EF0D  F010         	goto	u1901
  5912   002016  EF0F  F010         	goto	u1900
  5913   00201A                     u1901:
  5914   00201A  EF20  F010         	goto	l2475
  5915   00201E                     u1900:
  5916   00201E                     
  5917                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  5918   00201E  5005               	movf	Lcd_Set_Cursor@b^0,w,c
  5919   002020  0FBF               	addlw	191
  5920   002022  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  5921                           
  5922                           ;lcd.c: 40:         z = temp>>4;
  5923   002024  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  5924   002026  0B0F               	andlw	15
  5925   002028  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  5926                           
  5927                           ;lcd.c: 41:         y = temp & 0x0F;
  5928   00202A  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  5929   00202C  0B0F               	andlw	15
  5930   00202E  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  5931   002030                     
  5932                           ;lcd.c: 42:         Lcd_Cmd(z);
  5933   002030  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  5934   002032  ECF0  F012         	call	_Lcd_Cmd
  5935   002036                     
  5936                           ;lcd.c: 43:         Lcd_Cmd(y);
  5937   002036  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  5938   002038  ECF0  F012         	call	_Lcd_Cmd
  5939                           
  5940                           ;lcd.c: 44:     }
  5941   00203C  EF54  F010         	goto	l248
  5942   002040                     l2475:
  5943   002040  0E03               	movlw	3
  5944   002042  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  5945   002044  A4D8               	btfss	status,2,c
  5946   002046  EF27  F010         	goto	u1911
  5947   00204A  EF29  F010         	goto	u1910
  5948   00204E                     u1911:
  5949   00204E  EF3A  F010         	goto	l2483
  5950   002052                     u1910:
  5951   002052                     
  5952                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  5953   002052  5005               	movf	Lcd_Set_Cursor@b^0,w,c
  5954   002054  0F93               	addlw	147
  5955   002056  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  5956                           
  5957                           ;lcd.c: 48:         z = temp>>4;
  5958   002058  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  5959   00205A  0B0F               	andlw	15
  5960   00205C  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  5961                           
  5962                           ;lcd.c: 49:         y = temp & 0x0F;
  5963   00205E  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  5964   002060  0B0F               	andlw	15
  5965   002062  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  5966   002064                     
  5967                           ;lcd.c: 50:         Lcd_Cmd(z);
  5968   002064  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  5969   002066  ECF0  F012         	call	_Lcd_Cmd
  5970   00206A                     
  5971                           ;lcd.c: 51:         Lcd_Cmd(y);
  5972   00206A  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  5973   00206C  ECF0  F012         	call	_Lcd_Cmd
  5974                           
  5975                           ;lcd.c: 52:     }
  5976   002070  EF54  F010         	goto	l248
  5977   002074                     l2483:
  5978   002074  0E04               	movlw	4
  5979   002076  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  5980   002078  A4D8               	btfss	status,2,c
  5981   00207A  EF41  F010         	goto	u1921
  5982   00207E  EF43  F010         	goto	u1920
  5983   002082                     u1921:
  5984   002082  EF54  F010         	goto	l244
  5985   002086                     u1920:
  5986   002086                     
  5987                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  5988   002086  5005               	movf	Lcd_Set_Cursor@b^0,w,c
  5989   002088  0FD3               	addlw	211
  5990   00208A  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  5991                           
  5992                           ;lcd.c: 56:         z = temp>>4;
  5993   00208C  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  5994   00208E  0B0F               	andlw	15
  5995   002090  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  5996                           
  5997                           ;lcd.c: 57:         y = temp & 0x0F;
  5998   002092  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  5999   002094  0B0F               	andlw	15
  6000   002096  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  6001   002098                     
  6002                           ;lcd.c: 58:         Lcd_Cmd(z);
  6003   002098  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  6004   00209A  ECF0  F012         	call	_Lcd_Cmd
  6005   00209E                     
  6006                           ;lcd.c: 59:         Lcd_Cmd(y);
  6007   00209E  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  6008   0020A0  ECF0  F012         	call	_Lcd_Cmd
  6009   0020A4  EF54  F010         	goto	l248
  6010   0020A8                     l244:
  6011   0020A8                     l248:
  6012   0020A8  0012               	return		;funcret
  6013   0020AA                     __end_of_Lcd_Set_Cursor:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function _Lcd_Clear *****************
  6017 ;; Defined at:
  6018 ;;		line 20 in file "lcd.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; Hardware stack levels required when called: 3
  6039 ;; This function calls:
  6040 ;;		_Lcd_Cmd
  6041 ;; This function is called by:
  6042 ;;		_main
  6043 ;;		_WELCOME
  6044 ;;		_FILL
  6045 ;;		_Lcd_Init
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text28
  6050   00264E                     __ptext28:
  6051                           	callstack 0
  6052   00264E                     _Lcd_Clear:
  6053                           	callstack 26
  6054   00264E                     
  6055                           ;lcd.c: 22:     Lcd_Cmd(0);
  6056   00264E  0E00               	movlw	0
  6057   002650  ECF0  F012         	call	_Lcd_Cmd
  6058                           
  6059                           ;lcd.c: 23:     Lcd_Cmd(1);
  6060   002654  0E01               	movlw	1
  6061   002656  ECF0  F012         	call	_Lcd_Cmd
  6062   00265A  0012               	return		;funcret
  6063   00265C                     __end_of_Lcd_Clear:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _Lcd_Cmd *****************
  6067 ;; Defined at:
  6068 ;;		line 11 in file "lcd.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  a               1    wreg     unsigned char 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  a               1    3[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0
  6083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6085 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6086 ;;Total ram usage:        2 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 2
  6089 ;; This function calls:
  6090 ;;		_Lcd_Port
  6091 ;; This function is called by:
  6092 ;;		_Lcd_Clear
  6093 ;;		_Lcd_Set_Cursor
  6094 ;;		_Lcd_Init
  6095 ;;		_Lcd_Blink
  6096 ;;		_Lcd_NoBlink
  6097 ;;		_Lcd_Shift_Right
  6098 ;;		_Lcd_Shift_Left
  6099 ;;		_Lcd_CGRAM_Init
  6100 ;;		_Lcd_CGRAM_Close
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text29
  6105   0025E0                     __ptext29:
  6106                           	callstack 0
  6107   0025E0                     _Lcd_Cmd:
  6108                           	callstack 26
  6109                           
  6110                           ;incstack = 0
  6111                           ;Lcd_Cmd@a stored from wreg
  6112   0025E0  6E04               	movwf	Lcd_Cmd@a^0,c
  6113   0025E2                     
  6114                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA0 = 0;
  6115   0025E2  9089               	bcf	137,0,c	;volatile
  6116   0025E4                     
  6117                           ;lcd.c: 14:     Lcd_Port(a);
  6118   0025E4  5004               	movf	Lcd_Cmd@a^0,w,c
  6119   0025E6  ECE4  F011         	call	_Lcd_Port
  6120   0025EA                     
  6121                           ;lcd.c: 15:     LATAbits.LA1 = 1;
  6122   0025EA  8289               	bsf	137,1,c	;volatile
  6123   0025EC                     
  6124                           ;lcd.c: 16:     _delay((unsigned long)((4)*(48000000/4000.0)));
  6125   0025EC  0E3F               	movlw	63
  6126   0025EE  6E03               	movwf	??_Lcd_Cmd^0,c
  6127   0025F0  0E55               	movlw	85
  6128   0025F2                     u3287:
  6129   0025F2  2EE8               	decfsz	wreg,f,c
  6130   0025F4  D7FE               	bra	u3287
  6131   0025F6  2E03               	decfsz	??_Lcd_Cmd^0,f,c
  6132   0025F8  D7FC               	bra	u3287
  6133   0025FA  F000               	nop	
  6134   0025FC                     
  6135                           ;lcd.c: 17:     LATAbits.LA1 = 0;
  6136   0025FC  9289               	bcf	137,1,c	;volatile
  6137   0025FE  0012               	return		;funcret
  6138   002600                     __end_of_Lcd_Cmd:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _Lcd_Port *****************
  6142 ;; Defined at:
  6143 ;;		line 3 in file "lcd.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  a               1    wreg     unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  a               1    1[COMRAM] unsigned char 
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0
  6158 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6160 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6161 ;;Total ram usage:        1 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 1
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_Lcd_Cmd
  6168 ;;		_Lcd_Init
  6169 ;;		_Lcd_Write_Char
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text30
  6174   0023C8                     __ptext30:
  6175                           	callstack 0
  6176   0023C8                     _Lcd_Port:
  6177                           	callstack 27
  6178                           
  6179                           ;incstack = 0
  6180                           ;Lcd_Port@a stored from wreg
  6181   0023C8  6E02               	movwf	Lcd_Port@a^0,c
  6182   0023CA                     
  6183                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATBbits.LB4 = 1) 
      +                          : (LATBbits.LB4 = 0);
  6184   0023CA  A002               	btfss	Lcd_Port@a^0,0,c
  6185   0023CC  EFEA  F011         	goto	u1581
  6186   0023D0  EFEC  F011         	goto	u1580
  6187   0023D4                     u1581:
  6188   0023D4  EFEF  F011         	goto	l217
  6189   0023D8                     u1580:
  6190   0023D8  888A               	bsf	138,4,c	;volatile
  6191   0023DA  EFF0  F011         	goto	l2291
  6192   0023DE                     l217:
  6193   0023DE  988A               	bcf	138,4,c	;volatile
  6194   0023E0                     l2291:
  6195                           
  6196                           ;lcd.c: 6:     (a & 2) ? (LATBbits.LB5 = 1) : (LATBbits.LB5 = 0);
  6197   0023E0  A202               	btfss	Lcd_Port@a^0,1,c
  6198   0023E2  EFF5  F011         	goto	u1591
  6199   0023E6  EFF7  F011         	goto	u1590
  6200   0023EA                     u1591:
  6201   0023EA  EFFA  F011         	goto	l221
  6202   0023EE                     u1590:
  6203   0023EE  8A8A               	bsf	138,5,c	;volatile
  6204   0023F0  EFFB  F011         	goto	l2295
  6205   0023F4                     l221:
  6206   0023F4  9A8A               	bcf	138,5,c	;volatile
  6207   0023F6                     l2295:
  6208                           
  6209                           ;lcd.c: 7:     (a & 4) ? (LATBbits.LB6 = 1) : (LATBbits.LB6 = 0);
  6210   0023F6  A402               	btfss	Lcd_Port@a^0,2,c
  6211   0023F8  EF00  F012         	goto	u1601
  6212   0023FC  EF02  F012         	goto	u1600
  6213   002400                     u1601:
  6214   002400  EF05  F012         	goto	l225
  6215   002404                     u1600:
  6216   002404  8C8A               	bsf	138,6,c	;volatile
  6217   002406  EF06  F012         	goto	l2299
  6218   00240A                     l225:
  6219   00240A  9C8A               	bcf	138,6,c	;volatile
  6220   00240C                     l2299:
  6221                           
  6222                           ;lcd.c: 8:     (a & 8) ? (LATBbits.LB7 = 1) : (LATBbits.LB7 = 0);
  6223   00240C  A602               	btfss	Lcd_Port@a^0,3,c
  6224   00240E  EF0B  F012         	goto	u1611
  6225   002412  EF0D  F012         	goto	u1610
  6226   002416                     u1611:
  6227   002416  EF10  F012         	goto	l229
  6228   00241A                     u1610:
  6229   00241A  8E8A               	bsf	138,7,c	;volatile
  6230   00241C  EF11  F012         	goto	l232
  6231   002420                     l229:
  6232   002420  9E8A               	bcf	138,7,c	;volatile
  6233   002422                     l232:
  6234   002422  0012               	return		;funcret
  6235   002424                     __end_of_Lcd_Port:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _ISR_TIMER0 *****************
  6239 ;; Defined at:
  6240 ;;		line 50 in file "Main_program.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;		None
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;		None
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      void 
  6247 ;; Registers used:
  6248 ;;		wreg, status,2, status,0
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6254 ;;      Params:         0       0       0       0       0       0       0       0       0
  6255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6256 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6257 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6258 ;;Total ram usage:        1 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		Interrupt level 2
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	intcode
  6268   000008                     __pintcode:
  6269                           	callstack 0
  6270   000008                     _ISR_TIMER0:
  6271                           	callstack 21
  6272                           
  6273                           ;incstack = 0
  6274   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6275   00000A  ED84  F012         	call	int_func,f	;refresh shadow registers
  6276                           
  6277                           	psect	intcode_body
  6278   002508                     __pintcode_body:
  6279                           	callstack 21
  6280   002508                     int_func:
  6281                           	callstack 21
  6282   002508  0006               	pop		; remove dummy address from shadow register refresh
  6283   00250A                     
  6284                           ;Main_program.c: 52:     if (INTCONbits.TMR0IF == 1)
  6285   00250A  A4F2               	btfss	242,2,c	;volatile
  6286   00250C  EF8A  F012         	goto	i2u259_41
  6287   002510  EF8C  F012         	goto	i2u259_40
  6288   002514                     i2u259_41:
  6289   002514  EFA2  F012         	goto	i2l126
  6290   002518                     i2u259_40:
  6291   002518                     
  6292                           ;Main_program.c: 53:     {;Main_program.c: 54:         LATEbits.LATE2 = !LATEbits.LATE2;
  6293   002518  A48D               	btfss	141,2,c	;volatile
  6294   00251A  EF91  F012         	goto	i2u260_41
  6295   00251E  EF95  F012         	goto	i2u260_40
  6296   002522                     i2u260_41:
  6297   002522  6A01               	clrf	??_ISR_TIMER0^0,c
  6298   002524  2A01               	incf	??_ISR_TIMER0^0,f,c
  6299   002526  EF96  F012         	goto	i2u261_48
  6300   00252A                     i2u260_40:
  6301   00252A  6A01               	clrf	??_ISR_TIMER0^0,c
  6302   00252C                     i2u261_48:
  6303   00252C  4601               	rlncf	??_ISR_TIMER0^0,f,c
  6304   00252E  4601               	rlncf	??_ISR_TIMER0^0,f,c
  6305   002530  508D               	movf	141,w,c	;volatile
  6306   002532  1801               	xorwf	??_ISR_TIMER0^0,w,c
  6307   002534  0BFB               	andlw	-5
  6308   002536  1801               	xorwf	??_ISR_TIMER0^0,w,c
  6309   002538  6E8D               	movwf	141,c	;volatile
  6310   00253A                     
  6311                           ;Main_program.c: 55:         PULSE++;
  6312   00253A  0100               	movlb	0	; () banked
  6313   00253C  4B78               	infsnz	_PULSE& (0+255),f,b
  6314   00253E  2B79               	incf	(_PULSE+1)& (0+255),f,b
  6315   002540                     
  6316                           ; BSR set to: 0
  6317                           ;Main_program.c: 56:         TMR0L = 255;
  6318   002540  68D6               	setf	214,c	;volatile
  6319   002542                     
  6320                           ; BSR set to: 0
  6321                           ;Main_program.c: 57:         INTCONbits.TMR0IF = 0;
  6322   002542  94F2               	bcf	242,2,c	;volatile
  6323   002544                     i2l126:
  6324   002544  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6325   002546  0011               	retfie		f
  6326   002548                     __end_of_ISR_TIMER0:
  6327                           	callstack 0
  6328                           
  6329                           	psect	rparam
  6330   000000                     
  6331                           	psect	temp
  6332   00005D                     btemp:
  6333                           	callstack 0
  6334   00005D                     	ds	1
  6335   000000                     int$flags	set	btemp
  6336   000000                     wtemp8	set	btemp+1
  6337   000000                     ttemp5	set	btemp+1
  6338   000000                     ttemp6	set	btemp+4
  6339   000000                     ttemp7	set	btemp+8
  6340                           
  6341                           	psect	idloc
  6342                           
  6343                           ;Config register IDLOC0 @ 0x200000
  6344                           ;	unspecified, using default values
  6345   200000                     	org	2097152
  6346   200000  FF                 	db	255
  6347                           
  6348                           ;Config register IDLOC1 @ 0x200001
  6349                           ;	unspecified, using default values
  6350   200001                     	org	2097153
  6351   200001  FF                 	db	255
  6352                           
  6353                           ;Config register IDLOC2 @ 0x200002
  6354                           ;	unspecified, using default values
  6355   200002                     	org	2097154
  6356   200002  FF                 	db	255
  6357                           
  6358                           ;Config register IDLOC3 @ 0x200003
  6359                           ;	unspecified, using default values
  6360   200003                     	org	2097155
  6361   200003  FF                 	db	255
  6362                           
  6363                           ;Config register IDLOC4 @ 0x200004
  6364                           ;	unspecified, using default values
  6365   200004                     	org	2097156
  6366   200004  FF                 	db	255
  6367                           
  6368                           ;Config register IDLOC5 @ 0x200005
  6369                           ;	unspecified, using default values
  6370   200005                     	org	2097157
  6371   200005  FF                 	db	255
  6372                           
  6373                           ;Config register IDLOC6 @ 0x200006
  6374                           ;	unspecified, using default values
  6375   200006                     	org	2097158
  6376   200006  FF                 	db	255
  6377                           
  6378                           ;Config register IDLOC7 @ 0x200007
  6379                           ;	unspecified, using default values
  6380   200007                     	org	2097159
  6381   200007  FF                 	db	255
  6382                           
  6383                           	psect	config
  6384                           
  6385                           ;Config register CONFIG1L @ 0x300000
  6386                           ;	PLL Prescaler Selection bits
  6387                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  6388                           ;	System Clock Postscaler Selection bits
  6389                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  6390                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6391                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  6392   300000                     	org	3145728
  6393   300000  04                 	db	4
  6394                           
  6395                           ;Config register CONFIG1H @ 0x300001
  6396                           ;	Oscillator Selection bits
  6397                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  6398                           ;	Fail-Safe Clock Monitor Enable bit
  6399                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6400                           ;	Internal/External Oscillator Switchover bit
  6401                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6402   300001                     	org	3145729
  6403   300001  0E                 	db	14
  6404                           
  6405                           ;Config register CONFIG2L @ 0x300002
  6406                           ;	Power-up Timer Enable bit
  6407                           ;	PWRT = ON, PWRT enabled
  6408                           ;	Brown-out Reset Enable bits
  6409                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  6410                           ;	Brown-out Reset Voltage bits
  6411                           ;	BORV = 3, Minimum setting 2.05V
  6412                           ;	USB Voltage Regulator Enable bit
  6413                           ;	VREGEN = OFF, USB voltage regulator disabled
  6414   300002                     	org	3145730
  6415   300002  18                 	db	24
  6416                           
  6417                           ;Config register CONFIG2H @ 0x300003
  6418                           ;	Watchdog Timer Enable bit
  6419                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6420                           ;	Watchdog Timer Postscale Select bits
  6421                           ;	WDTPS = 32768, 1:32768
  6422   300003                     	org	3145731
  6423   300003  1E                 	db	30
  6424                           
  6425                           ; Padding undefined space
  6426   300004                     	org	3145732
  6427   300004  FF                 	db	255
  6428                           
  6429                           ;Config register CONFIG3H @ 0x300005
  6430                           ;	CCP2 MUX bit
  6431                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  6432                           ;	PORTB A/D Enable bit
  6433                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6434                           ;	Low-Power Timer 1 Oscillator Enable bit
  6435                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6436                           ;	MCLR Pin Enable bit
  6437                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6438   300005                     	org	3145733
  6439   300005  83                 	db	131
  6440                           
  6441                           ;Config register CONFIG4L @ 0x300006
  6442                           ;	Stack Full/Underflow Reset Enable bit
  6443                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6444                           ;	Single-Supply ICSP Enable bit
  6445                           ;	LVP = OFF, Single-Supply ICSP disabled
  6446                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6447                           ;	ICPRT = OFF, ICPORT disabled
  6448                           ;	Extended Instruction Set Enable bit
  6449                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6450                           ;	Background Debugger Enable bit
  6451                           ;	DEBUG = 0x1, unprogrammed default
  6452   300006                     	org	3145734
  6453   300006  81                 	db	129
  6454                           
  6455                           ; Padding undefined space
  6456   300007                     	org	3145735
  6457   300007  FF                 	db	255
  6458                           
  6459                           ;Config register CONFIG5L @ 0x300008
  6460                           ;	Code Protection bit
  6461                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  6462                           ;	Code Protection bit
  6463                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  6464                           ;	Code Protection bit
  6465                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  6466                           ;	Code Protection bit
  6467                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  6468   300008                     	org	3145736
  6469   300008  0F                 	db	15
  6470                           
  6471                           ;Config register CONFIG5H @ 0x300009
  6472                           ;	Boot Block Code Protection bit
  6473                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  6474                           ;	Data EEPROM Code Protection bit
  6475                           ;	CPD = OFF, Data EEPROM is not code-protected
  6476   300009                     	org	3145737
  6477   300009  C0                 	db	192
  6478                           
  6479                           ;Config register CONFIG6L @ 0x30000A
  6480                           ;	Write Protection bit
  6481                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  6482                           ;	Write Protection bit
  6483                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  6484                           ;	Write Protection bit
  6485                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  6486                           ;	Write Protection bit
  6487                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  6488   30000A                     	org	3145738
  6489   30000A  0F                 	db	15
  6490                           
  6491                           ;Config register CONFIG6H @ 0x30000B
  6492                           ;	Configuration Register Write Protection bit
  6493                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6494                           ;	Boot Block Write Protection bit
  6495                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  6496                           ;	Data EEPROM Write Protection bit
  6497                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6498   30000B                     	org	3145739
  6499   30000B  E0                 	db	224
  6500                           
  6501                           ;Config register CONFIG7L @ 0x30000C
  6502                           ;	Table Read Protection bit
  6503                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6504                           ;	Table Read Protection bit
  6505                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6506                           ;	Table Read Protection bit
  6507                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6508                           ;	Table Read Protection bit
  6509                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6510   30000C                     	org	3145740
  6511   30000C  0F                 	db	15
  6512                           
  6513                           ;Config register CONFIG7H @ 0x30000D
  6514                           ;	Boot Block Table Read Protection bit
  6515                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  6516   30000D                     	org	3145741
  6517   30000D  40                 	db	64
  6518                           tosu	equ	0xFFF
  6519                           tosh	equ	0xFFE
  6520                           tosl	equ	0xFFD
  6521                           stkptr	equ	0xFFC
  6522                           pclatu	equ	0xFFB
  6523                           pclath	equ	0xFFA
  6524                           pcl	equ	0xFF9
  6525                           tblptru	equ	0xFF8
  6526                           tblptrh	equ	0xFF7
  6527                           tblptrl	equ	0xFF6
  6528                           tablat	equ	0xFF5
  6529                           prodh	equ	0xFF4
  6530                           prodl	equ	0xFF3
  6531                           indf0	equ	0xFEF
  6532                           postinc0	equ	0xFEE
  6533                           postdec0	equ	0xFED
  6534                           preinc0	equ	0xFEC
  6535                           plusw0	equ	0xFEB
  6536                           fsr0h	equ	0xFEA
  6537                           fsr0l	equ	0xFE9
  6538                           wreg	equ	0xFE8
  6539                           indf1	equ	0xFE7
  6540                           postinc1	equ	0xFE6
  6541                           postdec1	equ	0xFE5
  6542                           preinc1	equ	0xFE4
  6543                           plusw1	equ	0xFE3
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           bsr	equ	0xFE0
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           preinc2	equ	0xFDC
  6551                           plusw2	equ	0xFDB
  6552                           fsr2h	equ	0xFDA
  6553                           fsr2l	equ	0xFD9
  6554                           status	equ	0xFD8

Data Sizes:
    Strings     100
    Constant    8
    Data        20
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     21     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_10(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_10(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1414$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_10(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> STRING_VALUE_IN_ML(BANK0[5]), STRING_VAL_TYPED(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1366$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1366$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STRING_VALUE_IN_ML(BANK0[5]), STR_11(CODE[9]), STRING_VAL_TYPED(BANK0[5]), STR_9(CODE[7]), 
		 -> STR_8(CODE[17]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[17]), 
		 -> STR_4(CODE[6]), STR_3(CODE[17]), STR_2(CODE[6]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_FILL
    _WELCOME->_Lcd_Set_Cursor
    _USER_VALUE->_Lcd_Write_String
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR_TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _FILL->_sprintf

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21686
                                             19 BANK0      2     2      0
                               _FILL
                    _Keypad_Get_Char
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _USER_VALUE
                            _WELCOME
 ---------------------------------------------------------------------------------
 (1) _WELCOME                                              6     6      0    2366
                                              9 COMRAM     6     6      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _USER_VALUE                                           6     6      0    4135
                                             11 COMRAM     6     6      0
                    _Keypad_Get_Char
                          _Lcd_Blink
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Keypad_Get_Char                                      1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              4 COMRAM     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FILL                                                 2     2      0   11645
                                             88 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _TMR0_COUNT
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    5100
                                              0 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    4597
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6    4247
                                             60 COMRAM    20    14      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    3027
                                             28 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     682
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             40 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR0_COUNT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1180
                                              5 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              2 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1942
                                              4 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              2 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_TIMER0                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FILL
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _TMR0_COUNT
     ___flge
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
   _Keypad_Get_Char
   _Keypad_Init
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _USER_VALUE
     _Keypad_Get_Char
     _Lcd_Blink
       _Lcd_Cmd
     _Lcd_NoBlink
       _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
     ___wmul
   _WELCOME
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRlhlhlh     23      0       0      26        0.0%
BITBIGSFRllll       20      0       0      31        0.0%
BITBIGSFRlhh        1B      0       0      21        0.0%
BITBIGSFRh           D      0       0      20        0.0%
BITBIGSFRlhlhhh      8      0       0      22        0.0%
BITBIGSFRlhlhhl      8      0       0      23        0.0%
BITBIGSFRlllhh       5      0       0      29        0.0%
BITBIGSFRlhll        4      0       0      27        0.0%
BITBIGSFRlhlhlh      2      0       0      24        0.0%
BITBIGSFRlllhl       1      0       0      30        0.0%
BITBIGSFRlhlhlh      1      0       0      25        0.0%
BITBIGSFRllh         1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      32        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 26 18:17:28 2023

              _USER_VALUE 125C                         _N 007A       ___wmul@multiplicand 0004  
                     l200 116A                       l203 125A                       l221 23F4  
                     l143 15E2                       l232 2422                       l320 0CBC  
                     l225 240A                       l217 23DE                       l161 1C84  
                     l145 1686                       l162 1CDC                       l235 25FE  
                     l155 264C                       l251 22CE                       l323 0FBA  
                     l244 20A8                       l260 234C                       l316 2622  
                     l340 0E28                       l332 0DA8                       l324 0D20  
                     l229 2420                       l341 0E04                       l333 0D84  
                     l325 0CFC                       l238 265A                       l254 25B8  
                     l319 0CE0                       l248 20A8                       l360 0F78  
                     l352 0EF0                       l344 0E70                       l336 0DE8  
                     l328 0D60                       l272 2630                       l361 0F54  
                     l353 0ECC                       l345 0E4C                       l337 0DC4  
                     l329 0D3C                       l193 14F4                       l370 25DE  
                     l356 0F38                       l348 0EB0                       l365 0F94  
                     l357 0F14                       l349 0E8C                       l269 263E  
                     l640 1EE6                       _CAL 00CF                       l635 1EA0  
                     l815 1FD6                       l808 1FB6                       l825 2178  
                     l818 2158                       l667 1DE2                       l991 0B28  
                     l984 0932                       l993 0BA0                       l994 0B8E  
                     l988 0C96                       _PR2 000FCB                       _pad 234E  
                     wreg 000FE8              ___flmul@aexp 0021              ___flmul@bexp 0022  
     __end_of_Lcd_NoBlink 2632              ___flmul@sign 001C              ___flmul@temp 0027  
            ___flmul@prod 0023              ___fltol@exp1 0032                      l1001 0C58  
                    l1100 24C2                      l1032 199E                      l1112 2242  
                    l1120 2506                      l1025 1906                      l1123 265C  
                    l1028 1A62                      l1039 19FA                      l1072 23C6  
                    l1048 2474                      l2201 24D0                      l3001 1192  
                    l2211 1F12                      l2203 24E2                      l3011 1240  
                    l3003 119E                      l1068 2370                      l1084 18AE  
                    l1076 1718                      l2301 241A                      l2221 1F7C  
                    l2213 1F1A                      l2205 24E6                      l1093 1BC6  
                    l3013 1242                      l3005 11E8                      l1078 1720  
                    l2223 1F9C                      l2215 1F2E                      l2207 1EE8  
                    l2231 20C8                      l2311 1AA8                      l2303 1A64  
                    l3015 1258                      l3007 1232                      l2225 1F9E  
                    l2217 1F3C                      l2209 1EF4                      l2241 2140  
                    l2233 20D0                      l2313 1AB8                      l2305 1A88  
                    l3009 1236                      l2401 0D76                      l2227 1FB0  
                    l2219 1F4E                      l2243 2152                      l2235 20E4  
                    l2251 237C                      l2323 1B60                      l2315 1AD4  
                    l2307 1A96                      l2403 0D92                      l2341 2594  
                    l2237 20F2                      l2229 20AA                      l2253 2390  
                    l2245 234E                      l2261 170C                      l2317 1B30  
                    l2325 1B8C                      l2309 1AA4                      l2421 0E5A  
                    l2413 0DF6                      l2501 2632                      l3301 150A  
                    l2351 25A8                      l2343 2596                      l2239 2120  
                    l2191 21A8                      l2255 2394                      l2247 235C  
                    l2271 17D4                      l2263 1748                      l2511 2446  
                    l2431 0EBE                      l2415 0E12                      l2407 0DB6  
                    l2503 2624                      l3311 152E                      l3303 150C  
                    l2361 25E4                      l2353 25AE                      l2345 259E  
                    l2601 0AE2                      l2193 21C6                      l2185 217A  
                    l2257 23B2                      l2249 2368                      l2281 1874  
                    l2273 17DA                      l2265 1750                      l2329 1B9E  
                    l2513 2462                      l2505 2424                      l2433 0EDA  
                    l2425 0E7E                      l2409 0DD2                      l3321 153E  
                    l3313 1532                      l3305 151A                      l2291 23E0  
                    l2363 25EA                      l2355 25B0                      l2347 25A0  
                    l2339 2588                      l2611 0B38                      l2603 0AF0  
                    l2531 089A                      l2523 086E                      l2195 21FC  
                    l2187 218C                      l2283 188E                      l2275 17E0  
                    l2267 1758                      l2259 16F0                      l2371 2482  
                    l2507 2436                      l2451 0FA2                      l2443 0F46  
                    l2427 0E9A                      l2419 0E3E                      l3331 1552  
                    l3323 1542                      l3315 1534                      l3307 1526  
                    l2293 23EE                      l2365 25EC                      l2461 1FEA  
                    l2357 25B6                      l2349 25A6                      l2613 0B46  
                    l2605 0B0E                      l2541 08D6                      l2533 08AA  
                    l2525 087A                      l2701 1D82                      l2189 219E  
                    l2269 175E                      l2277 1844                      l2373 249E  
                    l2509 243E                      l2445 0F62                      l2437 0F06  
                    l2381 0C98                      l2517 25BA                      l3341 1590  
                    l3333 1560                      l3325 1544                      l3317 1536  
                    l3309 152A                      l2295 23F6                      l2287 23CA  
                    l2367 25FC                      l2359 25E2                      l2471 2030  
                    l2463 1FFC                      l2623 0BB0                      l2631 0BF8  
                    l2615 0B4A                      l2607 0B18                      l2551 090C  
                    l2543 08DC                      l2535 08BA                      l2527 0888  
                    l2711 1DB2                      l2199 24C4                      l2279 1856  
                    l2375 24BA                      l2455 0FB8                      l2439 0F22  
                    l2391 0D0A                      l2383 0CAE                      l2519 25D6  
                    l3351 15DA                      l3343 159E                      l3335 1568  
                    l3327 154A                      l3319 153A                      l2297 2404  
                    l2289 23D8                      l2481 206A                      l2473 2036  
                    l2465 2002                      l2641 0C6C                      l2633 0C12  
                    l2625 0BBC                      l2617 0B58                      l2609 0B26  
                    l2553 091C                      l2545 08EA                      l2537 08C0  
                    l2529 088A                      l2713 1DC2                      l2721 18C2  
                    l2369 2476                      l2449 0F86                      l2385 0CCA  
                    l2801 1BCC                      l3361 162A                      l3353 15F0  
                    l3345 15A6                      l3337 157A                      l3329 154E  
                    l2299 240C                      l2379 264E                      l2483 2074  
                    l2475 2040                      l2467 200C                      l2459 1FDA  
                    l2491 22D0                      l2643 0C7A                      l2635 0C26  
                    l2627 0BCA                      l2619 0B86                      l2571 099E  
                    l2563 0966                      l2555 0922                      l2547 08EC  
                    l2539 08D0                      l2715 1DD2                      l2707 1D96  
                    l2731 1940                      l2723 18D0                      l2395 0D2E  
                    l2811 1C08                      l2803 1BD6                      l3363 1636  
                    l3355 15FA                      l3347 15BE                      l3339 1582  
                    l3291 14FE                      l2485 2086                      l2477 2052  
                    l2469 201E                      l2493 22DC                      l2661 1E60  
                    l2653 1DE4                      l2645 0C7C                      l2637 0C40  
                    l2629 0BF4                      l2581 09E8                      l2573 09B6  
                    l2565 0972                      l2557 0942                      l2549 08FC  
                    l2709 1DA2                      l2741 1994                      l2733 1948  
                    l2725 1916                      l2397 0D4A                      l2389 0CEE  
                    l2901 1384                      l2813 1C0C                      l3437 16CE  
                    l3373 1694                      l3365 164C                      l3357 1606  
                    l3349 15D6                      l3293 1502                      l2487 2098  
                    l2479 2064                      l2495 230C                      l2671 1EE4  
                    l2663 1E6E                      l2655 1E12                      l2639 0C5C  
                    l2647 0C82                      l2591 0A3E                      l2583 09F8  
                    l2575 09C2                      l2567 097C                      l2559 0952  
                    l2751 1A0A                      l2743 19D0                      l2735 1954  
                    l2727 192C                      l2719 18B2                      l3439 1B7E  
                    l2903 1396                      l2911 13C0                      l2831 1C88  
                    l2823 1C3A                      l2815 1C28                      l2807 1BDE  
                    l3367 165A                      l3359 1620                      l3375 16A2  
                    l3295 1504                      l2489 209E                      l2497 2310  
                    l2665 1E80                      l2657 1E22                      l2649 0C86  
                    l2593 0A5A                      l2585 0A04                      l2577 09CE  
                    l2569 0992                      l2681 1D08                      l2761 1A52  
                    l2753 1A0E                      l2745 19DC                      l2737 1986  
                    l2921 1412                      l2913 13D6                      l2905 13A8  
                    l2841 1CD4                      l2833 1C9E                      l2825 1C52  
                    l2817 1C32                      l2809 1BF6                      l3369 1674  
                    l3297 1506                      l3289 14F6                      l2499 2640  
                    l2667 1E8E                      l2659 1E50                      l2595 0A66  
                    l2587 0A14                      l2579 09DC                      l2691 1D56  
                    l2683 1D32                      l2675 1CDE                      l2755 1A32  
                    l2747 19EA                      l2739 1988                      l2771 2256  
                    l2931 14A8                      l2923 1416                      l2915 13DE  
                    l2907 13AC                      l2851 1270                      l2843 1CD6  
                    l2835 1CA0                      l2827 1C64                      l3379 16B6  
                    l3299 1508                      l2669 1EDE                      l2597 0A82  
                    l2589 0A2E                      l2685 1D34                      l2677 1CF4  
                    l2757 1A42                      l2749 1A08                      l2765 2614  
                    l2781 229A                      l2773 226E                      l2941 14DE  
                    l2933 14B2                      l2925 141C                      l2917 13EE  
                    l2909 13B2                      l2861 1292                      l2853 127C  
                    l2845 1CD8                      l2837 1CBA                      l2829 1C68  
                    ?_pad 0012                      l2599 0AAC                      l2687 1D44  
                    l2759 1A50                      l2951 0FE0                      l2943 0FBC  
                    l2791 22B8                      l2783 22A0                      l2775 2274  
                    l2767 2244                      l2935 14BE                      l2919 1400  
                    l2927 142E                      l2871 12C8                      l2863 1298  
                    l2855 1286                      l2847 125C                      l2839 1CBC  
                    l2697 1D6E                      l2689 1D48                      l2961 102A  
                    l2953 0FEC                      l2945 0FC0                      l2793 22BE  
                    l2785 22A6                      l2777 2284                      l2769 2250  
                    l2937 14C8                      l2929 143E                      l2881 1306  
                    l2873 12DA                      l2865 12A0                      l2857 128A  
                    l2849 1266                      l2699 1D78                      l2971 105A  
                    l2963 1034                      l2955 0FF6                      l2947 0FCA  
                    l2795 22C4                      l2787 22AC                      l2779 228A  
                    l2939 14D2                      l2891 1344                      l2883 130C  
                    l2875 12DE                      l2867 12A6                      l2859 128E  
                    l2981 10C2                      l2973 10A6                      l2965 1040  
                    l2957 1014                      l2949 0FD6                      l2797 22CA  
                    l2789 22B2                      l2893 134A                      l2885 131C  
                    l2877 12E4                      l2869 12B6                      l2991 115C  
                    l2983 111A                      l2975 10B0                      l2967 1042  
                    l2959 101E                      l2887 132E                      l2895 1358  
                    l2879 12F2                      l2799 1BC8                      l2993 116E  
                    l2985 1138                      l2977 10B8                      l2969 1058  
                    l2897 136C                      l2889 1340                      l2995 1184  
                    l2987 1142                      l2979 10BC                      l2899 1374  
                    l2997 1186                      l2989 114E                      l2999 1188  
                    _CANT 00BF                      STR_1 082B                      STR_2 0864  
                    STR_3 0809                      STR_4 0864                      STR_5 083C  
                    STR_6 085D                      STR_7 084D                      STR_8 081A  
                    STR_9 0856                      _FILL 0FBC                      u2000 08FC  
                    u2001 08F8                      u2010 090C                      u2011 0908  
                    u2100 0BB0                      u2020 0942                      u2101 0BAC  
                    u2021 093E                      u2110 0BCA                      u2030 0952  
                    u2111 0BC6                      u2031 094E                      u2120 0C12  
                    u2040 0ACC                      u2200 1CF4                      u1400 218C  
                    u2121 0C0E                      u2201 1CF0                      u1401 2188  
                    u2130 0C40                      u2050 0B26                      u2210 1D28  
                    u1410 219E                      u2131 0C3C                      u2051 0B22  
                    u1411 219A                      u2140 0C7A                      u2060 0B46  
                    u2220 1D56                      u2300 1982                      u1500 20F2  
                    u1420 21C6                      u2141 0C76                      u2061 0B42  
                    u2045 0AC2                      u2221 1D52                      u2301 197E  
                    u1501 20EE                      u1421 21C2                      u2150 1E12  
                    u2070 0B58                      u2230 1D6A                      u2310 19CC  
                    u1510 2120                      u1430 21FC                      _LATB 000F8A  
                    u2151 1E0E                      u2071 0B54                      u2231 1D66  
                    u2215 1D1E                      u2311 19C8                      u1511 211C  
                    u1431 21F8                      u3007 0D34                      _LATC 000F8B  
                    u1600 2404                      u2160 1E50                      u2080 0B86  
                    u2240 1D92                      u2320 19EA                      u1440 2506  
                    u1520 235C                      u2400 12C8                      u1601 2400  
                    u2161 1E4C                      u2081 0B82                      u2241 1D8E  
                    u2321 19E6                      u1441 2502                      u1521 2358  
                    u3017 0D50                      u2401 12C4                      _LATE 000F8D  
                    u1610 241A                      u2170 1E6E                      u2090 0B9C  
                    u2250 1DB2                      u2330 19FA                      u1530 23B2  
                    u2410 12DA                      u1611 2416                      u2171 1E6A  
                    u2091 0B98                      u2251 1DAE                      u2331 19F6  
                    u1451 1EEE                      u1531 23AE                      u3107 0E84  
                    u3027 0D7C                      u2411 12D6                      u2180 1E8E  
                    u2260 1DC2                      u2340 1A08                      u1460 1F12  
                    u1540 170C                      u1620 1A88                      u1700 0D4A  
                    u2500 13D2                      u2420 1302                      u2181 1E8A  
                    u2261 1DBE                      u2341 1A04                      u1461 1F0E  
                    u1541 1708                      u1621 1A84                      u3117 0EA0  
                    u3037 0D98                      u1701 0D46                      u2501 13CE  
                    u2421 12FE                      u2190 1EDE                      u2350 1A42  
                    u2270 18C2                      u1470 1F3C                      u1550 1856  
                    u1630 1AD4                      u1710 0D76                      u2510 13EE  
                    u2430 131C                      u2191 1EDA                      u2351 1A3E  
                    u2271 18BE                      u1471 1F38                      u1551 1852  
                    u1631 1AD0                      u3207 2260                      u3127 0EC4  
                    u3047 0DBC                      u1711 0D72                      u2511 13EA  
                    u2431 1318                      u2360 1A50                      u2280 18D0  
                    u1480 1F7C                      u1560 1874                      u1640 24BA  
                    u1800 0E9A                      u1720 0D92                      u2520 1400  
                    u2440 132E                      u2361 1A4C                      u2281 18CC  
                    u1481 1F78                      u1561 1870                      u1641 24B6  
                    u3217 227A                      u3137 0EE0                      u1801 0E96  
                    u3057 0DD8                      u1721 0D8E                      u2521 13FC  
                    u2441 132A                      u2290 192C                      u1490 20C8  
                    u1570 188E                      u1810 0EBE                      u1730 0DB6  
                    u1650 0CAE                      u2530 1412                      u2450 1340  
                    u2370 1C28                      u2291 1928                      u1491 20C4  
                    u1571 188A                      u3227 2290                      u3147 0F0C  
                    u1811 0EBA                      u3067 0DFC                      u1731 0DB2  
                    u1651 0CAA                      u2531 140E                      u2451 133C  
                    u2371 1C24                      u1580 23D8                      u1900 201E  
                    u1820 0EDA                      u1740 0DD2                      u1660 0CCA  
                    u2540 143E                      u2460 1368                      u2380 1C84  
                    u1581 23D4                      u1901 201A                      u3237 104C  
                    u3157 0F28                      u1821 0ED6                      u3077 0E18  
                    u1741 0DCE                      u1661 0CC6                      u2541 143A  
                    u2461 1364                      u2381 1C80                      u1590 23EE  
                    u1910 2052                      u2550 115C                      u1830 0F06  
                    u1750 0DF6                      u1670 0CEE                      u2470 1384  
                    u2390 12B6                      u1591 23EA                      u1911 204E  
                    u3247 1178                      u2551 1158                      u3167 0F4C  
                    u1831 0F02                      u3087 0E44                      u1751 0DF2  
                    u1671 0CEA                      u2471 1380                      u2391 12B2  
                    u1920 2086                      u2560 116A                      u1840 0F22  
                    u1760 0E12                      u1680 0D0A                      u2480 1396  
                    u2800 1590                      u1921 2082                      u3257 124C  
                    u2561 1166                      u3177 0F68                      u1841 0F1E  
                    u3097 0E60                      u1761 0E0E                      u1681 0D06  
                    u2481 1392                      u2801 158C                      u1930 2308  
                    u2570 11E8                      u1850 0F46                      u1770 0E3E  
                    u1690 0D2E                      u2490 13A8                      u2810 159E  
                    u3267 25A2                      u2571 11E4                      u3187 0F8C  
                    u1851 0F42                      u1771 0E3A                      u1691 0D2A  
                    u2491 13A4                      u2811 159A                      u1940 233C  
                    u2580 1232                      u1860 0F62                      u1780 0E5A  
                    u2820 15D2                      u3277 25B2                      u2581 122E  
                    u3197 0FA8                      u1861 0F5E                      u1781 0E56  
                    u2821 15CE                      u1950 234C                      u1870 0F86  
                    u1790 0E7E                      u2830 15F0                      u3287 25F2  
                    u1951 2348                      u1871 0F82                      u1791 0E7A  
                    u2831 15EC                      u1960 0888                      u1880 0FA2  
                    u2840 165A                      u1937 22FE                      u1961 0884  
                    u1881 0F9E                      u2841 1656                      u1890 1FEA  
                    u1970 089A                      u2850 1682                      u1891 1FE6  
                    u1947 2332                      u1971 0896                      u2907 1BE8  
                    u2851 167E                      u1980 08AA                      u2860 1694  
                    u1981 08A6                      u2917 1C44                      u2861 1690  
                    u1990 08EA                      u2870 16B6                      u2790 157A  
                    u1991 08E6                      u2927 1C92                      u2871 16B2  
                    u2791 1576                      u2937 1CAC                      u2947 1CC8  
                    u2957 14E8                      u2967 0CB4                      u2887 15B2  
                    u2977 0CD0                      u2897 1666                      u2987 0CF4  
                    u2997 0D10                      _TMR2 000FCC           __end_of_WELCOME 1CDE  
       ?_Lcd_Write_String 0006                      _dbuf 0080                      _hand 0801  
                    _main 14F6                      _num1 0068                      _num2 006A  
                    _num3 006C                      _num4 006E                      _prec 0066  
                    pad@i 0019                      pad@p 0016                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      pad@w 001B                      fsr2l 000FD9  
                    btemp 005D                      _utoa 16F0                      prodh 000FF4  
                    prodl 000FF3                      start 000E        ??_Lcd_Write_String 0008  
         __end_of_Lcd_Cmd 2600               ?_ISR_TIMER0 0001              ___param_bank 000000  
                   ??_pad 0018                     ?_FILL 0001             ___fltol@sign1 0031  
                   ?_main 0001                     STR_10 086A                     STR_11 0822  
                   STR_12 086A           __end_of___flmul 0C98           __end_of___fltol 1DE4  
                   ?_utoa 001D           __end_of___lodiv 1FD8                     _T2CON 000FCA  
         __end_of___lomod 217A                     i2l126 2544             ??_Keypad_Init 0002  
             ?_TMR0_COUNT 0001              vfpfcnvrt@fmt 003F                     _TMR0L 000FD6  
                   _PULSE 0078                     _flags 007C                     _fputc 217A  
                   _fputs 24C4                     pad@fp 0012                     _width 0064  
                   _putch 265C                     tablat 000FF5                     ttemp5 005E  
                   ttemp6 0061                     ttemp7 0065                     utoa@d 001F  
                   utoa@i 003B                     utoa@n 0033                     utoa@p 0031  
                   utoa@w 002F                     status 000FD8                     wtemp8 005E  
         __end_of_sprintf 2476          ___lodiv@dividend 0002              __end_of_FILL 125C  
        __end_of_Lcd_Init 22D0          __end_of_Lcd_Port 2424           __initialization 2548  
             ?_USER_VALUE 0001              __end_of_hand 0809              __end_of_main 16F0  
            __end_of_utoa 18B0                    ??_FILL 0059               _Lcd_NoBlink 2624  
                  ??_main 00BD                    ??_utoa 0027             __activetblptr 000002  
        ___lodiv@quotient 0012                 ??_WELCOME 000A                    ?_fputc 0002  
                  ?_fputs 000B                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
                  ?_putch 0001       __end_of_Keypad_Init 2624                    i2l3021 253A  
                  i2l3023 2540                    i2l3025 2542                    i2l3017 250A  
                  i2l3019 2518                 ??_Lcd_Cmd 0003                    _TMR2ON 007E52  
                  __CHAR1 007E                    __CHAR2 007F                    __CHAR3 005B  
                  __CHAR4 005C          __end_of___xxtofl 1A64                    _Perfil 00CA  
            vfprintf@cfmt 0057                    ___flge 1DE4                    ___wmul 25BA  
               ??___flmul 0018                 ??___fltol 002D                 ??___lodiv 0012  
               ??___lomod 0012                    clear_0 256E                    isa$std 000001  
         _PULSES_TO_REACH 0060                    pad@buf 0014                    fputc@c 0002  
                  fputs@c 000F                    fputs@i 0010                    fputs@s 000B  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    putch@c 0001          __end_of_vfprintf 24C4  
                  utoa@fp 001D                 ??_sprintf 0059           Lcd_Set_Cursor@a 0006  
         Lcd_Set_Cursor@b 0005           Lcd_Set_Cursor@y 0008           Lcd_Set_Cursor@z 0007  
              ___flge@ff1 0010                ___flge@ff2 0014              ___xxtofl@arg 000C  
            ___xxtofl@exp 000B              ___xxtofl@val 0002                __accesstop 0060  
 __end_of__initialization 2578         __end_of_Lcd_Clear 265C         __end_of_Lcd_Blink 2640  
           ___rparam_used 000001                ___fltol@f1 0029            __pcstackCOMRAM 0001  
            __pidataBANK0 2600             __end_of_fputc 2244             __end_of_fputs 2508  
           __end_of_putch 265E            _Lcd_Set_Cursor 1FD8               _Keypad_Init 2614  
               ?_Lcd_Init 0001                 ?_Lcd_Port 0001                   ??_fputc 0006  
                 ??_fputs 000F                   ??_putch 0002                __pbssBANK0 0060  
            ??_ISR_TIMER0 0001                   ?___flge 0010                   ?___wmul 0002  
                 _CCP1CON 000FBD                   _CCP2CON 000FBA    __end_of_Lcd_Set_Cursor 20AA  
            ??_TMR0_COUNT 0002                 ?___xxtofl 0002                   _WELCOME 1BC8  
              ??_Lcd_Init 0005                ??_Lcd_Port 0002        __end_of_ISR_TIMER0 2548  
        ___lomod@dividend 0002            _Lcd_Write_Char 2586                   _Lcd_Cmd 25E0  
                 __Hparam 0000                   __Lparam 0000                _flow_pulse 0070  
      __end_of_TMR0_COUNT 264E              ??_USER_VALUE 000C                   ___flmul 086E  
                 ___fltol 1CDE                   ___lodiv 1EE8                   ___lomod 20AA  
               ?_vfprintf 0051              __psmallconst 0800                   __pcinit 2548  
                 __ramtop 0800           ?_Lcd_Set_Cursor 0005              ?_Lcd_NoBlink 0001  
                 __ptext0 14F6                   __ptext1 1BC8                   __ptext2 125C  
                 __ptext3 25BA                   __ptext4 2624                   __ptext5 2632  
                 __ptext6 0C98                   __ptext7 2244                   __ptext8 2614  
                 __ptext9 0FBC                 _T0CONbits 000FD5                ??___xxtofl 0006  
                 _sprintf 2424    __end_of_Lcd_Write_Char 25BA            __pintcode_body 2508  
    end_of_initialization 2578        __end_of_USER_VALUE 14F6         ??_Keypad_Get_Char 0002  
                 fputc@fp 0004             __Lmediumconst 0000                   int_func 2508  
                 fputs@fp 000D                 _SELECTED2 007D         __end_of_vfpfcnvrt 1BC8  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE          vfpfcnvrt@convarg 0047  
               Lcd_Port@a 0002                ??_vfprintf 0057                 _VAL_TYPED 0072  
               _PORTAbits 000F80                 _PORTBbits 000F81                 _PORTDbits 000F83  
           ___xxtofl@sign 000A                 _TRISAbits 000F92                 _TRISBbits 000F93  
               _TRISCbits 000F94                 _TRISDbits 000F95                 _TRISEbits 000F96  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0006         Lcd_Write_String@i 000A  
             ___flmul@grs 001D                 _Lcd_Clear 264E                 _Lcd_Blink 2632  
          __end_of___flge 1EE8               vfpfcnvrt@ap 0041               vfpfcnvrt@cp 004F  
             vfpfcnvrt@fp 003D            __end_of___wmul 25E0          _Lcd_Write_String 22D0  
            ?_Keypad_Init 0001       start_initialization 2548           ___lodiv@divisor 000A  
         ___lodiv@counter 001A               __end_of_pad 23C8               vfprintf@fmt 0053  
              ?_Lcd_Clear 0001                  ??___flge 0018                ?_Lcd_Blink 0001  
                ??___wmul 0006               __pdataBANK0 00BF           Lcd_Write_Char@a 0005  
         Lcd_Write_Char@y 0004                 ___flmul@a 0014                 ___flmul@b 0010  
             __pbssCOMRAM 005B             __pcstackBANK0 00AA                  ?_WELCOME 0001  
                ?_Lcd_Cmd 0001          ??_Lcd_Set_Cursor 0006                 __pintcode 0008  
                WELCOME@a 000C                  ?___flmul 0010                  ?___fltol 0029  
                ?___lodiv 0002                  ?___lomod 0002           ___lomod@divisor 000A  
             __smallconst 0800           _Keypad_Get_Char 0C98           ___lomod@counter 0012  
                ?_sprintf 00AA            ___wmul@product 0006                  _LATAbits 000F89  
                _LATBbits 000F8A                  _LATCbits 000F8B                  _LATEbits 000F8D  
            WELCOME@a_641 000E                  Lcd_Cmd@a 0004                  i2u260_40 252A  
                i2u260_41 2522                  i2u261_48 252C                  i2u259_40 2518  
                i2u259_41 2514               ??_Lcd_Clear 0005               ??_Lcd_Blink 0005  
               _vfpfcnvrt 1A64                _ADCON1bits 000FC1         ___wmul@multiplier 0002  
        ??_Lcd_Write_Char 0003                  _Lcd_Init 2244                  _Lcd_Port 23C8  
               copy_data0 255C  __end_of_Lcd_Write_String 234E                  __Hrparam 0000  
              vfprintf@ap 0055                  __Lrparam 0000                vfprintf@fp 0051  
 __end_of_Keypad_Get_Char 0FBC                ?_vfpfcnvrt 003D                sprintf@fmt 00AC  
                ___xxtofl 18B0                  __ptext10 2424                  __ptext11 2476  
                __ptext20 18B0                  __ptext12 1A64                  __ptext21 1CDE  
                __ptext13 16F0                  __ptext30 23C8                  __ptext22 086E  
                __ptext14 234E                  __ptext23 1DE4                  __ptext15 24C4  
                __ptext24 2640                  __ptext16 217A                  __ptext25 22D0  
                __ptext17 265C                  __ptext26 2586                  __ptext18 20AA  
                __ptext27 1FD8                  __ptext19 1EE8                  __ptext28 264E  
                __ptext29 25E0                  isa$xinst 000000                  int$flags 005D  
                _vfprintf 2476               _VALUE_IN_ML 0076                _INTCONbits 000FF2  
      Lcd_Write_Char@temp 0003                  intlevel2 0000                 sprintf@ap 00B0  
              _ISR_TIMER0 0008          ?_Keypad_Get_Char 0001               ??_vfpfcnvrt 0043  
      Lcd_Set_Cursor@temp 0009             ??_Lcd_NoBlink 0005                  sprintf@f 00B2  
                sprintf@s 00AA                _TMR0_COUNT 2640        _STRING_VALUE_IN_ML 00A0  
          _CURRENT_OPTION 0074          _STRING_VAL_TYPED 00A5  
