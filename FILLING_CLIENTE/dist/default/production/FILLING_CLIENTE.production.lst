

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 15 20:24:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 23/03/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataBANK0
   108   0043D2                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _NAME1
   112   0043D2  58                 	db	88
   113   0043D3  31                 	db	49
   114   0043D4  30                 	db	48
   115   0043D5  37                 	db	55
   116   0043D6  38                 	db	56
   117   0043D7  39                 	db	57
   118   0043D8  20                 	db	32
   119   0043D9  30                 	db	48
   120   0043DA  58                 	db	88
   121   0043DB  35                 	db	53
   122   0043DC  35                 	db	53
   123                           
   124                           ;initializer for _NAME2
   125   0043DD  4E                 	db	78
   126   0043DE  4E                 	db	78
   127   0043DF  48                 	db	72
   128   0043E0  4D                 	db	77
   129   0043E1  4E                 	db	78
   130                           
   131                           ;initializer for _CAL
   132   0043E2  B08D               	dw	45197
   133   0043E4  405C               	dw	16476
   134                           
   135                           	psect	mediumconst
   136   007EF6                     __pmediumconst:
   137                           	callstack 0
   138   007EF6  00                 	db	0
   139   007EF7                     _SENSOR:
   140                           	callstack 0
   141   007EF7  04                 	db	4
   142   007EF8  0E                 	db	14
   143   007EF9  04                 	db	4
   144   007EFA  00                 	db	0
   145   007EFB  04                 	db	4
   146   007EFC  0E                 	db	14
   147   007EFD  04                 	db	4
   148   007EFE  00                 	db	0
   149   007EFF                     __end_of_SENSOR:
   150                           	callstack 0
   151   000000                     _TRISDbits	set	3989
   152   000000                     _TRISEbits	set	3990
   153   000000                     _TRISCbits	set	3988
   154   000000                     _TRISBbits	set	3987
   155   000000                     _ADCON1bits	set	4033
   156   000000                     _LATBbits	set	3978
   157   000000                     _LATCbits	set	3979
   158   000000                     _PORTAbits	set	3968
   159   000000                     _PORTBbits	set	3969
   160   000000                     _LATB	set	3978
   161   000000                     _TRISAbits	set	3986
   162   000000                     _OSCCON	set	4051
   163   000000                     _TMR0L	set	4054
   164   000000                     _INTCONbits	set	4082
   165   000000                     _T0CONbits	set	4053
   166   000000                     _LATE	set	3981
   167   000000                     _LATC	set	3979
   168   000000                     _PORTDbits	set	3971
   169   000000                     _LATAbits	set	3977
   170   007EFF                     STR_5:
   171   007EFF  50                 	db	80	;'P'
   172   007F00  6F                 	db	111	;'o'
   173   007F01  6E                 	db	110	;'n'
   174   007F02  67                 	db	103	;'g'
   175   007F03  61                 	db	97	;'a'
   176   007F04  20                 	db	32
   177   007F05  75                 	db	117	;'u'
   178   007F06  6E                 	db	110	;'n'
   179   007F07  20                 	db	32
   180   007F08  65                 	db	101	;'e'
   181   007F09  6E                 	db	110	;'n'
   182   007F0A  76                 	db	118	;'v'
   183   007F0B  61                 	db	97	;'a'
   184   007F0C  73                 	db	115	;'s'
   185   007F0D  65                 	db	101	;'e'
   186   007F0E  20                 	db	32
   187   007F0F  00                 	db	0
   188   007F10                     STR_26:
   189   007F10  20                 	db	32
   190   007F11  20                 	db	32
   191   007F12  4E                 	db	78	;'N'
   192   007F13  6F                 	db	111	;'o'
   193   007F14  20                 	db	32
   194   007F15  65                 	db	101	;'e'
   195   007F16  6E                 	db	110	;'n'
   196   007F17  63                 	db	99	;'c'
   197   007F18  6F                 	db	111	;'o'
   198   007F19  6E                 	db	110	;'n'
   199   007F1A  74                 	db	116	;'t'
   200   007F1B  72                 	db	114	;'r'
   201   007F1C  61                 	db	97	;'a'
   202   007F1D  64                 	db	100	;'d'
   203   007F1E  6F                 	db	111	;'o'
   204   007F1F  20                 	db	32
   205   007F20  00                 	db	0
   206   007F21                     STR_7:
   207   007F21  4C                 	db	76	;'L'
   208   007F22  69                 	db	105	;'i'
   209   007F23  6D                 	db	109	;'m'
   210   007F24  70                 	db	112	;'p'
   211   007F25  69                 	db	105	;'i'
   212   007F26  61                 	db	97	;'a'
   213   007F27  72                 	db	114	;'r'
   214   007F28  3A                 	db	58	;':'
   215   007F29  20                 	db	32
   216   007F2A  20                 	db	32
   217   007F2B  49                 	db	73	;'I'
   218   007F2C  6E                 	db	110	;'n'
   219   007F2D  69                 	db	105	;'i'
   220   007F2E  63                 	db	99	;'c'
   221   007F2F  69                 	db	105	;'i'
   222   007F30  6F                 	db	111	;'o'
   223   007F31  00                 	db	0
   224   007F32                     STR_9:
   225   007F32  4D                 	db	77	;'M'
   226   007F33  61                 	db	97	;'a'
   227   007F34  6E                 	db	110	;'n'
   228   007F35  74                 	db	116	;'t'
   229   007F36  65                 	db	101	;'e'
   230   007F37  6E                 	db	110	;'n'
   231   007F38  67                 	db	103	;'g'
   232   007F39  61                 	db	97	;'a'
   233   007F3A  20                 	db	32
   234   007F3B  69                 	db	105	;'i'
   235   007F3C  6E                 	db	110	;'n'
   236   007F3D  69                 	db	105	;'i'
   237   007F3E  63                 	db	99	;'c'
   238   007F3F  69                 	db	105	;'i'
   239   007F40  61                 	db	97	;'a'
   240   007F41  72                 	db	114	;'r'
   241   007F42  00                 	db	0
   242   007F43                     STR_23:
   243   007F43  50                 	db	80	;'P'
   244   007F44  65                 	db	101	;'e'
   245   007F45  72                 	db	114	;'r'
   246   007F46  66                 	db	102	;'f'
   247   007F47  2E                 	db	46
   248   007F48  30                 	db	48	;'0'
   249   007F49  35                 	db	53	;'5'
   250   007F4A  3D                 	db	61	;'='
   251   007F4B  20                 	db	32
   252   007F4C  31                 	db	49	;'1'
   253   007F4D  30                 	db	48	;'0'
   254   007F4E  30                 	db	48	;'0'
   255   007F4F  6D                 	db	109	;'m'
   256   007F50  6C                 	db	108	;'l'
   257   007F51  20                 	db	32
   258   007F52  00                 	db	0
   259   007F53                     STR_28:
   260   007F53  4C                 	db	76	;'L'
   261   007F54  6C                 	db	108	;'l'
   262   007F55  65                 	db	101	;'e'
   263   007F56  6E                 	db	110	;'n'
   264   007F57  61                 	db	97	;'a'
   265   007F58  6E                 	db	110	;'n'
   266   007F59  64                 	db	100	;'d'
   267   007F5A  6F                 	db	111	;'o'
   268   007F5B  20                 	db	32
   269   007F5C  20                 	db	32
   270   007F5D  20                 	db	32
   271   007F5E  20                 	db	32
   272   007F5F  20                 	db	32
   273   007F60  6D                 	db	109	;'m'
   274   007F61  6C                 	db	108	;'l'
   275   007F62  00                 	db	0
   276   007F63                     STR_14:
   277   007F63  50                 	db	80	;'P'
   278   007F64  65                 	db	101	;'e'
   279   007F65  72                 	db	114	;'r'
   280   007F66  66                 	db	102	;'f'
   281   007F67  2E                 	db	46
   282   007F68  30                 	db	48	;'0'
   283   007F69  32                 	db	50	;'2'
   284   007F6A  3D                 	db	61	;'='
   285   007F6B  20                 	db	32
   286   007F6C  31                 	db	49	;'1'
   287   007F6D  30                 	db	48	;'0'
   288   007F6E  30                 	db	48	;'0'
   289   007F6F  30                 	db	48	;'0'
   290   007F70  6D                 	db	109	;'m'
   291   007F71  6C                 	db	108	;'l'
   292   007F72  00                 	db	0
   293   007F73                     STR_11:
   294   007F73  50                 	db	80	;'P'
   295   007F74  65                 	db	101	;'e'
   296   007F75  72                 	db	114	;'r'
   297   007F76  66                 	db	102	;'f'
   298   007F77  2E                 	db	46
   299   007F78  30                 	db	48	;'0'
   300   007F79  31                 	db	49	;'1'
   301   007F7A  3D                 	db	61	;'='
   302   007F7B  20                 	db	32
   303   007F7C  31                 	db	49	;'1'
   304   007F7D  35                 	db	53	;'5'
   305   007F7E  30                 	db	48	;'0'
   306   007F7F  30                 	db	48	;'0'
   307   007F80  6D                 	db	109	;'m'
   308   007F81  6C                 	db	108	;'l'
   309   007F82  00                 	db	0
   310   007F83                     STR_2:
   311   007F83  52                 	db	82	;'R'
   312   007F84  65                 	db	101	;'e'
   313   007F85  74                 	db	116	;'t'
   314   007F86  69                 	db	105	;'i'
   315   007F87  72                 	db	114	;'r'
   316   007F88  61                 	db	97	;'a'
   317   007F89  72                 	db	114	;'r'
   318   007F8A  20                 	db	32
   319   007F8B  65                 	db	101	;'e'
   320   007F8C  6E                 	db	110	;'n'
   321   007F8D  76                 	db	118	;'v'
   322   007F8E  61                 	db	97	;'a'
   323   007F8F  73                 	db	115	;'s'
   324   007F90  65                 	db	101	;'e'
   325   007F91  00                 	db	0
   326   007F92                     STR_17:
   327   007F92  50                 	db	80	;'P'
   328   007F93  65                 	db	101	;'e'
   329   007F94  72                 	db	114	;'r'
   330   007F95  66                 	db	102	;'f'
   331   007F96  2E                 	db	46
   332   007F97  30                 	db	48	;'0'
   333   007F98  33                 	db	51	;'3'
   334   007F99  3D                 	db	61	;'='
   335   007F9A  20                 	db	32
   336   007F9B  35                 	db	53	;'5'
   337   007F9C  30                 	db	48	;'0'
   338   007F9D  30                 	db	48	;'0'
   339   007F9E  6D                 	db	109	;'m'
   340   007F9F  6C                 	db	108	;'l'
   341   007FA0  00                 	db	0
   342   007FA1                     STR_20:
   343   007FA1  50                 	db	80	;'P'
   344   007FA2  65                 	db	101	;'e'
   345   007FA3  72                 	db	114	;'r'
   346   007FA4  66                 	db	102	;'f'
   347   007FA5  2E                 	db	46
   348   007FA6  30                 	db	48	;'0'
   349   007FA7  34                 	db	52	;'4'
   350   007FA8  3D                 	db	61	;'='
   351   007FA9  20                 	db	32
   352   007FAA  32                 	db	50	;'2'
   353   007FAB  35                 	db	53	;'5'
   354   007FAC  30                 	db	48	;'0'
   355   007FAD  6D                 	db	109	;'m'
   356   007FAE  6C                 	db	108	;'l'
   357   007FAF  00                 	db	0
   358   007FB0                     STR_10:
   359   007FB0  4C                 	db	76	;'L'
   360   007FB1  69                 	db	105	;'i'
   361   007FB2  6D                 	db	109	;'m'
   362   007FB3  70                 	db	112	;'p'
   363   007FB4  69                 	db	105	;'i'
   364   007FB5  61                 	db	97	;'a'
   365   007FB6  6E                 	db	110	;'n'
   366   007FB7  64                 	db	100	;'d'
   367   007FB8  6F                 	db	111	;'o'
   368   007FB9  2E                 	db	46
   369   007FBA  2E                 	db	46
   370   007FBB  00                 	db	0
   371   007FBC                     STR_8:
   372   007FBC  50                 	db	80	;'P'
   373   007FBD  65                 	db	101	;'e'
   374   007FBE  72                 	db	114	;'r'
   375   007FBF  66                 	db	102	;'f'
   376   007FC0  69                 	db	105	;'i'
   377   007FC1  6C                 	db	108	;'l'
   378   007FC2  3A                 	db	58	;':'
   379   007FC3  20                 	db	32
   380   007FC4  23                 	db	35
   381   007FC5  30                 	db	48	;'0'
   382   007FC6  30                 	db	48	;'0'
   383   007FC7  00                 	db	0
   384   007FC8                     STR_31:
   385   007FC8  20                 	db	32
   386   007FC9  20                 	db	32
   387   007FCA  20                 	db	32
   388   007FCB  20                 	db	32
   389   007FCC  20                 	db	32
   390   007FCD  6D                 	db	109	;'m'
   391   007FCE  6C                 	db	108	;'l'
   392   007FCF  20                 	db	32
   393   007FD0  00                 	db	0
   394   007FD1                     STR_12:
   395   007FD1  41                 	db	65	;'A'
   396   007FD2  74                 	db	116	;'t'
   397   007FD3  72                 	db	114	;'r'
   398   007FD4  61                 	db	97	;'a'
   399   007FD5  73                 	db	115	;'s'
   400   007FD6  20                 	db	32
   401   007FD7  2A                 	db	42
   402   007FD8  00                 	db	0
   403   007FD9                     STR_13:
   404   007FD9  49                 	db	73	;'I'
   405   007FDA  6E                 	db	110	;'n'
   406   007FDB  69                 	db	105	;'i'
   407   007FDC  63                 	db	99	;'c'
   408   007FDD  69                 	db	105	;'i'
   409   007FDE  61                 	db	97	;'a'
   410   007FDF  72                 	db	114	;'r'
   411   007FE0  00                 	db	0
   412   007FE1                     STR_32:
   413   007FE1  25                 	db	37
   414   007FE2  30                 	db	48	;'0'
   415   007FE3  2E                 	db	46
   416   007FE4  31                 	db	49	;'1'
   417   007FE5  66                 	db	102	;'f'
   418   007FE6  00                 	db	0
   419   007FE7                     STR_3:
   420   007FE7  50                 	db	80	;'P'
   421   007FE8  61                 	db	97	;'a'
   422   007FE9  72                 	db	114	;'r'
   423   007FEA  61                 	db	97	;'a'
   424   007FEB  72                 	db	114	;'r'
   425   007FEC  00                 	db	0
   426   007FED                     STR_29:
   427   007FED  53                 	db	83	;'S'
   428   007FEE  61                 	db	97	;'a'
   429   007FEF  6C                 	db	108	;'l'
   430   007FF0  69                 	db	105	;'i'
   431   007FF1  72                 	db	114	;'r'
   432   007FF2  00                 	db	0
   433   007FF3                     STR_33:
   434   007FF3  69                 	db	105	;'i'
   435   007FF4  6E                 	db	110	;'n'
   436   007FF5  66                 	db	102	;'f'
   437   007FF6  00                 	db	0
   438   007FF7                     STR_36:
   439   007FF7  6E                 	db	110	;'n'
   440   007FF8  61                 	db	97	;'a'
   441   007FF9  6E                 	db	110	;'n'
   442   007FFA  00                 	db	0
   443   007FFB                     STR_30:
   444   007FFB  25                 	db	37
   445   007FFC  75                 	db	117	;'u'
   446   007FFD  00                 	db	0
   447   007FFE  00                 	db	0	; dummy byte at the end
   448   000000                     
   449                           ; #config settings
   450                           
   451                           	psect	cinit
   452   0040A0                     __pcinit:
   453                           	callstack 0
   454   0040A0                     start_initialization:
   455                           	callstack 0
   456   0040A0                     __initialization:
   457                           	callstack 0
   458                           
   459                           ; Initialize objects allocated to BANK0 (20 bytes)
   460                           ; load TBLPTR registers with __pidataBANK0
   461   0040A0  0ED2               	movlw	low __pidataBANK0
   462   0040A2  6EF6               	movwf	tblptrl,c
   463   0040A4  0E43               	movlw	high __pidataBANK0
   464   0040A6  6EF7               	movwf	tblptrh,c
   465   0040A8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   466   0040AA  6EF8               	movwf	tblptru,c
   467   0040AC  EE00  F0EB         	lfsr	0,__pdataBANK0
   468   0040B0  EE10 F014          	lfsr	1,20
   469   0040B4                     copy_data0:
   470   0040B4  0009               	tblrd		*+
   471   0040B6  CFF5 FFEE          	movff	tablat,postinc0
   472   0040BA  50E5               	movf	postdec1,w,c
   473   0040BC  50E1               	movf	fsr1l,w,c
   474   0040BE  E1FA               	bnz	copy_data0
   475                           
   476                           ; Clear objects allocated to BANK1 (80 bytes)
   477   0040C0  EE01  F000         	lfsr	0,__pbssBANK1
   478   0040C4  0E50               	movlw	80
   479   0040C6                     clear_0:
   480   0040C6  6AEE               	clrf	postinc0,c
   481   0040C8  06E8               	decf	wreg,f,c
   482   0040CA  E1FD               	bnz	clear_0
   483                           
   484                           ; Clear objects allocated to BANK0 (31 bytes)
   485   0040CC  EE00  F0CC         	lfsr	0,__pbssBANK0
   486   0040D0  0E1F               	movlw	31
   487   0040D2                     clear_1:
   488   0040D2  6AEE               	clrf	postinc0,c
   489   0040D4  06E8               	decf	wreg,f,c
   490   0040D6  E1FD               	bnz	clear_1
   491                           
   492                           ; Clear objects allocated to COMRAM (15 bytes)
   493   0040D8  EE00  F040         	lfsr	0,__pbssCOMRAM
   494   0040DC  0E0F               	movlw	15
   495   0040DE                     clear_2:
   496   0040DE  6AEE               	clrf	postinc0,c
   497   0040E0  06E8               	decf	wreg,f,c
   498   0040E2  E1FD               	bnz	clear_2
   499   0040E4                     end_of_initialization:
   500                           	callstack 0
   501   0040E4                     __end_of__initialization:
   502                           	callstack 0
   503   0040E4  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   504   0040E6  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   505   0040E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   506   0040EA  6EF8               	movwf	tblptru,c
   507   0040EC  0100               	movlb	0
   508   0040EE  EF57  F016         	goto	_main	;jump to C main() function
   509                           
   510                           	psect	bssCOMRAM
   511   000040                     __pbssCOMRAM:
   512                           	callstack 0
   513   000040                     _PULSE:
   514                           	callstack 0
   515   000040                     	ds	4
   516   000044                     _num1:
   517                           	callstack 0
   518   000044                     	ds	2
   519   000046                     _num2:
   520                           	callstack 0
   521   000046                     	ds	2
   522   000048                     _PROFILE_NUM:
   523                           	callstack 0
   524   000048                     	ds	2
   525   00004A                     _CURRENT_OPTION:
   526                           	callstack 0
   527   00004A                     	ds	2
   528   00004C                     _SELECTED2:
   529                           	callstack 0
   530   00004C                     	ds	1
   531   00004D                     __CHAR1:
   532                           	callstack 0
   533   00004D                     	ds	1
   534   00004E                     __CHAR2:
   535                           	callstack 0
   536   00004E                     	ds	1
   537                           
   538                           	psect	bssBANK0
   539   0000CC                     __pbssBANK0:
   540                           	callstack 0
   541   0000CC                     floorf@F526:
   542                           	callstack 0
   543   0000CC                     	ds	4
   544   0000D0                     ___fpclassifyf@F465:
   545                           	callstack 0
   546   0000D0                     	ds	4
   547   0000D4                     _VALUE_IN_ML:
   548                           	callstack 0
   549   0000D4                     	ds	4
   550   0000D8                     _PULSES_TO_REACH:
   551                           	callstack 0
   552   0000D8                     	ds	4
   553   0000DC                     _width:
   554                           	callstack 0
   555   0000DC                     	ds	2
   556   0000DE                     _prec:
   557                           	callstack 0
   558   0000DE                     	ds	2
   559   0000E0                     _flags:
   560                           	callstack 0
   561   0000E0                     	ds	1
   562   0000E1                     _STRING_VALUE_IN_ML:
   563                           	callstack 0
   564   0000E1                     	ds	5
   565   0000E6                     _STRING_VAL_TYPED:
   566                           	callstack 0
   567   0000E6                     	ds	5
   568                           
   569                           	psect	dataBANK0
   570   0000EB                     __pdataBANK0:
   571                           	callstack 0
   572   0000EB                     _NAME1:
   573                           	callstack 0
   574   0000EB                     	ds	11
   575   0000F6                     _NAME2:
   576                           	callstack 0
   577   0000F6                     	ds	5
   578   0000FB                     _CAL:
   579                           	callstack 0
   580   0000FB                     	ds	4
   581                           
   582                           	psect	bssBANK1
   583   000100                     __pbssBANK1:
   584                           	callstack 0
   585   000100                     _dbuf:
   586                           	callstack 0
   587   000100                     	ds	80
   588                           
   589                           	psect	cstackBANK1
   590   000150                     __pcstackBANK1:
   591                           	callstack 0
   592   000150                     sprintf@ap:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x0
   596   000150                     	ds	2
   597   000152                     sprintf@f:
   598                           	callstack 0
   599                           
   600                           ; 11 bytes @ 0x2
   601   000152                     	ds	11
   602                           
   603                           	psect	cstackBANK0
   604   000060                     __pcstackBANK0:
   605                           	callstack 0
   606   000060                     ??_floorf:
   607   000060                     utoa@p:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x0
   611   000060                     	ds	2
   612   000062                     utoa@w:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616   000062                     	ds	2
   617   000064                     utoa@n:
   618                           	callstack 0
   619                           
   620                           ; 8 bytes @ 0x4
   621   000064                     	ds	2
   622   000066                     floorf@m:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0x6
   626   000066                     	ds	4
   627   00006A                     floorf@e:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0xA
   631   00006A                     	ds	2
   632   00006C                     utoa@i:
   633                           	callstack 0
   634   00006C                     floorf@u:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0xC
   638   00006C                     	ds	4
   639   000070                     efgtoa@fp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x10
   643   000070                     	ds	2
   644   000072                     efgtoa@f:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x12
   648   000072                     	ds	4
   649   000076                     efgtoa@c:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x16
   653   000076                     	ds	1
   654   000077                     efgtoa@ne:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x17
   658   000077                     	ds	2
   659   000079                     efgtoa@p:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x19
   663   000079                     	ds	2
   664   00007B                     efgtoa@t:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x1B
   668   00007B                     	ds	2
   669   00007D                     _efgtoa$1502:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x1D
   673   00007D                     	ds	2
   674   00007F                     efgtoa@pp:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1F
   678   00007F                     	ds	1
   679   000080                     efgtoa@mode:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x20
   683   000080                     	ds	1
   684   000081                     efgtoa@nmode:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x21
   688   000081                     	ds	1
   689   000082                     efgtoa@d:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x22
   693   000082                     	ds	2
   694   000084                     efgtoa@m:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x24
   698   000084                     	ds	2
   699   000086                     efgtoa@e:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x26
   703   000086                     	ds	2
   704   000088                     efgtoa@ou:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x28
   708   000088                     	ds	4
   709   00008C                     efgtoa@w:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x2C
   713   00008C                     	ds	2
   714   00008E                     efgtoa@h:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x2E
   718   00008E                     	ds	4
   719   000092                     efgtoa@l:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x32
   723   000092                     	ds	4
   724   000096                     efgtoa@i:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x36
   728   000096                     	ds	2
   729   000098                     efgtoa@sign:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x38
   733   000098                     	ds	1
   734   000099                     efgtoa@g:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x39
   738   000099                     	ds	4
   739   00009D                     efgtoa@n:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x3D
   743   00009D                     	ds	2
   744   00009F                     efgtoa@u:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x3F
   748   00009F                     	ds	4
   749   0000A3                     vfpfcnvrt@fp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x43
   753   0000A3                     	ds	2
   754   0000A5                     vfpfcnvrt@fmt:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x45
   758   0000A5                     	ds	2
   759   0000A7                     vfpfcnvrt@ap:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x47
   763   0000A7                     	ds	2
   764   0000A9                     ??_vfpfcnvrt:
   765                           
   766                           ; 1 bytes @ 0x49
   767   0000A9                     	ds	4
   768   0000AD                     vfpfcnvrt@done:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x4D
   772   0000AD                     	ds	2
   773   0000AF                     vfpfcnvrt@convarg:
   774                           	callstack 0
   775                           
   776                           ; 8 bytes @ 0x4F
   777   0000AF                     	ds	8
   778   0000B7                     vfpfcnvrt@c:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x57
   782   0000B7                     	ds	1
   783   0000B8                     vfpfcnvrt@cp:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x58
   787   0000B8                     	ds	2
   788   0000BA                     ?_vfprintf:
   789                           	callstack 0
   790   0000BA                     vfprintf@fp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x5A
   794   0000BA                     	ds	2
   795   0000BC                     vfprintf@fmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x5C
   799   0000BC                     	ds	2
   800   0000BE                     vfprintf@ap:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x5E
   804   0000BE                     	ds	2
   805   0000C0                     ?_sprintf:
   806                           	callstack 0
   807   0000C0                     sprintf@s:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x60
   811   0000C0                     	ds	2
   812   0000C2                     sprintf@fmt:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x62
   816   0000C2                     	ds	6
   817   0000C8                     ??_FILL:
   818                           
   819                           ; 1 bytes @ 0x68
   820   0000C8                     	ds	2
   821   0000CA                     ??_main:
   822                           
   823                           ; 1 bytes @ 0x6A
   824   0000CA                     	ds	2
   825                           
   826                           	psect	cstackCOMRAM
   827   000001                     __pcstackCOMRAM:
   828                           	callstack 0
   829   000001                     ?i2___fladd:
   830                           	callstack 0
   831   000001                     i2___fladd@b:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x0
   835   000001                     	ds	4
   836   000005                     i2___fladd@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x4
   840   000005                     	ds	4
   841   000009                     ??i2___fladd:
   842                           
   843                           ; 1 bytes @ 0x8
   844   000009                     	ds	4
   845   00000D                     i2___fladd@signs:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0xC
   849   00000D                     	ds	1
   850   00000E                     i2___fladd@aexp:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0xD
   854   00000E                     	ds	1
   855   00000F                     i2___fladd@bexp:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0xE
   859   00000F                     	ds	1
   860   000010                     i2___fladd@grs:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0xF
   864   000010                     	ds	1
   865   000011                     ??_Keypad_Get_Char:
   866   000011                     ?___fpclassifyf:
   867                           	callstack 0
   868   000011                     ?_isdigit:
   869                           	callstack 0
   870   000011                     ?_isspace:
   871                           	callstack 0
   872   000011                     ?___wmul:
   873                           	callstack 0
   874   000011                     ?___fladd:
   875                           	callstack 0
   876   000011                     ?___flmul:
   877                           	callstack 0
   878   000011                     ?_labs:
   879                           	callstack 0
   880   000011                     ?___flneg:
   881                           	callstack 0
   882   000011                     ?___fltol:
   883                           	callstack 0
   884   000011                     ?___xxtofl:
   885                           	callstack 0
   886   000011                     ?___lodiv:
   887                           	callstack 0
   888   000011                     ?___lomod:
   889                           	callstack 0
   890   000011                     Lcd_Port@a:
   891                           	callstack 0
   892   000011                     ___wmul@multiplier:
   893                           	callstack 0
   894   000011                     isdigit@c:
   895                           	callstack 0
   896   000011                     isspace@c:
   897                           	callstack 0
   898   000011                     memcpy@d1:
   899                           	callstack 0
   900   000011                     fputc@c:
   901                           	callstack 0
   902   000011                     strcpy@dest:
   903                           	callstack 0
   904   000011                     ___fleq@ff1:
   905                           	callstack 0
   906   000011                     ___flneg@f1:
   907                           	callstack 0
   908   000011                     ___fltol@f1:
   909                           	callstack 0
   910   000011                     ___fladd@b:
   911                           	callstack 0
   912   000011                     ___flmul@b:
   913                           	callstack 0
   914   000011                     ___xxtofl@val:
   915                           	callstack 0
   916   000011                     ___fpclassifyf@x:
   917                           	callstack 0
   918   000011                     labs@a:
   919                           	callstack 0
   920   000011                     ___lodiv@dividend:
   921                           	callstack 0
   922   000011                     ___lomod@dividend:
   923                           	callstack 0
   924                           
   925                           ; 8 bytes @ 0x10
   926   000011                     	ds	1
   927   000012                     ??_Lcd_Cmd:
   928   000012                     Lcd_Write_Char@temp:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x11
   932   000012                     	ds	1
   933   000013                     ??_isdigit:
   934   000013                     ??_isspace:
   935   000013                     Lcd_Cmd@a:
   936                           	callstack 0
   937   000013                     Lcd_Write_Char@y:
   938                           	callstack 0
   939   000013                     ___wmul@multiplicand:
   940                           	callstack 0
   941   000013                     memcpy@s1:
   942                           	callstack 0
   943   000013                     fputc@fp:
   944                           	callstack 0
   945   000013                     strcpy@src:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x12
   949   000013                     	ds	1
   950   000014                     ??_Lcd_Init:
   951   000014                     Lcd_Set_Cursor@b:
   952                           	callstack 0
   953   000014                     Lcd_Write_Char@a:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x13
   957   000014                     	ds	1
   958   000015                     ??_fputc:
   959   000015                     ??___fpclassifyf:
   960   000015                     ??_labs:
   961   000015                     ??___fltol:
   962   000015                     ??___xxtofl:
   963   000015                     Lcd_Set_Cursor@a:
   964                           	callstack 0
   965   000015                     _isspace$1588:
   966                           	callstack 0
   967   000015                     Lcd_Write_String@a:
   968                           	callstack 0
   969   000015                     Lcd_CGRAM_CreateChar@chardata:
   970                           	callstack 0
   971   000015                     ___wmul@product:
   972                           	callstack 0
   973   000015                     memcpy@n:
   974                           	callstack 0
   975   000015                     strcpy@s:
   976                           	callstack 0
   977   000015                     ___fleq@ff2:
   978                           	callstack 0
   979   000015                     ___fladd@a:
   980                           	callstack 0
   981   000015                     ___flmul@a:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x14
   985   000015                     	ds	1
   986   000016                     Lcd_Set_Cursor@z:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x15
   990   000016                     	ds	1
   991   000017                     ??_Lcd_CGRAM_CreateChar:
   992   000017                     ??_Lcd_Write_String:
   993   000017                     ?_atoi:
   994                           	callstack 0
   995   000017                     Lcd_Set_Cursor@y:
   996                           	callstack 0
   997   000017                     memcpy@tmp:
   998                           	callstack 0
   999   000017                     atoi@s:
  1000                           	callstack 0
  1001   000017                     strcpy@d:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x16
  1005   000017                     	ds	1
  1006   000018                     Lcd_Set_Cursor@temp:
  1007                           	callstack 0
  1008   000018                     memcpy@d:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x17
  1012   000018                     	ds	1
  1013   000019                     ??_WELCOME:
  1014   000019                     ??___fladd:
  1015   000019                     ??___flmul:
  1016   000019                     ??_atoi:
  1017   000019                     ??___fleq:
  1018   000019                     ___fltol@sign1:
  1019                           	callstack 0
  1020   000019                     ___xxtofl@sign:
  1021                           	callstack 0
  1022   000019                     Lcd_Write_String@i:
  1023                           	callstack 0
  1024   000019                     ___fpclassifyf@e:
  1025                           	callstack 0
  1026   000019                     ___lodiv@divisor:
  1027                           	callstack 0
  1028   000019                     ___lomod@divisor:
  1029                           	callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x18
  1032   000019                     	ds	1
  1033   00001A                     ___fltol@exp1:
  1034                           	callstack 0
  1035   00001A                     ___xxtofl@exp:
  1036                           	callstack 0
  1037   00001A                     memcpy@s:
  1038                           	callstack 0
  1039   00001A                     fputs@s:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x19
  1043   00001A                     	ds	1
  1044   00001B                     ??_USER_VALUE:
  1045   00001B                     Lcd_CGRAM_CreateChar@add:
  1046                           	callstack 0
  1047   00001B                     WELCOME@a:
  1048                           	callstack 0
  1049   00001B                     ___xxtofl@arg:
  1050                           	callstack 0
  1051   00001B                     ___fpclassifyf@u:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x1A
  1055   00001B                     	ds	1
  1056   00001C                     Lcd_CGRAM_CreateChar@i:
  1057                           	callstack 0
  1058   00001C                     atoi@neg:
  1059                           	callstack 0
  1060   00001C                     fputs@fp:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x1B
  1064   00001C                     	ds	1
  1065   00001D                     Lcd_CGRAM_CreateChar@i_811:
  1066                           	callstack 0
  1067   00001D                     ___fladd@signs:
  1068                           	callstack 0
  1069   00001D                     ___flmul@sign:
  1070                           	callstack 0
  1071   00001D                     WELCOME@a_621:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x1C
  1075   00001D                     	ds	1
  1076   00001E                     Lcd_CGRAM_CreateChar@i_812:
  1077                           	callstack 0
  1078   00001E                     ___fladd@aexp:
  1079                           	callstack 0
  1080   00001E                     ___flmul@aexp:
  1081                           	callstack 0
  1082   00001E                     fputs@c:
  1083                           	callstack 0
  1084   00001E                     atoi@n:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x1D
  1088   00001E                     	ds	1
  1089   00001F                     ?___fldiv:
  1090                           	callstack 0
  1091   00001F                     Lcd_CGRAM_CreateChar@i_813:
  1092                           	callstack 0
  1093   00001F                     ___fladd@bexp:
  1094                           	callstack 0
  1095   00001F                     fputs@i:
  1096                           	callstack 0
  1097   00001F                     ___fldiv@b:
  1098                           	callstack 0
  1099   00001F                     ___flmul@grs:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x1E
  1103   00001F                     	ds	1
  1104   000020                     Lcd_CGRAM_CreateChar@i_814:
  1105                           	callstack 0
  1106   000020                     ___fladd@grs:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x1F
  1110   000020                     	ds	1
  1111   000021                     Lcd_CGRAM_CreateChar@i_815:
  1112                           	callstack 0
  1113   000021                     ___lomod@counter:
  1114                           	callstack 0
  1115   000021                     pad@fp:
  1116                           	callstack 0
  1117   000021                     ___lodiv@quotient:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x20
  1121   000021                     	ds	1
  1122   000022                     Lcd_CGRAM_CreateChar@i_816:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x21
  1126   000022                     	ds	1
  1127   000023                     Lcd_CGRAM_CreateChar@i_817:
  1128                           	callstack 0
  1129   000023                     ___flmul@bexp:
  1130                           	callstack 0
  1131   000023                     pad@buf:
  1132                           	callstack 0
  1133   000023                     ___fldiv@a:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x22
  1137   000023                     	ds	1
  1138   000024                     ___flmul@prod:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x23
  1142   000024                     	ds	1
  1143   000025                     pad@p:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x24
  1147   000025                     	ds	2
  1148   000027                     ??___fldiv:
  1149   000027                     ??_pad:
  1150                           
  1151                           ; 1 bytes @ 0x26
  1152   000027                     	ds	1
  1153   000028                     ___flmul@temp:
  1154                           	callstack 0
  1155   000028                     pad@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x27
  1159   000028                     	ds	1
  1160   000029                     ___lodiv@counter:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x28
  1164   000029                     	ds	1
  1165   00002A                     ?___flsub:
  1166                           	callstack 0
  1167   00002A                     pad@w:
  1168                           	callstack 0
  1169   00002A                     ___flge@ff1:
  1170                           	callstack 0
  1171   00002A                     ___flsub@b:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x29
  1175   00002A                     	ds	1
  1176   00002B                     ___fldiv@rem:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x2A
  1180   00002B                     	ds	1
  1181   00002C                     utoa@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x2B
  1185   00002C                     	ds	2
  1186   00002E                     ___flge@ff2:
  1187                           	callstack 0
  1188   00002E                     ___flsub@a:
  1189                           	callstack 0
  1190   00002E                     utoa@d:
  1191                           	callstack 0
  1192                           
  1193                           ; 8 bytes @ 0x2D
  1194   00002E                     	ds	1
  1195   00002F                     ___fldiv@sign:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x2E
  1199   00002F                     	ds	1
  1200   000030                     ___fldiv@new_exp:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x2F
  1204   000030                     	ds	2
  1205   000032                     ??___flge:
  1206   000032                     ___fldiv@grs:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x31
  1210   000032                     	ds	4
  1211   000036                     ??_utoa:
  1212   000036                     ___fldiv@bexp:
  1213                           	callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x35
  1216   000036                     	ds	1
  1217   000037                     ___fldiv@aexp:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x36
  1221   000037                     	ds	1
  1222   000038                     ?_floorf:
  1223                           	callstack 0
  1224   000038                     floorf@x:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x37
  1228   000038                     	ds	4
  1229   00003C                     ??_efgtoa:
  1230                           
  1231                           ; 1 bytes @ 0x3B
  1232   00003C                     	ds	2
  1233   00003E                     vfprintf@cfmt:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x3D
  1237   00003E                     	ds	2
  1238   000040                     
  1239                           ; 1 bytes @ 0x3F
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 70 in file "Main_program.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1261 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1262 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1263 ;;Total ram usage:        2 bytes
  1264 ;; Hardware stack levels required when called: 11
  1265 ;; This function calls:
  1266 ;;		_FILL
  1267 ;;		_Keypad_Get_Char
  1268 ;;		_Keypad_Init
  1269 ;;		_Lcd_CGRAM_Close
  1270 ;;		_Lcd_CGRAM_CreateChar
  1271 ;;		_Lcd_CGRAM_Init
  1272 ;;		_Lcd_Clear
  1273 ;;		_Lcd_Init
  1274 ;;		_Lcd_Set_Cursor
  1275 ;;		_Lcd_Write_Char
  1276 ;;		_Lcd_Write_String
  1277 ;;		_USER_VALUE
  1278 ;;		_WELCOME
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text0
  1285   002CAE                     __ptext0:
  1286                           	callstack 0
  1287   002CAE                     _main:
  1288                           	callstack 20
  1289   002CAE                     
  1290                           ;Main_program.c: 73:     OSCCON = 0X72;
  1291   002CAE  0E72               	movlw	114
  1292   002CB0  6ED3               	movwf	211,c	;volatile
  1293   002CB2                     
  1294                           ;Main_program.c: 78:     INTCONbits.GIE = 1;
  1295   002CB2  8EF2               	bsf	242,7,c	;volatile
  1296   002CB4                     
  1297                           ;Main_program.c: 79:     INTCONbits.T0IF = 0;
  1298   002CB4  94F2               	bcf	242,2,c	;volatile
  1299   002CB6                     
  1300                           ;Main_program.c: 80:     INTCONbits.TMR0IE = 1;
  1301   002CB6  8AF2               	bsf	242,5,c	;volatile
  1302   002CB8                     
  1303                           ;Main_program.c: 81:     TRISAbits.TRISA4 = 1;
  1304   002CB8  8892               	bsf	146,4,c	;volatile
  1305                           
  1306                           ;Main_program.c: 82:     ADCON1bits.PCFG = 0X0F;
  1307   002CBA  0E0F               	movlw	15
  1308   002CBC  12C1               	iorwf	193,f,c	;volatile
  1309   002CBE                     
  1310                           ;Main_program.c: 84:     TRISAbits.TRISA5 = 1;
  1311   002CBE  8A92               	bsf	146,5,c	;volatile
  1312   002CC0                     
  1313                           ;Main_program.c: 85:     TRISBbits.TRISB0 = 1;
  1314   002CC0  8093               	bsf	147,0,c	;volatile
  1315   002CC2                     
  1316                           ;Main_program.c: 86:     TRISBbits.TRISB3 = 0;
  1317   002CC2  9693               	bcf	147,3,c	;volatile
  1318   002CC4                     
  1319                           ;Main_program.c: 87:     TRISCbits.TRISC2 = 0;
  1320   002CC4  9494               	bcf	148,2,c	;volatile
  1321   002CC6                     
  1322                           ;Main_program.c: 88:     TRISEbits.TRISE2 = 0;
  1323   002CC6  9496               	bcf	150,2,c	;volatile
  1324   002CC8                     
  1325                           ;Main_program.c: 89:     TRISCbits.TRISC0 = 0;
  1326   002CC8  9094               	bcf	148,0,c	;volatile
  1327                           
  1328                           ;Main_program.c: 90:     LATB = 0;
  1329   002CCA  0E00               	movlw	0
  1330   002CCC  6E8A               	movwf	138,c	;volatile
  1331                           
  1332                           ;Main_program.c: 91:     LATC = 0;
  1333   002CCE  0E00               	movlw	0
  1334   002CD0  6E8B               	movwf	139,c	;volatile
  1335                           
  1336                           ;Main_program.c: 92:     LATE = 0;
  1337   002CD2  0E00               	movlw	0
  1338   002CD4  6E8D               	movwf	141,c	;volatile
  1339   002CD6                     
  1340                           ;Main_program.c: 94:     Keypad_Init();
  1341   002CD6  ECF3  F021         	call	_Keypad_Init	;wreg free
  1342                           
  1343                           ;Main_program.c: 95:     Lcd_Init();
  1344   002CDA  EC06  F01F         	call	_Lcd_Init	;wreg free
  1345                           
  1346                           ;Main_program.c: 96:     Lcd_CGRAM_Init();
  1347   002CDE  EC09  F022         	call	_Lcd_CGRAM_Init	;wreg free
  1348   002CE2                     
  1349                           ;Main_program.c: 97:     Lcd_CGRAM_CreateChar(0, SENSOR);
  1350   002CE2  0EF7               	movlw	low _SENSOR
  1351   002CE4  6E15               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1352   002CE6  0E7E               	movlw	high _SENSOR
  1353   002CE8  6E16               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)^0,c
  1354   002CEA  0E00               	movlw	0
  1355   002CEC  EC24  F015         	call	_Lcd_CGRAM_CreateChar
  1356   002CF0                     
  1357                           ;Main_program.c: 98:     Lcd_CGRAM_Close();
  1358   002CF0  EC10  F022         	call	_Lcd_CGRAM_Close	;wreg free
  1359   002CF4                     
  1360                           ;Main_program.c: 99:     Lcd_Clear();
  1361   002CF4  EC1E  F022         	call	_Lcd_Clear	;wreg free
  1362   002CF8                     
  1363                           ;Main_program.c: 100:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  1364   002CF8  0E02               	movlw	2
  1365   002CFA  0100               	movlb	0	; () banked
  1366   002CFC  6FCB               	movwf	(??_main+1)& (0+255),b
  1367   002CFE  0E04               	movlw	4
  1368   002D00  6FCA               	movwf	??_main& (0+255),b
  1369   002D02  0EBA               	movlw	186
  1370   002D04                     u8097:
  1371   002D04  2EE8               	decfsz	wreg,f,c
  1372   002D06  D7FE               	bra	u8097
  1373   002D08  2FCA               	decfsz	??_main& (0+255),f,b
  1374   002D0A  D7FC               	bra	u8097
  1375   002D0C  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1376   002D0E  D7FA               	bra	u8097
  1377   002D10  F000               	nop	
  1378   002D12  EF64  F017         	goto	l7614
  1379   002D16                     l7554:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Main_program.c: 114:                 WELCOME();
  1383   002D16  EC06  F01D         	call	_WELCOME	;wreg free
  1384   002D1A                     
  1385                           ;Main_program.c: 115:                 USER_VALUE();
  1386   002D1A  EC32  F00C         	call	_USER_VALUE	;wreg free
  1387                           
  1388                           ;Main_program.c: 116:                 break;
  1389   002D1E  EF64  F017         	goto	l7614
  1390   002D22                     l7558:
  1391                           
  1392                           ;Main_program.c: 121:                 {;Main_program.c: 122:                     SELECTE
      +                          D2 = Keypad_Get_Char();
  1393   002D22  EC30  F012         	call	_Keypad_Get_Char	;wreg free
  1394   002D26  6E4C               	movwf	_SELECTED2^0,c
  1395   002D28                     
  1396                           ;Main_program.c: 123:                     if (SELECTED2 == '*')
  1397   002D28  0E2A               	movlw	42
  1398   002D2A  184C               	xorwf	_SELECTED2^0,w,c
  1399   002D2C  A4D8               	btfss	status,2,c
  1400   002D2E  EF9B  F016         	goto	u8001
  1401   002D32  EF9D  F016         	goto	u8000
  1402   002D36                     u8001:
  1403   002D36  EFA1  F016         	goto	l7564
  1404   002D3A                     u8000:
  1405   002D3A                     
  1406                           ;Main_program.c: 124:                     {;Main_program.c: 125:                        
      +                           CURRENT_OPTION = 0;
  1407   002D3A  0E00               	movlw	0
  1408   002D3C  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  1409   002D3E  0E00               	movlw	0
  1410   002D40  6E4A               	movwf	_CURRENT_OPTION^0,c
  1411   002D42                     l7564:
  1412                           
  1413                           ;Main_program.c: 129:                     if (PORTBbits.RB0 == 0 && PORTAbits.RA5 == 0)
  1414   002D42  B081               	btfsc	129,0,c	;volatile
  1415   002D44  EFA6  F016         	goto	u8011
  1416   002D48  EFA8  F016         	goto	u8010
  1417   002D4C                     u8011:
  1418   002D4C  EFBF  F016         	goto	l7572
  1419   002D50                     u8010:
  1420   002D50  BA80               	btfsc	128,5,c	;volatile
  1421   002D52  EFAD  F016         	goto	u8021
  1422   002D56  EFAF  F016         	goto	u8020
  1423   002D5A                     u8021:
  1424   002D5A  EFBF  F016         	goto	l7572
  1425   002D5E                     u8020:
  1426   002D5E                     
  1427                           ;Main_program.c: 130:                     {;Main_program.c: 132:                        
      +                           CURRENT_OPTION = 2;
  1428   002D5E  0E00               	movlw	0
  1429   002D60  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  1430   002D62  0E02               	movlw	2
  1431   002D64  6E4A               	movwf	_CURRENT_OPTION^0,c
  1432   002D66                     
  1433                           ;Main_program.c: 133:                         _delay((unsigned long)((700)*(8000000L/400
      +                          0.0)));
  1434   002D66  0E08               	movlw	8
  1435   002D68  0100               	movlb	0	; () banked
  1436   002D6A  6FCB               	movwf	(??_main+1)& (0+255),b
  1437   002D6C  0E1B               	movlw	27
  1438   002D6E  6FCA               	movwf	??_main& (0+255),b
  1439   002D70  0E27               	movlw	39
  1440   002D72                     u8107:
  1441   002D72  2EE8               	decfsz	wreg,f,c
  1442   002D74  D7FE               	bra	u8107
  1443   002D76  2FCA               	decfsz	??_main& (0+255),f,b
  1444   002D78  D7FC               	bra	u8107
  1445   002D7A  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1446   002D7C  D7FA               	bra	u8107
  1447   002D7E                     l7572:
  1448                           
  1449                           ;Main_program.c: 135:                     if (PORTAbits.RA5 == 0)
  1450   002D7E  BA80               	btfsc	128,5,c	;volatile
  1451   002D80  EFC4  F016         	goto	u8031
  1452   002D84  EFC6  F016         	goto	u8030
  1453   002D88                     u8031:
  1454   002D88  EFD0  F016         	goto	l7576
  1455   002D8C                     u8030:
  1456   002D8C                     
  1457                           ;Main_program.c: 136:                     {;Main_program.c: 137:                        
      +                           Lcd_Set_Cursor(1, 16);
  1458   002D8C  0E10               	movlw	16
  1459   002D8E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1460   002D90  0E01               	movlw	1
  1461   002D92  EC7B  F01D         	call	_Lcd_Set_Cursor
  1462                           
  1463                           ;Main_program.c: 138:                         Lcd_Write_Char(0);
  1464   002D96  0E00               	movlw	0
  1465   002D98  EC94  F021         	call	_Lcd_Write_Char
  1466                           
  1467                           ;Main_program.c: 139:                     }
  1468   002D9C  EFDB  F016         	goto	l7580
  1469   002DA0                     l7576:
  1470                           
  1471                           ;Main_program.c: 141:                     {;Main_program.c: 142:                        
      +                           Lcd_Set_Cursor(1, 16);
  1472   002DA0  0E10               	movlw	16
  1473   002DA2  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1474   002DA4  0E01               	movlw	1
  1475   002DA6  EC7B  F01D         	call	_Lcd_Set_Cursor
  1476   002DAA                     
  1477                           ;Main_program.c: 143:                         Lcd_Write_String(" ");
  1478   002DAA  0E0E               	movlw	low (STR_5+15)
  1479   002DAC  6E15               	movwf	Lcd_Write_String@a^0,c
  1480   002DAE  0E7F               	movlw	high (STR_5+15)
  1481   002DB0  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1482   002DB2  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1483   002DB6                     l7580:
  1484                           
  1485                           ;Main_program.c: 120:                 while (CURRENT_OPTION == 1)
  1486   002DB6  044A               	decf	_CURRENT_OPTION^0,w,c
  1487   002DB8  104B               	iorwf	(_CURRENT_OPTION+1)^0,w,c
  1488   002DBA  B4D8               	btfsc	status,2,c
  1489   002DBC  EFE2  F016         	goto	u8041
  1490   002DC0  EFE4  F016         	goto	u8040
  1491   002DC4                     u8041:
  1492   002DC4  EF91  F016         	goto	l7558
  1493   002DC8                     u8040:
  1494   002DC8  EF64  F017         	goto	l7614
  1495   002DCC                     l7582:
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;Main_program.c: 149:                 FILL();
  1499   002DCC  ECC2  F013         	call	_FILL	;wreg free
  1500   002DD0                     
  1501                           ;Main_program.c: 150:                 Lcd_Init();
  1502   002DD0  EC06  F01F         	call	_Lcd_Init	;wreg free
  1503                           
  1504                           ;Main_program.c: 151:                 while (CURRENT_OPTION == 2)
  1505   002DD4  EF5A  F017         	goto	l7610
  1506   002DD8                     l123:
  1507                           
  1508                           ;Main_program.c: 152:                 {;Main_program.c: 153:                     if (POR
      +                          TAbits.RA5 == 0)
  1509   002DD8  BA80               	btfsc	128,5,c	;volatile
  1510   002DDA  EFF1  F016         	goto	u8051
  1511   002DDE  EFF3  F016         	goto	u8050
  1512   002DE2                     u8051:
  1513   002DE2  EF13  F017         	goto	l7592
  1514   002DE6                     u8050:
  1515   002DE6                     
  1516                           ;Main_program.c: 154:                     {;Main_program.c: 155:                        
      +                           Lcd_Set_Cursor(1, 16);
  1517   002DE6  0E10               	movlw	16
  1518   002DE8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1519   002DEA  0E01               	movlw	1
  1520   002DEC  EC7B  F01D         	call	_Lcd_Set_Cursor
  1521                           
  1522                           ;Main_program.c: 156:                         Lcd_Write_Char(0);
  1523   002DF0  0E00               	movlw	0
  1524   002DF2  EC94  F021         	call	_Lcd_Write_Char
  1525                           
  1526                           ;Main_program.c: 157:                         Lcd_Set_Cursor(1, 1);
  1527   002DF6  0E01               	movlw	1
  1528   002DF8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1529   002DFA  0E01               	movlw	1
  1530   002DFC  EC7B  F01D         	call	_Lcd_Set_Cursor
  1531   002E00                     
  1532                           ;Main_program.c: 158:                         Lcd_Write_String("Retirar envase");
  1533   002E00  0E83               	movlw	low STR_2
  1534   002E02  6E15               	movwf	Lcd_Write_String@a^0,c
  1535   002E04  0E7F               	movlw	high STR_2
  1536   002E06  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1537   002E08  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1538   002E0C                     
  1539                           ;Main_program.c: 159:                         Lcd_Set_Cursor(2, 12);
  1540   002E0C  0E0C               	movlw	12
  1541   002E0E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1542   002E10  0E02               	movlw	2
  1543   002E12  EC7B  F01D         	call	_Lcd_Set_Cursor
  1544                           
  1545                           ;Main_program.c: 160:                         Lcd_Write_String("Parar");
  1546   002E16  0EE7               	movlw	low STR_3
  1547   002E18  6E15               	movwf	Lcd_Write_String@a^0,c
  1548   002E1A  0E7F               	movlw	high STR_3
  1549   002E1C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1550   002E1E  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1551                           
  1552                           ;Main_program.c: 161:                     }
  1553   002E22  EF4D  F017         	goto	l125
  1554   002E26                     l7592:
  1555                           
  1556                           ;Main_program.c: 163:                     {;Main_program.c: 164:                        
      +                           Lcd_Set_Cursor(2, 16);
  1557   002E26  0E10               	movlw	16
  1558   002E28  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1559   002E2A  0E02               	movlw	2
  1560   002E2C  EC7B  F01D         	call	_Lcd_Set_Cursor
  1561   002E30                     
  1562                           ;Main_program.c: 165:                         Lcd_Write_String(" ");
  1563   002E30  0E0E               	movlw	low (STR_5+15)
  1564   002E32  6E15               	movwf	Lcd_Write_String@a^0,c
  1565   002E34  0E7F               	movlw	high (STR_5+15)
  1566   002E36  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1567   002E38  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1568   002E3C                     
  1569                           ;Main_program.c: 166:                         Lcd_Set_Cursor(1, 1);
  1570   002E3C  0E01               	movlw	1
  1571   002E3E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1572   002E40  0E01               	movlw	1
  1573   002E42  EC7B  F01D         	call	_Lcd_Set_Cursor
  1574                           
  1575                           ;Main_program.c: 167:                         Lcd_Write_String("Ponga un envase ");
  1576   002E46  0EFF               	movlw	low STR_5
  1577   002E48  6E15               	movwf	Lcd_Write_String@a^0,c
  1578   002E4A  0E7E               	movlw	high STR_5
  1579   002E4C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1580   002E4E  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1581   002E52                     
  1582                           ;Main_program.c: 168:                         Lcd_Set_Cursor(2, 12);
  1583   002E52  0E0C               	movlw	12
  1584   002E54  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1585   002E56  0E02               	movlw	2
  1586   002E58  EC7B  F01D         	call	_Lcd_Set_Cursor
  1587   002E5C                     
  1588                           ;Main_program.c: 169:                         Lcd_Write_String("Parar");
  1589   002E5C  0EE7               	movlw	low STR_3
  1590   002E5E  6E15               	movwf	Lcd_Write_String@a^0,c
  1591   002E60  0E7F               	movlw	high STR_3
  1592   002E62  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1593   002E64  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1594   002E68                     
  1595                           ;Main_program.c: 170:                         _delay((unsigned long)((400)*(8000000L/400
      +                          0.0)));
  1596   002E68  0E05               	movlw	5
  1597   002E6A  0100               	movlb	0	; () banked
  1598   002E6C  6FCB               	movwf	(??_main+1)& (0+255),b
  1599   002E6E  0E0F               	movlw	15
  1600   002E70  6FCA               	movwf	??_main& (0+255),b
  1601   002E72  0EF1               	movlw	241
  1602   002E74                     u8117:
  1603   002E74  2EE8               	decfsz	wreg,f,c
  1604   002E76  D7FE               	bra	u8117
  1605   002E78  2FCA               	decfsz	??_main& (0+255),f,b
  1606   002E7A  D7FC               	bra	u8117
  1607   002E7C  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1608   002E7E  D7FA               	bra	u8117
  1609   002E80                     
  1610                           ;Main_program.c: 171:                         if (PORTAbits.RA5 == 0)
  1611   002E80  BA80               	btfsc	128,5,c	;volatile
  1612   002E82  EF45  F017         	goto	u8061
  1613   002E86  EF47  F017         	goto	u8060
  1614   002E8A                     u8061:
  1615   002E8A  EF4D  F017         	goto	l125
  1616   002E8E                     u8060:
  1617   002E8E                     
  1618                           ;Main_program.c: 172:                         {;Main_program.c: 173:                    
      +                                   CURRENT_OPTION = 2;
  1619   002E8E  0E00               	movlw	0
  1620   002E90  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  1621   002E92  0E02               	movlw	2
  1622   002E94  6E4A               	movwf	_CURRENT_OPTION^0,c
  1623                           
  1624                           ;Main_program.c: 174:                             break;
  1625   002E96  EF64  F017         	goto	l7614
  1626   002E9A                     l125:
  1627                           
  1628                           ;Main_program.c: 178:                     if (PORTBbits.RB0 == 0)
  1629   002E9A  B081               	btfsc	129,0,c	;volatile
  1630   002E9C  EF52  F017         	goto	u8071
  1631   002EA0  EF54  F017         	goto	u8070
  1632   002EA4                     u8071:
  1633   002EA4  EF5A  F017         	goto	l7610
  1634   002EA8                     u8070:
  1635   002EA8                     
  1636                           ;Main_program.c: 179:                     {;Main_program.c: 180:                        
      +                           CURRENT_OPTION = 0;
  1637   002EA8  0E00               	movlw	0
  1638   002EAA  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  1639   002EAC  0E00               	movlw	0
  1640   002EAE  6E4A               	movwf	_CURRENT_OPTION^0,c
  1641                           
  1642                           ;Main_program.c: 181:                         break;
  1643   002EB0  EF64  F017         	goto	l7614
  1644   002EB4                     l7610:
  1645                           
  1646                           ;Main_program.c: 151:                 while (CURRENT_OPTION == 2)
  1647   002EB4  0E02               	movlw	2
  1648   002EB6  184A               	xorwf	_CURRENT_OPTION^0,w,c
  1649   002EB8  104B               	iorwf	(_CURRENT_OPTION+1)^0,w,c
  1650   002EBA  B4D8               	btfsc	status,2,c
  1651   002EBC  EF62  F017         	goto	u8081
  1652   002EC0  EF64  F017         	goto	u8080
  1653   002EC4                     u8081:
  1654   002EC4  EFEC  F016         	goto	l123
  1655   002EC8                     u8080:
  1656   002EC8                     l7614:
  1657   002EC8  C04A  F0CA         	movff	_CURRENT_OPTION,??_main
  1658   002ECC  C04B  F0CB         	movff	_CURRENT_OPTION+1,??_main+1
  1659                           
  1660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1661                           ; Switch size 1, requested type "simple"
  1662                           ; Number of cases is 1, Range of values is 0 to 0
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte            4     3 (average)
  1666                           ;	Chosen strategy is simple_byte
  1667   002ED0  0100               	movlb	0	; () banked
  1668   002ED2  51CB               	movf	(??_main+1)& (0+255),w,b
  1669   002ED4  0A00               	xorlw	0	; case 0
  1670   002ED6  B4D8               	btfsc	status,2,c
  1671   002ED8  EF70  F017         	goto	l7850
  1672   002EDC  EF64  F017         	goto	l7614
  1673   002EE0                     l7850:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ; Switch size 1, requested type "simple"
  1677                           ; Number of cases is 3, Range of values is 0 to 2
  1678                           ; switch strategies available:
  1679                           ; Name         Instructions Cycles
  1680                           ; simple_byte           10     6 (average)
  1681                           ;	Chosen strategy is simple_byte
  1682   002EE0  51CA               	movf	??_main& (0+255),w,b
  1683   002EE2  0A00               	xorlw	0	; case 0
  1684   002EE4  B4D8               	btfsc	status,2,c
  1685   002EE6  EF8B  F016         	goto	l7554
  1686   002EEA  0A01               	xorlw	1	; case 1
  1687   002EEC  B4D8               	btfsc	status,2,c
  1688   002EEE  EFDB  F016         	goto	l7580
  1689   002EF2  0A03               	xorlw	3	; case 2
  1690   002EF4  B4D8               	btfsc	status,2,c
  1691   002EF6  EFE6  F016         	goto	l7582
  1692   002EFA  EF64  F017         	goto	l7614
  1693   002EFE  EF07  F000         	goto	start
  1694   002F02                     __end_of_main:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _WELCOME *****************
  1698 ;; Defined at:
  1699 ;;		line 209 in file "Main_program.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  a               2   28[COMRAM] int 
  1704 ;;  a               2   26[COMRAM] int 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0
  1715 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1717 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1718 ;;Total ram usage:        6 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 5
  1721 ;; This function calls:
  1722 ;;		_Lcd_Clear
  1723 ;;		_Lcd_Set_Cursor
  1724 ;;		_Lcd_Write_Char
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text1
  1731   003A0C                     __ptext1:
  1732                           	callstack 0
  1733   003A0C                     _WELCOME:
  1734                           	callstack 25
  1735   003A0C                     
  1736                           ;Main_program.c: 212:     Lcd_Clear();
  1737   003A0C  EC1E  F022         	call	_Lcd_Clear	;wreg free
  1738   003A10                     
  1739                           ;Main_program.c: 213:     Lcd_Set_Cursor(1, 4);
  1740   003A10  0E04               	movlw	4
  1741   003A12  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1742   003A14  0E01               	movlw	1
  1743   003A16  EC7B  F01D         	call	_Lcd_Set_Cursor
  1744   003A1A                     
  1745                           ;Main_program.c: 214:     for (int a = 0; a < 11; a++) {
  1746   003A1A  0E00               	movlw	0
  1747   003A1C  6E1C               	movwf	(WELCOME@a+1)^0,c
  1748   003A1E  0E00               	movlw	0
  1749   003A20  6E1B               	movwf	WELCOME@a^0,c
  1750   003A22                     l5226:
  1751                           
  1752                           ;Main_program.c: 215:         _delay((unsigned long)((80)*(8000000L/4000.0)));
  1753   003A22  0ED0               	movlw	208
  1754   003A24  6E19               	movwf	??_WELCOME^0,c
  1755   003A26  0ECA               	movlw	202
  1756   003A28                     u8127:
  1757   003A28  2EE8               	decfsz	wreg,f,c
  1758   003A2A  D7FE               	bra	u8127
  1759   003A2C  2E19               	decfsz	??_WELCOME^0,f,c
  1760   003A2E  D7FC               	bra	u8127
  1761   003A30                     
  1762                           ;Main_program.c: 216:         Lcd_Write_Char(NAME1[a]);
  1763   003A30  0EEB               	movlw	low _NAME1
  1764   003A32  241B               	addwf	WELCOME@a^0,w,c
  1765   003A34  6ED9               	movwf	fsr2l,c
  1766   003A36  0E00               	movlw	high _NAME1
  1767   003A38  201C               	addwfc	(WELCOME@a+1)^0,w,c
  1768   003A3A  6EDA               	movwf	fsr2h,c
  1769   003A3C  50DF               	movf	indf2,w,c
  1770   003A3E  EC94  F021         	call	_Lcd_Write_Char
  1771   003A42                     
  1772                           ;Main_program.c: 217:     }
  1773   003A42  4A1B               	infsnz	WELCOME@a^0,f,c
  1774   003A44  2A1C               	incf	(WELCOME@a+1)^0,f,c
  1775   003A46  BE1C               	btfsc	(WELCOME@a+1)^0,7,c
  1776   003A48  EF2F  F01D         	goto	u5281
  1777   003A4C  501C               	movf	(WELCOME@a+1)^0,w,c
  1778   003A4E  E109               	bnz	u5280
  1779   003A50  0E0B               	movlw	11
  1780   003A52  5C1B               	subwf	WELCOME@a^0,w,c
  1781   003A54  A0D8               	btfss	status,0,c
  1782   003A56  EF2F  F01D         	goto	u5281
  1783   003A5A  EF31  F01D         	goto	u5280
  1784   003A5E                     u5281:
  1785   003A5E  EF11  F01D         	goto	l5226
  1786   003A62                     u5280:
  1787   003A62                     
  1788                           ;Main_program.c: 218:     Lcd_Set_Cursor(2, 6);
  1789   003A62  0E06               	movlw	6
  1790   003A64  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1791   003A66  0E02               	movlw	2
  1792   003A68  EC7B  F01D         	call	_Lcd_Set_Cursor
  1793   003A6C                     
  1794                           ;Main_program.c: 219:     for (int a = 0; a < 5; a++) {
  1795   003A6C  0E00               	movlw	0
  1796   003A6E  6E1E               	movwf	(WELCOME@a_621+1)^0,c
  1797   003A70  0E00               	movlw	0
  1798   003A72  6E1D               	movwf	WELCOME@a_621^0,c
  1799   003A74                     l5242:
  1800                           
  1801                           ;Main_program.c: 220:         _delay((unsigned long)((80)*(8000000L/4000.0)));
  1802   003A74  0ED0               	movlw	208
  1803   003A76  6E19               	movwf	??_WELCOME^0,c
  1804   003A78  0ECA               	movlw	202
  1805   003A7A                     u8137:
  1806   003A7A  2EE8               	decfsz	wreg,f,c
  1807   003A7C  D7FE               	bra	u8137
  1808   003A7E  2E19               	decfsz	??_WELCOME^0,f,c
  1809   003A80  D7FC               	bra	u8137
  1810   003A82                     
  1811                           ;Main_program.c: 221:         Lcd_Write_Char(NAME2[a]);
  1812   003A82  0EF6               	movlw	low _NAME2
  1813   003A84  241D               	addwf	WELCOME@a_621^0,w,c
  1814   003A86  6ED9               	movwf	fsr2l,c
  1815   003A88  0E00               	movlw	high _NAME2
  1816   003A8A  201E               	addwfc	(WELCOME@a_621+1)^0,w,c
  1817   003A8C  6EDA               	movwf	fsr2h,c
  1818   003A8E  50DF               	movf	indf2,w,c
  1819   003A90  EC94  F021         	call	_Lcd_Write_Char
  1820   003A94                     
  1821                           ;Main_program.c: 222:     }
  1822   003A94  4A1D               	infsnz	WELCOME@a_621^0,f,c
  1823   003A96  2A1E               	incf	(WELCOME@a_621+1)^0,f,c
  1824   003A98  BE1E               	btfsc	(WELCOME@a_621+1)^0,7,c
  1825   003A9A  EF58  F01D         	goto	u5291
  1826   003A9E  501E               	movf	(WELCOME@a_621+1)^0,w,c
  1827   003AA0  E109               	bnz	u5290
  1828   003AA2  0E05               	movlw	5
  1829   003AA4  5C1D               	subwf	WELCOME@a_621^0,w,c
  1830   003AA6  A0D8               	btfss	status,0,c
  1831   003AA8  EF58  F01D         	goto	u5291
  1832   003AAC  EF5A  F01D         	goto	u5290
  1833   003AB0                     u5291:
  1834   003AB0  EF3A  F01D         	goto	l5242
  1835   003AB4                     u5290:
  1836   003AB4                     
  1837                           ;Main_program.c: 223:     LATCbits.LATC0 = 1;
  1838   003AB4  808B               	bsf	139,0,c	;volatile
  1839   003AB6                     
  1840                           ;Main_program.c: 224:     _delay((unsigned long)((50)*(8000000L/4000.0)));
  1841   003AB6  0E82               	movlw	130
  1842   003AB8  6E19               	movwf	??_WELCOME^0,c
  1843   003ABA  0EDE               	movlw	222
  1844   003ABC                     u8147:
  1845   003ABC  2EE8               	decfsz	wreg,f,c
  1846   003ABE  D7FE               	bra	u8147
  1847   003AC0  2E19               	decfsz	??_WELCOME^0,f,c
  1848   003AC2  D7FC               	bra	u8147
  1849   003AC4                     
  1850                           ;Main_program.c: 225:     LATCbits.LATC0 = 0;
  1851   003AC4  908B               	bcf	139,0,c	;volatile
  1852                           
  1853                           ;Main_program.c: 226:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  1854   003AC6  0E02               	movlw	2
  1855   003AC8  6E1A               	movwf	(??_WELCOME+1)^0,c
  1856   003ACA  0E04               	movlw	4
  1857   003ACC  6E19               	movwf	??_WELCOME^0,c
  1858   003ACE  0EBA               	movlw	186
  1859   003AD0                     u8157:
  1860   003AD0  2EE8               	decfsz	wreg,f,c
  1861   003AD2  D7FE               	bra	u8157
  1862   003AD4  2E19               	decfsz	??_WELCOME^0,f,c
  1863   003AD6  D7FC               	bra	u8157
  1864   003AD8  2E1A               	decfsz	(??_WELCOME+1)^0,f,c
  1865   003ADA  D7FA               	bra	u8157
  1866   003ADC  D000               	nop2	
  1867   003ADE                     
  1868                           ;Main_program.c: 227:     LATCbits.LATC0 = 1;
  1869   003ADE  808B               	bsf	139,0,c	;volatile
  1870                           
  1871                           ;Main_program.c: 228:     _delay((unsigned long)((50)*(8000000L/4000.0)));
  1872   003AE0  0E82               	movlw	130
  1873   003AE2  6E19               	movwf	??_WELCOME^0,c
  1874   003AE4  0EDE               	movlw	222
  1875   003AE6                     u8167:
  1876   003AE6  2EE8               	decfsz	wreg,f,c
  1877   003AE8  D7FE               	bra	u8167
  1878   003AEA  2E19               	decfsz	??_WELCOME^0,f,c
  1879   003AEC  D7FC               	bra	u8167
  1880   003AEE                     
  1881                           ;Main_program.c: 229:     LATCbits.LATC0 = 0;
  1882   003AEE  908B               	bcf	139,0,c	;volatile
  1883   003AF0                     
  1884                           ;Main_program.c: 230:     Lcd_Clear();
  1885   003AF0  EC1E  F022         	call	_Lcd_Clear	;wreg free
  1886   003AF4  0012               	return		;funcret
  1887   003AF6                     __end_of_WELCOME:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _USER_VALUE *****************
  1891 ;; Defined at:
  1892 ;;		line 234 in file "Main_program.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        2 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 5
  1913 ;; This function calls:
  1914 ;;		_Keypad_Get_Char
  1915 ;;		_Lcd_Blink
  1916 ;;		_Lcd_Clear
  1917 ;;		_Lcd_NoBlink
  1918 ;;		_Lcd_Set_Cursor
  1919 ;;		_Lcd_Write_Char
  1920 ;;		_Lcd_Write_String
  1921 ;;		___wmul
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text2
  1928   001864                     __ptext2:
  1929                           	callstack 0
  1930   001864                     _USER_VALUE:
  1931                           	callstack 25
  1932   001864                     
  1933                           ;Main_program.c: 237:     PROFILE_NUM = 0;
  1934   001864  0E00               	movlw	0
  1935   001866  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  1936   001868  0E00               	movlw	0
  1937   00186A  6E48               	movwf	_PROFILE_NUM^0,c
  1938   00186C                     
  1939                           ;Main_program.c: 238:     Lcd_Set_Cursor(2, 1);
  1940   00186C  0E01               	movlw	1
  1941   00186E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1942   001870  0E02               	movlw	2
  1943   001872  EC7B  F01D         	call	_Lcd_Set_Cursor
  1944   001876                     
  1945                           ;Main_program.c: 239:     Lcd_Write_String("Limpiar:  Inicio");
  1946   001876  0E21               	movlw	low STR_7
  1947   001878  6E15               	movwf	Lcd_Write_String@a^0,c
  1948   00187A  0E7F               	movlw	high STR_7
  1949   00187C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1950   00187E  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1951   001882                     
  1952                           ;Main_program.c: 240:     Lcd_Set_Cursor(1, 1);
  1953   001882  0E01               	movlw	1
  1954   001884  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1955   001886  0E01               	movlw	1
  1956   001888  EC7B  F01D         	call	_Lcd_Set_Cursor
  1957   00188C                     
  1958                           ;Main_program.c: 241:     Lcd_Write_String("Perfil: #00");
  1959   00188C  0EBC               	movlw	low STR_8
  1960   00188E  6E15               	movwf	Lcd_Write_String@a^0,c
  1961   001890  0E7F               	movlw	high STR_8
  1962   001892  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1963   001894  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  1964   001898                     
  1965                           ;Main_program.c: 242:     Lcd_Set_Cursor(1, 10);
  1966   001898  0E0A               	movlw	10
  1967   00189A  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1968   00189C  0E01               	movlw	1
  1969   00189E  EC7B  F01D         	call	_Lcd_Set_Cursor
  1970   0018A2                     
  1971                           ;Main_program.c: 243:     Lcd_Blink();
  1972   0018A2  EC02  F022         	call	_Lcd_Blink	;wreg free
  1973   0018A6                     
  1974                           ;Main_program.c: 244:     _CHAR2 = 0;
  1975   0018A6  0E00               	movlw	0
  1976   0018A8  6E4E               	movwf	__CHAR2^0,c
  1977   0018AA                     
  1978                           ;Main_program.c: 245:     _CHAR1 = 0;
  1979   0018AA  0E00               	movlw	0
  1980   0018AC  6E4D               	movwf	__CHAR1^0,c
  1981                           
  1982                           ;Main_program.c: 247:     while (_CHAR2 == 0)
  1983   0018AE  EF8E  F00C         	goto	l7290
  1984   0018B2                     l7272:
  1985                           
  1986                           ;Main_program.c: 248:     {;Main_program.c: 249:         _CHAR2 = Keypad_Get_Char();
  1987   0018B2  EC30  F012         	call	_Keypad_Get_Char	;wreg free
  1988   0018B6  6E4E               	movwf	__CHAR2^0,c
  1989   0018B8                     
  1990                           ;Main_program.c: 250:         if (_CHAR2)
  1991   0018B8  504E               	movf	__CHAR2^0,w,c
  1992   0018BA  B4D8               	btfsc	status,2,c
  1993   0018BC  EF62  F00C         	goto	u7841
  1994   0018C0  EF64  F00C         	goto	u7840
  1995   0018C4                     u7841:
  1996   0018C4  EF81  F00C         	goto	l7286
  1997   0018C8                     u7840:
  1998   0018C8                     
  1999                           ;Main_program.c: 251:         {;Main_program.c: 252:             if (_CHAR2 == '*' || _C
      +                          HAR2 == '#')
  2000   0018C8  0E2A               	movlw	42
  2001   0018CA  184E               	xorwf	__CHAR2^0,w,c
  2002   0018CC  B4D8               	btfsc	status,2,c
  2003   0018CE  EF6B  F00C         	goto	u7851
  2004   0018D2  EF6D  F00C         	goto	u7850
  2005   0018D6                     u7851:
  2006   0018D6  EF76  F00C         	goto	l7280
  2007   0018DA                     u7850:
  2008   0018DA  0E23               	movlw	35
  2009   0018DC  184E               	xorwf	__CHAR2^0,w,c
  2010   0018DE  A4D8               	btfss	status,2,c
  2011   0018E0  EF74  F00C         	goto	u7861
  2012   0018E4  EF76  F00C         	goto	u7860
  2013   0018E8                     u7861:
  2014   0018E8  EF78  F00C         	goto	l7282
  2015   0018EC                     u7860:
  2016   0018EC                     l7280:
  2017                           
  2018                           ;Main_program.c: 253:                 _CHAR2 = '0';
  2019   0018EC  0E30               	movlw	48
  2020   0018EE  6E4E               	movwf	__CHAR2^0,c
  2021   0018F0                     l7282:
  2022                           
  2023                           ;Main_program.c: 254:             Lcd_Write_Char(_CHAR2);
  2024   0018F0  504E               	movf	__CHAR2^0,w,c
  2025   0018F2  EC94  F021         	call	_Lcd_Write_Char
  2026   0018F6                     
  2027                           ;Main_program.c: 255:             num2 = _CHAR2 - '0';
  2028   0018F6  0ED0               	movlw	208
  2029   0018F8  244E               	addwf	__CHAR2^0,w,c
  2030   0018FA  6E46               	movwf	_num2^0,c
  2031   0018FC  6A47               	clrf	(_num2+1)^0,c
  2032   0018FE  0EFF               	movlw	255
  2033   001900  2247               	addwfc	(_num2+1)^0,f,c
  2034   001902                     l7286:
  2035                           
  2036                           ;Main_program.c: 257:         if(PORTBbits.RB0 == 0)
  2037   001902  B081               	btfsc	129,0,c	;volatile
  2038   001904  EF86  F00C         	goto	u7871
  2039   001908  EF88  F00C         	goto	u7870
  2040   00190C                     u7871:
  2041   00190C  EF8E  F00C         	goto	l7290
  2042   001910                     u7870:
  2043   001910                     
  2044                           ;Main_program.c: 258:         {;Main_program.c: 259:             num2 = 0;
  2045   001910  0E00               	movlw	0
  2046   001912  6E47               	movwf	(_num2+1)^0,c
  2047   001914  0E00               	movlw	0
  2048   001916  6E46               	movwf	_num2^0,c
  2049                           
  2050                           ;Main_program.c: 260:             break;
  2051   001918  EFCF  F00C         	goto	l7310
  2052   00191C                     l7290:
  2053                           
  2054                           ;Main_program.c: 247:     while (_CHAR2 == 0)
  2055   00191C  504E               	movf	__CHAR2^0,w,c
  2056   00191E  B4D8               	btfsc	status,2,c
  2057   001920  EF94  F00C         	goto	u7881
  2058   001924  EF96  F00C         	goto	u7880
  2059   001928                     u7881:
  2060   001928  EF59  F00C         	goto	l7272
  2061   00192C                     u7880:
  2062   00192C  EFCF  F00C         	goto	l7310
  2063   001930                     l7292:
  2064                           
  2065                           ;Main_program.c: 264:     {;Main_program.c: 265:         _CHAR1 = Keypad_Get_Char();
  2066   001930  EC30  F012         	call	_Keypad_Get_Char	;wreg free
  2067   001934  6E4D               	movwf	__CHAR1^0,c
  2068   001936                     
  2069                           ;Main_program.c: 266:         if (_CHAR1)
  2070   001936  504D               	movf	__CHAR1^0,w,c
  2071   001938  B4D8               	btfsc	status,2,c
  2072   00193A  EFA1  F00C         	goto	u7891
  2073   00193E  EFA3  F00C         	goto	u7890
  2074   001942                     u7891:
  2075   001942  EFC2  F00C         	goto	l7306
  2076   001946                     u7890:
  2077   001946                     
  2078                           ;Main_program.c: 267:         {;Main_program.c: 268:             if (_CHAR1 == '*' || _C
      +                          HAR1 == '#')
  2079   001946  0E2A               	movlw	42
  2080   001948  184D               	xorwf	__CHAR1^0,w,c
  2081   00194A  B4D8               	btfsc	status,2,c
  2082   00194C  EFAA  F00C         	goto	u7901
  2083   001950  EFAC  F00C         	goto	u7900
  2084   001954                     u7901:
  2085   001954  EFB5  F00C         	goto	l7300
  2086   001958                     u7900:
  2087   001958  0E23               	movlw	35
  2088   00195A  184D               	xorwf	__CHAR1^0,w,c
  2089   00195C  A4D8               	btfss	status,2,c
  2090   00195E  EFB3  F00C         	goto	u7911
  2091   001962  EFB5  F00C         	goto	u7910
  2092   001966                     u7911:
  2093   001966  EFB7  F00C         	goto	l7302
  2094   00196A                     u7910:
  2095   00196A                     l7300:
  2096                           
  2097                           ;Main_program.c: 269:                 _CHAR1 = '0';
  2098   00196A  0E30               	movlw	48
  2099   00196C  6E4D               	movwf	__CHAR1^0,c
  2100   00196E                     l7302:
  2101                           
  2102                           ;Main_program.c: 270:             Lcd_Write_Char(_CHAR1);
  2103   00196E  504D               	movf	__CHAR1^0,w,c
  2104   001970  EC94  F021         	call	_Lcd_Write_Char
  2105   001974                     
  2106                           ;Main_program.c: 271:             Lcd_NoBlink();
  2107   001974  ECFB  F021         	call	_Lcd_NoBlink	;wreg free
  2108                           
  2109                           ;Main_program.c: 272:             num1 = _CHAR1 - '0';
  2110   001978  0ED0               	movlw	208
  2111   00197A  244D               	addwf	__CHAR1^0,w,c
  2112   00197C  6E44               	movwf	_num1^0,c
  2113   00197E  6A45               	clrf	(_num1+1)^0,c
  2114   001980  0EFF               	movlw	255
  2115   001982  2245               	addwfc	(_num1+1)^0,f,c
  2116   001984                     l7306:
  2117                           
  2118                           ;Main_program.c: 274:         if(PORTBbits.RB0 == 0)
  2119   001984  B081               	btfsc	129,0,c	;volatile
  2120   001986  EFC7  F00C         	goto	u7921
  2121   00198A  EFC9  F00C         	goto	u7920
  2122   00198E                     u7921:
  2123   00198E  EFCF  F00C         	goto	l7310
  2124   001992                     u7920:
  2125   001992                     
  2126                           ;Main_program.c: 275:         {;Main_program.c: 276:             num1 = 0;
  2127   001992  0E00               	movlw	0
  2128   001994  6E45               	movwf	(_num1+1)^0,c
  2129   001996  0E00               	movlw	0
  2130   001998  6E44               	movwf	_num1^0,c
  2131                           
  2132                           ;Main_program.c: 277:             break;
  2133   00199A  EFD7  F00C         	goto	l7312
  2134   00199E                     l7310:
  2135                           
  2136                           ;Main_program.c: 263:     while (_CHAR1 == 0)
  2137   00199E  504D               	movf	__CHAR1^0,w,c
  2138   0019A0  B4D8               	btfsc	status,2,c
  2139   0019A2  EFD5  F00C         	goto	u7931
  2140   0019A6  EFD7  F00C         	goto	u7930
  2141   0019AA                     u7931:
  2142   0019AA  EF98  F00C         	goto	l7292
  2143   0019AE                     u7930:
  2144   0019AE                     l7312:
  2145                           
  2146                           ;Main_program.c: 280:     PROFILE_NUM = num2 * 10 + num1;
  2147   0019AE  C046  F011         	movff	_num2,___wmul@multiplier
  2148   0019B2  C047  F012         	movff	_num2+1,___wmul@multiplier+1
  2149   0019B6  0E00               	movlw	0
  2150   0019B8  6E14               	movwf	(___wmul@multiplicand+1)^0,c
  2151   0019BA  0E0A               	movlw	10
  2152   0019BC  6E13               	movwf	___wmul@multiplicand^0,c
  2153   0019BE  ECC6  F021         	call	___wmul	;wreg free
  2154   0019C2  5044               	movf	_num1^0,w,c
  2155   0019C4  2411               	addwf	?___wmul^0,w,c
  2156   0019C6  6E48               	movwf	_PROFILE_NUM^0,c
  2157   0019C8  5045               	movf	(_num1+1)^0,w,c
  2158   0019CA  2012               	addwfc	(?___wmul+1)^0,w,c
  2159   0019CC  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  2160   0019CE                     
  2161                           ;Main_program.c: 281:     _delay((unsigned long)((500)*(8000000L/4000.0)));
  2162   0019CE  0E06               	movlw	6
  2163   0019D0  6E1C               	movwf	(??_USER_VALUE+1)^0,c
  2164   0019D2  0E13               	movlw	19
  2165   0019D4  6E1B               	movwf	??_USER_VALUE^0,c
  2166   0019D6  0EAE               	movlw	174
  2167   0019D8                     u8177:
  2168   0019D8  2EE8               	decfsz	wreg,f,c
  2169   0019DA  D7FE               	bra	u8177
  2170   0019DC  2E1B               	decfsz	??_USER_VALUE^0,f,c
  2171   0019DE  D7FC               	bra	u8177
  2172   0019E0  2E1C               	decfsz	(??_USER_VALUE+1)^0,f,c
  2173   0019E2  D7FA               	bra	u8177
  2174                           
  2175                           ;Main_program.c: 283:     switch (PROFILE_NUM)
  2176   0019E4  EF27  F00E         	goto	l7436
  2177   0019E8                     l7316:
  2178                           
  2179                           ;Main_program.c: 287:             _delay((unsigned long)((400)*(8000000L/4000.0)));
  2180   0019E8  0E05               	movlw	5
  2181   0019EA  6E1C               	movwf	(??_USER_VALUE+1)^0,c
  2182   0019EC  0E0F               	movlw	15
  2183   0019EE  6E1B               	movwf	??_USER_VALUE^0,c
  2184   0019F0  0EF1               	movlw	241
  2185   0019F2                     u8187:
  2186   0019F2  2EE8               	decfsz	wreg,f,c
  2187   0019F4  D7FE               	bra	u8187
  2188   0019F6  2E1B               	decfsz	??_USER_VALUE^0,f,c
  2189   0019F8  D7FC               	bra	u8187
  2190   0019FA  2E1C               	decfsz	(??_USER_VALUE+1)^0,f,c
  2191   0019FC  D7FA               	bra	u8187
  2192   0019FE  F000               	nop	
  2193   001A00                     
  2194                           ;Main_program.c: 288:             Lcd_Clear();
  2195   001A00  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2196   001A04                     
  2197                           ;Main_program.c: 289:             Lcd_Set_Cursor(2, 1);
  2198   001A04  0E01               	movlw	1
  2199   001A06  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2200   001A08  0E02               	movlw	2
  2201   001A0A  EC7B  F01D         	call	_Lcd_Set_Cursor
  2202   001A0E                     
  2203                           ;Main_program.c: 290:             Lcd_Write_String("Mantenga iniciar");
  2204   001A0E  0E32               	movlw	low STR_9
  2205   001A10  6E15               	movwf	Lcd_Write_String@a^0,c
  2206   001A12  0E7F               	movlw	high STR_9
  2207   001A14  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2208   001A16  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2209   001A1A                     l162:
  2210   001A1A  B081               	btfsc	129,0,c	;volatile
  2211   001A1C  EF12  F00D         	goto	u7941
  2212   001A20  EF14  F00D         	goto	u7940
  2213   001A24                     u7941:
  2214   001A24  EF0D  F00D         	goto	l162
  2215   001A28                     u7940:
  2216   001A28                     
  2217                           ;Main_program.c: 292:             _delay((unsigned long)((200)*(8000000L/4000.0)));
  2218   001A28  0E03               	movlw	3
  2219   001A2A  6E1C               	movwf	(??_USER_VALUE+1)^0,c
  2220   001A2C  0E08               	movlw	8
  2221   001A2E  6E1B               	movwf	??_USER_VALUE^0,c
  2222   001A30  0E77               	movlw	119
  2223   001A32                     u8197:
  2224   001A32  2EE8               	decfsz	wreg,f,c
  2225   001A34  D7FE               	bra	u8197
  2226   001A36  2E1B               	decfsz	??_USER_VALUE^0,f,c
  2227   001A38  D7FC               	bra	u8197
  2228   001A3A  2E1C               	decfsz	(??_USER_VALUE+1)^0,f,c
  2229   001A3C  D7FA               	bra	u8197
  2230   001A3E  F000               	nop	
  2231                           
  2232                           ;Main_program.c: 293:             while (PORTBbits.RB0 == 0)
  2233   001A40  EF2E  F00D         	goto	l7332
  2234   001A44                     l7326:
  2235                           
  2236                           ;Main_program.c: 294:             {;Main_program.c: 295:                 Lcd_Set_Cursor(
      +                          1,1);
  2237   001A44  0E01               	movlw	1
  2238   001A46  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2239   001A48  0E01               	movlw	1
  2240   001A4A  EC7B  F01D         	call	_Lcd_Set_Cursor
  2241   001A4E                     
  2242                           ;Main_program.c: 296:                 Lcd_Write_String("Limpiando..");
  2243   001A4E  0EB0               	movlw	low STR_10
  2244   001A50  6E15               	movwf	Lcd_Write_String@a^0,c
  2245   001A52  0E7F               	movlw	high STR_10
  2246   001A54  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2247   001A56  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2248   001A5A                     
  2249                           ;Main_program.c: 298:                 LATBbits.LATB3 = 1;
  2250   001A5A  868A               	bsf	138,3,c	;volatile
  2251   001A5C                     l7332:
  2252                           
  2253                           ;Main_program.c: 293:             while (PORTBbits.RB0 == 0)
  2254   001A5C  A081               	btfss	129,0,c	;volatile
  2255   001A5E  EF33  F00D         	goto	u7951
  2256   001A62  EF35  F00D         	goto	u7950
  2257   001A66                     u7951:
  2258   001A66  EF22  F00D         	goto	l7326
  2259   001A6A                     u7950:
  2260   001A6A                     
  2261                           ;Main_program.c: 300:             LATBbits.LATB3 = 0;
  2262   001A6A  968A               	bcf	138,3,c	;volatile
  2263   001A6C                     
  2264                           ;Main_program.c: 301:             CURRENT_OPTION = 0;
  2265   001A6C  0E00               	movlw	0
  2266   001A6E  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  2267   001A70  0E00               	movlw	0
  2268   001A72  6E4A               	movwf	_CURRENT_OPTION^0,c
  2269                           
  2270                           ;Main_program.c: 302:             break;
  2271   001A74  EF4D  F00E         	goto	l175
  2272   001A78                     l7336:
  2273                           
  2274                           ;Main_program.c: 305:             Lcd_Clear();
  2275   001A78  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2276   001A7C                     
  2277                           ;Main_program.c: 306:             Lcd_Set_Cursor(1, 1);
  2278   001A7C  0E01               	movlw	1
  2279   001A7E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2280   001A80  0E01               	movlw	1
  2281   001A82  EC7B  F01D         	call	_Lcd_Set_Cursor
  2282   001A86                     
  2283                           ;Main_program.c: 307:             Lcd_Write_String("Perf.01= 1500ml");
  2284   001A86  0E73               	movlw	low STR_11
  2285   001A88  6E15               	movwf	Lcd_Write_String@a^0,c
  2286   001A8A  0E7F               	movlw	high STR_11
  2287   001A8C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2288   001A8E  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2289   001A92                     
  2290                           ;Main_program.c: 308:             PROFILE_NUM = 1500;
  2291   001A92  0E05               	movlw	5
  2292   001A94  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  2293   001A96  0EDC               	movlw	220
  2294   001A98  6E48               	movwf	_PROFILE_NUM^0,c
  2295   001A9A                     
  2296                           ;Main_program.c: 309:             Lcd_Set_Cursor(2, 1);
  2297   001A9A  0E01               	movlw	1
  2298   001A9C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2299   001A9E  0E02               	movlw	2
  2300   001AA0  EC7B  F01D         	call	_Lcd_Set_Cursor
  2301   001AA4                     
  2302                           ;Main_program.c: 310:             Lcd_Write_String("Atras *");
  2303   001AA4  0ED1               	movlw	low STR_12
  2304   001AA6  6E15               	movwf	Lcd_Write_String@a^0,c
  2305   001AA8  0E7F               	movlw	high STR_12
  2306   001AAA  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2307   001AAC  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2308   001AB0                     
  2309                           ;Main_program.c: 311:             Lcd_Set_Cursor(2, 10);
  2310   001AB0  0E0A               	movlw	10
  2311   001AB2  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2312   001AB4  0E02               	movlw	2
  2313   001AB6  EC7B  F01D         	call	_Lcd_Set_Cursor
  2314   001ABA                     
  2315                           ;Main_program.c: 312:             Lcd_Write_String("Iniciar");
  2316   001ABA  0ED9               	movlw	low STR_13
  2317   001ABC  6E15               	movwf	Lcd_Write_String@a^0,c
  2318   001ABE  0E7F               	movlw	high STR_13
  2319   001AC0  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2320   001AC2  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2321   001AC6                     l7352:
  2322                           
  2323                           ;Main_program.c: 313:             CURRENT_OPTION = 1;
  2324   001AC6  0E00               	movlw	0
  2325   001AC8  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  2326   001ACA  0E01               	movlw	1
  2327   001ACC  6E4A               	movwf	_CURRENT_OPTION^0,c
  2328                           
  2329                           ;Main_program.c: 314:             break;
  2330   001ACE  EF4D  F00E         	goto	l175
  2331   001AD2                     l7354:
  2332                           
  2333                           ;Main_program.c: 317:             Lcd_Clear();
  2334   001AD2  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2335   001AD6                     
  2336                           ;Main_program.c: 318:             Lcd_Set_Cursor(1, 1);
  2337   001AD6  0E01               	movlw	1
  2338   001AD8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2339   001ADA  0E01               	movlw	1
  2340   001ADC  EC7B  F01D         	call	_Lcd_Set_Cursor
  2341   001AE0                     
  2342                           ;Main_program.c: 319:             Lcd_Write_String("Perf.02= 1000ml");
  2343   001AE0  0E63               	movlw	low STR_14
  2344   001AE2  6E15               	movwf	Lcd_Write_String@a^0,c
  2345   001AE4  0E7F               	movlw	high STR_14
  2346   001AE6  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2347   001AE8  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2348   001AEC                     
  2349                           ;Main_program.c: 320:             PROFILE_NUM = 1000;
  2350   001AEC  0E03               	movlw	3
  2351   001AEE  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  2352   001AF0  0EE8               	movlw	232
  2353   001AF2  6E48               	movwf	_PROFILE_NUM^0,c
  2354   001AF4                     
  2355                           ;Main_program.c: 321:             Lcd_Set_Cursor(2, 1);
  2356   001AF4  0E01               	movlw	1
  2357   001AF6  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2358   001AF8  0E02               	movlw	2
  2359   001AFA  EC7B  F01D         	call	_Lcd_Set_Cursor
  2360   001AFE                     
  2361                           ;Main_program.c: 322:             Lcd_Write_String("Atras *");
  2362   001AFE  0ED1               	movlw	low STR_12
  2363   001B00  6E15               	movwf	Lcd_Write_String@a^0,c
  2364   001B02  0E7F               	movlw	high STR_12
  2365   001B04  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2366   001B06  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2367   001B0A                     
  2368                           ;Main_program.c: 323:             Lcd_Set_Cursor(2, 10);
  2369   001B0A  0E0A               	movlw	10
  2370   001B0C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2371   001B0E  0E02               	movlw	2
  2372   001B10  EC7B  F01D         	call	_Lcd_Set_Cursor
  2373   001B14                     
  2374                           ;Main_program.c: 324:             Lcd_Write_String("Iniciar");
  2375   001B14  0ED9               	movlw	low STR_13
  2376   001B16  6E15               	movwf	Lcd_Write_String@a^0,c
  2377   001B18  0E7F               	movlw	high STR_13
  2378   001B1A  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2379   001B1C  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2380   001B20  EF63  F00D         	goto	l7352
  2381   001B24                     l7372:
  2382                           
  2383                           ;Main_program.c: 329:             Lcd_Clear();
  2384   001B24  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2385   001B28                     
  2386                           ;Main_program.c: 330:             Lcd_Set_Cursor(1, 1);
  2387   001B28  0E01               	movlw	1
  2388   001B2A  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2389   001B2C  0E01               	movlw	1
  2390   001B2E  EC7B  F01D         	call	_Lcd_Set_Cursor
  2391   001B32                     
  2392                           ;Main_program.c: 331:             Lcd_Write_String("Perf.03= 500ml");
  2393   001B32  0E92               	movlw	low STR_17
  2394   001B34  6E15               	movwf	Lcd_Write_String@a^0,c
  2395   001B36  0E7F               	movlw	high STR_17
  2396   001B38  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2397   001B3A  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2398   001B3E                     
  2399                           ;Main_program.c: 332:             PROFILE_NUM = 500;
  2400   001B3E  0E01               	movlw	1
  2401   001B40  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  2402   001B42  0EF4               	movlw	244
  2403   001B44  6E48               	movwf	_PROFILE_NUM^0,c
  2404   001B46                     
  2405                           ;Main_program.c: 333:             Lcd_Set_Cursor(2, 1);
  2406   001B46  0E01               	movlw	1
  2407   001B48  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2408   001B4A  0E02               	movlw	2
  2409   001B4C  EC7B  F01D         	call	_Lcd_Set_Cursor
  2410   001B50                     
  2411                           ;Main_program.c: 334:             Lcd_Write_String("Atras *");
  2412   001B50  0ED1               	movlw	low STR_12
  2413   001B52  6E15               	movwf	Lcd_Write_String@a^0,c
  2414   001B54  0E7F               	movlw	high STR_12
  2415   001B56  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2416   001B58  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2417   001B5C                     
  2418                           ;Main_program.c: 335:             Lcd_Set_Cursor(2, 10);
  2419   001B5C  0E0A               	movlw	10
  2420   001B5E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2421   001B60  0E02               	movlw	2
  2422   001B62  EC7B  F01D         	call	_Lcd_Set_Cursor
  2423   001B66                     
  2424                           ;Main_program.c: 336:             Lcd_Write_String("Iniciar");
  2425   001B66  0ED9               	movlw	low STR_13
  2426   001B68  6E15               	movwf	Lcd_Write_String@a^0,c
  2427   001B6A  0E7F               	movlw	high STR_13
  2428   001B6C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2429   001B6E  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2430   001B72  EF63  F00D         	goto	l7352
  2431   001B76                     l7390:
  2432                           
  2433                           ;Main_program.c: 341:             Lcd_Clear();
  2434   001B76  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2435   001B7A                     
  2436                           ;Main_program.c: 342:             Lcd_Set_Cursor(1, 1);
  2437   001B7A  0E01               	movlw	1
  2438   001B7C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2439   001B7E  0E01               	movlw	1
  2440   001B80  EC7B  F01D         	call	_Lcd_Set_Cursor
  2441   001B84                     
  2442                           ;Main_program.c: 343:             Lcd_Write_String("Perf.04= 250ml");
  2443   001B84  0EA1               	movlw	low STR_20
  2444   001B86  6E15               	movwf	Lcd_Write_String@a^0,c
  2445   001B88  0E7F               	movlw	high STR_20
  2446   001B8A  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2447   001B8C  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2448   001B90                     
  2449                           ;Main_program.c: 344:             PROFILE_NUM = 250;
  2450   001B90  0E00               	movlw	0
  2451   001B92  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  2452   001B94  0EFA               	movlw	250
  2453   001B96  6E48               	movwf	_PROFILE_NUM^0,c
  2454   001B98                     
  2455                           ;Main_program.c: 345:             Lcd_Set_Cursor(2, 1);
  2456   001B98  0E01               	movlw	1
  2457   001B9A  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2458   001B9C  0E02               	movlw	2
  2459   001B9E  EC7B  F01D         	call	_Lcd_Set_Cursor
  2460   001BA2                     
  2461                           ;Main_program.c: 346:             Lcd_Write_String("Atras *");
  2462   001BA2  0ED1               	movlw	low STR_12
  2463   001BA4  6E15               	movwf	Lcd_Write_String@a^0,c
  2464   001BA6  0E7F               	movlw	high STR_12
  2465   001BA8  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2466   001BAA  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2467   001BAE                     
  2468                           ;Main_program.c: 347:             Lcd_Set_Cursor(2, 10);
  2469   001BAE  0E0A               	movlw	10
  2470   001BB0  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2471   001BB2  0E02               	movlw	2
  2472   001BB4  EC7B  F01D         	call	_Lcd_Set_Cursor
  2473   001BB8                     
  2474                           ;Main_program.c: 348:             Lcd_Write_String("Iniciar");
  2475   001BB8  0ED9               	movlw	low STR_13
  2476   001BBA  6E15               	movwf	Lcd_Write_String@a^0,c
  2477   001BBC  0E7F               	movlw	high STR_13
  2478   001BBE  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2479   001BC0  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2480   001BC4  EF63  F00D         	goto	l7352
  2481   001BC8                     l7408:
  2482                           
  2483                           ;Main_program.c: 353:             Lcd_Clear();
  2484   001BC8  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2485   001BCC                     
  2486                           ;Main_program.c: 354:             Lcd_Set_Cursor(1, 1);
  2487   001BCC  0E01               	movlw	1
  2488   001BCE  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2489   001BD0  0E01               	movlw	1
  2490   001BD2  EC7B  F01D         	call	_Lcd_Set_Cursor
  2491   001BD6                     
  2492                           ;Main_program.c: 355:             Lcd_Write_String("Perf.05= 100ml ");
  2493   001BD6  0E43               	movlw	low STR_23
  2494   001BD8  6E15               	movwf	Lcd_Write_String@a^0,c
  2495   001BDA  0E7F               	movlw	high STR_23
  2496   001BDC  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2497   001BDE  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2498   001BE2                     
  2499                           ;Main_program.c: 356:             PROFILE_NUM = 100;
  2500   001BE2  0E00               	movlw	0
  2501   001BE4  6E49               	movwf	(_PROFILE_NUM+1)^0,c
  2502   001BE6  0E64               	movlw	100
  2503   001BE8  6E48               	movwf	_PROFILE_NUM^0,c
  2504   001BEA                     
  2505                           ;Main_program.c: 357:             Lcd_Set_Cursor(2, 1);
  2506   001BEA  0E01               	movlw	1
  2507   001BEC  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2508   001BEE  0E02               	movlw	2
  2509   001BF0  EC7B  F01D         	call	_Lcd_Set_Cursor
  2510   001BF4                     
  2511                           ;Main_program.c: 358:             Lcd_Write_String("Atras *");
  2512   001BF4  0ED1               	movlw	low STR_12
  2513   001BF6  6E15               	movwf	Lcd_Write_String@a^0,c
  2514   001BF8  0E7F               	movlw	high STR_12
  2515   001BFA  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2516   001BFC  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2517   001C00                     
  2518                           ;Main_program.c: 359:             Lcd_Set_Cursor(2, 10);
  2519   001C00  0E0A               	movlw	10
  2520   001C02  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2521   001C04  0E02               	movlw	2
  2522   001C06  EC7B  F01D         	call	_Lcd_Set_Cursor
  2523   001C0A                     
  2524                           ;Main_program.c: 360:             Lcd_Write_String("Iniciar");
  2525   001C0A  0ED9               	movlw	low STR_13
  2526   001C0C  6E15               	movwf	Lcd_Write_String@a^0,c
  2527   001C0E  0E7F               	movlw	high STR_13
  2528   001C10  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2529   001C12  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2530   001C16  EF63  F00D         	goto	l7352
  2531   001C1A                     l7426:
  2532                           
  2533                           ;Main_program.c: 365:             Lcd_Clear();
  2534   001C1A  EC1E  F022         	call	_Lcd_Clear	;wreg free
  2535   001C1E                     
  2536                           ;Main_program.c: 366:             Lcd_Set_Cursor(1, 1);
  2537   001C1E  0E01               	movlw	1
  2538   001C20  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2539   001C22  0E01               	movlw	1
  2540   001C24  EC7B  F01D         	call	_Lcd_Set_Cursor
  2541   001C28                     
  2542                           ;Main_program.c: 367:             Lcd_Write_String("  No encontrado ");
  2543   001C28  0E10               	movlw	low STR_26
  2544   001C2A  6E15               	movwf	Lcd_Write_String@a^0,c
  2545   001C2C  0E7F               	movlw	high STR_26
  2546   001C2E  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2547   001C30  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2548   001C34                     
  2549                           ;Main_program.c: 368:             Lcd_Set_Cursor(2, 1);
  2550   001C34  0E01               	movlw	1
  2551   001C36  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2552   001C38  0E02               	movlw	2
  2553   001C3A  EC7B  F01D         	call	_Lcd_Set_Cursor
  2554   001C3E                     
  2555                           ;Main_program.c: 369:             Lcd_Write_String("Atras *");
  2556   001C3E  0ED1               	movlw	low STR_12
  2557   001C40  6E15               	movwf	Lcd_Write_String@a^0,c
  2558   001C42  0E7F               	movlw	high STR_12
  2559   001C44  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2560   001C46  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  2561                           
  2562                           ;Main_program.c: 370:     }
  2563   001C4A  EF4D  F00E         	goto	l175
  2564   001C4E                     l7436:
  2565   001C4E  C048  F01B         	movff	_PROFILE_NUM,??_USER_VALUE
  2566   001C52  C049  F01C         	movff	_PROFILE_NUM+1,??_USER_VALUE+1
  2567                           
  2568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 1, Range of values is 0 to 0
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            4     3 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575   001C56  501C               	movf	(??_USER_VALUE+1)^0,w,c
  2576   001C58  0A00               	xorlw	0	; case 0
  2577   001C5A  B4D8               	btfsc	status,2,c
  2578   001C5C  EF32  F00E         	goto	l7852
  2579   001C60  EF0D  F00E         	goto	l7426
  2580   001C64                     l7852:
  2581                           
  2582                           ; Switch size 1, requested type "simple"
  2583                           ; Number of cases is 6, Range of values is 0 to 5
  2584                           ; switch strategies available:
  2585                           ; Name         Instructions Cycles
  2586                           ; simple_byte           19    10 (average)
  2587                           ;	Chosen strategy is simple_byte
  2588   001C64  501B               	movf	??_USER_VALUE^0,w,c
  2589   001C66  0A00               	xorlw	0	; case 0
  2590   001C68  B4D8               	btfsc	status,2,c
  2591   001C6A  EFF4  F00C         	goto	l7316
  2592   001C6E  0A01               	xorlw	1	; case 1
  2593   001C70  B4D8               	btfsc	status,2,c
  2594   001C72  EF3C  F00D         	goto	l7336
  2595   001C76  0A03               	xorlw	3	; case 2
  2596   001C78  B4D8               	btfsc	status,2,c
  2597   001C7A  EF69  F00D         	goto	l7354
  2598   001C7E  0A01               	xorlw	1	; case 3
  2599   001C80  B4D8               	btfsc	status,2,c
  2600   001C82  EF92  F00D         	goto	l7372
  2601   001C86  0A07               	xorlw	7	; case 4
  2602   001C88  B4D8               	btfsc	status,2,c
  2603   001C8A  EFBB  F00D         	goto	l7390
  2604   001C8E  0A01               	xorlw	1	; case 5
  2605   001C90  B4D8               	btfsc	status,2,c
  2606   001C92  EFE4  F00D         	goto	l7408
  2607   001C96  EF0D  F00E         	goto	l7426
  2608   001C9A                     l175:
  2609   001C9A  0012               	return		;funcret
  2610   001C9C                     __end_of_USER_VALUE:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _Lcd_NoBlink *****************
  2614 ;; Defined at:
  2615 ;;		line 129 in file "lcd.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 4
  2636 ;; This function calls:
  2637 ;;		_Lcd_Cmd
  2638 ;; This function is called by:
  2639 ;;		_USER_VALUE
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text3
  2644   0043F6                     __ptext3:
  2645                           	callstack 0
  2646   0043F6                     _Lcd_NoBlink:
  2647                           	callstack 25
  2648   0043F6                     
  2649                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  2650   0043F6  0E00               	movlw	0
  2651   0043F8  ECD9  F021         	call	_Lcd_Cmd
  2652                           
  2653                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  2654   0043FC  0E0C               	movlw	12
  2655   0043FE  ECD9  F021         	call	_Lcd_Cmd
  2656   004402  0012               	return		;funcret
  2657   004404                     __end_of_Lcd_NoBlink:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _Lcd_Blink *****************
  2661 ;; Defined at:
  2662 ;;		line 123 in file "lcd.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 4
  2683 ;; This function calls:
  2684 ;;		_Lcd_Cmd
  2685 ;; This function is called by:
  2686 ;;		_USER_VALUE
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text4
  2691   004404                     __ptext4:
  2692                           	callstack 0
  2693   004404                     _Lcd_Blink:
  2694                           	callstack 25
  2695   004404                     
  2696                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  2697   004404  0E00               	movlw	0
  2698   004406  ECD9  F021         	call	_Lcd_Cmd
  2699                           
  2700                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  2701   00440A  0E0F               	movlw	15
  2702   00440C  ECD9  F021         	call	_Lcd_Cmd
  2703   004410  0012               	return		;funcret
  2704   004412                     __end_of_Lcd_Blink:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _Keypad_Get_Char *****************
  2708 ;; Defined at:
  2709 ;;		line 23 in file "kbd4x4.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      unsigned char 
  2716 ;; Registers used:
  2717 ;;		wreg
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2726 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:        1 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 2
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;;		_USER_VALUE
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text5
  2739   002460                     __ptext5:
  2740                           	callstack 0
  2741   002460                     _Keypad_Get_Char:
  2742                           	callstack 27
  2743   002460                     
  2744                           ;kbd4x4.c: 25:     PORTDbits.RD7 = 0;
  2745   002460  9E83               	bcf	131,7,c	;volatile
  2746                           
  2747                           ;kbd4x4.c: 26:     PORTDbits.RD6 = 1;
  2748   002462  8C83               	bsf	131,6,c	;volatile
  2749                           
  2750                           ;kbd4x4.c: 27:     PORTDbits.RD5 = 1;
  2751   002464  8A83               	bsf	131,5,c	;volatile
  2752                           
  2753                           ;kbd4x4.c: 28:     PORTDbits.RD4 = 1;
  2754   002466  8883               	bsf	131,4,c	;volatile
  2755                           
  2756                           ;kbd4x4.c: 29:     if(PORTDbits.RD3 == 0){
  2757   002468  B683               	btfsc	131,3,c	;volatile
  2758   00246A  EF39  F012         	goto	u1941
  2759   00246E  EF3B  F012         	goto	u1940
  2760   002472                     u1941:
  2761   002472  EF54  F012         	goto	l300
  2762   002476                     u1940:
  2763   002476                     
  2764                           ;kbd4x4.c: 30:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2765   002476  0E06               	movlw	6
  2766   002478  6E11               	movwf	??_Keypad_Get_Char^0,c
  2767   00247A  0E30               	movlw	48
  2768   00247C                     u8207:
  2769   00247C  2EE8               	decfsz	wreg,f,c
  2770   00247E  D7FE               	bra	u8207
  2771   002480  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2772   002482  D7FC               	bra	u8207
  2773   002484  D000               	nop2	
  2774   002486                     l301:
  2775   002486  A683               	btfss	131,3,c	;volatile
  2776   002488  EF48  F012         	goto	u1951
  2777   00248C  EF4A  F012         	goto	u1950
  2778   002490                     u1951:
  2779   002490  EF43  F012         	goto	l301
  2780   002494                     u1950:
  2781   002494                     
  2782                           ;kbd4x4.c: 32:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2783   002494  0E0D               	movlw	13
  2784   002496  6E11               	movwf	??_Keypad_Get_Char^0,c
  2785   002498  0EFC               	movlw	252
  2786   00249A                     u8217:
  2787   00249A  2EE8               	decfsz	wreg,f,c
  2788   00249C  D7FE               	bra	u8217
  2789   00249E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2790   0024A0  D7FC               	bra	u8217
  2791                           
  2792                           ;kbd4x4.c: 33:         return '1';
  2793   0024A2  0E31               	movlw	49
  2794   0024A4  EFC1  F013         	goto	l304
  2795   0024A8                     l300:
  2796                           
  2797                           ;kbd4x4.c: 35:     if(PORTDbits.RD2 == 0){
  2798   0024A8  B483               	btfsc	131,2,c	;volatile
  2799   0024AA  EF59  F012         	goto	u1961
  2800   0024AE  EF5B  F012         	goto	u1960
  2801   0024B2                     u1961:
  2802   0024B2  EF74  F012         	goto	l305
  2803   0024B6                     u1960:
  2804   0024B6                     
  2805                           ;kbd4x4.c: 36:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2806   0024B6  0E06               	movlw	6
  2807   0024B8  6E11               	movwf	??_Keypad_Get_Char^0,c
  2808   0024BA  0E30               	movlw	48
  2809   0024BC                     u8227:
  2810   0024BC  2EE8               	decfsz	wreg,f,c
  2811   0024BE  D7FE               	bra	u8227
  2812   0024C0  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2813   0024C2  D7FC               	bra	u8227
  2814   0024C4  D000               	nop2	
  2815   0024C6                     l306:
  2816   0024C6  A483               	btfss	131,2,c	;volatile
  2817   0024C8  EF68  F012         	goto	u1971
  2818   0024CC  EF6A  F012         	goto	u1970
  2819   0024D0                     u1971:
  2820   0024D0  EF63  F012         	goto	l306
  2821   0024D4                     u1970:
  2822   0024D4                     
  2823                           ;kbd4x4.c: 38:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2824   0024D4  0E0D               	movlw	13
  2825   0024D6  6E11               	movwf	??_Keypad_Get_Char^0,c
  2826   0024D8  0EFC               	movlw	252
  2827   0024DA                     u8237:
  2828   0024DA  2EE8               	decfsz	wreg,f,c
  2829   0024DC  D7FE               	bra	u8237
  2830   0024DE  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2831   0024E0  D7FC               	bra	u8237
  2832                           
  2833                           ;kbd4x4.c: 39:         return '2';
  2834   0024E2  0E32               	movlw	50
  2835   0024E4  EFC1  F013         	goto	l304
  2836   0024E8                     l305:
  2837                           
  2838                           ;kbd4x4.c: 41:     if(PORTDbits.RD1 == 0){
  2839   0024E8  B283               	btfsc	131,1,c	;volatile
  2840   0024EA  EF79  F012         	goto	u1981
  2841   0024EE  EF7B  F012         	goto	u1980
  2842   0024F2                     u1981:
  2843   0024F2  EF94  F012         	goto	l309
  2844   0024F6                     u1980:
  2845   0024F6                     
  2846                           ;kbd4x4.c: 42:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2847   0024F6  0E06               	movlw	6
  2848   0024F8  6E11               	movwf	??_Keypad_Get_Char^0,c
  2849   0024FA  0E30               	movlw	48
  2850   0024FC                     u8247:
  2851   0024FC  2EE8               	decfsz	wreg,f,c
  2852   0024FE  D7FE               	bra	u8247
  2853   002500  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2854   002502  D7FC               	bra	u8247
  2855   002504  D000               	nop2	
  2856   002506                     l310:
  2857   002506  A283               	btfss	131,1,c	;volatile
  2858   002508  EF88  F012         	goto	u1991
  2859   00250C  EF8A  F012         	goto	u1990
  2860   002510                     u1991:
  2861   002510  EF83  F012         	goto	l310
  2862   002514                     u1990:
  2863   002514                     
  2864                           ;kbd4x4.c: 44:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2865   002514  0E0D               	movlw	13
  2866   002516  6E11               	movwf	??_Keypad_Get_Char^0,c
  2867   002518  0EFC               	movlw	252
  2868   00251A                     u8257:
  2869   00251A  2EE8               	decfsz	wreg,f,c
  2870   00251C  D7FE               	bra	u8257
  2871   00251E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2872   002520  D7FC               	bra	u8257
  2873                           
  2874                           ;kbd4x4.c: 45:         return '3';
  2875   002522  0E33               	movlw	51
  2876   002524  EFC1  F013         	goto	l304
  2877   002528                     l309:
  2878                           
  2879                           ;kbd4x4.c: 54:     PORTDbits.RD7 = 1;
  2880   002528  8E83               	bsf	131,7,c	;volatile
  2881                           
  2882                           ;kbd4x4.c: 55:     PORTDbits.RD6 = 0;
  2883   00252A  9C83               	bcf	131,6,c	;volatile
  2884                           
  2885                           ;kbd4x4.c: 56:     PORTDbits.RD5 = 1;
  2886   00252C  8A83               	bsf	131,5,c	;volatile
  2887                           
  2888                           ;kbd4x4.c: 57:     PORTDbits.RD4 = 1;
  2889   00252E  8883               	bsf	131,4,c	;volatile
  2890                           
  2891                           ;kbd4x4.c: 58:     if(PORTDbits.RD3 == 0){
  2892   002530  B683               	btfsc	131,3,c	;volatile
  2893   002532  EF9D  F012         	goto	u2001
  2894   002536  EF9F  F012         	goto	u2000
  2895   00253A                     u2001:
  2896   00253A  EFB8  F012         	goto	l313
  2897   00253E                     u2000:
  2898   00253E                     
  2899                           ;kbd4x4.c: 59:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2900   00253E  0E06               	movlw	6
  2901   002540  6E11               	movwf	??_Keypad_Get_Char^0,c
  2902   002542  0E30               	movlw	48
  2903   002544                     u8267:
  2904   002544  2EE8               	decfsz	wreg,f,c
  2905   002546  D7FE               	bra	u8267
  2906   002548  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2907   00254A  D7FC               	bra	u8267
  2908   00254C  D000               	nop2	
  2909   00254E                     l314:
  2910   00254E  A683               	btfss	131,3,c	;volatile
  2911   002550  EFAC  F012         	goto	u2011
  2912   002554  EFAE  F012         	goto	u2010
  2913   002558                     u2011:
  2914   002558  EFA7  F012         	goto	l314
  2915   00255C                     u2010:
  2916   00255C                     
  2917                           ;kbd4x4.c: 61:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2918   00255C  0E0D               	movlw	13
  2919   00255E  6E11               	movwf	??_Keypad_Get_Char^0,c
  2920   002560  0EFC               	movlw	252
  2921   002562                     u8277:
  2922   002562  2EE8               	decfsz	wreg,f,c
  2923   002564  D7FE               	bra	u8277
  2924   002566  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2925   002568  D7FC               	bra	u8277
  2926                           
  2927                           ;kbd4x4.c: 62:         return '4';
  2928   00256A  0E34               	movlw	52
  2929   00256C  EFC1  F013         	goto	l304
  2930   002570                     l313:
  2931                           
  2932                           ;kbd4x4.c: 64:     if(PORTDbits.RD2 == 0){
  2933   002570  B483               	btfsc	131,2,c	;volatile
  2934   002572  EFBD  F012         	goto	u2021
  2935   002576  EFBF  F012         	goto	u2020
  2936   00257A                     u2021:
  2937   00257A  EFD8  F012         	goto	l317
  2938   00257E                     u2020:
  2939   00257E                     
  2940                           ;kbd4x4.c: 65:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2941   00257E  0E06               	movlw	6
  2942   002580  6E11               	movwf	??_Keypad_Get_Char^0,c
  2943   002582  0E30               	movlw	48
  2944   002584                     u8287:
  2945   002584  2EE8               	decfsz	wreg,f,c
  2946   002586  D7FE               	bra	u8287
  2947   002588  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2948   00258A  D7FC               	bra	u8287
  2949   00258C  D000               	nop2	
  2950   00258E                     l318:
  2951   00258E  A483               	btfss	131,2,c	;volatile
  2952   002590  EFCC  F012         	goto	u2031
  2953   002594  EFCE  F012         	goto	u2030
  2954   002598                     u2031:
  2955   002598  EFC7  F012         	goto	l318
  2956   00259C                     u2030:
  2957   00259C                     
  2958                           ;kbd4x4.c: 67:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2959   00259C  0E0D               	movlw	13
  2960   00259E  6E11               	movwf	??_Keypad_Get_Char^0,c
  2961   0025A0  0EFC               	movlw	252
  2962   0025A2                     u8297:
  2963   0025A2  2EE8               	decfsz	wreg,f,c
  2964   0025A4  D7FE               	bra	u8297
  2965   0025A6  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2966   0025A8  D7FC               	bra	u8297
  2967                           
  2968                           ;kbd4x4.c: 68:         return '5';
  2969   0025AA  0E35               	movlw	53
  2970   0025AC  EFC1  F013         	goto	l304
  2971   0025B0                     l317:
  2972                           
  2973                           ;kbd4x4.c: 70:     if(PORTDbits.RD1 == 0){
  2974   0025B0  B283               	btfsc	131,1,c	;volatile
  2975   0025B2  EFDD  F012         	goto	u2041
  2976   0025B6  EFDF  F012         	goto	u2040
  2977   0025BA                     u2041:
  2978   0025BA  EFF8  F012         	goto	l321
  2979   0025BE                     u2040:
  2980   0025BE                     
  2981                           ;kbd4x4.c: 71:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2982   0025BE  0E06               	movlw	6
  2983   0025C0  6E11               	movwf	??_Keypad_Get_Char^0,c
  2984   0025C2  0E30               	movlw	48
  2985   0025C4                     u8307:
  2986   0025C4  2EE8               	decfsz	wreg,f,c
  2987   0025C6  D7FE               	bra	u8307
  2988   0025C8  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2989   0025CA  D7FC               	bra	u8307
  2990   0025CC  D000               	nop2	
  2991   0025CE                     l322:
  2992   0025CE  A283               	btfss	131,1,c	;volatile
  2993   0025D0  EFEC  F012         	goto	u2051
  2994   0025D4  EFEE  F012         	goto	u2050
  2995   0025D8                     u2051:
  2996   0025D8  EFE7  F012         	goto	l322
  2997   0025DC                     u2050:
  2998   0025DC                     
  2999                           ;kbd4x4.c: 73:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3000   0025DC  0E0D               	movlw	13
  3001   0025DE  6E11               	movwf	??_Keypad_Get_Char^0,c
  3002   0025E0  0EFC               	movlw	252
  3003   0025E2                     u8317:
  3004   0025E2  2EE8               	decfsz	wreg,f,c
  3005   0025E4  D7FE               	bra	u8317
  3006   0025E6  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3007   0025E8  D7FC               	bra	u8317
  3008                           
  3009                           ;kbd4x4.c: 74:         return '6';
  3010   0025EA  0E36               	movlw	54
  3011   0025EC  EFC1  F013         	goto	l304
  3012   0025F0                     l321:
  3013                           
  3014                           ;kbd4x4.c: 83:     PORTDbits.RD7 = 1;
  3015   0025F0  8E83               	bsf	131,7,c	;volatile
  3016                           
  3017                           ;kbd4x4.c: 84:     PORTDbits.RD6 = 1;
  3018   0025F2  8C83               	bsf	131,6,c	;volatile
  3019                           
  3020                           ;kbd4x4.c: 85:     PORTDbits.RD5 = 0;
  3021   0025F4  9A83               	bcf	131,5,c	;volatile
  3022                           
  3023                           ;kbd4x4.c: 86:     PORTDbits.RD4 = 1;
  3024   0025F6  8883               	bsf	131,4,c	;volatile
  3025                           
  3026                           ;kbd4x4.c: 87:     if(PORTDbits.RD3 == 0){
  3027   0025F8  B683               	btfsc	131,3,c	;volatile
  3028   0025FA  EF01  F013         	goto	u2061
  3029   0025FE  EF03  F013         	goto	u2060
  3030   002602                     u2061:
  3031   002602  EF1C  F013         	goto	l325
  3032   002606                     u2060:
  3033   002606                     
  3034                           ;kbd4x4.c: 88:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3035   002606  0E06               	movlw	6
  3036   002608  6E11               	movwf	??_Keypad_Get_Char^0,c
  3037   00260A  0E30               	movlw	48
  3038   00260C                     u8327:
  3039   00260C  2EE8               	decfsz	wreg,f,c
  3040   00260E  D7FE               	bra	u8327
  3041   002610  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3042   002612  D7FC               	bra	u8327
  3043   002614  D000               	nop2	
  3044   002616                     l326:
  3045   002616  A683               	btfss	131,3,c	;volatile
  3046   002618  EF10  F013         	goto	u2071
  3047   00261C  EF12  F013         	goto	u2070
  3048   002620                     u2071:
  3049   002620  EF0B  F013         	goto	l326
  3050   002624                     u2070:
  3051   002624                     
  3052                           ;kbd4x4.c: 90:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3053   002624  0E0D               	movlw	13
  3054   002626  6E11               	movwf	??_Keypad_Get_Char^0,c
  3055   002628  0EFC               	movlw	252
  3056   00262A                     u8337:
  3057   00262A  2EE8               	decfsz	wreg,f,c
  3058   00262C  D7FE               	bra	u8337
  3059   00262E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3060   002630  D7FC               	bra	u8337
  3061                           
  3062                           ;kbd4x4.c: 91:         return '7';
  3063   002632  0E37               	movlw	55
  3064   002634  EFC1  F013         	goto	l304
  3065   002638                     l325:
  3066                           
  3067                           ;kbd4x4.c: 93:     if(PORTDbits.RD2 == 0){
  3068   002638  B483               	btfsc	131,2,c	;volatile
  3069   00263A  EF21  F013         	goto	u2081
  3070   00263E  EF23  F013         	goto	u2080
  3071   002642                     u2081:
  3072   002642  EF3C  F013         	goto	l329
  3073   002646                     u2080:
  3074   002646                     
  3075                           ;kbd4x4.c: 94:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3076   002646  0E06               	movlw	6
  3077   002648  6E11               	movwf	??_Keypad_Get_Char^0,c
  3078   00264A  0E30               	movlw	48
  3079   00264C                     u8347:
  3080   00264C  2EE8               	decfsz	wreg,f,c
  3081   00264E  D7FE               	bra	u8347
  3082   002650  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3083   002652  D7FC               	bra	u8347
  3084   002654  D000               	nop2	
  3085   002656                     l330:
  3086   002656  A483               	btfss	131,2,c	;volatile
  3087   002658  EF30  F013         	goto	u2091
  3088   00265C  EF32  F013         	goto	u2090
  3089   002660                     u2091:
  3090   002660  EF2B  F013         	goto	l330
  3091   002664                     u2090:
  3092   002664                     
  3093                           ;kbd4x4.c: 96:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3094   002664  0E0D               	movlw	13
  3095   002666  6E11               	movwf	??_Keypad_Get_Char^0,c
  3096   002668  0EFC               	movlw	252
  3097   00266A                     u8357:
  3098   00266A  2EE8               	decfsz	wreg,f,c
  3099   00266C  D7FE               	bra	u8357
  3100   00266E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3101   002670  D7FC               	bra	u8357
  3102                           
  3103                           ;kbd4x4.c: 97:         return '8';
  3104   002672  0E38               	movlw	56
  3105   002674  EFC1  F013         	goto	l304
  3106   002678                     l329:
  3107                           
  3108                           ;kbd4x4.c: 99:     if(PORTDbits.RD1 == 0){
  3109   002678  B283               	btfsc	131,1,c	;volatile
  3110   00267A  EF41  F013         	goto	u2101
  3111   00267E  EF43  F013         	goto	u2100
  3112   002682                     u2101:
  3113   002682  EF5C  F013         	goto	l333
  3114   002686                     u2100:
  3115   002686                     
  3116                           ;kbd4x4.c: 100:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3117   002686  0E06               	movlw	6
  3118   002688  6E11               	movwf	??_Keypad_Get_Char^0,c
  3119   00268A  0E30               	movlw	48
  3120   00268C                     u8367:
  3121   00268C  2EE8               	decfsz	wreg,f,c
  3122   00268E  D7FE               	bra	u8367
  3123   002690  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3124   002692  D7FC               	bra	u8367
  3125   002694  D000               	nop2	
  3126   002696                     l334:
  3127   002696  A283               	btfss	131,1,c	;volatile
  3128   002698  EF50  F013         	goto	u2111
  3129   00269C  EF52  F013         	goto	u2110
  3130   0026A0                     u2111:
  3131   0026A0  EF4B  F013         	goto	l334
  3132   0026A4                     u2110:
  3133   0026A4                     
  3134                           ;kbd4x4.c: 102:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3135   0026A4  0E0D               	movlw	13
  3136   0026A6  6E11               	movwf	??_Keypad_Get_Char^0,c
  3137   0026A8  0EFC               	movlw	252
  3138   0026AA                     u8377:
  3139   0026AA  2EE8               	decfsz	wreg,f,c
  3140   0026AC  D7FE               	bra	u8377
  3141   0026AE  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3142   0026B0  D7FC               	bra	u8377
  3143                           
  3144                           ;kbd4x4.c: 103:         return '9';
  3145   0026B2  0E39               	movlw	57
  3146   0026B4  EFC1  F013         	goto	l304
  3147   0026B8                     l333:
  3148                           
  3149                           ;kbd4x4.c: 112:     PORTDbits.RD7 = 1;
  3150   0026B8  8E83               	bsf	131,7,c	;volatile
  3151                           
  3152                           ;kbd4x4.c: 113:     PORTDbits.RD6 = 1;
  3153   0026BA  8C83               	bsf	131,6,c	;volatile
  3154                           
  3155                           ;kbd4x4.c: 114:     PORTDbits.RD5 = 1;
  3156   0026BC  8A83               	bsf	131,5,c	;volatile
  3157                           
  3158                           ;kbd4x4.c: 115:     PORTDbits.RD4 = 0;
  3159   0026BE  9883               	bcf	131,4,c	;volatile
  3160                           
  3161                           ;kbd4x4.c: 116:     if(PORTDbits.RD3 == 0){
  3162   0026C0  B683               	btfsc	131,3,c	;volatile
  3163   0026C2  EF65  F013         	goto	u2121
  3164   0026C6  EF67  F013         	goto	u2120
  3165   0026CA                     u2121:
  3166   0026CA  EF80  F013         	goto	l337
  3167   0026CE                     u2120:
  3168   0026CE                     
  3169                           ;kbd4x4.c: 117:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3170   0026CE  0E06               	movlw	6
  3171   0026D0  6E11               	movwf	??_Keypad_Get_Char^0,c
  3172   0026D2  0E30               	movlw	48
  3173   0026D4                     u8387:
  3174   0026D4  2EE8               	decfsz	wreg,f,c
  3175   0026D6  D7FE               	bra	u8387
  3176   0026D8  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3177   0026DA  D7FC               	bra	u8387
  3178   0026DC  D000               	nop2	
  3179   0026DE                     l338:
  3180   0026DE  A683               	btfss	131,3,c	;volatile
  3181   0026E0  EF74  F013         	goto	u2131
  3182   0026E4  EF76  F013         	goto	u2130
  3183   0026E8                     u2131:
  3184   0026E8  EF6F  F013         	goto	l338
  3185   0026EC                     u2130:
  3186   0026EC                     
  3187                           ;kbd4x4.c: 119:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3188   0026EC  0E0D               	movlw	13
  3189   0026EE  6E11               	movwf	??_Keypad_Get_Char^0,c
  3190   0026F0  0EFC               	movlw	252
  3191   0026F2                     u8397:
  3192   0026F2  2EE8               	decfsz	wreg,f,c
  3193   0026F4  D7FE               	bra	u8397
  3194   0026F6  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3195   0026F8  D7FC               	bra	u8397
  3196                           
  3197                           ;kbd4x4.c: 120:         return '*';
  3198   0026FA  0E2A               	movlw	42
  3199   0026FC  EFC1  F013         	goto	l304
  3200   002700                     l337:
  3201                           
  3202                           ;kbd4x4.c: 122:     if(PORTDbits.RD2 == 0){
  3203   002700  B483               	btfsc	131,2,c	;volatile
  3204   002702  EF85  F013         	goto	u2141
  3205   002706  EF87  F013         	goto	u2140
  3206   00270A                     u2141:
  3207   00270A  EFA0  F013         	goto	l341
  3208   00270E                     u2140:
  3209   00270E                     
  3210                           ;kbd4x4.c: 123:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3211   00270E  0E06               	movlw	6
  3212   002710  6E11               	movwf	??_Keypad_Get_Char^0,c
  3213   002712  0E30               	movlw	48
  3214   002714                     u8407:
  3215   002714  2EE8               	decfsz	wreg,f,c
  3216   002716  D7FE               	bra	u8407
  3217   002718  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3218   00271A  D7FC               	bra	u8407
  3219   00271C  D000               	nop2	
  3220   00271E                     l342:
  3221   00271E  A483               	btfss	131,2,c	;volatile
  3222   002720  EF94  F013         	goto	u2151
  3223   002724  EF96  F013         	goto	u2150
  3224   002728                     u2151:
  3225   002728  EF8F  F013         	goto	l342
  3226   00272C                     u2150:
  3227   00272C                     
  3228                           ;kbd4x4.c: 125:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3229   00272C  0E0D               	movlw	13
  3230   00272E  6E11               	movwf	??_Keypad_Get_Char^0,c
  3231   002730  0EFC               	movlw	252
  3232   002732                     u8417:
  3233   002732  2EE8               	decfsz	wreg,f,c
  3234   002734  D7FE               	bra	u8417
  3235   002736  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3236   002738  D7FC               	bra	u8417
  3237                           
  3238                           ;kbd4x4.c: 126:         return '0';
  3239   00273A  0E30               	movlw	48
  3240   00273C  EFC1  F013         	goto	l304
  3241   002740                     l341:
  3242                           
  3243                           ;kbd4x4.c: 128:     if(PORTDbits.RD1 == 0){
  3244   002740  B283               	btfsc	131,1,c	;volatile
  3245   002742  EFA5  F013         	goto	u2161
  3246   002746  EFA7  F013         	goto	u2160
  3247   00274A                     u2161:
  3248   00274A  EFC0  F013         	goto	l2598
  3249   00274E                     u2160:
  3250   00274E                     
  3251                           ;kbd4x4.c: 129:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3252   00274E  0E06               	movlw	6
  3253   002750  6E11               	movwf	??_Keypad_Get_Char^0,c
  3254   002752  0E30               	movlw	48
  3255   002754                     u8427:
  3256   002754  2EE8               	decfsz	wreg,f,c
  3257   002756  D7FE               	bra	u8427
  3258   002758  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3259   00275A  D7FC               	bra	u8427
  3260   00275C  D000               	nop2	
  3261   00275E                     l346:
  3262   00275E  A283               	btfss	131,1,c	;volatile
  3263   002760  EFB4  F013         	goto	u2171
  3264   002764  EFB6  F013         	goto	u2170
  3265   002768                     u2171:
  3266   002768  EFAF  F013         	goto	l346
  3267   00276C                     u2170:
  3268   00276C                     
  3269                           ;kbd4x4.c: 131:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3270   00276C  0E0D               	movlw	13
  3271   00276E  6E11               	movwf	??_Keypad_Get_Char^0,c
  3272   002770  0EFC               	movlw	252
  3273   002772                     u8437:
  3274   002772  2EE8               	decfsz	wreg,f,c
  3275   002774  D7FE               	bra	u8437
  3276   002776  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3277   002778  D7FC               	bra	u8437
  3278                           
  3279                           ;kbd4x4.c: 132:         return '#';
  3280   00277A  0E23               	movlw	35
  3281   00277C  EFC1  F013         	goto	l304
  3282   002780                     l2598:
  3283                           
  3284                           ;kbd4x4.c: 140:     return 0;
  3285   002780  0E00               	movlw	0
  3286   002782                     l304:
  3287   002782  0012               	return		;funcret
  3288   002784                     __end_of_Keypad_Get_Char:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _Lcd_Init *****************
  3292 ;; Defined at:
  3293 ;;		line 63 in file "lcd.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3309 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3310 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 5
  3314 ;; This function calls:
  3315 ;;		_Lcd_Clear
  3316 ;;		_Lcd_Cmd
  3317 ;;		_Lcd_Port
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text6
  3324   003E0C                     __ptext6:
  3325                           	callstack 0
  3326   003E0C                     _Lcd_Init:
  3327                           	callstack 25
  3328   003E0C                     
  3329                           ;lcd.c: 65:  TRISAbits.TRISA0 = 0;
  3330   003E0C  9092               	bcf	146,0,c	;volatile
  3331                           
  3332                           ;lcd.c: 66:  TRISAbits.TRISA1 = 0;
  3333   003E0E  9292               	bcf	146,1,c	;volatile
  3334                           
  3335                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  3336   003E10  9893               	bcf	147,4,c	;volatile
  3337                           
  3338                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  3339   003E12  9A93               	bcf	147,5,c	;volatile
  3340                           
  3341                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  3342   003E14  9C93               	bcf	147,6,c	;volatile
  3343                           
  3344                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  3345   003E16  9E93               	bcf	147,7,c	;volatile
  3346   003E18                     
  3347                           ;lcd.c: 71:     Lcd_Port(0x00);
  3348   003E18  0E00               	movlw	0
  3349   003E1A  ECF5  F01F         	call	_Lcd_Port
  3350   003E1E                     
  3351                           ;lcd.c: 72:     _delay((unsigned long)((20)*(8000000L/4000.0)));
  3352   003E1E  0E34               	movlw	52
  3353   003E20  6E14               	movwf	??_Lcd_Init^0,c
  3354   003E22  0EF2               	movlw	242
  3355   003E24                     u8447:
  3356   003E24  2EE8               	decfsz	wreg,f,c
  3357   003E26  D7FE               	bra	u8447
  3358   003E28  2E14               	decfsz	??_Lcd_Init^0,f,c
  3359   003E2A  D7FC               	bra	u8447
  3360   003E2C                     
  3361                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  3362   003E2C  0E03               	movlw	3
  3363   003E2E  ECD9  F021         	call	_Lcd_Cmd
  3364   003E32                     
  3365                           ;lcd.c: 74:     _delay((unsigned long)((5)*(8000000L/4000.0)));
  3366   003E32  0E0D               	movlw	13
  3367   003E34  6E14               	movwf	??_Lcd_Init^0,c
  3368   003E36  0EFC               	movlw	252
  3369   003E38                     u8457:
  3370   003E38  2EE8               	decfsz	wreg,f,c
  3371   003E3A  D7FE               	bra	u8457
  3372   003E3C  2E14               	decfsz	??_Lcd_Init^0,f,c
  3373   003E3E  D7FC               	bra	u8457
  3374   003E40                     
  3375                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  3376   003E40  0E03               	movlw	3
  3377   003E42  ECD9  F021         	call	_Lcd_Cmd
  3378   003E46                     
  3379                           ;lcd.c: 76:     _delay((unsigned long)((11)*(8000000L/4000.0)));
  3380   003E46  0E1D               	movlw	29
  3381   003E48  6E14               	movwf	??_Lcd_Init^0,c
  3382   003E4A  0E91               	movlw	145
  3383   003E4C                     u8467:
  3384   003E4C  2EE8               	decfsz	wreg,f,c
  3385   003E4E  D7FE               	bra	u8467
  3386   003E50  2E14               	decfsz	??_Lcd_Init^0,f,c
  3387   003E52  D7FC               	bra	u8467
  3388   003E54  F000               	nop	
  3389   003E56                     
  3390                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  3391   003E56  0E03               	movlw	3
  3392   003E58  ECD9  F021         	call	_Lcd_Cmd
  3393   003E5C                     
  3394                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  3395   003E5C  0E02               	movlw	2
  3396   003E5E  ECD9  F021         	call	_Lcd_Cmd
  3397   003E62                     
  3398                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  3399   003E62  0E02               	movlw	2
  3400   003E64  ECD9  F021         	call	_Lcd_Cmd
  3401   003E68                     
  3402                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  3403   003E68  0E08               	movlw	8
  3404   003E6A  ECD9  F021         	call	_Lcd_Cmd
  3405   003E6E                     
  3406                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  3407   003E6E  0E00               	movlw	0
  3408   003E70  ECD9  F021         	call	_Lcd_Cmd
  3409   003E74                     
  3410                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  3411   003E74  0E0C               	movlw	12
  3412   003E76  ECD9  F021         	call	_Lcd_Cmd
  3413   003E7A                     
  3414                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  3415   003E7A  0E00               	movlw	0
  3416   003E7C  ECD9  F021         	call	_Lcd_Cmd
  3417   003E80                     
  3418                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  3419   003E80  0E06               	movlw	6
  3420   003E82  ECD9  F021         	call	_Lcd_Cmd
  3421   003E86                     
  3422                           ;lcd.c: 85:     Lcd_Clear();
  3423   003E86  EC1E  F022         	call	_Lcd_Clear	;wreg free
  3424   003E8A  0012               	return		;funcret
  3425   003E8C                     __end_of_Lcd_Init:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _Lcd_CGRAM_Init *****************
  3429 ;; Defined at:
  3430 ;;		line 175 in file "lcd.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 4
  3451 ;; This function calls:
  3452 ;;		_Lcd_Cmd
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text7
  3459   004412                     __ptext7:
  3460                           	callstack 0
  3461   004412                     _Lcd_CGRAM_Init:
  3462                           	callstack 26
  3463   004412                     
  3464                           ;lcd.c: 177:     Lcd_Cmd(0x04);
  3465   004412  0E04               	movlw	4
  3466   004414  ECD9  F021         	call	_Lcd_Cmd
  3467                           
  3468                           ;lcd.c: 178:     Lcd_Cmd(0x00);
  3469   004418  0E00               	movlw	0
  3470   00441A  ECD9  F021         	call	_Lcd_Cmd
  3471   00441E  0012               	return		;funcret
  3472   004420                     __end_of_Lcd_CGRAM_Init:
  3473                           	callstack 0
  3474                           
  3475 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  3476 ;; Defined at:
  3477 ;;		line 136 in file "lcd.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  add             1    wreg     unsigned char 
  3480 ;;  chardata        2   20[COMRAM] PTR const unsigned char 
  3481 ;;		 -> SENSOR(8), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  add             1   26[COMRAM] unsigned char 
  3484 ;;  i               1   34[COMRAM] unsigned char 
  3485 ;;  i               1   33[COMRAM] unsigned char 
  3486 ;;  i               1   32[COMRAM] unsigned char 
  3487 ;;  i               1   31[COMRAM] unsigned char 
  3488 ;;  i               1   30[COMRAM] unsigned char 
  3489 ;;  i               1   29[COMRAM] unsigned char 
  3490 ;;  i               1   28[COMRAM] unsigned char 
  3491 ;;  i               1   27[COMRAM] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3504 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:       15 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 4
  3508 ;; This function calls:
  3509 ;;		_Lcd_Write_Char
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text8
  3516   002A48                     __ptext8:
  3517                           	callstack 0
  3518   002A48                     _Lcd_CGRAM_CreateChar:
  3519                           	callstack 26
  3520                           
  3521                           ;incstack = 0
  3522                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  3523   002A48  6E1B               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  3524   002A4A                     
  3525                           ;lcd.c: 136: void Lcd_CGRAM_CreateChar(char add, const char* chardata);lcd.c: 137: {;lcd
      +                          .c: 138:     switch(add)
  3526   002A4A  EF29  F016         	goto	l5210
  3527   002A4E                     l5112:
  3528                           
  3529                           ;lcd.c: 141:             for(char i=0; i<=7; i++)
  3530   002A4E  0E00               	movlw	0
  3531   002A50  6E1C               	movwf	Lcd_CGRAM_CreateChar@i^0,c
  3532   002A52                     l5118:
  3533                           
  3534                           ;lcd.c: 142:                 Lcd_Write_Char(chardata[i]);
  3535   002A52  501C               	movf	Lcd_CGRAM_CreateChar@i^0,w,c
  3536   002A54  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3537   002A56  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3538   002A58  0E00               	movlw	0
  3539   002A5A  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3540   002A5C  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3541   002A5E  C017  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  3542   002A62  C018  FFF7         	movff	??_Lcd_CGRAM_CreateChar+1,tblptrh
  3543   002A66                     	if	0	;tblptru may be non-zero
  3544   002A66                     	endif
  3545   002A66                     	if	0	;tblptru may be non-zero
  3546   002A66                     	endif
  3547   002A66  0008               	tblrd		*
  3548   002A68  50F5               	movf	tablat,w,c
  3549   002A6A  EC94  F021         	call	_Lcd_Write_Char
  3550   002A6E  2A1C               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  3551   002A70  0E07               	movlw	7
  3552   002A72  641C               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  3553   002A74  EF3E  F015         	goto	u5201
  3554   002A78  EF40  F015         	goto	u5200
  3555   002A7C                     u5201:
  3556   002A7C  EF29  F015         	goto	l5118
  3557   002A80                     u5200:
  3558   002A80  EF56  F016         	goto	l282
  3559   002A84                     l5124:
  3560                           
  3561                           ;lcd.c: 145:             for(char i=8; i<=15; i++)
  3562   002A84  0E08               	movlw	8
  3563   002A86  6E1D               	movwf	Lcd_CGRAM_CreateChar@i_811^0,c
  3564   002A88                     l5130:
  3565                           
  3566                           ;lcd.c: 146:                 Lcd_Write_Char(chardata[i-8]);
  3567   002A88  501D               	movf	Lcd_CGRAM_CreateChar@i_811^0,w,c
  3568   002A8A  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3569   002A8C  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3570   002A8E  0E00               	movlw	0
  3571   002A90  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3572   002A92  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3573   002A94  0EF8               	movlw	248
  3574   002A96  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3575   002A98  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3576   002A9A  0EFF               	movlw	255
  3577   002A9C  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3578   002A9E  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3579   002AA0  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3580   002AA4  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3581   002AA8                     	if	0	;tblptru may be non-zero
  3582   002AA8                     	endif
  3583   002AA8                     	if	0	;tblptru may be non-zero
  3584   002AA8                     	endif
  3585   002AA8  0008               	tblrd		*
  3586   002AAA  50F5               	movf	tablat,w,c
  3587   002AAC  EC94  F021         	call	_Lcd_Write_Char
  3588   002AB0  2A1D               	incf	Lcd_CGRAM_CreateChar@i_811^0,f,c
  3589   002AB2  0E0F               	movlw	15
  3590   002AB4  641D               	cpfsgt	Lcd_CGRAM_CreateChar@i_811^0,c
  3591   002AB6  EF5F  F015         	goto	u5211
  3592   002ABA  EF61  F015         	goto	u5210
  3593   002ABE                     u5211:
  3594   002ABE  EF44  F015         	goto	l5130
  3595   002AC2                     u5210:
  3596   002AC2  EF56  F016         	goto	l282
  3597   002AC6                     l5136:
  3598                           
  3599                           ;lcd.c: 149:             for(char i=16; i<=23; i++)
  3600   002AC6  0E10               	movlw	16
  3601   002AC8  6E1E               	movwf	Lcd_CGRAM_CreateChar@i_812^0,c
  3602   002ACA                     l5142:
  3603                           
  3604                           ;lcd.c: 150:                 Lcd_Write_Char(chardata[i-16]);
  3605   002ACA  501E               	movf	Lcd_CGRAM_CreateChar@i_812^0,w,c
  3606   002ACC  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3607   002ACE  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3608   002AD0  0E00               	movlw	0
  3609   002AD2  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3610   002AD4  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3611   002AD6  0EF0               	movlw	240
  3612   002AD8  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3613   002ADA  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3614   002ADC  0EFF               	movlw	255
  3615   002ADE  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3616   002AE0  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3617   002AE2  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3618   002AE6  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3619   002AEA                     	if	0	;tblptru may be non-zero
  3620   002AEA                     	endif
  3621   002AEA                     	if	0	;tblptru may be non-zero
  3622   002AEA                     	endif
  3623   002AEA  0008               	tblrd		*
  3624   002AEC  50F5               	movf	tablat,w,c
  3625   002AEE  EC94  F021         	call	_Lcd_Write_Char
  3626   002AF2  2A1E               	incf	Lcd_CGRAM_CreateChar@i_812^0,f,c
  3627   002AF4  0E17               	movlw	23
  3628   002AF6  641E               	cpfsgt	Lcd_CGRAM_CreateChar@i_812^0,c
  3629   002AF8  EF80  F015         	goto	u5221
  3630   002AFC  EF82  F015         	goto	u5220
  3631   002B00                     u5221:
  3632   002B00  EF65  F015         	goto	l5142
  3633   002B04                     u5220:
  3634   002B04  EF56  F016         	goto	l282
  3635   002B08                     l5148:
  3636                           
  3637                           ;lcd.c: 153:             for(char i=24; i<=31; i++)
  3638   002B08  0E18               	movlw	24
  3639   002B0A  6E1F               	movwf	Lcd_CGRAM_CreateChar@i_813^0,c
  3640   002B0C                     l5154:
  3641                           
  3642                           ;lcd.c: 154:                 Lcd_Write_Char(chardata[i-24]);
  3643   002B0C  501F               	movf	Lcd_CGRAM_CreateChar@i_813^0,w,c
  3644   002B0E  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3645   002B10  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3646   002B12  0E00               	movlw	0
  3647   002B14  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3648   002B16  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3649   002B18  0EE8               	movlw	232
  3650   002B1A  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3651   002B1C  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3652   002B1E  0EFF               	movlw	255
  3653   002B20  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3654   002B22  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3655   002B24  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3656   002B28  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3657   002B2C                     	if	0	;tblptru may be non-zero
  3658   002B2C                     	endif
  3659   002B2C                     	if	0	;tblptru may be non-zero
  3660   002B2C                     	endif
  3661   002B2C  0008               	tblrd		*
  3662   002B2E  50F5               	movf	tablat,w,c
  3663   002B30  EC94  F021         	call	_Lcd_Write_Char
  3664   002B34  2A1F               	incf	Lcd_CGRAM_CreateChar@i_813^0,f,c
  3665   002B36  0E1F               	movlw	31
  3666   002B38  641F               	cpfsgt	Lcd_CGRAM_CreateChar@i_813^0,c
  3667   002B3A  EFA1  F015         	goto	u5231
  3668   002B3E  EFA3  F015         	goto	u5230
  3669   002B42                     u5231:
  3670   002B42  EF86  F015         	goto	l5154
  3671   002B46                     u5230:
  3672   002B46  EF56  F016         	goto	l282
  3673   002B4A                     l5160:
  3674                           
  3675                           ;lcd.c: 157:             for(char i=32; i<=39; i++)
  3676   002B4A  0E20               	movlw	32
  3677   002B4C  6E20               	movwf	Lcd_CGRAM_CreateChar@i_814^0,c
  3678   002B4E                     l5166:
  3679                           
  3680                           ;lcd.c: 158:                 Lcd_Write_Char(chardata[i-32]);
  3681   002B4E  5020               	movf	Lcd_CGRAM_CreateChar@i_814^0,w,c
  3682   002B50  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3683   002B52  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3684   002B54  0E00               	movlw	0
  3685   002B56  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3686   002B58  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3687   002B5A  0EE0               	movlw	224
  3688   002B5C  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3689   002B5E  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3690   002B60  0EFF               	movlw	255
  3691   002B62  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3692   002B64  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3693   002B66  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3694   002B6A  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3695   002B6E                     	if	0	;tblptru may be non-zero
  3696   002B6E                     	endif
  3697   002B6E                     	if	0	;tblptru may be non-zero
  3698   002B6E                     	endif
  3699   002B6E  0008               	tblrd		*
  3700   002B70  50F5               	movf	tablat,w,c
  3701   002B72  EC94  F021         	call	_Lcd_Write_Char
  3702   002B76  2A20               	incf	Lcd_CGRAM_CreateChar@i_814^0,f,c
  3703   002B78  0E27               	movlw	39
  3704   002B7A  6420               	cpfsgt	Lcd_CGRAM_CreateChar@i_814^0,c
  3705   002B7C  EFC2  F015         	goto	u5241
  3706   002B80  EFC4  F015         	goto	u5240
  3707   002B84                     u5241:
  3708   002B84  EFA7  F015         	goto	l5166
  3709   002B88                     u5240:
  3710   002B88  EF56  F016         	goto	l282
  3711   002B8C                     l5172:
  3712                           
  3713                           ;lcd.c: 161:             for(char i=40; i<=47; i++)
  3714   002B8C  0E28               	movlw	40
  3715   002B8E  6E21               	movwf	Lcd_CGRAM_CreateChar@i_815^0,c
  3716   002B90                     l5178:
  3717                           
  3718                           ;lcd.c: 162:                 Lcd_Write_Char(chardata[i-40]);
  3719   002B90  5021               	movf	Lcd_CGRAM_CreateChar@i_815^0,w,c
  3720   002B92  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3721   002B94  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3722   002B96  0E00               	movlw	0
  3723   002B98  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3724   002B9A  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3725   002B9C  0ED8               	movlw	216
  3726   002B9E  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3727   002BA0  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3728   002BA2  0EFF               	movlw	255
  3729   002BA4  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3730   002BA6  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3731   002BA8  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3732   002BAC  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3733   002BB0                     	if	0	;tblptru may be non-zero
  3734   002BB0                     	endif
  3735   002BB0                     	if	0	;tblptru may be non-zero
  3736   002BB0                     	endif
  3737   002BB0  0008               	tblrd		*
  3738   002BB2  50F5               	movf	tablat,w,c
  3739   002BB4  EC94  F021         	call	_Lcd_Write_Char
  3740   002BB8  2A21               	incf	Lcd_CGRAM_CreateChar@i_815^0,f,c
  3741   002BBA  0E2F               	movlw	47
  3742   002BBC  6421               	cpfsgt	Lcd_CGRAM_CreateChar@i_815^0,c
  3743   002BBE  EFE3  F015         	goto	u5251
  3744   002BC2  EFE5  F015         	goto	u5250
  3745   002BC6                     u5251:
  3746   002BC6  EFC8  F015         	goto	l5178
  3747   002BCA                     u5250:
  3748   002BCA  EF56  F016         	goto	l282
  3749   002BCE                     l5184:
  3750                           
  3751                           ;lcd.c: 165:             for(char i=48; i<=55; i++)
  3752   002BCE  0E30               	movlw	48
  3753   002BD0  6E22               	movwf	Lcd_CGRAM_CreateChar@i_816^0,c
  3754   002BD2                     l5190:
  3755                           
  3756                           ;lcd.c: 166:                 Lcd_Write_Char(chardata[i-48]);
  3757   002BD2  5022               	movf	Lcd_CGRAM_CreateChar@i_816^0,w,c
  3758   002BD4  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3759   002BD6  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3760   002BD8  0E00               	movlw	0
  3761   002BDA  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3762   002BDC  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3763   002BDE  0ED0               	movlw	208
  3764   002BE0  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3765   002BE2  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3766   002BE4  0EFF               	movlw	255
  3767   002BE6  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3768   002BE8  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3769   002BEA  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3770   002BEE  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3771   002BF2                     	if	0	;tblptru may be non-zero
  3772   002BF2                     	endif
  3773   002BF2                     	if	0	;tblptru may be non-zero
  3774   002BF2                     	endif
  3775   002BF2  0008               	tblrd		*
  3776   002BF4  50F5               	movf	tablat,w,c
  3777   002BF6  EC94  F021         	call	_Lcd_Write_Char
  3778   002BFA  2A22               	incf	Lcd_CGRAM_CreateChar@i_816^0,f,c
  3779   002BFC  0E37               	movlw	55
  3780   002BFE  6422               	cpfsgt	Lcd_CGRAM_CreateChar@i_816^0,c
  3781   002C00  EF04  F016         	goto	u5261
  3782   002C04  EF06  F016         	goto	u5260
  3783   002C08                     u5261:
  3784   002C08  EFE9  F015         	goto	l5190
  3785   002C0C                     u5260:
  3786   002C0C  EF56  F016         	goto	l282
  3787   002C10                     l5196:
  3788                           
  3789                           ;lcd.c: 169:             for(char i=56; i<=63; i++)
  3790   002C10  0E38               	movlw	56
  3791   002C12  6E23               	movwf	Lcd_CGRAM_CreateChar@i_817^0,c
  3792   002C14                     l5202:
  3793                           
  3794                           ;lcd.c: 170:                 Lcd_Write_Char(chardata[i-56]);
  3795   002C14  5023               	movf	Lcd_CGRAM_CreateChar@i_817^0,w,c
  3796   002C16  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3797   002C18  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3798   002C1A  0E00               	movlw	0
  3799   002C1C  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3800   002C1E  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3801   002C20  0EC8               	movlw	200
  3802   002C22  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3803   002C24  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3804   002C26  0EFF               	movlw	255
  3805   002C28  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3806   002C2A  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3807   002C2C  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3808   002C30  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3809   002C34                     	if	0	;tblptru may be non-zero
  3810   002C34                     	endif
  3811   002C34                     	if	0	;tblptru may be non-zero
  3812   002C34                     	endif
  3813   002C34  0008               	tblrd		*
  3814   002C36  50F5               	movf	tablat,w,c
  3815   002C38  EC94  F021         	call	_Lcd_Write_Char
  3816   002C3C  2A23               	incf	Lcd_CGRAM_CreateChar@i_817^0,f,c
  3817   002C3E  0E3F               	movlw	63
  3818   002C40  6423               	cpfsgt	Lcd_CGRAM_CreateChar@i_817^0,c
  3819   002C42  EF25  F016         	goto	u5271
  3820   002C46  EF27  F016         	goto	u5270
  3821   002C4A                     u5271:
  3822   002C4A  EF0A  F016         	goto	l5202
  3823   002C4E                     u5270:
  3824   002C4E  EF56  F016         	goto	l282
  3825   002C52                     l5210:
  3826   002C52  501B               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  3827   002C54  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3828   002C56  6A18               	clrf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3829                           
  3830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3831                           ; Switch size 1, requested type "simple"
  3832                           ; Number of cases is 1, Range of values is 0 to 0
  3833                           ; switch strategies available:
  3834                           ; Name         Instructions Cycles
  3835                           ; simple_byte            4     3 (average)
  3836                           ;	Chosen strategy is simple_byte
  3837   002C58  5018               	movf	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3838   002C5A  0A00               	xorlw	0	; case 0
  3839   002C5C  B4D8               	btfsc	status,2,c
  3840   002C5E  EF33  F016         	goto	l7854
  3841   002C62  EF56  F016         	goto	l282
  3842   002C66                     l7854:
  3843                           
  3844                           ; Switch size 1, requested type "simple"
  3845                           ; Number of cases is 8, Range of values is 0 to 7
  3846                           ; switch strategies available:
  3847                           ; Name         Instructions Cycles
  3848                           ; simple_byte           25    13 (average)
  3849                           ;	Chosen strategy is simple_byte
  3850   002C66  5017               	movf	??_Lcd_CGRAM_CreateChar^0,w,c
  3851   002C68  0A00               	xorlw	0	; case 0
  3852   002C6A  B4D8               	btfsc	status,2,c
  3853   002C6C  EF27  F015         	goto	l5112
  3854   002C70  0A01               	xorlw	1	; case 1
  3855   002C72  B4D8               	btfsc	status,2,c
  3856   002C74  EF42  F015         	goto	l5124
  3857   002C78  0A03               	xorlw	3	; case 2
  3858   002C7A  B4D8               	btfsc	status,2,c
  3859   002C7C  EF63  F015         	goto	l5136
  3860   002C80  0A01               	xorlw	1	; case 3
  3861   002C82  B4D8               	btfsc	status,2,c
  3862   002C84  EF84  F015         	goto	l5148
  3863   002C88  0A07               	xorlw	7	; case 4
  3864   002C8A  B4D8               	btfsc	status,2,c
  3865   002C8C  EFA5  F015         	goto	l5160
  3866   002C90  0A01               	xorlw	1	; case 5
  3867   002C92  B4D8               	btfsc	status,2,c
  3868   002C94  EFC6  F015         	goto	l5172
  3869   002C98  0A03               	xorlw	3	; case 6
  3870   002C9A  B4D8               	btfsc	status,2,c
  3871   002C9C  EFE7  F015         	goto	l5184
  3872   002CA0  0A01               	xorlw	1	; case 7
  3873   002CA2  B4D8               	btfsc	status,2,c
  3874   002CA4  EF08  F016         	goto	l5196
  3875   002CA8  EF56  F016         	goto	l282
  3876   002CAC                     l282:
  3877   002CAC  0012               	return		;funcret
  3878   002CAE                     __end_of_Lcd_CGRAM_CreateChar:
  3879                           	callstack 0
  3880                           
  3881 ;; *************** function _Lcd_CGRAM_Close *****************
  3882 ;; Defined at:
  3883 ;;		line 181 in file "lcd.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3897 ;;      Params:         0       0       0       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3900 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        0 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; Hardware stack levels required when called: 4
  3904 ;; This function calls:
  3905 ;;		_Lcd_Cmd
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text9
  3912   004420                     __ptext9:
  3913                           	callstack 0
  3914   004420                     _Lcd_CGRAM_Close:
  3915                           	callstack 26
  3916   004420                     
  3917                           ;lcd.c: 183:     Lcd_Cmd(0x00);
  3918   004420  0E00               	movlw	0
  3919   004422  ECD9  F021         	call	_Lcd_Cmd
  3920                           
  3921                           ;lcd.c: 184:     Lcd_Cmd(0x02);
  3922   004426  0E02               	movlw	2
  3923   004428  ECD9  F021         	call	_Lcd_Cmd
  3924   00442C  0012               	return		;funcret
  3925   00442E                     __end_of_Lcd_CGRAM_Close:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _Keypad_Init *****************
  3929 ;; Defined at:
  3930 ;;		line 11 in file "kbd4x4.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		None
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text10
  3959   0043E6                     __ptext10:
  3960                           	callstack 0
  3961   0043E6                     _Keypad_Init:
  3962                           	callstack 28
  3963   0043E6                     
  3964                           ;kbd4x4.c: 13:     TRISDbits.TRISD7 = 0;
  3965   0043E6  9E95               	bcf	149,7,c	;volatile
  3966                           
  3967                           ;kbd4x4.c: 14:     TRISDbits.TRISD6 = 0;
  3968   0043E8  9C95               	bcf	149,6,c	;volatile
  3969                           
  3970                           ;kbd4x4.c: 15:     TRISDbits.TRISD5 = 0;
  3971   0043EA  9A95               	bcf	149,5,c	;volatile
  3972                           
  3973                           ;kbd4x4.c: 16:     TRISDbits.TRISD4 = 0;
  3974   0043EC  9895               	bcf	149,4,c	;volatile
  3975                           
  3976                           ;kbd4x4.c: 17:     TRISDbits.TRISD3 = 1;
  3977   0043EE  8695               	bsf	149,3,c	;volatile
  3978                           
  3979                           ;kbd4x4.c: 18:     TRISDbits.TRISD2 = 1;
  3980   0043F0  8495               	bsf	149,2,c	;volatile
  3981                           
  3982                           ;kbd4x4.c: 19:     TRISDbits.TRISD1 = 1;
  3983   0043F2  8295               	bsf	149,1,c	;volatile
  3984   0043F4  0012               	return		;funcret
  3985   0043F6                     __end_of_Keypad_Init:
  3986                           	callstack 0
  3987                           
  3988 ;; *************** function _FILL *****************
  3989 ;; Defined at:
  3990 ;;		line 376 in file "Main_program.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4006 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4007 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4008 ;;Total ram usage:        2 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 10
  4011 ;; This function calls:
  4012 ;;		_Lcd_Clear
  4013 ;;		_Lcd_Set_Cursor
  4014 ;;		_Lcd_Write_Char
  4015 ;;		_Lcd_Write_String
  4016 ;;		_TMR0_COUNT
  4017 ;;		___fldiv
  4018 ;;		___flge
  4019 ;;		___flmul
  4020 ;;		___xxtofl
  4021 ;;		_sprintf
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text11
  4028   002784                     __ptext11:
  4029                           	callstack 0
  4030   002784                     _FILL:
  4031                           	callstack 20
  4032   002784                     
  4033                           ;Main_program.c: 379:     Lcd_Clear();
  4034   002784  EC1E  F022         	call	_Lcd_Clear	;wreg free
  4035   002788                     
  4036                           ;Main_program.c: 380:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  4037   002788  0E02               	movlw	2
  4038   00278A  0100               	movlb	0	; () banked
  4039   00278C  6FC9               	movwf	(??_FILL+1)& (0+255),b
  4040   00278E  0E04               	movlw	4
  4041   002790  6FC8               	movwf	??_FILL& (0+255),b
  4042   002792  0EBA               	movlw	186
  4043   002794                     u8477:
  4044   002794  2EE8               	decfsz	wreg,f,c
  4045   002796  D7FE               	bra	u8477
  4046   002798  2FC8               	decfsz	??_FILL& (0+255),f,b
  4047   00279A  D7FC               	bra	u8477
  4048   00279C  2FC9               	decfsz	(??_FILL+1)& (0+255),f,b
  4049   00279E  D7FA               	bra	u8477
  4050   0027A0  F000               	nop	
  4051   0027A2                     
  4052                           ;Main_program.c: 381:     Lcd_Set_Cursor(1, 1);
  4053   0027A2  0E01               	movlw	1
  4054   0027A4  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4055   0027A6  0E01               	movlw	1
  4056   0027A8  EC7B  F01D         	call	_Lcd_Set_Cursor
  4057   0027AC                     
  4058                           ;Main_program.c: 382:     Lcd_Write_String("Llenando     ml");
  4059   0027AC  0E53               	movlw	low STR_28
  4060   0027AE  6E15               	movwf	Lcd_Write_String@a^0,c
  4061   0027B0  0E7F               	movlw	high STR_28
  4062   0027B2  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4063   0027B4  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  4064   0027B8                     
  4065                           ;Main_program.c: 383:     Lcd_Set_Cursor(2, 12);
  4066   0027B8  0E0C               	movlw	12
  4067   0027BA  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4068   0027BC  0E02               	movlw	2
  4069   0027BE  EC7B  F01D         	call	_Lcd_Set_Cursor
  4070   0027C2                     
  4071                           ;Main_program.c: 384:     Lcd_Write_String("Salir");
  4072   0027C2  0EED               	movlw	low STR_29
  4073   0027C4  6E15               	movwf	Lcd_Write_String@a^0,c
  4074   0027C6  0E7F               	movlw	high STR_29
  4075   0027C8  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4076   0027CA  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  4077   0027CE                     
  4078                           ;Main_program.c: 385:     Lcd_Set_Cursor(2, 7);
  4079   0027CE  0E07               	movlw	7
  4080   0027D0  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4081   0027D2  0E02               	movlw	2
  4082   0027D4  EC7B  F01D         	call	_Lcd_Set_Cursor
  4083   0027D8                     
  4084                           ;Main_program.c: 386:     sprintf(STRING_VAL_TYPED, "%u", PROFILE_NUM);
  4085   0027D8  0EE6               	movlw	low _STRING_VAL_TYPED
  4086   0027DA  0100               	movlb	0	; () banked
  4087   0027DC  6FC0               	movwf	sprintf@s& (0+255),b
  4088   0027DE  0E00               	movlw	high _STRING_VAL_TYPED
  4089   0027E0  6FC1               	movwf	(sprintf@s+1)& (0+255),b
  4090   0027E2  0EFB               	movlw	low STR_30
  4091   0027E4  6FC2               	movwf	sprintf@fmt& (0+255),b
  4092   0027E6  0E7F               	movlw	high STR_30
  4093   0027E8  6FC3               	movwf	(sprintf@fmt+1)& (0+255),b
  4094   0027EA  C048  F0C4         	movff	_PROFILE_NUM,?_sprintf+4
  4095   0027EE  C049  F0C5         	movff	_PROFILE_NUM+1,?_sprintf+5
  4096   0027F2  EC23  F020         	call	_sprintf	;wreg free
  4097   0027F6                     
  4098                           ;Main_program.c: 387:     Lcd_Set_Cursor(1, 10);
  4099   0027F6  0E0A               	movlw	10
  4100   0027F8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4101   0027FA  0E01               	movlw	1
  4102   0027FC  EC7B  F01D         	call	_Lcd_Set_Cursor
  4103   002800                     
  4104                           ;Main_program.c: 388:     Lcd_Write_String(STRING_VAL_TYPED);
  4105   002800  0EE6               	movlw	low _STRING_VAL_TYPED
  4106   002802  6E15               	movwf	Lcd_Write_String@a^0,c
  4107   002804  0E00               	movlw	high _STRING_VAL_TYPED
  4108   002806  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4109   002808  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  4110   00280C                     
  4111                           ;Main_program.c: 390:     Lcd_Set_Cursor(2, 1);
  4112   00280C  0E01               	movlw	1
  4113   00280E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4114   002810  0E02               	movlw	2
  4115   002812  EC7B  F01D         	call	_Lcd_Set_Cursor
  4116   002816                     
  4117                           ;Main_program.c: 391:     Lcd_Write_String("     ml ");
  4118   002816  0EC8               	movlw	low STR_31
  4119   002818  6E15               	movwf	Lcd_Write_String@a^0,c
  4120   00281A  0E7F               	movlw	high STR_31
  4121   00281C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4122   00281E  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  4123   002822                     
  4124                           ;Main_program.c: 392:     LATCbits.LATC0 = 1;
  4125   002822  808B               	bsf	139,0,c	;volatile
  4126   002824                     
  4127                           ;Main_program.c: 393:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  4128   002824  0E02               	movlw	2
  4129   002826  0100               	movlb	0	; () banked
  4130   002828  6FC9               	movwf	(??_FILL+1)& (0+255),b
  4131   00282A  0E04               	movlw	4
  4132   00282C  6FC8               	movwf	??_FILL& (0+255),b
  4133   00282E  0EBA               	movlw	186
  4134   002830                     u8487:
  4135   002830  2EE8               	decfsz	wreg,f,c
  4136   002832  D7FE               	bra	u8487
  4137   002834  2FC8               	decfsz	??_FILL& (0+255),f,b
  4138   002836  D7FC               	bra	u8487
  4139   002838  2FC9               	decfsz	(??_FILL+1)& (0+255),f,b
  4140   00283A  D7FA               	bra	u8487
  4141   00283C  F000               	nop	
  4142   00283E                     
  4143                           ;Main_program.c: 394:     LATCbits.LATC0 = 0;
  4144   00283E  908B               	bcf	139,0,c	;volatile
  4145   002840                     
  4146                           ;Main_program.c: 395:     PULSES_TO_REACH = (PROFILE_NUM / CAL);
  4147   002840  C048  F011         	movff	_PROFILE_NUM,___xxtofl@val
  4148   002844  C049  F012         	movff	_PROFILE_NUM+1,___xxtofl@val+1
  4149   002848  0E00               	movlw	0
  4150   00284A  BE12               	btfsc	(___xxtofl@val+1)^0,7,c
  4151   00284C  0EFF               	movlw	-1
  4152   00284E  6E13               	movwf	(___xxtofl@val+2)^0,c
  4153   002850  6E14               	movwf	(___xxtofl@val+3)^0,c
  4154   002852  0E01               	movlw	1
  4155   002854  EC8B  F019         	call	___xxtofl
  4156   002858  C011  F01F         	movff	?___xxtofl,___fldiv@b
  4157   00285C  C012  F020         	movff	?___xxtofl+1,___fldiv@b+1
  4158   002860  C013  F021         	movff	?___xxtofl+2,___fldiv@b+2
  4159   002864  C014  F022         	movff	?___xxtofl+3,___fldiv@b+3
  4160   002868  0E8D               	movlw	141
  4161   00286A  6E23               	movwf	___fldiv@a^0,c
  4162   00286C  0EB0               	movlw	176
  4163   00286E  6E24               	movwf	(___fldiv@a+1)^0,c
  4164   002870  0E5C               	movlw	92
  4165   002872  6E25               	movwf	(___fldiv@a+2)^0,c
  4166   002874  0E40               	movlw	64
  4167   002876  6E26               	movwf	(___fldiv@a+3)^0,c
  4168   002878  EC63  F010         	call	___fldiv	;wreg free
  4169   00287C  C01F  F0D8         	movff	?___fldiv,_PULSES_TO_REACH
  4170   002880  C020  F0D9         	movff	?___fldiv+1,_PULSES_TO_REACH+1
  4171   002884  C021  F0DA         	movff	?___fldiv+2,_PULSES_TO_REACH+2
  4172   002888  C022  F0DB         	movff	?___fldiv+3,_PULSES_TO_REACH+3
  4173   00288C                     
  4174                           ;Main_program.c: 396:     PULSE = 0;
  4175   00288C  0E00               	movlw	0
  4176   00288E  6E40               	movwf	_PULSE^0,c
  4177   002890  0E00               	movlw	0
  4178   002892  6E41               	movwf	(_PULSE+1)^0,c
  4179   002894  0E00               	movlw	0
  4180   002896  6E42               	movwf	(_PULSE+2)^0,c
  4181   002898  0E00               	movlw	0
  4182   00289A  6E43               	movwf	(_PULSE+3)^0,c
  4183   00289C                     
  4184                           ;Main_program.c: 397:     VALUE_IN_ML = 0;
  4185   00289C  0E00               	movlw	0
  4186   00289E  0100               	movlb	0	; () banked
  4187   0028A0  6FD4               	movwf	_VALUE_IN_ML& (0+255),b
  4188   0028A2  0E00               	movlw	0
  4189   0028A4  6FD5               	movwf	(_VALUE_IN_ML+1)& (0+255),b
  4190   0028A6  0E00               	movlw	0
  4191   0028A8  6FD6               	movwf	(_VALUE_IN_ML+2)& (0+255),b
  4192   0028AA  0E00               	movlw	0
  4193   0028AC  6FD7               	movwf	(_VALUE_IN_ML+3)& (0+255),b
  4194   0028AE                     
  4195                           ; BSR set to: 0
  4196                           ;Main_program.c: 398:     TMR0_COUNT();
  4197   0028AE  EC17  F022         	call	_TMR0_COUNT	;wreg free
  4198   0028B2                     
  4199                           ;Main_program.c: 399:     LATBbits.LATB3 = 1;
  4200   0028B2  868A               	bsf	138,3,c	;volatile
  4201                           
  4202                           ;Main_program.c: 401:     while (PULSE <= PULSES_TO_REACH)
  4203   0028B4  EFC8  F014         	goto	l7506
  4204   0028B8                     l7482:
  4205                           
  4206                           ;Main_program.c: 402:     {;Main_program.c: 403:         VALUE_IN_ML = (PULSE * CAL);
  4207   0028B8  C040  F011         	movff	_PULSE,___flmul@b
  4208   0028BC  C041  F012         	movff	_PULSE+1,___flmul@b+1
  4209   0028C0  C042  F013         	movff	_PULSE+2,___flmul@b+2
  4210   0028C4  C043  F014         	movff	_PULSE+3,___flmul@b+3
  4211   0028C8  0E8D               	movlw	141
  4212   0028CA  6E15               	movwf	___flmul@a^0,c
  4213   0028CC  0EB0               	movlw	176
  4214   0028CE  6E16               	movwf	(___flmul@a+1)^0,c
  4215   0028D0  0E5C               	movlw	92
  4216   0028D2  6E17               	movwf	(___flmul@a+2)^0,c
  4217   0028D4  0E40               	movlw	64
  4218   0028D6  6E18               	movwf	(___flmul@a+3)^0,c
  4219   0028D8  EC4E  F00E         	call	___flmul	;wreg free
  4220   0028DC  C011  F0D4         	movff	?___flmul,_VALUE_IN_ML
  4221   0028E0  C012  F0D5         	movff	?___flmul+1,_VALUE_IN_ML+1
  4222   0028E4  C013  F0D6         	movff	?___flmul+2,_VALUE_IN_ML+2
  4223   0028E8  C014  F0D7         	movff	?___flmul+3,_VALUE_IN_ML+3
  4224   0028EC                     
  4225                           ;Main_program.c: 404:         sprintf(STRING_VALUE_IN_ML, "%0.1f", VALUE_IN_ML);
  4226   0028EC  0EE1               	movlw	low _STRING_VALUE_IN_ML
  4227   0028EE  0100               	movlb	0	; () banked
  4228   0028F0  6FC0               	movwf	sprintf@s& (0+255),b
  4229   0028F2  0E00               	movlw	high _STRING_VALUE_IN_ML
  4230   0028F4  6FC1               	movwf	(sprintf@s+1)& (0+255),b
  4231   0028F6  0EE1               	movlw	low STR_32
  4232   0028F8  6FC2               	movwf	sprintf@fmt& (0+255),b
  4233   0028FA  0E7F               	movlw	high STR_32
  4234   0028FC  6FC3               	movwf	(sprintf@fmt+1)& (0+255),b
  4235   0028FE  C0D4  F0C4         	movff	_VALUE_IN_ML,?_sprintf+4
  4236   002902  C0D5  F0C5         	movff	_VALUE_IN_ML+1,?_sprintf+5
  4237   002906  C0D6  F0C6         	movff	_VALUE_IN_ML+2,?_sprintf+6
  4238   00290A  C0D7  F0C7         	movff	_VALUE_IN_ML+3,?_sprintf+7
  4239   00290E  EC23  F020         	call	_sprintf	;wreg free
  4240   002912                     
  4241                           ;Main_program.c: 405:         Lcd_Set_Cursor(2, 1);
  4242   002912  0E01               	movlw	1
  4243   002914  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4244   002916  0E02               	movlw	2
  4245   002918  EC7B  F01D         	call	_Lcd_Set_Cursor
  4246   00291C                     
  4247                           ;Main_program.c: 406:         Lcd_Write_String(STRING_VALUE_IN_ML);
  4248   00291C  0EE1               	movlw	low _STRING_VALUE_IN_ML
  4249   00291E  6E15               	movwf	Lcd_Write_String@a^0,c
  4250   002920  0E00               	movlw	high _STRING_VALUE_IN_ML
  4251   002922  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4252   002924  EC46  F01F         	call	_Lcd_Write_String	;wreg free
  4253   002928                     
  4254                           ;Main_program.c: 408:         if (PORTAbits.RA5 == 0)
  4255   002928  BA80               	btfsc	128,5,c	;volatile
  4256   00292A  EF99  F014         	goto	u7961
  4257   00292E  EF9B  F014         	goto	u7960
  4258   002932                     u7961:
  4259   002932  EFA3  F014         	goto	l7494
  4260   002936                     u7960:
  4261   002936                     
  4262                           ;Main_program.c: 409:         {;Main_program.c: 410:             Lcd_Set_Cursor(1, 16);
  4263   002936  0E10               	movlw	16
  4264   002938  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4265   00293A  0E01               	movlw	1
  4266   00293C  EC7B  F01D         	call	_Lcd_Set_Cursor
  4267                           
  4268                           ;Main_program.c: 411:             Lcd_Write_Char(0);
  4269   002940  0E00               	movlw	0
  4270   002942  EC94  F021         	call	_Lcd_Write_Char
  4271   002946                     l7494:
  4272                           
  4273                           ;Main_program.c: 414:         if (PORTBbits.RB0 == 0)
  4274   002946  B081               	btfsc	129,0,c	;volatile
  4275   002948  EFA8  F014         	goto	u7971
  4276   00294C  EFAA  F014         	goto	u7970
  4277   002950                     u7971:
  4278   002950  EFC8  F014         	goto	l7506
  4279   002954                     u7970:
  4280   002954                     
  4281                           ;Main_program.c: 415:         {;Main_program.c: 416:             LATBbits.LATB3 = 0;
  4282   002954  968A               	bcf	138,3,c	;volatile
  4283                           
  4284                           ;Main_program.c: 417:             LATCbits.LATC0 = 1;
  4285   002956  808B               	bsf	139,0,c	;volatile
  4286   002958                     
  4287                           ;Main_program.c: 418:             _delay((unsigned long)((600)*(8000000L/4000.0)));
  4288   002958  0E07               	movlw	7
  4289   00295A  0100               	movlb	0	; () banked
  4290   00295C  6FC9               	movwf	(??_FILL+1)& (0+255),b
  4291   00295E  0E17               	movlw	23
  4292   002960  6FC8               	movwf	??_FILL& (0+255),b
  4293   002962  0E6A               	movlw	106
  4294   002964                     u8497:
  4295   002964  2EE8               	decfsz	wreg,f,c
  4296   002966  D7FE               	bra	u8497
  4297   002968  2FC8               	decfsz	??_FILL& (0+255),f,b
  4298   00296A  D7FC               	bra	u8497
  4299   00296C  2FC9               	decfsz	(??_FILL+1)& (0+255),f,b
  4300   00296E  D7FA               	bra	u8497
  4301   002970  F000               	nop	
  4302   002972                     
  4303                           ;Main_program.c: 419:             LATCbits.LATC0 = 0;
  4304   002972  908B               	bcf	139,0,c	;volatile
  4305   002974                     
  4306                           ;Main_program.c: 420:             PULSE = 0;
  4307   002974  0E00               	movlw	0
  4308   002976  6E40               	movwf	_PULSE^0,c
  4309   002978  0E00               	movlw	0
  4310   00297A  6E41               	movwf	(_PULSE+1)^0,c
  4311   00297C  0E00               	movlw	0
  4312   00297E  6E42               	movwf	(_PULSE+2)^0,c
  4313   002980  0E00               	movlw	0
  4314   002982  6E43               	movwf	(_PULSE+3)^0,c
  4315   002984                     
  4316                           ;Main_program.c: 421:             CURRENT_OPTION = 0;
  4317   002984  0E00               	movlw	0
  4318   002986  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  4319   002988  0E00               	movlw	0
  4320   00298A  6E4A               	movwf	_CURRENT_OPTION^0,c
  4321                           
  4322                           ;Main_program.c: 422:             break;
  4323   00298C  EFE1  F014         	goto	l7508
  4324   002990                     l7506:
  4325                           
  4326                           ;Main_program.c: 401:     while (PULSE <= PULSES_TO_REACH)
  4327   002990  C0D8  F02A         	movff	_PULSES_TO_REACH,___flge@ff1
  4328   002994  C0D9  F02B         	movff	_PULSES_TO_REACH+1,___flge@ff1+1
  4329   002998  C0DA  F02C         	movff	_PULSES_TO_REACH+2,___flge@ff1+2
  4330   00299C  C0DB  F02D         	movff	_PULSES_TO_REACH+3,___flge@ff1+3
  4331   0029A0  C040  F02E         	movff	_PULSE,___flge@ff2
  4332   0029A4  C041  F02F         	movff	_PULSE+1,___flge@ff2+1
  4333   0029A8  C042  F030         	movff	_PULSE+2,___flge@ff2+2
  4334   0029AC  C043  F031         	movff	_PULSE+3,___flge@ff2+3
  4335   0029B0  EC8D  F01B         	call	___flge	;wreg free
  4336   0029B4  B0D8               	btfsc	status,0,c
  4337   0029B6  EFDF  F014         	goto	u7981
  4338   0029BA  EFE1  F014         	goto	u7980
  4339   0029BE                     u7981:
  4340   0029BE  EF5C  F014         	goto	l7482
  4341   0029C2                     u7980:
  4342   0029C2                     l7508:
  4343                           
  4344                           ;Main_program.c: 425:     if (PULSE >= PULSES_TO_REACH)
  4345   0029C2  C040  F02A         	movff	_PULSE,___flge@ff1
  4346   0029C6  C041  F02B         	movff	_PULSE+1,___flge@ff1+1
  4347   0029CA  C042  F02C         	movff	_PULSE+2,___flge@ff1+2
  4348   0029CE  C043  F02D         	movff	_PULSE+3,___flge@ff1+3
  4349   0029D2  C0D8  F02E         	movff	_PULSES_TO_REACH,___flge@ff2
  4350   0029D6  C0D9  F02F         	movff	_PULSES_TO_REACH+1,___flge@ff2+1
  4351   0029DA  C0DA  F030         	movff	_PULSES_TO_REACH+2,___flge@ff2+2
  4352   0029DE  C0DB  F031         	movff	_PULSES_TO_REACH+3,___flge@ff2+3
  4353   0029E2  EC8D  F01B         	call	___flge	;wreg free
  4354   0029E6  A0D8               	btfss	status,0,c
  4355   0029E8  EFF8  F014         	goto	u7991
  4356   0029EC  EFFA  F014         	goto	u7990
  4357   0029F0                     u7991:
  4358   0029F0  EF23  F015         	goto	l184
  4359   0029F4                     u7990:
  4360   0029F4                     
  4361                           ;Main_program.c: 426:     {;Main_program.c: 427:         LATBbits.LATB3 = 0;
  4362   0029F4  968A               	bcf	138,3,c	;volatile
  4363   0029F6                     
  4364                           ;Main_program.c: 428:         PULSE = 0;
  4365   0029F6  0E00               	movlw	0
  4366   0029F8  6E40               	movwf	_PULSE^0,c
  4367   0029FA  0E00               	movlw	0
  4368   0029FC  6E41               	movwf	(_PULSE+1)^0,c
  4369   0029FE  0E00               	movlw	0
  4370   002A00  6E42               	movwf	(_PULSE+2)^0,c
  4371   002A02  0E00               	movlw	0
  4372   002A04  6E43               	movwf	(_PULSE+3)^0,c
  4373   002A06                     
  4374                           ;Main_program.c: 429:         LATCbits.LATC0 = 1;
  4375   002A06  808B               	bsf	139,0,c	;volatile
  4376   002A08                     
  4377                           ;Main_program.c: 430:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  4378   002A08  0E02               	movlw	2
  4379   002A0A  0100               	movlb	0	; () banked
  4380   002A0C  6FC9               	movwf	(??_FILL+1)& (0+255),b
  4381   002A0E  0E04               	movlw	4
  4382   002A10  6FC8               	movwf	??_FILL& (0+255),b
  4383   002A12  0EBA               	movlw	186
  4384   002A14                     u8507:
  4385   002A14  2EE8               	decfsz	wreg,f,c
  4386   002A16  D7FE               	bra	u8507
  4387   002A18  2FC8               	decfsz	??_FILL& (0+255),f,b
  4388   002A1A  D7FC               	bra	u8507
  4389   002A1C  2FC9               	decfsz	(??_FILL+1)& (0+255),f,b
  4390   002A1E  D7FA               	bra	u8507
  4391   002A20  F000               	nop	
  4392   002A22                     
  4393                           ;Main_program.c: 431:         LATCbits.LATC0 = 0;
  4394   002A22  908B               	bcf	139,0,c	;volatile
  4395   002A24                     
  4396                           ;Main_program.c: 432:         CURRENT_OPTION = 2;
  4397   002A24  0E00               	movlw	0
  4398   002A26  6E4B               	movwf	(_CURRENT_OPTION+1)^0,c
  4399   002A28  0E02               	movlw	2
  4400   002A2A  6E4A               	movwf	_CURRENT_OPTION^0,c
  4401                           
  4402                           ;Main_program.c: 433:         _delay((unsigned long)((1000)*(8000000L/4000.0)));
  4403   002A2C  0E0B               	movlw	11
  4404   002A2E  0100               	movlb	0	; () banked
  4405   002A30  6FC9               	movwf	(??_FILL+1)& (0+255),b
  4406   002A32  0E26               	movlw	38
  4407   002A34  6FC8               	movwf	??_FILL& (0+255),b
  4408   002A36  0E5D               	movlw	93
  4409   002A38                     u8517:
  4410   002A38  2EE8               	decfsz	wreg,f,c
  4411   002A3A  D7FE               	bra	u8517
  4412   002A3C  2FC8               	decfsz	??_FILL& (0+255),f,b
  4413   002A3E  D7FC               	bra	u8517
  4414   002A40  2FC9               	decfsz	(??_FILL+1)& (0+255),f,b
  4415   002A42  D7FA               	bra	u8517
  4416   002A44  D000               	nop2	
  4417   002A46                     l184:
  4418   002A46  0012               	return		;funcret
  4419   002A48                     __end_of_FILL:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _sprintf *****************
  4423 ;; Defined at:
  4424 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  s               2   96[BANK0 ] PTR unsigned char 
  4427 ;;		 -> STRING_VALUE_IN_ML(5), STRING_VAL_TYPED(5), 
  4428 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  4429 ;;		 -> STR_32(6), STR_30(3), 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  f              11    2[BANK1 ] struct _IO_FILE
  4432 ;;  ap              2    0[BANK1 ] PTR void [1]
  4433 ;;		 -> ?_sprintf(2), 
  4434 ;;  ret             2    0        int 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2   96[BANK0 ] int 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4444 ;;      Params:         0       8       0       0       0       0       0       0       0
  4445 ;;      Locals:         0       0      13       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4447 ;;      Totals:         0       8      13       0       0       0       0       0       0
  4448 ;;Total ram usage:       21 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 9
  4451 ;; This function calls:
  4452 ;;		_vfprintf
  4453 ;; This function is called by:
  4454 ;;		_FILL
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text12
  4459   004046                     __ptext12:
  4460                           	callstack 0
  4461   004046                     _sprintf:
  4462                           	callstack 20
  4463   004046  0EC4               	movlw	low (?_sprintf+4)
  4464   004048  0101               	movlb	1	; () banked
  4465   00404A  6F50               	movwf	sprintf@ap& (0+255),b
  4466   00404C  0E00               	movlw	high (?_sprintf+4)
  4467   00404E  6F51               	movwf	(sprintf@ap+1)& (0+255),b
  4468   004050  C0C0  F152         	movff	sprintf@s,sprintf@f
  4469   004054  C0C1  F153         	movff	sprintf@s+1,sprintf@f+1
  4470   004058                     
  4471                           ; BSR set to: 1
  4472   004058  0E00               	movlw	0
  4473   00405A  6F56               	movwf	(sprintf@f+4)& (0+255),b
  4474   00405C  0E00               	movlw	0
  4475   00405E  6F55               	movwf	(sprintf@f+3)& (0+255),b
  4476   004060                     
  4477                           ; BSR set to: 1
  4478   004060  0E00               	movlw	0
  4479   004062  6F5C               	movwf	(sprintf@f+10)& (0+255),b
  4480   004064  0E00               	movlw	0
  4481   004066  6F5B               	movwf	(sprintf@f+9)& (0+255),b
  4482   004068                     
  4483                           ; BSR set to: 1
  4484   004068  0E52               	movlw	low sprintf@f
  4485   00406A  0100               	movlb	0	; () banked
  4486   00406C  6FBA               	movwf	vfprintf@fp& (0+255),b
  4487   00406E  0E01               	movlw	high sprintf@f
  4488   004070  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  4489   004072  C0C2  F0BC         	movff	sprintf@fmt,vfprintf@fmt
  4490   004076  C0C3  F0BD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4491   00407A  0E50               	movlw	low sprintf@ap
  4492   00407C  6FBE               	movwf	vfprintf@ap& (0+255),b
  4493   00407E  0E01               	movlw	high sprintf@ap
  4494   004080  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  4495   004082  EC79  F020         	call	_vfprintf	;wreg free
  4496   004086  0101               	movlb	1	; () banked
  4497   004088  5155               	movf	(sprintf@f+3)& (0+255),w,b
  4498   00408A  0100               	movlb	0	; () banked
  4499   00408C  25C0               	addwf	sprintf@s& (0+255),w,b
  4500   00408E  6ED9               	movwf	fsr2l,c
  4501   004090  0101               	movlb	1	; () banked
  4502   004092  5156               	movf	(sprintf@f+4)& (0+255),w,b
  4503   004094  0100               	movlb	0	; () banked
  4504   004096  21C1               	addwfc	(sprintf@s+1)& (0+255),w,b
  4505   004098  6EDA               	movwf	fsr2h,c
  4506   00409A  0E00               	movlw	0
  4507   00409C  6EDF               	movwf	indf2,c
  4508   00409E                     
  4509                           ; BSR set to: 0
  4510   00409E  0012               	return		;funcret
  4511   0040A0                     __end_of_sprintf:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _vfprintf *****************
  4515 ;; Defined at:
  4516 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  4519 ;;		 -> sprintf@f(11), 
  4520 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  4521 ;;		 -> STR_32(6), STR_30(3), 
  4522 ;;  ap              2   94[BANK0 ] PTR PTR void 
  4523 ;;		 -> sprintf@ap(2), 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  cfmt            2   61[COMRAM] PTR unsigned char 
  4526 ;;		 -> STR_32(6), STR_30(3), 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  2   90[BANK0 ] int 
  4529 ;; Registers used:
  4530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4536 ;;      Params:         0       6       0       0       0       0       0       0       0
  4537 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4539 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4540 ;;Total ram usage:        8 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 8
  4543 ;; This function calls:
  4544 ;;		_vfpfcnvrt
  4545 ;; This function is called by:
  4546 ;;		_sprintf
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text13
  4551   0040F2                     __ptext13:
  4552                           	callstack 0
  4553   0040F2                     _vfprintf:
  4554                           	callstack 20
  4555   0040F2                     
  4556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4557   0040F2  C0BC  F03E         	movff	vfprintf@fmt,vfprintf@cfmt
  4558   0040F6  C0BD  F03F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4561   0040FA  EF8E  F020         	goto	l7236
  4562   0040FE                     l7234:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4565   0040FE  C0BA  F0A3         	movff	vfprintf@fp,vfpfcnvrt@fp
  4566   004102  C0BB  F0A4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4567   004106  0E3E               	movlw	low vfprintf@cfmt
  4568   004108  0100               	movlb	0	; () banked
  4569   00410A  6FA5               	movwf	vfpfcnvrt@fmt& (0+255),b
  4570   00410C  0E00               	movlw	high vfprintf@cfmt
  4571   00410E  6FA6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4572   004110  C0BE  F0A7         	movff	vfprintf@ap,vfpfcnvrt@ap
  4573   004114  C0BF  F0A8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4574   004118  ECFB  F009         	call	_vfpfcnvrt	;wreg free
  4575   00411C                     l7236:
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4578   00411C  C03E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4579   004120  C03F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4580   004124                     	if	0	;tblptru may be non-zero
  4581   004124                     	endif
  4582   004124                     	if	0	;tblptru may be non-zero
  4583   004124                     	endif
  4584   004124  0008               	tblrd		*
  4585   004126  50F5               	movf	tablat,w,c
  4586   004128  0900               	iorlw	0
  4587   00412A  A4D8               	btfss	status,2,c
  4588   00412C  EF9A  F020         	goto	u7831
  4589   004130  EF9C  F020         	goto	u7830
  4590   004134                     u7831:
  4591   004134  EF7F  F020         	goto	l7234
  4592   004138                     u7830:
  4593   004138                     
  4594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4595   004138  0E00               	movlw	0
  4596   00413A  0100               	movlb	0	; () banked
  4597   00413C  6FBB               	movwf	(?_vfprintf+1)& (0+255),b
  4598   00413E  0E00               	movlw	0
  4599   004140  6FBA               	movwf	?_vfprintf& (0+255),b
  4600   004142                     
  4601                           ; BSR set to: 0
  4602   004142  0012               	return		;funcret
  4603   004144                     __end_of_vfprintf:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _vfpfcnvrt *****************
  4607 ;; Defined at:
  4608 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  4611 ;;		 -> sprintf@f(11), 
  4612 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  4613 ;;		 -> vfprintf@cfmt(2), 
  4614 ;;  ap              2   71[BANK0 ] PTR PTR void 
  4615 ;;		 -> sprintf@ap(2), 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  convarg         8   79[BANK0 ] struct .
  4618 ;;  cp              2   88[BANK0 ] PTR unsigned char 
  4619 ;;		 -> STR_32(6), STR_30(3), 
  4620 ;;  done            2   77[BANK0 ] int 
  4621 ;;  i               2    0        int 
  4622 ;;  c               1   87[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4632 ;;      Params:         0       6       0       0       0       0       0       0       0
  4633 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4634 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4635 ;;      Totals:         0      23       0       0       0       0       0       0       0
  4636 ;;Total ram usage:       23 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 7
  4639 ;; This function calls:
  4640 ;;		_atoi
  4641 ;;		_efgtoa
  4642 ;;		_fputc
  4643 ;;		_isdigit
  4644 ;;		_utoa
  4645 ;; This function is called by:
  4646 ;;		_vfprintf
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text14
  4651   0013F6                     __ptext14:
  4652                           	callstack 0
  4653   0013F6                     _vfpfcnvrt:
  4654                           	callstack 20
  4655   0013F6                     
  4656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4657   0013F6  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4658   0013FA  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4659   0013FE  CFDE FFF6          	movff	postinc2,tblptrl
  4660   001402  CFDD FFF7          	movff	postdec2,tblptrh
  4661   001406                     	if	0	;tblptru may be non-zero
  4662   001406                     	endif
  4663   001406                     	if	0	;tblptru may be non-zero
  4664   001406                     	endif
  4665   001406  0008               	tblrd		*
  4666   001408  50F5               	movf	tablat,w,c
  4667   00140A  0A25               	xorlw	37
  4668   00140C  A4D8               	btfss	status,2,c
  4669   00140E  EF0B  F00A         	goto	u7761
  4670   001412  EF0D  F00A         	goto	u7760
  4671   001416                     u7761:
  4672   001416  EF1D  F00C         	goto	l7196
  4673   00141A                     u7760:
  4674   00141A                     
  4675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4676   00141A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4677   00141E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4678   001422  2ADE               	incf	postinc2,f,c
  4679   001424  0E00               	movlw	0
  4680   001426  22DD               	addwfc	postdec2,f,c
  4681   001428                     
  4682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4683   001428  0E00               	movlw	0
  4684   00142A  0100               	movlb	0	; () banked
  4685   00142C  6FDD               	movwf	(_width+1)& (0+255),b
  4686   00142E  0E00               	movlw	0
  4687   001430  6FDC               	movwf	_width& (0+255),b
  4688   001432  C0DC  F0E0         	movff	_width,_flags
  4689   001436                     
  4690                           ; BSR set to: 0
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4692   001436  69DE               	setf	_prec& (0+255),b
  4693   001438  69DF               	setf	(_prec+1)& (0+255),b
  4694   00143A                     
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4697   00143A  0E00               	movlw	0
  4698   00143C  6FAE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4699   00143E  0E00               	movlw	0
  4700   001440  6FAD               	movwf	vfpfcnvrt@done& (0+255),b
  4701                           
  4702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4703   001442  EF4D  F00A         	goto	l7124
  4704   001446                     l7114:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  4708   001446  83E0               	bsf	_flags& (0+255),1,b
  4709   001448                     
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  4712   001448  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4713   00144C  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4714   001450  2ADE               	incf	postinc2,f,c
  4715   001452  0E00               	movlw	0
  4716   001454  22DD               	addwfc	postdec2,f,c
  4717                           
  4718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  4719   001456  EF4D  F00A         	goto	l7124
  4720   00145A                     l7118:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  4724   00145A  0E00               	movlw	0
  4725   00145C  6FAE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4726   00145E  0E01               	movlw	1
  4727   001460  6FAD               	movwf	vfpfcnvrt@done& (0+255),b
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  4730   001462  EF4D  F00A         	goto	l7124
  4731   001466                     l7122:
  4732                           
  4733                           ; BSR set to: 0
  4734   001466  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4735   00146A  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4736   00146E  CFDE FFF6          	movff	postinc2,tblptrl
  4737   001472  CFDD FFF7          	movff	postdec2,tblptrh
  4738   001476                     	if	0	;tblptru may be non-zero
  4739   001476                     	endif
  4740   001476                     	if	0	;tblptru may be non-zero
  4741   001476                     	endif
  4742   001476  0008               	tblrd		*
  4743   001478  50F5               	movf	tablat,w,c
  4744   00147A  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  4745   00147C  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4746                           
  4747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4748                           ; Switch size 1, requested type "simple"
  4749                           ; Number of cases is 1, Range of values is 0 to 0
  4750                           ; switch strategies available:
  4751                           ; Name         Instructions Cycles
  4752                           ; simple_byte            4     3 (average)
  4753                           ;	Chosen strategy is simple_byte
  4754   00147E  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4755   001480  0A00               	xorlw	0	; case 0
  4756   001482  B4D8               	btfsc	status,2,c
  4757   001484  EF46  F00A         	goto	l7856
  4758   001488  EF2D  F00A         	goto	l7118
  4759   00148C                     l7856:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ; Switch size 1, requested type "simple"
  4763                           ; Number of cases is 1, Range of values is 48 to 48
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte            4     3 (average)
  4767                           ;	Chosen strategy is simple_byte
  4768   00148C  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  4769   00148E  0A30               	xorlw	48	; case 48
  4770   001490  B4D8               	btfsc	status,2,c
  4771   001492  EF23  F00A         	goto	l7114
  4772   001496  EF2D  F00A         	goto	l7118
  4773   00149A                     l7124:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4777   00149A  51AD               	movf	vfpfcnvrt@done& (0+255),w,b
  4778   00149C  11AE               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4779   00149E  B4D8               	btfsc	status,2,c
  4780   0014A0  EF54  F00A         	goto	u7771
  4781   0014A4  EF56  F00A         	goto	u7770
  4782   0014A8                     u7771:
  4783   0014A8  EF33  F00A         	goto	l7122
  4784   0014AC                     u7770:
  4785   0014AC                     
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  4788   0014AC  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4789   0014B0  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4790   0014B4  CFDE FFF6          	movff	postinc2,tblptrl
  4791   0014B8  CFDD FFF7          	movff	postdec2,tblptrh
  4792   0014BC                     	if	0	;tblptru may be non-zero
  4793   0014BC                     	endif
  4794   0014BC                     	if	0	;tblptru may be non-zero
  4795   0014BC                     	endif
  4796   0014BC  0008               	tblrd		*
  4797   0014BE  50F5               	movf	tablat,w,c
  4798   0014C0  0A2E               	xorlw	46
  4799   0014C2  A4D8               	btfss	status,2,c
  4800   0014C4  EF66  F00A         	goto	u7781
  4801   0014C8  EF68  F00A         	goto	u7780
  4802   0014CC                     u7781:
  4803   0014CC  EFD6  F00A         	goto	l7144
  4804   0014D0                     u7780:
  4805   0014D0                     
  4806                           ; BSR set to: 0
  4807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  4808   0014D0  0E00               	movlw	0
  4809   0014D2  6FDF               	movwf	(_prec+1)& (0+255),b
  4810   0014D4  0E00               	movlw	0
  4811   0014D6  6FDE               	movwf	_prec& (0+255),b
  4812   0014D8                     
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  4815   0014D8  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4816   0014DC  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4817   0014E0  2ADE               	incf	postinc2,f,c
  4818   0014E2  0E00               	movlw	0
  4819   0014E4  22DD               	addwfc	postdec2,f,c
  4820   0014E6                     
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  4823   0014E6  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4824   0014EA  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4825   0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  4826   0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  4827   0014F6                     	if	0	;tblptru may be non-zero
  4828   0014F6                     	endif
  4829   0014F6                     	if	0	;tblptru may be non-zero
  4830   0014F6                     	endif
  4831   0014F6  0008               	tblrd		*
  4832   0014F8  50F5               	movf	tablat,w,c
  4833   0014FA  0A2A               	xorlw	42
  4834   0014FC  A4D8               	btfss	status,2,c
  4835   0014FE  EF83  F00A         	goto	u7791
  4836   001502  EF85  F00A         	goto	u7790
  4837   001506                     u7791:
  4838   001506  EFA2  F00A         	goto	l7136
  4839   00150A                     u7790:
  4840   00150A                     
  4841                           ; BSR set to: 0
  4842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  4843   00150A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4844   00150E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4845   001512  2ADE               	incf	postinc2,f,c
  4846   001514  0E00               	movlw	0
  4847   001516  22DD               	addwfc	postdec2,f,c
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4850   001518  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4851   00151C  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4852   001520  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  4853   001524  0E02               	movlw	2
  4854   001526  26DE               	addwf	postinc2,f,c
  4855   001528  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  4856   00152C  0E00               	movlw	0
  4857   00152E  22DD               	addwfc	postdec2,f,c
  4858   001530  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4859   001534  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4860   001538  CFDE F0DE          	movff	postinc2,_prec
  4861   00153C  CFDD F0DF          	movff	postdec2,_prec+1
  4862                           
  4863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  4864   001540  EFD6  F00A         	goto	l7144
  4865   001544                     l7136:
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  4869   001544  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4870   001548  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4871   00154C  CFDE F017          	movff	postinc2,atoi@s
  4872   001550  CFDD F018          	movff	postdec2,atoi@s+1
  4873   001554  EC65  F01A         	call	_atoi	;wreg free
  4874   001558  C017  F0DE         	movff	?_atoi,_prec
  4875   00155C  C018  F0DF         	movff	?_atoi+1,_prec+1
  4876                           
  4877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4878   001560  EFB9  F00A         	goto	l7142
  4879   001564                     l7138:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  4883   001564  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4884   001568  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4885   00156C  2ADE               	incf	postinc2,f,c
  4886   00156E  0E00               	movlw	0
  4887   001570  22DD               	addwfc	postdec2,f,c
  4888   001572                     l7142:
  4889   001572  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4890   001576  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4891   00157A  CFDE FFF6          	movff	postinc2,tblptrl
  4892   00157E  CFDD FFF7          	movff	postdec2,tblptrh
  4893   001582                     	if	0	;tblptru may be non-zero
  4894   001582                     	endif
  4895   001582                     	if	0	;tblptru may be non-zero
  4896   001582                     	endif
  4897   001582  0008               	tblrd		*
  4898   001584  CFF5 F0A9          	movff	tablat,??_vfpfcnvrt
  4899   001588  0ED0               	movlw	208
  4900   00158A  0100               	movlb	0	; () banked
  4901   00158C  25A9               	addwf	??_vfpfcnvrt& (0+255),w,b
  4902   00158E  6FAA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4903   001590  6BAB               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  4904   001592  0EFF               	movlw	255
  4905   001594  23AB               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  4906   001596  51AB               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  4907   001598  E109               	bnz	u7800
  4908   00159A  0E0A               	movlw	10
  4909   00159C  5DAA               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  4910   00159E  A0D8               	btfss	status,0,c
  4911   0015A0  EFD4  F00A         	goto	u7801
  4912   0015A4  EFD6  F00A         	goto	u7800
  4913   0015A8                     u7801:
  4914   0015A8  EFB2  F00A         	goto	l7138
  4915   0015AC                     u7800:
  4916   0015AC                     l7144:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  4920   0015AC  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4921   0015B0  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4922   0015B4  CFDE F0B8          	movff	postinc2,vfpfcnvrt@cp
  4923   0015B8  CFDD F0B9          	movff	postdec2,vfpfcnvrt@cp+1
  4924   0015BC                     
  4925                           ; BSR set to: 0
  4926   0015BC  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4927   0015C0  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4928   0015C4                     	if	0	;tblptru may be non-zero
  4929   0015C4                     	endif
  4930   0015C4                     	if	0	;tblptru may be non-zero
  4931   0015C4                     	endif
  4932   0015C4  0008               	tblrd		*
  4933   0015C6  50F5               	movf	tablat,w,c
  4934   0015C8  0A75               	xorlw	117
  4935   0015CA  A4D8               	btfss	status,2,c
  4936   0015CC  EFEA  F00A         	goto	u7811
  4937   0015D0  EFEC  F00A         	goto	u7810
  4938   0015D4                     u7811:
  4939   0015D4  EF48  F00B         	goto	l7158
  4940   0015D8                     u7810:
  4941   0015D8                     
  4942                           ; BSR set to: 0
  4943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4944   0015D8  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4945   0015DC  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4946   0015E0  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  4947   0015E4  0E02               	movlw	2
  4948   0015E6  26DE               	addwf	postinc2,f,c
  4949   0015E8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  4950   0015EC  0E00               	movlw	0
  4951   0015EE  22DD               	addwfc	postdec2,f,c
  4952   0015F0  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4953   0015F4  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4954   0015F8  CFDE F0AB          	movff	postinc2,??_vfpfcnvrt+2
  4955   0015FC  CFDD F0AC          	movff	postdec2,??_vfpfcnvrt+3
  4956   001600  C0AB  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  4957   001604  C0AC  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  4958   001608  6BB1               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  4959   00160A  6BB2               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  4960   00160C  6BB3               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  4961   00160E  6BB4               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  4962   001610  6BB5               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  4963   001612  6BB6               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  4966   001614  0E01               	movlw	1
  4967   001616  25B8               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4968   001618  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  4969   00161A  0E00               	movlw	0
  4970   00161C  21B9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4971   00161E  6FAA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4972   001620  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4973   001624  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4974   001628  C0A9  FFDE         	movff	??_vfpfcnvrt,postinc2
  4975   00162C  C0AA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  4978   001630  EF32  F00B         	goto	l7156
  4979   001634                     l7150:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  4983   001634  C0A3  F02C         	movff	vfpfcnvrt@fp,utoa@fp
  4984   001638  C0A4  F02D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4985   00163C  C0AF  F02E         	movff	vfpfcnvrt@convarg,utoa@d
  4986   001640  C0B0  F02F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  4987   001644  C0B1  F030         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  4988   001648  C0B2  F031         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  4989   00164C  C0B3  F032         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  4990   001650  C0B4  F033         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  4991   001654  C0B5  F034         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  4992   001658  C0B6  F035         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  4993   00165C  EC8C  F018         	call	_utoa	;wreg free
  4994   001660  EF31  F00C         	goto	l1164
  4995   001664                     l7156:
  4996                           
  4997                           ; BSR set to: 0
  4998   001664  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4999   001668  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5000   00166C                     	if	0	;tblptru may be non-zero
  5001   00166C                     	endif
  5002   00166C                     	if	0	;tblptru may be non-zero
  5003   00166C                     	endif
  5004   00166C  0008               	tblrd		*
  5005   00166E  50F5               	movf	tablat,w,c
  5006   001670  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5007   001672  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5008                           
  5009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5010                           ; Switch size 1, requested type "simple"
  5011                           ; Number of cases is 1, Range of values is 0 to 0
  5012                           ; switch strategies available:
  5013                           ; Name         Instructions Cycles
  5014                           ; simple_byte            4     3 (average)
  5015                           ;	Chosen strategy is simple_byte
  5016   001674  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5017   001676  0A00               	xorlw	0	; case 0
  5018   001678  B4D8               	btfsc	status,2,c
  5019   00167A  EF41  F00B         	goto	l7858
  5020   00167E  EF48  F00B         	goto	l7158
  5021   001682                     l7858:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ; Switch size 1, requested type "simple"
  5025                           ; Number of cases is 1, Range of values is 117 to 117
  5026                           ; switch strategies available:
  5027                           ; Name         Instructions Cycles
  5028                           ; simple_byte            4     3 (average)
  5029                           ;	Chosen strategy is simple_byte
  5030   001682  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5031   001684  0A75               	xorlw	117	; case 117
  5032   001686  B4D8               	btfsc	status,2,c
  5033   001688  EF1A  F00B         	goto	l7150
  5034   00168C  EF48  F00B         	goto	l7158
  5035   001690                     l7158:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  5039   001690  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5040   001694  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5041   001698  CFDE F0B8          	movff	postinc2,vfpfcnvrt@cp
  5042   00169C  CFDD F0B9          	movff	postdec2,vfpfcnvrt@cp+1
  5043   0016A0                     
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  5046   0016A0  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5047   0016A4  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5048   0016A8                     	if	0	;tblptru may be non-zero
  5049   0016A8                     	endif
  5050   0016A8                     	if	0	;tblptru may be non-zero
  5051   0016A8                     	endif
  5052   0016A8  0008               	tblrd		*
  5053   0016AA  CFF5 F0B7          	movff	tablat,vfpfcnvrt@c
  5054                           
  5055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  5056   0016AE  EF65  F00B         	goto	l7170
  5057   0016B2                     l7162:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  5061   0016B2  4BB8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  5062   0016B4  2BB9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  5063                           
  5064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  5065   0016B6  EF7E  F00B         	goto	l7172
  5066   0016BA                     l7164:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  5070   0016BA  0E6C               	movlw	108
  5071   0016BC  6FB7               	movwf	vfpfcnvrt@c& (0+255),b
  5072                           
  5073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  5074   0016BE  EF7E  F00B         	goto	l7172
  5075   0016C2                     l7166:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  5079   0016C2  0E00               	movlw	0
  5080   0016C4  6FB7               	movwf	vfpfcnvrt@c& (0+255),b
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  5083   0016C6  EF7E  F00B         	goto	l7172
  5084   0016CA                     l7170:
  5085                           
  5086                           ; BSR set to: 0
  5087   0016CA  51B7               	movf	vfpfcnvrt@c& (0+255),w,b
  5088   0016CC  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5089   0016CE  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5090                           
  5091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5092                           ; Switch size 1, requested type "simple"
  5093                           ; Number of cases is 1, Range of values is 0 to 0
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte            4     3 (average)
  5097                           ;	Chosen strategy is simple_byte
  5098   0016D0  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5099   0016D2  0A00               	xorlw	0	; case 0
  5100   0016D4  B4D8               	btfsc	status,2,c
  5101   0016D6  EF6F  F00B         	goto	l7860
  5102   0016DA  EF61  F00B         	goto	l7166
  5103   0016DE                     l7860:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ; Switch size 1, requested type "simple"
  5107                           ; Number of cases is 3, Range of values is 76 to 108
  5108                           ; switch strategies available:
  5109                           ; Name         Instructions Cycles
  5110                           ; simple_byte           10     6 (average)
  5111                           ;	Chosen strategy is simple_byte
  5112   0016DE  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5113   0016E0  0A4C               	xorlw	76	; case 76
  5114   0016E2  B4D8               	btfsc	status,2,c
  5115   0016E4  EF59  F00B         	goto	l7162
  5116   0016E8  0A2A               	xorlw	42	; case 102
  5117   0016EA  B4D8               	btfsc	status,2,c
  5118   0016EC  EF5D  F00B         	goto	l7164
  5119   0016F0  0A0A               	xorlw	10	; case 108
  5120   0016F2  B4D8               	btfsc	status,2,c
  5121   0016F4  EF59  F00B         	goto	l7162
  5122   0016F8  EF61  F00B         	goto	l7166
  5123   0016FC                     l7172:
  5124                           
  5125                           ; BSR set to: 0
  5126   0016FC  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5127   001700  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5128   001704                     	if	0	;tblptru may be non-zero
  5129   001704                     	endif
  5130   001704                     	if	0	;tblptru may be non-zero
  5131   001704                     	endif
  5132   001704  0008               	tblrd		*
  5133   001706  50F5               	movf	tablat,w,c
  5134   001708  0A66               	xorlw	102
  5135   00170A  A4D8               	btfss	status,2,c
  5136   00170C  EF8A  F00B         	goto	u7821
  5137   001710  EF8C  F00B         	goto	u7820
  5138   001714                     u7821:
  5139   001714  EF14  F00C         	goto	l7192
  5140   001718                     u7820:
  5141   001718  EFC2  F00B         	goto	l7180
  5142   00171C                     l7174:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5146   00171C  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5147   001720  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5148   001724  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  5149   001728  0E04               	movlw	4
  5150   00172A  26DE               	addwf	postinc2,f,c
  5151   00172C  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  5152   001730  0E00               	movlw	0
  5153   001732  22DD               	addwfc	postdec2,f,c
  5154   001734  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5155   001738  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5156   00173C  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg
  5157   001740  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+1
  5158   001744  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+2
  5159   001748  CFDE F0B2          	movff	postinc2,vfpfcnvrt@convarg+3
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  5162   00174C  EFD7  F00B         	goto	l7182
  5163   001750                     l7176:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5167   001750  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5168   001754  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5169   001758  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  5170   00175C  0E04               	movlw	4
  5171   00175E  26DE               	addwf	postinc2,f,c
  5172   001760  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  5173   001764  0E00               	movlw	0
  5174   001766  22DD               	addwfc	postdec2,f,c
  5175   001768  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5176   00176C  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5177   001770  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg
  5178   001774  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+1
  5179   001778  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+2
  5180   00177C  CFDE F0B2          	movff	postinc2,vfpfcnvrt@convarg+3
  5181                           
  5182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  5183   001780  EFD7  F00B         	goto	l7182
  5184   001784                     l7180:
  5185                           
  5186                           ; BSR set to: 0
  5187   001784  51B7               	movf	vfpfcnvrt@c& (0+255),w,b
  5188   001786  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5189   001788  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5190                           
  5191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5192                           ; Switch size 1, requested type "simple"
  5193                           ; Number of cases is 1, Range of values is 0 to 0
  5194                           ; switch strategies available:
  5195                           ; Name         Instructions Cycles
  5196                           ; simple_byte            4     3 (average)
  5197                           ;	Chosen strategy is simple_byte
  5198   00178A  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5199   00178C  0A00               	xorlw	0	; case 0
  5200   00178E  B4D8               	btfsc	status,2,c
  5201   001790  EFCC  F00B         	goto	l7862
  5202   001794  EFD7  F00B         	goto	l7182
  5203   001798                     l7862:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ; Switch size 1, requested type "simple"
  5207                           ; Number of cases is 2, Range of values is 76 to 108
  5208                           ; switch strategies available:
  5209                           ; Name         Instructions Cycles
  5210                           ; simple_byte            7     4 (average)
  5211                           ;	Chosen strategy is simple_byte
  5212   001798  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5213   00179A  0A4C               	xorlw	76	; case 76
  5214   00179C  B4D8               	btfsc	status,2,c
  5215   00179E  EFA8  F00B         	goto	l7176
  5216   0017A2  0A20               	xorlw	32	; case 108
  5217   0017A4  B4D8               	btfsc	status,2,c
  5218   0017A6  EF8E  F00B         	goto	l7174
  5219   0017AA  EFD7  F00B         	goto	l7182
  5220   0017AE                     l7182:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  5224   0017AE  0E01               	movlw	1
  5225   0017B0  25B8               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5226   0017B2  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5227   0017B4  0E00               	movlw	0
  5228   0017B6  21B9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5229   0017B8  6FAA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5230   0017BA  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5231   0017BE  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5232   0017C2  C0A9  FFDE         	movff	??_vfpfcnvrt,postinc2
  5233   0017C6  C0AA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  5236   0017CA  EFFE  F00B         	goto	l7190
  5237   0017CE                     l7184:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  5241   0017CE  C0A3  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  5242   0017D2  C0A4  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5243   0017D6  C0AF  F072         	movff	vfpfcnvrt@convarg,efgtoa@f
  5244   0017DA  C0B0  F073         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  5245   0017DE  C0B1  F074         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  5246   0017E2  C0B2  F075         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  5247   0017E6  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5248   0017EA  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5249   0017EE                     	if	0	;tblptru may be non-zero
  5250   0017EE                     	endif
  5251   0017EE                     	if	0	;tblptru may be non-zero
  5252   0017EE                     	endif
  5253   0017EE  0008               	tblrd		*
  5254   0017F0  CFF5 F076          	movff	tablat,efgtoa@c
  5255   0017F4  EC09  F000         	call	_efgtoa	;wreg free
  5256   0017F8  EF31  F00C         	goto	l1164
  5257   0017FC                     l7190:
  5258                           
  5259                           ; BSR set to: 0
  5260   0017FC  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5261   001800  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5262   001804                     	if	0	;tblptru may be non-zero
  5263   001804                     	endif
  5264   001804                     	if	0	;tblptru may be non-zero
  5265   001804                     	endif
  5266   001804  0008               	tblrd		*
  5267   001806  50F5               	movf	tablat,w,c
  5268   001808  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5269   00180A  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5270                           
  5271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5272                           ; Switch size 1, requested type "simple"
  5273                           ; Number of cases is 1, Range of values is 0 to 0
  5274                           ; switch strategies available:
  5275                           ; Name         Instructions Cycles
  5276                           ; simple_byte            4     3 (average)
  5277                           ;	Chosen strategy is simple_byte
  5278   00180C  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5279   00180E  0A00               	xorlw	0	; case 0
  5280   001810  B4D8               	btfsc	status,2,c
  5281   001812  EF0D  F00C         	goto	l7864
  5282   001816  EF14  F00C         	goto	l7192
  5283   00181A                     l7864:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ; Switch size 1, requested type "simple"
  5287                           ; Number of cases is 1, Range of values is 102 to 102
  5288                           ; switch strategies available:
  5289                           ; Name         Instructions Cycles
  5290                           ; simple_byte            4     3 (average)
  5291                           ;	Chosen strategy is simple_byte
  5292   00181A  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5293   00181C  0A66               	xorlw	102	; case 102
  5294   00181E  B4D8               	btfsc	status,2,c
  5295   001820  EFE7  F00B         	goto	l7184
  5296   001824  EF14  F00C         	goto	l7192
  5297   001828                     l7192:
  5298                           
  5299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  5300   001828  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5301   00182C  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5302   001830  2ADE               	incf	postinc2,f,c
  5303   001832  0E00               	movlw	0
  5304   001834  22DD               	addwfc	postdec2,f,c
  5305   001836  EF31  F00C         	goto	l1164
  5306   00183A                     l7196:
  5307                           
  5308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  5309   00183A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5310   00183E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5311   001842  CFDE FFF6          	movff	postinc2,tblptrl
  5312   001846  CFDD FFF7          	movff	postdec2,tblptrh
  5313   00184A                     	if	0	;tblptru may be non-zero
  5314   00184A                     	endif
  5315   00184A                     	if	0	;tblptru may be non-zero
  5316   00184A                     	endif
  5317   00184A  0008               	tblrd		*
  5318   00184C  50F5               	movf	tablat,w,c
  5319   00184E  6E11               	movwf	fputc@c^0,c
  5320   001850  6A12               	clrf	(fputc@c+1)^0,c
  5321   001852  C0A3  F013         	movff	vfpfcnvrt@fp,fputc@fp
  5322   001856  C0A4  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5323   00185A  EC4C  F01E         	call	_fputc	;wreg free
  5324   00185E  EF14  F00C         	goto	l7192
  5325   001862                     l1164:
  5326   001862  0012               	return		;funcret
  5327   001864                     __end_of_vfpfcnvrt:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function _utoa *****************
  5331 ;; Defined at:
  5332 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  5335 ;;		 -> sprintf@f(11), 
  5336 ;;  d               8   45[COMRAM] unsigned long long 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  n               8    4[BANK0 ] unsigned long long 
  5339 ;;  i               2   12[BANK0 ] int 
  5340 ;;  w               2    2[BANK0 ] int 
  5341 ;;  p               2    0[BANK0 ] int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5351 ;;      Params:        10       0       0       0       0       0       0       0       0
  5352 ;;      Locals:         0      14       0       0       0       0       0       0       0
  5353 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5354 ;;      Totals:        18      14       0       0       0       0       0       0       0
  5355 ;;Total ram usage:       32 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 6
  5358 ;; This function calls:
  5359 ;;		___lodiv
  5360 ;;		___lomod
  5361 ;;		_pad
  5362 ;; This function is called by:
  5363 ;;		_vfpfcnvrt
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text15
  5368   003118                     __ptext15:
  5369                           	callstack 0
  5370   003118                     _utoa:
  5371                           	callstack 20
  5372   003118                     
  5373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  5374   003118  0100               	movlb	0	; () banked
  5375   00311A  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  5376   00311C  EF92  F018         	goto	u7651
  5377   003120  EF94  F018         	goto	u7650
  5378   003124                     u7651:
  5379   003124  EF95  F018         	goto	l7040
  5380   003128                     u7650:
  5381   003128                     
  5382                           ; BSR set to: 0
  5383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  5384   003128  93E0               	bcf	_flags& (0+255),1,b
  5385   00312A                     l7040:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  5389   00312A  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  5390   00312C  EFA2  F018         	goto	u7660
  5391   003130  51DF               	movf	(_prec+1)& (0+255),w,b
  5392   003132  E106               	bnz	u7661
  5393   003134  05DE               	decf	_prec& (0+255),w,b
  5394   003136  B0D8               	btfsc	status,0,c
  5395   003138  EFA0  F018         	goto	u7661
  5396   00313C  EFA2  F018         	goto	u7660
  5397   003140                     u7661:
  5398   003140  EFA8  F018         	goto	l1130
  5399   003144                     u7660:
  5400   003144                     
  5401                           ; BSR set to: 0
  5402   003144  0E00               	movlw	0
  5403   003146  6F61               	movwf	(utoa@p+1)& (0+255),b
  5404   003148  0E01               	movlw	1
  5405   00314A  6F60               	movwf	utoa@p& (0+255),b
  5406   00314C  EFAC  F018         	goto	l1132
  5407   003150                     l1130:
  5408                           
  5409                           ; BSR set to: 0
  5410   003150  C0DE  F060         	movff	_prec,utoa@p
  5411   003154  C0DF  F061         	movff	_prec+1,utoa@p+1
  5412   003158                     l1132:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  5416   003158  C0DC  F062         	movff	_width,utoa@w
  5417   00315C  C0DD  F063         	movff	_width+1,utoa@w+1
  5418                           
  5419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  5420   003160  C02E  F064         	movff	utoa@d,utoa@n
  5421   003164  C02F  F065         	movff	utoa@d+1,utoa@n+1
  5422   003168  C030  F066         	movff	utoa@d+2,utoa@n+2
  5423   00316C  C031  F067         	movff	utoa@d+3,utoa@n+3
  5424   003170  C032  F068         	movff	utoa@d+4,utoa@n+4
  5425   003174  C033  F069         	movff	utoa@d+5,utoa@n+5
  5426   003178  C034  F06A         	movff	utoa@d+6,utoa@n+6
  5427   00317C  C035  F06B         	movff	utoa@d+7,utoa@n+7
  5428   003180                     
  5429                           ; BSR set to: 0
  5430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  5431   003180  0E00               	movlw	0
  5432   003182  6F6D               	movwf	(utoa@i+1)& (0+255),b
  5433   003184  0E4F               	movlw	79
  5434   003186  6F6C               	movwf	utoa@i& (0+255),b
  5435   003188                     
  5436                           ; BSR set to: 0
  5437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  5438   003188  0E00               	movlw	0
  5439   00318A  0101               	movlb	1	; () banked
  5440   00318C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5443   00318E  EF40  F019         	goto	l7058
  5444   003192                     l7048:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  5448   003192  076C               	decf	utoa@i& (0+255),f,b
  5449   003194  A0D8               	btfss	status,0,c
  5450   003196  076D               	decf	(utoa@i+1)& (0+255),f,b
  5451   003198                     
  5452                           ; BSR set to: 0
  5453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  5454   003198  0E00               	movlw	low _dbuf
  5455   00319A  256C               	addwf	utoa@i& (0+255),w,b
  5456   00319C  6ED9               	movwf	fsr2l,c
  5457   00319E  0E01               	movlw	high _dbuf
  5458   0031A0  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5459   0031A2  6EDA               	movwf	fsr2h,c
  5460   0031A4  C064  F011         	movff	utoa@n,___lomod@dividend
  5461   0031A8  C065  F012         	movff	utoa@n+1,___lomod@dividend+1
  5462   0031AC  C066  F013         	movff	utoa@n+2,___lomod@dividend+2
  5463   0031B0  C067  F014         	movff	utoa@n+3,___lomod@dividend+3
  5464   0031B4  C068  F015         	movff	utoa@n+4,___lomod@dividend+4
  5465   0031B8  C069  F016         	movff	utoa@n+5,___lomod@dividend+5
  5466   0031BC  C06A  F017         	movff	utoa@n+6,___lomod@dividend+6
  5467   0031C0  C06B  F018         	movff	utoa@n+7,___lomod@dividend+7
  5468   0031C4  0E0A               	movlw	10
  5469   0031C6  6E19               	movwf	___lomod@divisor^0,c
  5470   0031C8  0E00               	movlw	0
  5471   0031CA  6E1A               	movwf	(___lomod@divisor+1)^0,c
  5472   0031CC  0E00               	movlw	0
  5473   0031CE  6E1B               	movwf	(___lomod@divisor+2)^0,c
  5474   0031D0  0E00               	movlw	0
  5475   0031D2  6E1C               	movwf	(___lomod@divisor+3)^0,c
  5476   0031D4  0E00               	movlw	0
  5477   0031D6  6E1D               	movwf	(___lomod@divisor+4)^0,c
  5478   0031D8  0E00               	movlw	0
  5479   0031DA  6E1E               	movwf	(___lomod@divisor+5)^0,c
  5480   0031DC  0E00               	movlw	0
  5481   0031DE  6E1F               	movwf	(___lomod@divisor+6)^0,c
  5482   0031E0  0E00               	movlw	0
  5483   0031E2  6E20               	movwf	(___lomod@divisor+7)^0,c
  5484   0031E4  ECE4  F01D         	call	___lomod	;wreg free
  5485   0031E8  C011  F036         	movff	?___lomod,??_utoa
  5486   0031EC  C012  F037         	movff	?___lomod+1,??_utoa+1
  5487   0031F0  C013  F038         	movff	?___lomod+2,??_utoa+2
  5488   0031F4  C014  F039         	movff	?___lomod+3,??_utoa+3
  5489   0031F8  C015  F03A         	movff	?___lomod+4,??_utoa+4
  5490   0031FC  C016  F03B         	movff	?___lomod+5,??_utoa+5
  5491   003200  C017  F03C         	movff	?___lomod+6,??_utoa+6
  5492   003204  C018  F03D         	movff	?___lomod+7,??_utoa+7
  5493   003208  5036               	movf	??_utoa^0,w,c
  5494   00320A  0F30               	addlw	48
  5495   00320C  6EDF               	movwf	indf2,c
  5496   00320E                     
  5497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  5498   00320E  0100               	movlb	0	; () banked
  5499   003210  0760               	decf	utoa@p& (0+255),f,b
  5500   003212  A0D8               	btfss	status,0,c
  5501   003214  0761               	decf	(utoa@p+1)& (0+255),f,b
  5502   003216                     
  5503                           ; BSR set to: 0
  5504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  5505   003216  0762               	decf	utoa@w& (0+255),f,b
  5506   003218  A0D8               	btfss	status,0,c
  5507   00321A  0763               	decf	(utoa@w+1)& (0+255),f,b
  5508   00321C                     
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  5511   00321C  C064  F011         	movff	utoa@n,___lodiv@dividend
  5512   003220  C065  F012         	movff	utoa@n+1,___lodiv@dividend+1
  5513   003224  C066  F013         	movff	utoa@n+2,___lodiv@dividend+2
  5514   003228  C067  F014         	movff	utoa@n+3,___lodiv@dividend+3
  5515   00322C  C068  F015         	movff	utoa@n+4,___lodiv@dividend+4
  5516   003230  C069  F016         	movff	utoa@n+5,___lodiv@dividend+5
  5517   003234  C06A  F017         	movff	utoa@n+6,___lodiv@dividend+6
  5518   003238  C06B  F018         	movff	utoa@n+7,___lodiv@dividend+7
  5519   00323C  0E0A               	movlw	10
  5520   00323E  6E19               	movwf	___lodiv@divisor^0,c
  5521   003240  0E00               	movlw	0
  5522   003242  6E1A               	movwf	(___lodiv@divisor+1)^0,c
  5523   003244  0E00               	movlw	0
  5524   003246  6E1B               	movwf	(___lodiv@divisor+2)^0,c
  5525   003248  0E00               	movlw	0
  5526   00324A  6E1C               	movwf	(___lodiv@divisor+3)^0,c
  5527   00324C  0E00               	movlw	0
  5528   00324E  6E1D               	movwf	(___lodiv@divisor+4)^0,c
  5529   003250  0E00               	movlw	0
  5530   003252  6E1E               	movwf	(___lodiv@divisor+5)^0,c
  5531   003254  0E00               	movlw	0
  5532   003256  6E1F               	movwf	(___lodiv@divisor+6)^0,c
  5533   003258  0E00               	movlw	0
  5534   00325A  6E20               	movwf	(___lodiv@divisor+7)^0,c
  5535   00325C  EC8E  F01C         	call	___lodiv	;wreg free
  5536   003260  C011  F064         	movff	?___lodiv,utoa@n
  5537   003264  C012  F065         	movff	?___lodiv+1,utoa@n+1
  5538   003268  C013  F066         	movff	?___lodiv+2,utoa@n+2
  5539   00326C  C014  F067         	movff	?___lodiv+3,utoa@n+3
  5540   003270  C015  F068         	movff	?___lodiv+4,utoa@n+4
  5541   003274  C016  F069         	movff	?___lodiv+5,utoa@n+5
  5542   003278  C017  F06A         	movff	?___lodiv+6,utoa@n+6
  5543   00327C  C018  F06B         	movff	?___lodiv+7,utoa@n+7
  5544   003280                     l7058:
  5545                           
  5546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5547   003280  0100               	movlb	0	; () banked
  5548   003282  516C               	movf	utoa@i& (0+255),w,b
  5549   003284  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  5550   003286  B4D8               	btfsc	status,2,c
  5551   003288  EF48  F019         	goto	u7671
  5552   00328C  EF4A  F019         	goto	u7670
  5553   003290                     u7671:
  5554   003290  EF7A  F019         	goto	l7068
  5555   003294                     u7670:
  5556   003294                     
  5557                           ; BSR set to: 0
  5558   003294  5164               	movf	utoa@n& (0+255),w,b
  5559   003296  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  5560   003298  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  5561   00329A  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  5562   00329C  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  5563   00329E  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  5564   0032A0  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  5565   0032A2  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  5566   0032A4  A4D8               	btfss	status,2,c
  5567   0032A6  EF57  F019         	goto	u7681
  5568   0032AA  EF59  F019         	goto	u7680
  5569   0032AE                     u7681:
  5570   0032AE  EFC9  F018         	goto	l7048
  5571   0032B2                     u7680:
  5572   0032B2                     
  5573                           ; BSR set to: 0
  5574   0032B2  BF61               	btfsc	(utoa@p+1)& (0+255),7,b
  5575   0032B4  EF66  F019         	goto	u7690
  5576   0032B8  5161               	movf	(utoa@p+1)& (0+255),w,b
  5577   0032BA  E106               	bnz	u7691
  5578   0032BC  0560               	decf	utoa@p& (0+255),w,b
  5579   0032BE  B0D8               	btfsc	status,0,c
  5580   0032C0  EF64  F019         	goto	u7691
  5581   0032C4  EF66  F019         	goto	u7690
  5582   0032C8                     u7691:
  5583   0032C8  EFC9  F018         	goto	l7048
  5584   0032CC                     u7690:
  5585   0032CC                     
  5586                           ; BSR set to: 0
  5587   0032CC  BF63               	btfsc	(utoa@w+1)& (0+255),7,b
  5588   0032CE  EF71  F019         	goto	u7701
  5589   0032D2  5163               	movf	(utoa@w+1)& (0+255),w,b
  5590   0032D4  E108               	bnz	u7700
  5591   0032D6  0562               	decf	utoa@w& (0+255),w,b
  5592   0032D8  A0D8               	btfss	status,0,c
  5593   0032DA  EF71  F019         	goto	u7701
  5594   0032DE  EF73  F019         	goto	u7700
  5595   0032E2                     u7701:
  5596   0032E2  EF7A  F019         	goto	l7068
  5597   0032E6                     u7700:
  5598   0032E6                     
  5599                           ; BSR set to: 0
  5600   0032E6  B3E0               	btfsc	_flags& (0+255),1,b
  5601   0032E8  EF78  F019         	goto	u7711
  5602   0032EC  EF7A  F019         	goto	u7710
  5603   0032F0                     u7711:
  5604   0032F0  EFC9  F018         	goto	l7048
  5605   0032F4                     u7710:
  5606   0032F4                     l7068:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5610   0032F4  C02C  F021         	movff	utoa@fp,pad@fp
  5611   0032F8  C02D  F022         	movff	utoa@fp+1,pad@fp+1
  5612   0032FC  0E00               	movlw	low _dbuf
  5613   0032FE  256C               	addwf	utoa@i& (0+255),w,b
  5614   003300  6E23               	movwf	pad@buf^0,c
  5615   003302  0E01               	movlw	high _dbuf
  5616   003304  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5617   003306  6E24               	movwf	(pad@buf+1)^0,c
  5618   003308  C062  F025         	movff	utoa@w,pad@p
  5619   00330C  C063  F026         	movff	utoa@w+1,pad@p+1
  5620   003310  EC85  F01F         	call	_pad	;wreg free
  5621   003314  0012               	return		;funcret
  5622   003316                     __end_of_utoa:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function ___lomod *****************
  5626 ;; Defined at:
  5627 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  dividend        8   16[COMRAM] unsigned long long 
  5630 ;;  divisor         8   24[COMRAM] unsigned long long 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  counter         1   32[COMRAM] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  8   16[COMRAM] unsigned long long 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5642 ;;      Params:        16       0       0       0       0       0       0       0       0
  5643 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5645 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5646 ;;Total ram usage:       17 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 2
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_utoa
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text16
  5657   003BC8                     __ptext16:
  5658                           	callstack 0
  5659   003BC8                     ___lomod:
  5660                           	callstack 23
  5661   003BC8  5019               	movf	___lomod@divisor^0,w,c
  5662   003BCA  101A               	iorwf	(___lomod@divisor+1)^0,w,c
  5663   003BCC  101B               	iorwf	(___lomod@divisor+2)^0,w,c
  5664   003BCE  101C               	iorwf	(___lomod@divisor+3)^0,w,c
  5665   003BD0  101D               	iorwf	(___lomod@divisor+4)^0,w,c
  5666   003BD2  101E               	iorwf	(___lomod@divisor+5)^0,w,c
  5667   003BD4  101F               	iorwf	(___lomod@divisor+6)^0,w,c
  5668   003BD6  1020               	iorwf	(___lomod@divisor+7)^0,w,c
  5669   003BD8  B4D8               	btfsc	status,2,c
  5670   003BDA  EFF1  F01D         	goto	u7011
  5671   003BDE  EFF3  F01D         	goto	u7010
  5672   003BE2                     u7011:
  5673   003BE2  EF3B  F01E         	goto	l799
  5674   003BE6                     u7010:
  5675   003BE6  0E01               	movlw	1
  5676   003BE8  6E21               	movwf	___lomod@counter^0,c
  5677   003BEA  EF01  F01E         	goto	l6692
  5678   003BEE                     l6690:
  5679   003BEE  90D8               	bcf	status,0,c
  5680   003BF0  3619               	rlcf	___lomod@divisor^0,f,c
  5681   003BF2  361A               	rlcf	(___lomod@divisor+1)^0,f,c
  5682   003BF4  361B               	rlcf	(___lomod@divisor+2)^0,f,c
  5683   003BF6  361C               	rlcf	(___lomod@divisor+3)^0,f,c
  5684   003BF8  361D               	rlcf	(___lomod@divisor+4)^0,f,c
  5685   003BFA  361E               	rlcf	(___lomod@divisor+5)^0,f,c
  5686   003BFC  361F               	rlcf	(___lomod@divisor+6)^0,f,c
  5687   003BFE  3620               	rlcf	(___lomod@divisor+7)^0,f,c
  5688   003C00  2A21               	incf	___lomod@counter^0,f,c
  5689   003C02                     l6692:
  5690   003C02  AE20               	btfss	(___lomod@divisor+7)^0,7,c
  5691   003C04  EF06  F01E         	goto	u7021
  5692   003C08  EF08  F01E         	goto	u7020
  5693   003C0C                     u7021:
  5694   003C0C  EFF7  F01D         	goto	l6690
  5695   003C10                     u7020:
  5696   003C10                     l6694:
  5697   003C10  5019               	movf	___lomod@divisor^0,w,c
  5698   003C12  5C11               	subwf	___lomod@dividend^0,w,c
  5699   003C14  501A               	movf	(___lomod@divisor+1)^0,w,c
  5700   003C16  5812               	subwfb	(___lomod@dividend+1)^0,w,c
  5701   003C18  501B               	movf	(___lomod@divisor+2)^0,w,c
  5702   003C1A  5813               	subwfb	(___lomod@dividend+2)^0,w,c
  5703   003C1C  501C               	movf	(___lomod@divisor+3)^0,w,c
  5704   003C1E  5814               	subwfb	(___lomod@dividend+3)^0,w,c
  5705   003C20  501D               	movf	(___lomod@divisor+4)^0,w,c
  5706   003C22  5815               	subwfb	(___lomod@dividend+4)^0,w,c
  5707   003C24  501E               	movf	(___lomod@divisor+5)^0,w,c
  5708   003C26  5816               	subwfb	(___lomod@dividend+5)^0,w,c
  5709   003C28  501F               	movf	(___lomod@divisor+6)^0,w,c
  5710   003C2A  5817               	subwfb	(___lomod@dividend+6)^0,w,c
  5711   003C2C  5020               	movf	(___lomod@divisor+7)^0,w,c
  5712   003C2E  5818               	subwfb	(___lomod@dividend+7)^0,w,c
  5713   003C30  A0D8               	btfss	status,0,c
  5714   003C32  EF1D  F01E         	goto	u7031
  5715   003C36  EF1F  F01E         	goto	u7030
  5716   003C3A                     u7031:
  5717   003C3A  EF2F  F01E         	goto	l6698
  5718   003C3E                     u7030:
  5719   003C3E  5019               	movf	___lomod@divisor^0,w,c
  5720   003C40  5E11               	subwf	___lomod@dividend^0,f,c
  5721   003C42  501A               	movf	(___lomod@divisor+1)^0,w,c
  5722   003C44  5A12               	subwfb	(___lomod@dividend+1)^0,f,c
  5723   003C46  501B               	movf	(___lomod@divisor+2)^0,w,c
  5724   003C48  5A13               	subwfb	(___lomod@dividend+2)^0,f,c
  5725   003C4A  501C               	movf	(___lomod@divisor+3)^0,w,c
  5726   003C4C  5A14               	subwfb	(___lomod@dividend+3)^0,f,c
  5727   003C4E  501D               	movf	(___lomod@divisor+4)^0,w,c
  5728   003C50  5A15               	subwfb	(___lomod@dividend+4)^0,f,c
  5729   003C52  501E               	movf	(___lomod@divisor+5)^0,w,c
  5730   003C54  5A16               	subwfb	(___lomod@dividend+5)^0,f,c
  5731   003C56  501F               	movf	(___lomod@divisor+6)^0,w,c
  5732   003C58  5A17               	subwfb	(___lomod@dividend+6)^0,f,c
  5733   003C5A  5020               	movf	(___lomod@divisor+7)^0,w,c
  5734   003C5C  5A18               	subwfb	(___lomod@dividend+7)^0,f,c
  5735   003C5E                     l6698:
  5736   003C5E  90D8               	bcf	status,0,c
  5737   003C60  3220               	rrcf	(___lomod@divisor+7)^0,f,c
  5738   003C62  321F               	rrcf	(___lomod@divisor+6)^0,f,c
  5739   003C64  321E               	rrcf	(___lomod@divisor+5)^0,f,c
  5740   003C66  321D               	rrcf	(___lomod@divisor+4)^0,f,c
  5741   003C68  321C               	rrcf	(___lomod@divisor+3)^0,f,c
  5742   003C6A  321B               	rrcf	(___lomod@divisor+2)^0,f,c
  5743   003C6C  321A               	rrcf	(___lomod@divisor+1)^0,f,c
  5744   003C6E  3219               	rrcf	___lomod@divisor^0,f,c
  5745   003C70  2E21               	decfsz	___lomod@counter^0,f,c
  5746   003C72  EF08  F01E         	goto	l6694
  5747   003C76                     l799:
  5748   003C76  C011  F011         	movff	___lomod@dividend,?___lomod
  5749   003C7A  C012  F012         	movff	___lomod@dividend+1,?___lomod+1
  5750   003C7E  C013  F013         	movff	___lomod@dividend+2,?___lomod+2
  5751   003C82  C014  F014         	movff	___lomod@dividend+3,?___lomod+3
  5752   003C86  C015  F015         	movff	___lomod@dividend+4,?___lomod+4
  5753   003C8A  C016  F016         	movff	___lomod@dividend+5,?___lomod+5
  5754   003C8E  C017  F017         	movff	___lomod@dividend+6,?___lomod+6
  5755   003C92  C018  F018         	movff	___lomod@dividend+7,?___lomod+7
  5756   003C96  0012               	return		;funcret
  5757   003C98                     __end_of___lomod:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function ___lodiv *****************
  5761 ;; Defined at:
  5762 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  dividend        8   16[COMRAM] unsigned long long 
  5765 ;;  divisor         8   24[COMRAM] unsigned long long 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  quotient        8   32[COMRAM] unsigned long long 
  5768 ;;  counter         1   40[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  8   16[COMRAM] unsigned long long 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:        16       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:       25 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 2
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_utoa
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text17
  5793   00391C                     __ptext17:
  5794                           	callstack 0
  5795   00391C                     ___lodiv:
  5796                           	callstack 23
  5797   00391C  EE20  F021         	lfsr	2,___lodiv@quotient
  5798   003920  0E07               	movlw	7
  5799   003922                     u6971:
  5800   003922  6ADE               	clrf	postinc2,c
  5801   003924  06E8               	decf	wreg,f,c
  5802   003926  E2FD               	bc	u6971
  5803   003928  5019               	movf	___lodiv@divisor^0,w,c
  5804   00392A  101A               	iorwf	(___lodiv@divisor+1)^0,w,c
  5805   00392C  101B               	iorwf	(___lodiv@divisor+2)^0,w,c
  5806   00392E  101C               	iorwf	(___lodiv@divisor+3)^0,w,c
  5807   003930  101D               	iorwf	(___lodiv@divisor+4)^0,w,c
  5808   003932  101E               	iorwf	(___lodiv@divisor+5)^0,w,c
  5809   003934  101F               	iorwf	(___lodiv@divisor+6)^0,w,c
  5810   003936  1020               	iorwf	(___lodiv@divisor+7)^0,w,c
  5811   003938  B4D8               	btfsc	status,2,c
  5812   00393A  EFA1  F01C         	goto	u6981
  5813   00393E  EFA3  F01C         	goto	u6980
  5814   003942                     u6981:
  5815   003942  EFF5  F01C         	goto	l789
  5816   003946                     u6980:
  5817   003946  0E01               	movlw	1
  5818   003948  6E29               	movwf	___lodiv@counter^0,c
  5819   00394A  EFB1  F01C         	goto	l6672
  5820   00394E                     l6670:
  5821   00394E  90D8               	bcf	status,0,c
  5822   003950  3619               	rlcf	___lodiv@divisor^0,f,c
  5823   003952  361A               	rlcf	(___lodiv@divisor+1)^0,f,c
  5824   003954  361B               	rlcf	(___lodiv@divisor+2)^0,f,c
  5825   003956  361C               	rlcf	(___lodiv@divisor+3)^0,f,c
  5826   003958  361D               	rlcf	(___lodiv@divisor+4)^0,f,c
  5827   00395A  361E               	rlcf	(___lodiv@divisor+5)^0,f,c
  5828   00395C  361F               	rlcf	(___lodiv@divisor+6)^0,f,c
  5829   00395E  3620               	rlcf	(___lodiv@divisor+7)^0,f,c
  5830   003960  2A29               	incf	___lodiv@counter^0,f,c
  5831   003962                     l6672:
  5832   003962  AE20               	btfss	(___lodiv@divisor+7)^0,7,c
  5833   003964  EFB6  F01C         	goto	u6991
  5834   003968  EFB8  F01C         	goto	u6990
  5835   00396C                     u6991:
  5836   00396C  EFA7  F01C         	goto	l6670
  5837   003970                     u6990:
  5838   003970                     l6674:
  5839   003970  90D8               	bcf	status,0,c
  5840   003972  3621               	rlcf	___lodiv@quotient^0,f,c
  5841   003974  3622               	rlcf	(___lodiv@quotient+1)^0,f,c
  5842   003976  3623               	rlcf	(___lodiv@quotient+2)^0,f,c
  5843   003978  3624               	rlcf	(___lodiv@quotient+3)^0,f,c
  5844   00397A  3625               	rlcf	(___lodiv@quotient+4)^0,f,c
  5845   00397C  3626               	rlcf	(___lodiv@quotient+5)^0,f,c
  5846   00397E  3627               	rlcf	(___lodiv@quotient+6)^0,f,c
  5847   003980  3628               	rlcf	(___lodiv@quotient+7)^0,f,c
  5848   003982  5019               	movf	___lodiv@divisor^0,w,c
  5849   003984  5C11               	subwf	___lodiv@dividend^0,w,c
  5850   003986  501A               	movf	(___lodiv@divisor+1)^0,w,c
  5851   003988  5812               	subwfb	(___lodiv@dividend+1)^0,w,c
  5852   00398A  501B               	movf	(___lodiv@divisor+2)^0,w,c
  5853   00398C  5813               	subwfb	(___lodiv@dividend+2)^0,w,c
  5854   00398E  501C               	movf	(___lodiv@divisor+3)^0,w,c
  5855   003990  5814               	subwfb	(___lodiv@dividend+3)^0,w,c
  5856   003992  501D               	movf	(___lodiv@divisor+4)^0,w,c
  5857   003994  5815               	subwfb	(___lodiv@dividend+4)^0,w,c
  5858   003996  501E               	movf	(___lodiv@divisor+5)^0,w,c
  5859   003998  5816               	subwfb	(___lodiv@dividend+5)^0,w,c
  5860   00399A  501F               	movf	(___lodiv@divisor+6)^0,w,c
  5861   00399C  5817               	subwfb	(___lodiv@dividend+6)^0,w,c
  5862   00399E  5020               	movf	(___lodiv@divisor+7)^0,w,c
  5863   0039A0  5818               	subwfb	(___lodiv@dividend+7)^0,w,c
  5864   0039A2  A0D8               	btfss	status,0,c
  5865   0039A4  EFD6  F01C         	goto	u7001
  5866   0039A8  EFD8  F01C         	goto	u7000
  5867   0039AC                     u7001:
  5868   0039AC  EFE9  F01C         	goto	l6682
  5869   0039B0                     u7000:
  5870   0039B0  5019               	movf	___lodiv@divisor^0,w,c
  5871   0039B2  5E11               	subwf	___lodiv@dividend^0,f,c
  5872   0039B4  501A               	movf	(___lodiv@divisor+1)^0,w,c
  5873   0039B6  5A12               	subwfb	(___lodiv@dividend+1)^0,f,c
  5874   0039B8  501B               	movf	(___lodiv@divisor+2)^0,w,c
  5875   0039BA  5A13               	subwfb	(___lodiv@dividend+2)^0,f,c
  5876   0039BC  501C               	movf	(___lodiv@divisor+3)^0,w,c
  5877   0039BE  5A14               	subwfb	(___lodiv@dividend+3)^0,f,c
  5878   0039C0  501D               	movf	(___lodiv@divisor+4)^0,w,c
  5879   0039C2  5A15               	subwfb	(___lodiv@dividend+4)^0,f,c
  5880   0039C4  501E               	movf	(___lodiv@divisor+5)^0,w,c
  5881   0039C6  5A16               	subwfb	(___lodiv@dividend+5)^0,f,c
  5882   0039C8  501F               	movf	(___lodiv@divisor+6)^0,w,c
  5883   0039CA  5A17               	subwfb	(___lodiv@dividend+6)^0,f,c
  5884   0039CC  5020               	movf	(___lodiv@divisor+7)^0,w,c
  5885   0039CE  5A18               	subwfb	(___lodiv@dividend+7)^0,f,c
  5886   0039D0  8021               	bsf	___lodiv@quotient^0,0,c
  5887   0039D2                     l6682:
  5888   0039D2  90D8               	bcf	status,0,c
  5889   0039D4  3220               	rrcf	(___lodiv@divisor+7)^0,f,c
  5890   0039D6  321F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5891   0039D8  321E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5892   0039DA  321D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5893   0039DC  321C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5894   0039DE  321B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5895   0039E0  321A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5896   0039E2  3219               	rrcf	___lodiv@divisor^0,f,c
  5897   0039E4  2E29               	decfsz	___lodiv@counter^0,f,c
  5898   0039E6  EFB8  F01C         	goto	l6674
  5899   0039EA                     l789:
  5900   0039EA  C021  F011         	movff	___lodiv@quotient,?___lodiv
  5901   0039EE  C022  F012         	movff	___lodiv@quotient+1,?___lodiv+1
  5902   0039F2  C023  F013         	movff	___lodiv@quotient+2,?___lodiv+2
  5903   0039F6  C024  F014         	movff	___lodiv@quotient+3,?___lodiv+3
  5904   0039FA  C025  F015         	movff	___lodiv@quotient+4,?___lodiv+4
  5905   0039FE  C026  F016         	movff	___lodiv@quotient+5,?___lodiv+5
  5906   003A02  C027  F017         	movff	___lodiv@quotient+6,?___lodiv+6
  5907   003A06  C028  F018         	movff	___lodiv@quotient+7,?___lodiv+7
  5908   003A0A  0012               	return		;funcret
  5909   003A0C                     __end_of___lodiv:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _efgtoa *****************
  5913 ;; Defined at:
  5914 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5917 ;;		 -> sprintf@f(11), 
  5918 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  5919 ;;  c               1   22[BANK0 ] unsigned char 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  u               4   63[BANK0 ] struct flui
  5922 ;;  g               4   57[BANK0 ] struct flui
  5923 ;;  l               4   50[BANK0 ] struct flui
  5924 ;;  h               4   46[BANK0 ] struct flui
  5925 ;;  ou              4   40[BANK0 ] struct flui
  5926 ;;  n               2   61[BANK0 ] int 
  5927 ;;  i               2   54[BANK0 ] int 
  5928 ;;  w               2   44[BANK0 ] int 
  5929 ;;  e               2   38[BANK0 ] int 
  5930 ;;  m               2   36[BANK0 ] int 
  5931 ;;  d               2   34[BANK0 ] int 
  5932 ;;  t               2   27[BANK0 ] int 
  5933 ;;  p               2   25[BANK0 ] int 
  5934 ;;  ne              2   23[BANK0 ] int 
  5935 ;;  sign            1   56[BANK0 ] unsigned char 
  5936 ;;  nmode           1   33[BANK0 ] unsigned char 
  5937 ;;  mode            1   32[BANK0 ] unsigned char 
  5938 ;;  pp              1   31[BANK0 ] unsigned char 
  5939 ;;  esign           1    0        unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5949 ;;      Params:         0       7       0       0       0       0       0       0       0
  5950 ;;      Locals:         0      44       0       0       0       0       0       0       0
  5951 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5952 ;;      Totals:         2      51       0       0       0       0       0       0       0
  5953 ;;Total ram usage:       53 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 6
  5956 ;; This function calls:
  5957 ;;		___fladd
  5958 ;;		___fldiv
  5959 ;;		___fleq
  5960 ;;		___flge
  5961 ;;		___flmul
  5962 ;;		___flneg
  5963 ;;		___flsub
  5964 ;;		___fltol
  5965 ;;		___fpclassifyf
  5966 ;;		_floorf
  5967 ;;		_labs
  5968 ;;		_memcpy
  5969 ;;		_pad
  5970 ;;		_strcpy
  5971 ;; This function is called by:
  5972 ;;		_vfpfcnvrt
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text18
  5977   000012                     __ptext18:
  5978                           	callstack 0
  5979   000012                     _efgtoa:
  5980                           	callstack 20
  5981   000012                     
  5982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  5983   000012  0E00               	movlw	0
  5984   000014  0100               	movlb	0	; () banked
  5985   000016  6F98               	movwf	efgtoa@sign& (0+255),b
  5986   000018                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  5989   000018  C072  F099         	movff	efgtoa@f,efgtoa@g
  5990   00001C  C073  F09A         	movff	efgtoa@f+1,efgtoa@g+1
  5991   000020  C074  F09B         	movff	efgtoa@f+2,efgtoa@g+2
  5992   000024  C075  F09C         	movff	efgtoa@f+3,efgtoa@g+3
  5993   000028                     
  5994                           ; BSR set to: 0
  5995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  5996   000028  BF9C               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5997   00002A  EF1B  F000         	goto	u7300
  5998   00002E  EF19  F000         	goto	u7301
  5999   000032                     u7301:
  6000   000032  EF2F  F000         	goto	l6812
  6001   000036                     u7300:
  6002   000036                     
  6003                           ; BSR set to: 0
  6004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  6005   000036  0E01               	movlw	1
  6006   000038  6F98               	movwf	efgtoa@sign& (0+255),b
  6007   00003A                     
  6008                           ; BSR set to: 0
  6009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  6010   00003A  C099  F011         	movff	efgtoa@g,___flneg@f1
  6011   00003E  C09A  F012         	movff	efgtoa@g+1,___flneg@f1+1
  6012   000042  C09B  F013         	movff	efgtoa@g+2,___flneg@f1+2
  6013   000046  C09C  F014         	movff	efgtoa@g+3,___flneg@f1+3
  6014   00004A  EC78  F021         	call	___flneg	;wreg free
  6015   00004E  C011  F099         	movff	?___flneg,efgtoa@g
  6016   000052  C012  F09A         	movff	?___flneg+1,efgtoa@g+1
  6017   000056  C013  F09B         	movff	?___flneg+2,efgtoa@g+2
  6018   00005A  C014  F09C         	movff	?___flneg+3,efgtoa@g+3
  6019   00005E                     l6812:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  6022   00005E  0E00               	movlw	0
  6023   000060  0100               	movlb	0	; () banked
  6024   000062  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  6025   000064  0E00               	movlw	0
  6026   000066  6F9D               	movwf	efgtoa@n& (0+255),b
  6027   000068                     
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  6030   000068  C0DC  F08C         	movff	_width,efgtoa@w
  6031   00006C  C0DD  F08D         	movff	_width+1,efgtoa@w+1
  6032   000070                     
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  6035   000070  5198               	movf	efgtoa@sign& (0+255),w,b
  6036   000072  B4D8               	btfsc	status,2,c
  6037   000074  EF3E  F000         	goto	u7311
  6038   000078  EF40  F000         	goto	u7310
  6039   00007C                     u7311:
  6040   00007C  EF54  F000         	goto	l6826
  6041   000080                     u7310:
  6042   000080                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  6045   000080  5198               	movf	efgtoa@sign& (0+255),w,b
  6046   000082  A4D8               	btfss	status,2,c
  6047   000084  EF46  F000         	goto	u7321
  6048   000088  EF48  F000         	goto	u7320
  6049   00008C                     u7321:
  6050   00008C  EF4E  F000         	goto	l6822
  6051   000090                     u7320:
  6052   000090                     
  6053                           ; BSR set to: 0
  6054   000090  0E00               	movlw	0
  6055   000092  6F7E               	movwf	(_efgtoa$1502+1)& (0+255),b
  6056   000094  0E2B               	movlw	43
  6057   000096  6F7D               	movwf	_efgtoa$1502& (0+255),b
  6058   000098  EF52  F000         	goto	l6824
  6059   00009C                     l6822:
  6060                           
  6061                           ; BSR set to: 0
  6062   00009C  0E00               	movlw	0
  6063   00009E  6F7E               	movwf	(_efgtoa$1502+1)& (0+255),b
  6064   0000A0  0E2D               	movlw	45
  6065   0000A2  6F7D               	movwf	_efgtoa$1502& (0+255),b
  6066   0000A4                     l6824:
  6067                           
  6068                           ; BSR set to: 0
  6069   0000A4  C07D  F098         	movff	_efgtoa$1502,efgtoa@sign
  6070   0000A8                     l6826:
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6074   0000A8  C099  F011         	movff	efgtoa@g,___fpclassifyf@x
  6075   0000AC  C09A  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6076   0000B0  C09B  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6077   0000B4  C09C  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6078   0000B8  EC0F  F01C         	call	___fpclassifyf	;wreg free
  6079   0000BC  0411               	decf	?___fpclassifyf^0,w,c
  6080   0000BE  1012               	iorwf	(?___fpclassifyf+1)^0,w,c
  6081   0000C0  A4D8               	btfss	status,2,c
  6082   0000C2  EF65  F000         	goto	u7331
  6083   0000C6  EF67  F000         	goto	u7330
  6084   0000CA                     u7331:
  6085   0000CA  EF9A  F000         	goto	l6844
  6086   0000CE                     u7330:
  6087   0000CE                     
  6088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  6089   0000CE  0100               	movlb	0	; () banked
  6090   0000D0  5198               	movf	efgtoa@sign& (0+255),w,b
  6091   0000D2  B4D8               	btfsc	status,2,c
  6092   0000D4  EF6E  F000         	goto	u7341
  6093   0000D8  EF70  F000         	goto	u7340
  6094   0000DC                     u7341:
  6095   0000DC  EF79  F000         	goto	l6836
  6096   0000E0                     u7340:
  6097   0000E0                     
  6098                           ; BSR set to: 0
  6099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  6100   0000E0  C098  F100         	movff	efgtoa@sign,_dbuf
  6101   0000E4                     
  6102                           ; BSR set to: 0
  6103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  6104   0000E4  078C               	decf	efgtoa@w& (0+255),f,b
  6105   0000E6  A0D8               	btfss	status,0,c
  6106   0000E8  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6107   0000EA                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  6110   0000EA  0E00               	movlw	0
  6111   0000EC  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  6112   0000EE  0E01               	movlw	1
  6113   0000F0  6F9D               	movwf	efgtoa@n& (0+255),b
  6114   0000F2                     l6836:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  6118   0000F2  0E00               	movlw	low _dbuf
  6119   0000F4  259D               	addwf	efgtoa@n& (0+255),w,b
  6120   0000F6  6E11               	movwf	strcpy@dest^0,c
  6121   0000F8  0E01               	movlw	high _dbuf
  6122   0000FA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6123   0000FC  6E12               	movwf	(strcpy@dest+1)^0,c
  6124   0000FE  0EF3               	movlw	low STR_33
  6125   000100  6E13               	movwf	strcpy@src^0,c
  6126   000102  0E7F               	movlw	high STR_33
  6127   000104  6E14               	movwf	(strcpy@src+1)^0,c
  6128   000106  EC58  F021         	call	_strcpy	;wreg free
  6129   00010A                     l6838:
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6132   00010A  0100               	movlb	0	; () banked
  6133   00010C  0EFD               	movlw	253
  6134   00010E  278C               	addwf	efgtoa@w& (0+255),f,b
  6135   000110  0EFF               	movlw	255
  6136   000112  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6137   000114                     
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6140   000114  C070  F021         	movff	efgtoa@fp,pad@fp
  6141   000118  C071  F022         	movff	efgtoa@fp+1,pad@fp+1
  6142   00011C  0E00               	movlw	low _dbuf
  6143   00011E  6E23               	movwf	pad@buf^0,c
  6144   000120  0E01               	movlw	high _dbuf
  6145   000122  6E24               	movwf	(pad@buf+1)^0,c
  6146   000124  C08C  F025         	movff	efgtoa@w,pad@p
  6147   000128  C08D  F026         	movff	efgtoa@w+1,pad@p+1
  6148   00012C  EC85  F01F         	call	_pad	;wreg free
  6149   000130  EF3A  F005         	goto	l1078
  6150   000134                     l6844:
  6151                           
  6152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6153   000134  C099  F011         	movff	efgtoa@g,___fpclassifyf@x
  6154   000138  C09A  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6155   00013C  C09B  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6156   000140  C09C  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6157   000144  EC0F  F01C         	call	___fpclassifyf	;wreg free
  6158   000148  5011               	movf	?___fpclassifyf^0,w,c
  6159   00014A  1012               	iorwf	(?___fpclassifyf+1)^0,w,c
  6160   00014C  A4D8               	btfss	status,2,c
  6161   00014E  EFAB  F000         	goto	u7351
  6162   000152  EFAD  F000         	goto	u7350
  6163   000156                     u7351:
  6164   000156  EFCD  F000         	goto	l6862
  6165   00015A                     u7350:
  6166   00015A                     
  6167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  6168   00015A  0100               	movlb	0	; () banked
  6169   00015C  5198               	movf	efgtoa@sign& (0+255),w,b
  6170   00015E  B4D8               	btfsc	status,2,c
  6171   000160  EFB4  F000         	goto	u7361
  6172   000164  EFB6  F000         	goto	u7360
  6173   000168                     u7361:
  6174   000168  EFBF  F000         	goto	l6854
  6175   00016C                     u7360:
  6176   00016C                     
  6177                           ; BSR set to: 0
  6178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  6179   00016C  C098  F100         	movff	efgtoa@sign,_dbuf
  6180   000170                     
  6181                           ; BSR set to: 0
  6182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  6183   000170  078C               	decf	efgtoa@w& (0+255),f,b
  6184   000172  A0D8               	btfss	status,0,c
  6185   000174  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6186   000176                     
  6187                           ; BSR set to: 0
  6188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  6189   000176  0E00               	movlw	0
  6190   000178  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  6191   00017A  0E01               	movlw	1
  6192   00017C  6F9D               	movwf	efgtoa@n& (0+255),b
  6193   00017E                     l6854:
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  6197   00017E  0E00               	movlw	low _dbuf
  6198   000180  259D               	addwf	efgtoa@n& (0+255),w,b
  6199   000182  6E11               	movwf	strcpy@dest^0,c
  6200   000184  0E01               	movlw	high _dbuf
  6201   000186  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6202   000188  6E12               	movwf	(strcpy@dest+1)^0,c
  6203   00018A  0EF7               	movlw	low STR_36
  6204   00018C  6E13               	movwf	strcpy@src^0,c
  6205   00018E  0E7F               	movlw	high STR_36
  6206   000190  6E14               	movwf	(strcpy@src+1)^0,c
  6207   000192  EC58  F021         	call	_strcpy	;wreg free
  6208   000196  EF85  F000         	goto	l6838
  6209   00019A                     l6862:
  6210                           
  6211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  6212   00019A  0E00               	movlw	0
  6213   00019C  0100               	movlb	0	; () banked
  6214   00019E  6F9F               	movwf	efgtoa@u& (0+255),b
  6215   0001A0  0E00               	movlw	0
  6216   0001A2  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6217   0001A4  0E80               	movlw	128
  6218   0001A6  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6219   0001A8  0E3F               	movlw	63
  6220   0001AA  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6221                           
  6222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  6223   0001AC  0E00               	movlw	0
  6224   0001AE  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  6225   0001B0  0E00               	movlw	0
  6226   0001B2  6F86               	movwf	efgtoa@e& (0+255),b
  6227   0001B4                     
  6228                           ; BSR set to: 0
  6229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  6230   0001B4  C099  F011         	movff	efgtoa@g,___fleq@ff1
  6231   0001B8  C09A  F012         	movff	efgtoa@g+1,___fleq@ff1+1
  6232   0001BC  C09B  F013         	movff	efgtoa@g+2,___fleq@ff1+2
  6233   0001C0  C09C  F014         	movff	efgtoa@g+3,___fleq@ff1+3
  6234   0001C4  0E00               	movlw	0
  6235   0001C6  6E15               	movwf	___fleq@ff2^0,c
  6236   0001C8  0E00               	movlw	0
  6237   0001CA  6E16               	movwf	(___fleq@ff2+1)^0,c
  6238   0001CC  0E00               	movlw	0
  6239   0001CE  6E17               	movwf	(___fleq@ff2+2)^0,c
  6240   0001D0  0E00               	movlw	0
  6241   0001D2  6E18               	movwf	(___fleq@ff2+3)^0,c
  6242   0001D4  ECB1  F01E         	call	___fleq	;wreg free
  6243   0001D8  B0D8               	btfsc	status,0,c
  6244   0001DA  EFF1  F000         	goto	u7371
  6245   0001DE  EFF3  F000         	goto	u7370
  6246   0001E2                     u7371:
  6247   0001E2  EFD2  F001         	goto	l1081
  6248   0001E6                     u7370:
  6249   0001E6  EF00  F001         	goto	l6870
  6250   0001EA                     l1083:
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  6253   0001EA  C088  F09F         	movff	efgtoa@ou,efgtoa@u
  6254   0001EE  C089  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  6255   0001F2  C08A  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  6256   0001F6  C08B  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  6257   0001FA                     
  6258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  6259   0001FA  0100               	movlb	0	; () banked
  6260   0001FC  4B86               	infsnz	efgtoa@e& (0+255),f,b
  6261   0001FE  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  6262   000200                     l6870:
  6263                           
  6264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6265   000200  C09F  F011         	movff	efgtoa@u,___flmul@b
  6266   000204  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  6267   000208  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  6268   00020C  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  6269   000210  0E00               	movlw	0
  6270   000212  6E15               	movwf	___flmul@a^0,c
  6271   000214  0E00               	movlw	0
  6272   000216  6E16               	movwf	(___flmul@a+1)^0,c
  6273   000218  0E20               	movlw	32
  6274   00021A  6E17               	movwf	(___flmul@a+2)^0,c
  6275   00021C  0E41               	movlw	65
  6276   00021E  6E18               	movwf	(___flmul@a+3)^0,c
  6277   000220  EC4E  F00E         	call	___flmul	;wreg free
  6278   000224  C011  F088         	movff	?___flmul,efgtoa@ou
  6279   000228  C012  F089         	movff	?___flmul+1,efgtoa@ou+1
  6280   00022C  C013  F08A         	movff	?___flmul+2,efgtoa@ou+2
  6281   000230  C014  F08B         	movff	?___flmul+3,efgtoa@ou+3
  6282   000234  0100               	movlb	0	; () banked
  6283   000236  5188               	movf	efgtoa@ou& (0+255),w,b
  6284   000238  5D99               	subwf	efgtoa@g& (0+255),w,b
  6285   00023A  6E11               	movwf	labs@a^0,c
  6286   00023C  5189               	movf	(efgtoa@ou+1)& (0+255),w,b
  6287   00023E  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6288   000240  6E12               	movwf	(labs@a+1)^0,c
  6289   000242  518A               	movf	(efgtoa@ou+2)& (0+255),w,b
  6290   000244  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6291   000246  6E13               	movwf	(labs@a+2)^0,c
  6292   000248  518B               	movf	(efgtoa@ou+3)& (0+255),w,b
  6293   00024A  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6294   00024C  6E14               	movwf	(labs@a+3)^0,c
  6295   00024E  ECC2  F01F         	call	_labs	;wreg free
  6296   000252  BE14               	btfsc	(?_labs+3)^0,7,c
  6297   000254  EF37  F001         	goto	u7381
  6298   000258  5014               	movf	(?_labs+3)^0,w,c
  6299   00025A  1013               	iorwf	(?_labs+2)^0,w,c
  6300   00025C  1012               	iorwf	(?_labs+1)^0,w,c
  6301   00025E  E109               	bnz	u7380
  6302   000260  0E02               	movlw	2
  6303   000262  5C11               	subwf	?_labs^0,w,c
  6304   000264  A0D8               	btfss	status,0,c
  6305   000266  EF37  F001         	goto	u7381
  6306   00026A  EF39  F001         	goto	u7380
  6307   00026E                     u7381:
  6308   00026E  EFF5  F000         	goto	l1083
  6309   000272                     u7380:
  6310   000272  C088  F02A         	movff	efgtoa@ou,___flge@ff1
  6311   000276  C089  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  6312   00027A  C08A  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  6313   00027E  C08B  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  6314   000282  C099  F02E         	movff	efgtoa@g,___flge@ff2
  6315   000286  C09A  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  6316   00028A  C09B  F030         	movff	efgtoa@g+2,___flge@ff2+2
  6317   00028E  C09C  F031         	movff	efgtoa@g+3,___flge@ff2+3
  6318   000292  EC8D  F01B         	call	___flge	;wreg free
  6319   000296  A0D8               	btfss	status,0,c
  6320   000298  EF50  F001         	goto	u7391
  6321   00029C  EF52  F001         	goto	u7390
  6322   0002A0                     u7391:
  6323   0002A0  EFF5  F000         	goto	l1083
  6324   0002A4                     u7390:
  6325   0002A4                     
  6326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  6327   0002A4  0100               	movlb	0	; () banked
  6328   0002A6  519F               	movf	efgtoa@u& (0+255),w,b
  6329   0002A8  5D99               	subwf	efgtoa@g& (0+255),w,b
  6330   0002AA  6E11               	movwf	labs@a^0,c
  6331   0002AC  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  6332   0002AE  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6333   0002B0  6E12               	movwf	(labs@a+1)^0,c
  6334   0002B2  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  6335   0002B4  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6336   0002B6  6E13               	movwf	(labs@a+2)^0,c
  6337   0002B8  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  6338   0002BA  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6339   0002BC  6E14               	movwf	(labs@a+3)^0,c
  6340   0002BE  ECC2  F01F         	call	_labs	;wreg free
  6341   0002C2  BE14               	btfsc	(?_labs+3)^0,7,c
  6342   0002C4  EF71  F001         	goto	u7400
  6343   0002C8  5014               	movf	(?_labs+3)^0,w,c
  6344   0002CA  1013               	iorwf	(?_labs+2)^0,w,c
  6345   0002CC  1012               	iorwf	(?_labs+1)^0,w,c
  6346   0002CE  E107               	bnz	u7401
  6347   0002D0  0E02               	movlw	2
  6348   0002D2  5C11               	subwf	?_labs^0,w,c
  6349   0002D4  B0D8               	btfsc	status,0,c
  6350   0002D6  EF6F  F001         	goto	u7401
  6351   0002DA  EF71  F001         	goto	u7400
  6352   0002DE                     u7401:
  6353   0002DE  EFB9  F001         	goto	l6888
  6354   0002E2                     u7400:
  6355   0002E2                     l6878:
  6356                           
  6357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  6358   0002E2  C09F  F099         	movff	efgtoa@u,efgtoa@g
  6359   0002E6  C0A0  F09A         	movff	efgtoa@u+1,efgtoa@g+1
  6360   0002EA  C0A1  F09B         	movff	efgtoa@u+2,efgtoa@g+2
  6361   0002EE  C0A2  F09C         	movff	efgtoa@u+3,efgtoa@g+3
  6362                           
  6363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  6364   0002F2  EFD2  F001         	goto	l1081
  6365   0002F6                     l6880:
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  6368   0002F6  C09F  F01F         	movff	efgtoa@u,___fldiv@b
  6369   0002FA  C0A0  F020         	movff	efgtoa@u+1,___fldiv@b+1
  6370   0002FE  C0A1  F021         	movff	efgtoa@u+2,___fldiv@b+2
  6371   000302  C0A2  F022         	movff	efgtoa@u+3,___fldiv@b+3
  6372   000306  0E00               	movlw	0
  6373   000308  6E23               	movwf	___fldiv@a^0,c
  6374   00030A  0E00               	movlw	0
  6375   00030C  6E24               	movwf	(___fldiv@a+1)^0,c
  6376   00030E  0E20               	movlw	32
  6377   000310  6E25               	movwf	(___fldiv@a+2)^0,c
  6378   000312  0E41               	movlw	65
  6379   000314  6E26               	movwf	(___fldiv@a+3)^0,c
  6380   000316  EC63  F010         	call	___fldiv	;wreg free
  6381   00031A  C01F  F09F         	movff	?___fldiv,efgtoa@u
  6382   00031E  C020  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  6383   000322  C021  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  6384   000326  C022  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  6385   00032A                     
  6386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  6387   00032A  0100               	movlb	0	; () banked
  6388   00032C  0786               	decf	efgtoa@e& (0+255),f,b
  6389   00032E  A0D8               	btfss	status,0,c
  6390   000330  0787               	decf	(efgtoa@e+1)& (0+255),f,b
  6391   000332                     
  6392                           ; BSR set to: 0
  6393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  6394   000332  519F               	movf	efgtoa@u& (0+255),w,b
  6395   000334  5D99               	subwf	efgtoa@g& (0+255),w,b
  6396   000336  6E11               	movwf	labs@a^0,c
  6397   000338  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  6398   00033A  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6399   00033C  6E12               	movwf	(labs@a+1)^0,c
  6400   00033E  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  6401   000340  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6402   000342  6E13               	movwf	(labs@a+2)^0,c
  6403   000344  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  6404   000346  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6405   000348  6E14               	movwf	(labs@a+3)^0,c
  6406   00034A  ECC2  F01F         	call	_labs	;wreg free
  6407   00034E  BE14               	btfsc	(?_labs+3)^0,7,c
  6408   000350  EFB7  F001         	goto	u7410
  6409   000354  5014               	movf	(?_labs+3)^0,w,c
  6410   000356  1013               	iorwf	(?_labs+2)^0,w,c
  6411   000358  1012               	iorwf	(?_labs+1)^0,w,c
  6412   00035A  E107               	bnz	u7411
  6413   00035C  0E02               	movlw	2
  6414   00035E  5C11               	subwf	?_labs^0,w,c
  6415   000360  B0D8               	btfsc	status,0,c
  6416   000362  EFB5  F001         	goto	u7411
  6417   000366  EFB7  F001         	goto	u7410
  6418   00036A                     u7411:
  6419   00036A  EFB9  F001         	goto	l6888
  6420   00036E                     u7410:
  6421   00036E  EF71  F001         	goto	l6878
  6422   000372                     l6888:
  6423                           
  6424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  6425   000372  C099  F02A         	movff	efgtoa@g,___flge@ff1
  6426   000376  C09A  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  6427   00037A  C09B  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  6428   00037E  C09C  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  6429   000382  C09F  F02E         	movff	efgtoa@u,___flge@ff2
  6430   000386  C0A0  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  6431   00038A  C0A1  F030         	movff	efgtoa@u+2,___flge@ff2+2
  6432   00038E  C0A2  F031         	movff	efgtoa@u+3,___flge@ff2+3
  6433   000392  EC8D  F01B         	call	___flge	;wreg free
  6434   000396  A0D8               	btfss	status,0,c
  6435   000398  EFD0  F001         	goto	u7421
  6436   00039C  EFD2  F001         	goto	u7420
  6437   0003A0                     u7421:
  6438   0003A0  EF7B  F001         	goto	l6880
  6439   0003A4                     u7420:
  6440   0003A4                     l1081:
  6441                           
  6442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  6443   0003A4  C076  F080         	movff	efgtoa@c,efgtoa@mode
  6444                           
  6445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  6446   0003A8  C080  F081         	movff	efgtoa@mode,efgtoa@nmode
  6447   0003AC                     
  6448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  6449   0003AC  0100               	movlb	0	; () banked
  6450   0003AE  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  6451   0003B0  EFDC  F001         	goto	u7431
  6452   0003B4  EFDE  F001         	goto	u7430
  6453   0003B8                     u7431:
  6454   0003B8  EFE4  F001         	goto	l6894
  6455   0003BC                     u7430:
  6456   0003BC                     
  6457                           ; BSR set to: 0
  6458   0003BC  C0DE  F079         	movff	_prec,efgtoa@p
  6459   0003C0  C0DF  F07A         	movff	_prec+1,efgtoa@p+1
  6460   0003C4  EFE8  F001         	goto	l6896
  6461   0003C8                     l6894:
  6462                           
  6463                           ; BSR set to: 0
  6464   0003C8  0E00               	movlw	0
  6465   0003CA  6F7A               	movwf	(efgtoa@p+1)& (0+255),b
  6466   0003CC  0E06               	movlw	6
  6467   0003CE  6F79               	movwf	efgtoa@p& (0+255),b
  6468   0003D0                     l6896:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  6472   0003D0  C079  F084         	movff	efgtoa@p,efgtoa@m
  6473   0003D4  C07A  F085         	movff	efgtoa@p+1,efgtoa@m+1
  6474   0003D8                     
  6475                           ; BSR set to: 0
  6476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  6477   0003D8  4B84               	infsnz	efgtoa@m& (0+255),f,b
  6478   0003DA  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  6479   0003DC                     
  6480                           ; BSR set to: 0
  6481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  6482   0003DC  0E66               	movlw	102
  6483   0003DE  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  6484   0003E0  A4D8               	btfss	status,2,c
  6485   0003E2  EFF5  F001         	goto	u7441
  6486   0003E6  EFF7  F001         	goto	u7440
  6487   0003EA                     u7441:
  6488   0003EA  EF17  F002         	goto	l6910
  6489   0003EE                     u7440:
  6490   0003EE                     
  6491                           ; BSR set to: 0
  6492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  6493   0003EE  BF87               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6494   0003F0  EFFE  F001         	goto	u7450
  6495   0003F4  EFFC  F001         	goto	u7451
  6496   0003F8                     u7451:
  6497   0003F8  EF0A  F002         	goto	l6906
  6498   0003FC                     u7450:
  6499   0003FC                     
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  6502   0003FC  0E00               	movlw	0
  6503   0003FE  6F9F               	movwf	efgtoa@u& (0+255),b
  6504   000400  0E00               	movlw	0
  6505   000402  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6506   000404  0E80               	movlw	128
  6507   000406  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6508   000408  0E3F               	movlw	63
  6509   00040A  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6510                           
  6511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  6512   00040C  0E00               	movlw	0
  6513   00040E  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  6514   000410  0E00               	movlw	0
  6515   000412  6F86               	movwf	efgtoa@e& (0+255),b
  6516   000414                     l6906:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  6520   000414  0E67               	movlw	103
  6521   000416  1980               	xorwf	efgtoa@mode& (0+255),w,b
  6522   000418  B4D8               	btfsc	status,2,c
  6523   00041A  EF11  F002         	goto	u7461
  6524   00041E  EF13  F002         	goto	u7460
  6525   000422                     u7461:
  6526   000422  EF17  F002         	goto	l6910
  6527   000426                     u7460:
  6528   000426                     
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  6531   000426  5186               	movf	efgtoa@e& (0+255),w,b
  6532   000428  2784               	addwf	efgtoa@m& (0+255),f,b
  6533   00042A  5187               	movf	(efgtoa@e+1)& (0+255),w,b
  6534   00042C  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6535   00042E                     l6910:
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  6539   00042E  0E00               	movlw	0
  6540   000430  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6541   000432  0E00               	movlw	0
  6542   000434  6F96               	movwf	efgtoa@i& (0+255),b
  6543   000436                     
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  6546   000436  C099  F08E         	movff	efgtoa@g,efgtoa@h
  6547   00043A  C09A  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  6548   00043E  C09B  F090         	movff	efgtoa@g+2,efgtoa@h+2
  6549   000442  C09C  F091         	movff	efgtoa@g+3,efgtoa@h+3
  6550   000446                     
  6551                           ; BSR set to: 0
  6552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  6553   000446  C09F  F088         	movff	efgtoa@u,efgtoa@ou
  6554   00044A  C0A0  F089         	movff	efgtoa@u+1,efgtoa@ou+1
  6555   00044E  C0A1  F08A         	movff	efgtoa@u+2,efgtoa@ou+2
  6556   000452  C0A2  F08B         	movff	efgtoa@u+3,efgtoa@ou+3
  6557                           
  6558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  6559   000456  EFA8  F002         	goto	l6924
  6560   00045A                     l6916:
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  6564   00045A  C08E  F01F         	movff	efgtoa@h,___fldiv@b
  6565   00045E  C08F  F020         	movff	efgtoa@h+1,___fldiv@b+1
  6566   000462  C090  F021         	movff	efgtoa@h+2,___fldiv@b+2
  6567   000466  C091  F022         	movff	efgtoa@h+3,___fldiv@b+3
  6568   00046A  C09F  F023         	movff	efgtoa@u,___fldiv@a
  6569   00046E  C0A0  F024         	movff	efgtoa@u+1,___fldiv@a+1
  6570   000472  C0A1  F025         	movff	efgtoa@u+2,___fldiv@a+2
  6571   000476  C0A2  F026         	movff	efgtoa@u+3,___fldiv@a+3
  6572   00047A  EC63  F010         	call	___fldiv	;wreg free
  6573   00047E  C01F  F038         	movff	?___fldiv,floorf@x
  6574   000482  C020  F039         	movff	?___fldiv+1,floorf@x+1
  6575   000486  C021  F03A         	movff	?___fldiv+2,floorf@x+2
  6576   00048A  C022  F03B         	movff	?___fldiv+3,floorf@x+3
  6577   00048E  EC81  F017         	call	_floorf	;wreg free
  6578   000492  C038  F092         	movff	?_floorf,efgtoa@l
  6579   000496  C039  F093         	movff	?_floorf+1,efgtoa@l+1
  6580   00049A  C03A  F094         	movff	?_floorf+2,efgtoa@l+2
  6581   00049E  C03B  F095         	movff	?_floorf+3,efgtoa@l+3
  6582                           
  6583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  6584   0004A2  C092  F011         	movff	efgtoa@l,___fltol@f1
  6585   0004A6  C093  F012         	movff	efgtoa@l+1,___fltol@f1+1
  6586   0004AA  C094  F013         	movff	efgtoa@l+2,___fltol@f1+2
  6587   0004AE  C095  F014         	movff	efgtoa@l+3,___fltol@f1+3
  6588   0004B2  EC0A  F01B         	call	___fltol	;wreg free
  6589   0004B6  C011  F082         	movff	?___fltol,efgtoa@d
  6590   0004BA  C012  F083         	movff	?___fltol+1,efgtoa@d+1
  6591   0004BE                     
  6592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  6593   0004BE  C08E  F02A         	movff	efgtoa@h,___flsub@b
  6594   0004C2  C08F  F02B         	movff	efgtoa@h+1,___flsub@b+1
  6595   0004C6  C090  F02C         	movff	efgtoa@h+2,___flsub@b+2
  6596   0004CA  C091  F02D         	movff	efgtoa@h+3,___flsub@b+3
  6597   0004CE  C092  F015         	movff	efgtoa@l,___flmul@a
  6598   0004D2  C093  F016         	movff	efgtoa@l+1,___flmul@a+1
  6599   0004D6  C094  F017         	movff	efgtoa@l+2,___flmul@a+2
  6600   0004DA  C095  F018         	movff	efgtoa@l+3,___flmul@a+3
  6601   0004DE  C09F  F011         	movff	efgtoa@u,___flmul@b
  6602   0004E2  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  6603   0004E6  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  6604   0004EA  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  6605   0004EE  EC4E  F00E         	call	___flmul	;wreg free
  6606   0004F2  C011  F02E         	movff	?___flmul,___flsub@a
  6607   0004F6  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  6608   0004FA  C013  F030         	movff	?___flmul+2,___flsub@a+2
  6609   0004FE  C014  F031         	movff	?___flmul+3,___flsub@a+3
  6610   000502  ECF0  F020         	call	___flsub	;wreg free
  6611   000506  C02A  F08E         	movff	?___flsub,efgtoa@h
  6612   00050A  C02B  F08F         	movff	?___flsub+1,efgtoa@h+1
  6613   00050E  C02C  F090         	movff	?___flsub+2,efgtoa@h+2
  6614   000512  C02D  F091         	movff	?___flsub+3,efgtoa@h+3
  6615   000516                     
  6616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  6617   000516  C09F  F01F         	movff	efgtoa@u,___fldiv@b
  6618   00051A  C0A0  F020         	movff	efgtoa@u+1,___fldiv@b+1
  6619   00051E  C0A1  F021         	movff	efgtoa@u+2,___fldiv@b+2
  6620   000522  C0A2  F022         	movff	efgtoa@u+3,___fldiv@b+3
  6621   000526  0E00               	movlw	0
  6622   000528  6E23               	movwf	___fldiv@a^0,c
  6623   00052A  0E00               	movlw	0
  6624   00052C  6E24               	movwf	(___fldiv@a+1)^0,c
  6625   00052E  0E20               	movlw	32
  6626   000530  6E25               	movwf	(___fldiv@a+2)^0,c
  6627   000532  0E41               	movlw	65
  6628   000534  6E26               	movwf	(___fldiv@a+3)^0,c
  6629   000536  EC63  F010         	call	___fldiv	;wreg free
  6630   00053A  C01F  F09F         	movff	?___fldiv,efgtoa@u
  6631   00053E  C020  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  6632   000542  C021  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  6633   000546  C022  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  6634   00054A                     
  6635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  6636   00054A  0100               	movlb	0	; () banked
  6637   00054C  4B96               	infsnz	efgtoa@i& (0+255),f,b
  6638   00054E  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  6639   000550                     l6924:
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  6643   000550  5184               	movf	efgtoa@m& (0+255),w,b
  6644   000552  5D96               	subwf	efgtoa@i& (0+255),w,b
  6645   000554  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  6646   000556  0A80               	xorlw	128
  6647   000558  6E3C               	movwf	??_efgtoa^0,c
  6648   00055A  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  6649   00055C  0A80               	xorlw	128
  6650   00055E  583C               	subwfb	??_efgtoa^0,w,c
  6651   000560  A0D8               	btfss	status,0,c
  6652   000562  EFB5  F002         	goto	u7471
  6653   000566  EFB7  F002         	goto	u7470
  6654   00056A                     u7471:
  6655   00056A  EF2D  F002         	goto	l6916
  6656   00056E                     u7470:
  6657   00056E                     
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  6660   00056E  C09F  F011         	movff	efgtoa@u,___flmul@b
  6661   000572  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  6662   000576  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  6663   00057A  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  6664   00057E  0E00               	movlw	0
  6665   000580  6E15               	movwf	___flmul@a^0,c
  6666   000582  0E00               	movlw	0
  6667   000584  6E16               	movwf	(___flmul@a+1)^0,c
  6668   000586  0EA0               	movlw	160
  6669   000588  6E17               	movwf	(___flmul@a+2)^0,c
  6670   00058A  0E40               	movlw	64
  6671   00058C  6E18               	movwf	(___flmul@a+3)^0,c
  6672   00058E  EC4E  F00E         	call	___flmul	;wreg free
  6673   000592  C011  F092         	movff	?___flmul,efgtoa@l
  6674   000596  C012  F093         	movff	?___flmul+1,efgtoa@l+1
  6675   00059A  C013  F094         	movff	?___flmul+2,efgtoa@l+2
  6676   00059E  C014  F095         	movff	?___flmul+3,efgtoa@l+3
  6677   0005A2                     
  6678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  6679   0005A2  C08E  F02A         	movff	efgtoa@h,___flge@ff1
  6680   0005A6  C08F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  6681   0005AA  C090  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  6682   0005AE  C091  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  6683   0005B2  C092  F02E         	movff	efgtoa@l,___flge@ff2
  6684   0005B6  C093  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  6685   0005BA  C094  F030         	movff	efgtoa@l+2,___flge@ff2+2
  6686   0005BE  C095  F031         	movff	efgtoa@l+3,___flge@ff2+3
  6687   0005C2  EC8D  F01B         	call	___flge	;wreg free
  6688   0005C6  B0D8               	btfsc	status,0,c
  6689   0005C8  EFE8  F002         	goto	u7481
  6690   0005CC  EFEA  F002         	goto	u7480
  6691   0005D0                     u7481:
  6692   0005D0  EFF5  F002         	goto	l6932
  6693   0005D4                     u7480:
  6694   0005D4                     
  6695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  6696   0005D4  0E00               	movlw	0
  6697   0005D6  0100               	movlb	0	; () banked
  6698   0005D8  6F92               	movwf	efgtoa@l& (0+255),b
  6699   0005DA  0E00               	movlw	0
  6700   0005DC  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6701   0005DE  0E00               	movlw	0
  6702   0005E0  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6703   0005E2  0E00               	movlw	0
  6704   0005E4  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6705                           
  6706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  6707   0005E6  EF1E  F003         	goto	l6938
  6708   0005EA                     l6932:
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  6711   0005EA  C08E  F011         	movff	efgtoa@h,___fleq@ff1
  6712   0005EE  C08F  F012         	movff	efgtoa@h+1,___fleq@ff1+1
  6713   0005F2  C090  F013         	movff	efgtoa@h+2,___fleq@ff1+2
  6714   0005F6  C091  F014         	movff	efgtoa@h+3,___fleq@ff1+3
  6715   0005FA  C092  F015         	movff	efgtoa@l,___fleq@ff2
  6716   0005FE  C093  F016         	movff	efgtoa@l+1,___fleq@ff2+1
  6717   000602  C094  F017         	movff	efgtoa@l+2,___fleq@ff2+2
  6718   000606  C095  F018         	movff	efgtoa@l+3,___fleq@ff2+3
  6719   00060A  ECB1  F01E         	call	___fleq	;wreg free
  6720   00060E  A0D8               	btfss	status,0,c
  6721   000610  EF0C  F003         	goto	u7491
  6722   000614  EF0E  F003         	goto	u7490
  6723   000618                     u7491:
  6724   000618  EF1E  F003         	goto	l6938
  6725   00061C                     u7490:
  6726   00061C  0100               	movlb	0	; () banked
  6727   00061E  B182               	btfsc	efgtoa@d& (0+255),0,b
  6728   000620  EF14  F003         	goto	u7501
  6729   000624  EF16  F003         	goto	u7500
  6730   000628                     u7501:
  6731   000628  EF1E  F003         	goto	l6938
  6732   00062C                     u7500:
  6733   00062C                     
  6734                           ; BSR set to: 0
  6735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  6736   00062C  0E00               	movlw	0
  6737   00062E  6F92               	movwf	efgtoa@l& (0+255),b
  6738   000630  0E00               	movlw	0
  6739   000632  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6740   000634  0E00               	movlw	0
  6741   000636  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6742   000638  0E00               	movlw	0
  6743   00063A  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6744   00063C                     l6938:
  6745                           
  6746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  6747   00063C  C099  F011         	movff	efgtoa@g,___fladd@b
  6748   000640  C09A  F012         	movff	efgtoa@g+1,___fladd@b+1
  6749   000644  C09B  F013         	movff	efgtoa@g+2,___fladd@b+2
  6750   000648  C09C  F014         	movff	efgtoa@g+3,___fladd@b+3
  6751   00064C  C092  F015         	movff	efgtoa@l,___fladd@a
  6752   000650  C093  F016         	movff	efgtoa@l+1,___fladd@a+1
  6753   000654  C094  F017         	movff	efgtoa@l+2,___fladd@a+2
  6754   000658  C095  F018         	movff	efgtoa@l+3,___fladd@a+3
  6755   00065C  EC3B  F005         	call	___fladd	;wreg free
  6756   000660  C011  F08E         	movff	?___fladd,efgtoa@h
  6757   000664  C012  F08F         	movff	?___fladd+1,efgtoa@h+1
  6758   000668  C013  F090         	movff	?___fladd+2,efgtoa@h+2
  6759   00066C  C014  F091         	movff	?___fladd+3,efgtoa@h+3
  6760   000670                     
  6761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  6762   000670  C08E  F02A         	movff	efgtoa@h,___flge@ff1
  6763   000674  C08F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  6764   000678  C090  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  6765   00067C  C091  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  6766   000680  0E00               	movlw	0
  6767   000682  6E15               	movwf	___flmul@a^0,c
  6768   000684  0E00               	movlw	0
  6769   000686  6E16               	movwf	(___flmul@a+1)^0,c
  6770   000688  0E20               	movlw	32
  6771   00068A  6E17               	movwf	(___flmul@a+2)^0,c
  6772   00068C  0E41               	movlw	65
  6773   00068E  6E18               	movwf	(___flmul@a+3)^0,c
  6774   000690  C088  F011         	movff	efgtoa@ou,___flmul@b
  6775   000694  C089  F012         	movff	efgtoa@ou+1,___flmul@b+1
  6776   000698  C08A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  6777   00069C  C08B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  6778   0006A0  EC4E  F00E         	call	___flmul	;wreg free
  6779   0006A4  C011  F02E         	movff	?___flmul,___flge@ff2
  6780   0006A8  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  6781   0006AC  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  6782   0006B0  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  6783   0006B4  EC8D  F01B         	call	___flge	;wreg free
  6784   0006B8  A0D8               	btfss	status,0,c
  6785   0006BA  EF61  F003         	goto	u7511
  6786   0006BE  EF63  F003         	goto	u7510
  6787   0006C2                     u7511:
  6788   0006C2  EF8C  F003         	goto	l6950
  6789   0006C6                     u7510:
  6790   0006C6                     
  6791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  6792   0006C6  0100               	movlb	0	; () banked
  6793   0006C8  4B86               	infsnz	efgtoa@e& (0+255),f,b
  6794   0006CA  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  6795   0006CC                     
  6796                           ; BSR set to: 0
  6797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  6798   0006CC  C088  F011         	movff	efgtoa@ou,___flmul@b
  6799   0006D0  C089  F012         	movff	efgtoa@ou+1,___flmul@b+1
  6800   0006D4  C08A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  6801   0006D8  C08B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  6802   0006DC  0E00               	movlw	0
  6803   0006DE  6E15               	movwf	___flmul@a^0,c
  6804   0006E0  0E00               	movlw	0
  6805   0006E2  6E16               	movwf	(___flmul@a+1)^0,c
  6806   0006E4  0E20               	movlw	32
  6807   0006E6  6E17               	movwf	(___flmul@a+2)^0,c
  6808   0006E8  0E41               	movlw	65
  6809   0006EA  6E18               	movwf	(___flmul@a+3)^0,c
  6810   0006EC  EC4E  F00E         	call	___flmul	;wreg free
  6811   0006F0  C011  F088         	movff	?___flmul,efgtoa@ou
  6812   0006F4  C012  F089         	movff	?___flmul+1,efgtoa@ou+1
  6813   0006F8  C013  F08A         	movff	?___flmul+2,efgtoa@ou+2
  6814   0006FC  C014  F08B         	movff	?___flmul+3,efgtoa@ou+3
  6815   000700                     
  6816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  6817   000700  0E66               	movlw	102
  6818   000702  0100               	movlb	0	; () banked
  6819   000704  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  6820   000706  A4D8               	btfss	status,2,c
  6821   000708  EF88  F003         	goto	u7521
  6822   00070C  EF8A  F003         	goto	u7520
  6823   000710                     u7521:
  6824   000710  EF8C  F003         	goto	l6950
  6825   000714                     u7520:
  6826   000714                     
  6827                           ; BSR set to: 0
  6828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  6829   000714  4B84               	infsnz	efgtoa@m& (0+255),f,b
  6830   000716  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  6831   000718                     l6950:
  6832                           
  6833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  6834   000718  C088  F09F         	movff	efgtoa@ou,efgtoa@u
  6835   00071C  C089  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  6836   000720  C08A  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  6837   000724  C08B  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  6838   000728                     
  6839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  6840   000728  C086  F077         	movff	efgtoa@e,efgtoa@ne
  6841   00072C  C087  F078         	movff	efgtoa@e+1,efgtoa@ne+1
  6842   000730                     
  6843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  6844   000730  0E00               	movlw	0
  6845   000732  0100               	movlb	0	; () banked
  6846   000734  6F7F               	movwf	efgtoa@pp& (0+255),b
  6847   000736                     
  6848                           ; BSR set to: 0
  6849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  6850   000736  0E00               	movlw	0
  6851   000738  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  6852   00073A  0E00               	movlw	0
  6853   00073C  6F7B               	movwf	efgtoa@t& (0+255),b
  6854   00073E                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  6857   00073E  0E00               	movlw	0
  6858   000740  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6859   000742  0E00               	movlw	0
  6860   000744  6F96               	movwf	efgtoa@i& (0+255),b
  6861                           
  6862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6863   000746  EF8A  F004         	goto	l7000
  6864   00074A                     l6960:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  6868   00074A  C08E  F01F         	movff	efgtoa@h,___fldiv@b
  6869   00074E  C08F  F020         	movff	efgtoa@h+1,___fldiv@b+1
  6870   000752  C090  F021         	movff	efgtoa@h+2,___fldiv@b+2
  6871   000756  C091  F022         	movff	efgtoa@h+3,___fldiv@b+3
  6872   00075A  C09F  F023         	movff	efgtoa@u,___fldiv@a
  6873   00075E  C0A0  F024         	movff	efgtoa@u+1,___fldiv@a+1
  6874   000762  C0A1  F025         	movff	efgtoa@u+2,___fldiv@a+2
  6875   000766  C0A2  F026         	movff	efgtoa@u+3,___fldiv@a+3
  6876   00076A  EC63  F010         	call	___fldiv	;wreg free
  6877   00076E  C01F  F038         	movff	?___fldiv,floorf@x
  6878   000772  C020  F039         	movff	?___fldiv+1,floorf@x+1
  6879   000776  C021  F03A         	movff	?___fldiv+2,floorf@x+2
  6880   00077A  C022  F03B         	movff	?___fldiv+3,floorf@x+3
  6881   00077E  EC81  F017         	call	_floorf	;wreg free
  6882   000782  C038  F092         	movff	?_floorf,efgtoa@l
  6883   000786  C039  F093         	movff	?_floorf+1,efgtoa@l+1
  6884   00078A  C03A  F094         	movff	?_floorf+2,efgtoa@l+2
  6885   00078E  C03B  F095         	movff	?_floorf+3,efgtoa@l+3
  6886                           
  6887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6888   000792  C092  F011         	movff	efgtoa@l,___fltol@f1
  6889   000796  C093  F012         	movff	efgtoa@l+1,___fltol@f1+1
  6890   00079A  C094  F013         	movff	efgtoa@l+2,___fltol@f1+2
  6891   00079E  C095  F014         	movff	efgtoa@l+3,___fltol@f1+3
  6892   0007A2  EC0A  F01B         	call	___fltol	;wreg free
  6893   0007A6  BE12               	btfsc	(?___fltol+1)^0,7,c
  6894   0007A8  EFE1  F003         	goto	u7530
  6895   0007AC  5012               	movf	(?___fltol+1)^0,w,c
  6896   0007AE  E107               	bnz	u7531
  6897   0007B0  0E0A               	movlw	10
  6898   0007B2  5C11               	subwf	?___fltol^0,w,c
  6899   0007B4  B0D8               	btfsc	status,0,c
  6900   0007B6  EFDF  F003         	goto	u7531
  6901   0007BA  EFE1  F003         	goto	u7530
  6902   0007BE                     u7531:
  6903   0007BE  EFF1  F003         	goto	l6964
  6904   0007C2                     u7530:
  6905   0007C2  C092  F011         	movff	efgtoa@l,___fltol@f1
  6906   0007C6  C093  F012         	movff	efgtoa@l+1,___fltol@f1+1
  6907   0007CA  C094  F013         	movff	efgtoa@l+2,___fltol@f1+2
  6908   0007CE  C095  F014         	movff	efgtoa@l+3,___fltol@f1+3
  6909   0007D2  EC0A  F01B         	call	___fltol	;wreg free
  6910   0007D6  C011  F082         	movff	?___fltol,efgtoa@d
  6911   0007DA  C012  F083         	movff	?___fltol+1,efgtoa@d+1
  6912   0007DE  EFF6  F003         	goto	l1111
  6913   0007E2                     l6964:
  6914   0007E2  0E00               	movlw	0
  6915   0007E4  0100               	movlb	0	; () banked
  6916   0007E6  6F83               	movwf	(efgtoa@d+1)& (0+255),b
  6917   0007E8  0E09               	movlw	9
  6918   0007EA  6F82               	movwf	efgtoa@d& (0+255),b
  6919   0007EC                     l1111:
  6920                           
  6921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  6922   0007EC  0100               	movlb	0	; () banked
  6923   0007EE  517F               	movf	efgtoa@pp& (0+255),w,b
  6924   0007F0  A4D8               	btfss	status,2,c
  6925   0007F2  EFFD  F003         	goto	u7541
  6926   0007F6  EFFF  F003         	goto	u7540
  6927   0007FA                     u7541:
  6928   0007FA  EF27  F004         	goto	l6984
  6929   0007FE                     u7540:
  6930   0007FE                     
  6931                           ; BSR set to: 0
  6932   0007FE  BF78               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6933   000800  EF06  F004         	goto	u7550
  6934   000804  EF04  F004         	goto	u7551
  6935   000808                     u7551:
  6936   000808  EF27  F004         	goto	l6984
  6937   00080C                     u7550:
  6938   00080C                     
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  6941   00080C  0E00               	movlw	low _dbuf
  6942   00080E  259D               	addwf	efgtoa@n& (0+255),w,b
  6943   000810  6ED9               	movwf	fsr2l,c
  6944   000812  0E01               	movlw	high _dbuf
  6945   000814  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6946   000816  6EDA               	movwf	fsr2h,c
  6947   000818  0E2E               	movlw	46
  6948   00081A  6EDF               	movwf	indf2,c
  6949   00081C                     
  6950                           ; BSR set to: 0
  6951   00081C  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6952   00081E  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6953   000820                     
  6954                           ; BSR set to: 0
  6955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  6956   000820  078C               	decf	efgtoa@w& (0+255),f,b
  6957   000822  A0D8               	btfss	status,0,c
  6958   000824  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6959   000826                     
  6960                           ; BSR set to: 0
  6961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  6962   000826  0E01               	movlw	1
  6963   000828  6F7F               	movwf	efgtoa@pp& (0+255),b
  6964   00082A  EF27  F004         	goto	l6984
  6965   00082E                     l6976:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  6969   00082E  0E00               	movlw	low _dbuf
  6970   000830  259D               	addwf	efgtoa@n& (0+255),w,b
  6971   000832  6ED9               	movwf	fsr2l,c
  6972   000834  0E01               	movlw	high _dbuf
  6973   000836  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6974   000838  6EDA               	movwf	fsr2h,c
  6975   00083A  0E30               	movlw	48
  6976   00083C  6EDF               	movwf	indf2,c
  6977   00083E                     
  6978                           ; BSR set to: 0
  6979   00083E  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6980   000840  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6981   000842                     
  6982                           ; BSR set to: 0
  6983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  6984   000842  078C               	decf	efgtoa@w& (0+255),f,b
  6985   000844  A0D8               	btfss	status,0,c
  6986   000846  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6987   000848                     
  6988                           ; BSR set to: 0
  6989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  6990   000848  077B               	decf	efgtoa@t& (0+255),f,b
  6991   00084A  A0D8               	btfss	status,0,c
  6992   00084C  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  6993   00084E                     l6984:
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  6997   00084E  517B               	movf	efgtoa@t& (0+255),w,b
  6998   000850  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6999   000852  A4D8               	btfss	status,2,c
  7000   000854  EF2E  F004         	goto	u7561
  7001   000858  EF30  F004         	goto	u7560
  7002   00085C                     u7561:
  7003   00085C  EF17  F004         	goto	l6976
  7004   000860                     u7560:
  7005   000860                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7008   000860  0E00               	movlw	low _dbuf
  7009   000862  259D               	addwf	efgtoa@n& (0+255),w,b
  7010   000864  6ED9               	movwf	fsr2l,c
  7011   000866  0E01               	movlw	high _dbuf
  7012   000868  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7013   00086A  6EDA               	movwf	fsr2h,c
  7014   00086C  5182               	movf	efgtoa@d& (0+255),w,b
  7015   00086E  0F30               	addlw	48
  7016   000870  6EDF               	movwf	indf2,c
  7017   000872                     
  7018                           ; BSR set to: 0
  7019   000872  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  7020   000874  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  7021   000876                     
  7022                           ; BSR set to: 0
  7023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  7024   000876  078C               	decf	efgtoa@w& (0+255),f,b
  7025   000878  A0D8               	btfss	status,0,c
  7026   00087A  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  7027   00087C                     
  7028                           ; BSR set to: 0
  7029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  7030   00087C  C08E  F02A         	movff	efgtoa@h,___flsub@b
  7031   000880  C08F  F02B         	movff	efgtoa@h+1,___flsub@b+1
  7032   000884  C090  F02C         	movff	efgtoa@h+2,___flsub@b+2
  7033   000888  C091  F02D         	movff	efgtoa@h+3,___flsub@b+3
  7034   00088C  C092  F015         	movff	efgtoa@l,___flmul@a
  7035   000890  C093  F016         	movff	efgtoa@l+1,___flmul@a+1
  7036   000894  C094  F017         	movff	efgtoa@l+2,___flmul@a+2
  7037   000898  C095  F018         	movff	efgtoa@l+3,___flmul@a+3
  7038   00089C  C09F  F011         	movff	efgtoa@u,___flmul@b
  7039   0008A0  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  7040   0008A4  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  7041   0008A8  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  7042   0008AC  EC4E  F00E         	call	___flmul	;wreg free
  7043   0008B0  C011  F02E         	movff	?___flmul,___flsub@a
  7044   0008B4  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  7045   0008B8  C013  F030         	movff	?___flmul+2,___flsub@a+2
  7046   0008BC  C014  F031         	movff	?___flmul+3,___flsub@a+3
  7047   0008C0  ECF0  F020         	call	___flsub	;wreg free
  7048   0008C4  C02A  F08E         	movff	?___flsub,efgtoa@h
  7049   0008C8  C02B  F08F         	movff	?___flsub+1,efgtoa@h+1
  7050   0008CC  C02C  F090         	movff	?___flsub+2,efgtoa@h+2
  7051   0008D0  C02D  F091         	movff	?___flsub+3,efgtoa@h+3
  7052   0008D4                     
  7053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  7054   0008D4  C09F  F01F         	movff	efgtoa@u,___fldiv@b
  7055   0008D8  C0A0  F020         	movff	efgtoa@u+1,___fldiv@b+1
  7056   0008DC  C0A1  F021         	movff	efgtoa@u+2,___fldiv@b+2
  7057   0008E0  C0A2  F022         	movff	efgtoa@u+3,___fldiv@b+3
  7058   0008E4  0E00               	movlw	0
  7059   0008E6  6E23               	movwf	___fldiv@a^0,c
  7060   0008E8  0E00               	movlw	0
  7061   0008EA  6E24               	movwf	(___fldiv@a+1)^0,c
  7062   0008EC  0E20               	movlw	32
  7063   0008EE  6E25               	movwf	(___fldiv@a+2)^0,c
  7064   0008F0  0E41               	movlw	65
  7065   0008F2  6E26               	movwf	(___fldiv@a+3)^0,c
  7066   0008F4  EC63  F010         	call	___fldiv	;wreg free
  7067   0008F8  C01F  F09F         	movff	?___fldiv,efgtoa@u
  7068   0008FC  C020  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  7069   000900  C021  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  7070   000904  C022  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  7071   000908                     
  7072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  7073   000908  0100               	movlb	0	; () banked
  7074   00090A  0777               	decf	efgtoa@ne& (0+255),f,b
  7075   00090C  A0D8               	btfss	status,0,c
  7076   00090E  0778               	decf	(efgtoa@ne+1)& (0+255),f,b
  7077   000910                     
  7078                           ; BSR set to: 0
  7079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  7080   000910  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7081   000912  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7082   000914                     l7000:
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7086   000914  5184               	movf	efgtoa@m& (0+255),w,b
  7087   000916  5D96               	subwf	efgtoa@i& (0+255),w,b
  7088   000918  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7089   00091A  0A80               	xorlw	128
  7090   00091C  6E3C               	movwf	??_efgtoa^0,c
  7091   00091E  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  7092   000920  0A80               	xorlw	128
  7093   000922  583C               	subwfb	??_efgtoa^0,w,c
  7094   000924  B0D8               	btfsc	status,0,c
  7095   000926  EF97  F004         	goto	u7571
  7096   00092A  EF99  F004         	goto	u7570
  7097   00092E                     u7571:
  7098   00092E  EFA7  F004         	goto	l7004
  7099   000932                     u7570:
  7100   000932                     
  7101                           ; BSR set to: 0
  7102   000932  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7103   000934  EFA5  F004         	goto	u7581
  7104   000938  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7105   00093A  E109               	bnz	u7580
  7106   00093C  0E4B               	movlw	75
  7107   00093E  5D9D               	subwf	efgtoa@n& (0+255),w,b
  7108   000940  A0D8               	btfss	status,0,c
  7109   000942  EFA5  F004         	goto	u7581
  7110   000946  EFA7  F004         	goto	u7580
  7111   00094A                     u7581:
  7112   00094A  EFA5  F003         	goto	l6960
  7113   00094E                     u7580:
  7114   00094E                     l7004:
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  7118   00094E  0E00               	movlw	0
  7119   000950  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7120   000952  0E4F               	movlw	79
  7121   000954  6F96               	movwf	efgtoa@i& (0+255),b
  7122   000956                     
  7123                           ; BSR set to: 0
  7124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  7125   000956  0E00               	movlw	low _dbuf
  7126   000958  2596               	addwf	efgtoa@i& (0+255),w,b
  7127   00095A  6ED9               	movwf	fsr2l,c
  7128   00095C  0E01               	movlw	high _dbuf
  7129   00095E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7130   000960  6EDA               	movwf	fsr2h,c
  7131   000962  0E00               	movlw	0
  7132   000964  6EDF               	movwf	indf2,c
  7133   000966                     
  7134                           ; BSR set to: 0
  7135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7136   000966  0E00               	movlw	low _dbuf
  7137   000968  6E3C               	movwf	??_efgtoa^0,c
  7138   00096A  0E01               	movlw	high _dbuf
  7139   00096C  6E3D               	movwf	(??_efgtoa+1)^0,c
  7140   00096E  519D               	movf	efgtoa@n& (0+255),w,b
  7141   000970  5E3C               	subwf	??_efgtoa^0,f,c
  7142   000972  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7143   000974  5A3D               	subwfb	(??_efgtoa+1)^0,f,c
  7144   000976  5196               	movf	efgtoa@i& (0+255),w,b
  7145   000978  243C               	addwf	??_efgtoa^0,w,c
  7146   00097A  6E11               	movwf	memcpy@d1^0,c
  7147   00097C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7148   00097E  203D               	addwfc	(??_efgtoa+1)^0,w,c
  7149   000980  6E12               	movwf	(memcpy@d1+1)^0,c
  7150   000982  0E00               	movlw	low _dbuf
  7151   000984  6E13               	movwf	memcpy@s1^0,c
  7152   000986  0E01               	movlw	high _dbuf
  7153   000988  6E14               	movwf	(memcpy@s1+1)^0,c
  7154   00098A  C09D  F015         	movff	efgtoa@n,memcpy@n
  7155   00098E  C09E  F016         	movff	efgtoa@n+1,memcpy@n+1
  7156   000992  ECA2  F020         	call	_memcpy	;wreg free
  7157   000996                     
  7158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  7159   000996  0100               	movlb	0	; () banked
  7160   000998  519D               	movf	efgtoa@n& (0+255),w,b
  7161   00099A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7162   00099C  6F9D               	movwf	efgtoa@n& (0+255),b
  7163   00099E  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7164   0009A0  5997               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7165   0009A2  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  7166   0009A4                     
  7167                           ; BSR set to: 0
  7168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  7169   0009A4  5198               	movf	efgtoa@sign& (0+255),w,b
  7170   0009A6  A4D8               	btfss	status,2,c
  7171   0009A8  EFD8  F004         	goto	u7591
  7172   0009AC  EFDB  F004         	goto	u7590
  7173   0009B0                     u7591:
  7174   0009B0  0E01               	movlw	1
  7175   0009B2  EFDC  F004         	goto	u7600
  7176   0009B6                     u7590:
  7177   0009B6  0E00               	movlw	0
  7178   0009B8                     u7600:
  7179   0009B8  6F96               	movwf	efgtoa@i& (0+255),b
  7180   0009BA  6B97               	clrf	(efgtoa@i+1)& (0+255),b
  7181   0009BC                     
  7182                           ; BSR set to: 0
  7183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  7184   0009BC  A3E0               	btfss	_flags& (0+255),1,b
  7185   0009BE  EFE3  F004         	goto	u7611
  7186   0009C2  EFE5  F004         	goto	u7610
  7187   0009C6                     u7611:
  7188   0009C6  EF13  F005         	goto	l7026
  7189   0009CA                     u7610:
  7190   0009CA  EFF5  F004         	goto	l7022
  7191   0009CE                     l7018:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  7195   0009CE  079D               	decf	efgtoa@n& (0+255),f,b
  7196   0009D0  A0D8               	btfss	status,0,c
  7197   0009D2  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  7198   0009D4  0E00               	movlw	low _dbuf
  7199   0009D6  259D               	addwf	efgtoa@n& (0+255),w,b
  7200   0009D8  6ED9               	movwf	fsr2l,c
  7201   0009DA  0E01               	movlw	high _dbuf
  7202   0009DC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7203   0009DE  6EDA               	movwf	fsr2h,c
  7204   0009E0  0E30               	movlw	48
  7205   0009E2  6EDF               	movwf	indf2,c
  7206   0009E4                     
  7207                           ; BSR set to: 0
  7208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  7209   0009E4  078C               	decf	efgtoa@w& (0+255),f,b
  7210   0009E6  A0D8               	btfss	status,0,c
  7211   0009E8  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  7212   0009EA                     l7022:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  7216   0009EA  518C               	movf	efgtoa@w& (0+255),w,b
  7217   0009EC  5D96               	subwf	efgtoa@i& (0+255),w,b
  7218   0009EE  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7219   0009F0  0A80               	xorlw	128
  7220   0009F2  6E3C               	movwf	??_efgtoa^0,c
  7221   0009F4  518D               	movf	(efgtoa@w+1)& (0+255),w,b
  7222   0009F6  0A80               	xorlw	128
  7223   0009F8  583C               	subwfb	??_efgtoa^0,w,c
  7224   0009FA  B0D8               	btfsc	status,0,c
  7225   0009FC  EF02  F005         	goto	u7621
  7226   000A00  EF04  F005         	goto	u7620
  7227   000A04                     u7621:
  7228   000A04  EF13  F005         	goto	l7026
  7229   000A08                     u7620:
  7230   000A08                     
  7231                           ; BSR set to: 0
  7232   000A08  519D               	movf	efgtoa@n& (0+255),w,b
  7233   000A0A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7234   000A0C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7235   000A0E  0A80               	xorlw	128
  7236   000A10  6E3C               	movwf	??_efgtoa^0,c
  7237   000A12  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7238   000A14  0A80               	xorlw	128
  7239   000A16  583C               	subwfb	??_efgtoa^0,w,c
  7240   000A18  A0D8               	btfss	status,0,c
  7241   000A1A  EF11  F005         	goto	u7631
  7242   000A1E  EF13  F005         	goto	u7630
  7243   000A22                     u7631:
  7244   000A22  EFE7  F004         	goto	l7018
  7245   000A26                     u7630:
  7246   000A26                     l7026:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  7250   000A26  5198               	movf	efgtoa@sign& (0+255),w,b
  7251   000A28  B4D8               	btfsc	status,2,c
  7252   000A2A  EF19  F005         	goto	u7641
  7253   000A2E  EF1B  F005         	goto	u7640
  7254   000A32                     u7641:
  7255   000A32  EF26  F005         	goto	l7030
  7256   000A36                     u7640:
  7257   000A36                     
  7258                           ; BSR set to: 0
  7259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  7260   000A36  079D               	decf	efgtoa@n& (0+255),f,b
  7261   000A38  A0D8               	btfss	status,0,c
  7262   000A3A  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  7263   000A3C  0E00               	movlw	low _dbuf
  7264   000A3E  259D               	addwf	efgtoa@n& (0+255),w,b
  7265   000A40  6ED9               	movwf	fsr2l,c
  7266   000A42  0E01               	movlw	high _dbuf
  7267   000A44  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7268   000A46  6EDA               	movwf	fsr2h,c
  7269   000A48  C098  FFDF         	movff	efgtoa@sign,indf2
  7270   000A4C                     l7030:
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  7274   000A4C  5196               	movf	efgtoa@i& (0+255),w,b
  7275   000A4E  5F8C               	subwf	efgtoa@w& (0+255),f,b
  7276   000A50  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7277   000A52  5B8D               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7278   000A54                     
  7279                           ; BSR set to: 0
  7280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7281   000A54  C070  F021         	movff	efgtoa@fp,pad@fp
  7282   000A58  C071  F022         	movff	efgtoa@fp+1,pad@fp+1
  7283   000A5C  0E00               	movlw	low _dbuf
  7284   000A5E  259D               	addwf	efgtoa@n& (0+255),w,b
  7285   000A60  6E23               	movwf	pad@buf^0,c
  7286   000A62  0E01               	movlw	high _dbuf
  7287   000A64  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7288   000A66  6E24               	movwf	(pad@buf+1)^0,c
  7289   000A68  C08C  F025         	movff	efgtoa@w,pad@p
  7290   000A6C  C08D  F026         	movff	efgtoa@w+1,pad@p+1
  7291   000A70  EC85  F01F         	call	_pad	;wreg free
  7292   000A74                     l1078:
  7293   000A74  0012               	return		;funcret
  7294   000A76                     __end_of_efgtoa:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _strcpy *****************
  7298 ;; Defined at:
  7299 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  dest            2   16[COMRAM] PTR unsigned char 
  7302 ;;		 -> dbuf(80), 
  7303 ;;  src             2   18[COMRAM] PTR const unsigned char 
  7304 ;;		 -> STR_36(4), STR_33(4), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  d               2   22[COMRAM] PTR unsigned char 
  7307 ;;		 -> dbuf(80), 
  7308 ;;  s               2   20[COMRAM] PTR const unsigned char 
  7309 ;;		 -> STR_36(4), STR_33(4), 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  2   16[COMRAM] PTR unsigned char 
  7312 ;; Registers used:
  7313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7319 ;;      Params:         4       0       0       0       0       0       0       0       0
  7320 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7322 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7323 ;;Total ram usage:        8 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; Hardware stack levels required when called: 2
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_efgtoa
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text19
  7334   0042B0                     __ptext19:
  7335                           	callstack 0
  7336   0042B0                     _strcpy:
  7337                           	callstack 23
  7338   0042B0  C013  F015         	movff	strcpy@src,strcpy@s
  7339   0042B4  C014  F016         	movff	strcpy@src+1,strcpy@s+1
  7340   0042B8  C011  F017         	movff	strcpy@dest,strcpy@d
  7341   0042BC  C012  F018         	movff	strcpy@dest+1,strcpy@d+1
  7342   0042C0                     l6740:
  7343   0042C0  C015  FFF6         	movff	strcpy@s,tblptrl
  7344   0042C4  C016  FFF7         	movff	strcpy@s+1,tblptrh
  7345   0042C8  4A15               	infsnz	strcpy@s^0,f,c
  7346   0042CA  2A16               	incf	(strcpy@s+1)^0,f,c
  7347   0042CC                     	if	0	;tblptru may be non-zero
  7348   0042CC                     	endif
  7349   0042CC                     	if	0	;tblptru may be non-zero
  7350   0042CC                     	endif
  7351   0042CC  C017  FFD9         	movff	strcpy@d,fsr2l
  7352   0042D0  C018  FFDA         	movff	strcpy@d+1,fsr2h
  7353   0042D4  4A17               	infsnz	strcpy@d^0,f,c
  7354   0042D6  2A18               	incf	(strcpy@d+1)^0,f,c
  7355   0042D8  0008               	tblrd		*
  7356   0042DA  CFF5 FFDF          	movff	tablat,indf2
  7357   0042DE  50DF               	movf	indf2,w,c
  7358   0042E0  A4D8               	btfss	status,2,c
  7359   0042E2  EF75  F021         	goto	u7131
  7360   0042E6  EF77  F021         	goto	u7130
  7361   0042EA                     u7131:
  7362   0042EA  EF60  F021         	goto	l6740
  7363   0042EE                     u7130:
  7364   0042EE  0012               	return		;funcret
  7365   0042F0                     __end_of_strcpy:
  7366                           	callstack 0
  7367                           
  7368 ;; *************** function _pad *****************
  7369 ;; Defined at:
  7370 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7373 ;;		 -> sprintf@f(11), 
  7374 ;;  buf             2   34[COMRAM] PTR unsigned char 
  7375 ;;		 -> dbuf(80), 
  7376 ;;  p               2   36[COMRAM] int 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  w               2   41[COMRAM] int 
  7379 ;;  i               2   39[COMRAM] int 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7389 ;;      Params:         6       0       0       0       0       0       0       0       0
  7390 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7392 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:       11 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 5
  7396 ;; This function calls:
  7397 ;;		_fputc
  7398 ;;		_fputs
  7399 ;; This function is called by:
  7400 ;;		_efgtoa
  7401 ;;		_utoa
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text20
  7406   003F0A                     __ptext20:
  7407                           	callstack 0
  7408   003F0A                     _pad:
  7409                           	callstack 20
  7410   003F0A                     
  7411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7412   003F0A  BE26               	btfsc	(pad@p+1)^0,7,c
  7413   003F0C  EF8A  F01F         	goto	u7041
  7414   003F10  EF8C  F01F         	goto	u7040
  7415   003F14                     u7041:
  7416   003F14  EF92  F01F         	goto	l6706
  7417   003F18                     u7040:
  7418   003F18  C025  F02A         	movff	pad@p,pad@w
  7419   003F1C  C026  F02B         	movff	pad@p+1,pad@w+1
  7420   003F20  EF96  F01F         	goto	l1063
  7421   003F24                     l6706:
  7422   003F24  0E00               	movlw	0
  7423   003F26  6E2B               	movwf	(pad@w+1)^0,c
  7424   003F28  0E00               	movlw	0
  7425   003F2A  6E2A               	movwf	pad@w^0,c
  7426   003F2C                     l1063:
  7427                           
  7428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7429   003F2C  0E00               	movlw	0
  7430   003F2E  6E29               	movwf	(pad@i+1)^0,c
  7431   003F30  0E00               	movlw	0
  7432   003F32  6E28               	movwf	pad@i^0,c
  7433                           
  7434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7435   003F34  EFA8  F01F         	goto	l6712
  7436   003F38                     l6708:
  7437                           
  7438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7439   003F38  0E00               	movlw	0
  7440   003F3A  6E12               	movwf	(fputc@c+1)^0,c
  7441   003F3C  0E20               	movlw	32
  7442   003F3E  6E11               	movwf	fputc@c^0,c
  7443   003F40  C021  F013         	movff	pad@fp,fputc@fp
  7444   003F44  C022  F014         	movff	pad@fp+1,fputc@fp+1
  7445   003F48  EC4C  F01E         	call	_fputc	;wreg free
  7446   003F4C                     
  7447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7448   003F4C  4A28               	infsnz	pad@i^0,f,c
  7449   003F4E  2A29               	incf	(pad@i+1)^0,f,c
  7450   003F50                     l6712:
  7451                           
  7452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7453   003F50  502A               	movf	pad@w^0,w,c
  7454   003F52  5C28               	subwf	pad@i^0,w,c
  7455   003F54  5029               	movf	(pad@i+1)^0,w,c
  7456   003F56  0A80               	xorlw	128
  7457   003F58  6E27               	movwf	??_pad^0,c
  7458   003F5A  502B               	movf	(pad@w+1)^0,w,c
  7459   003F5C  0A80               	xorlw	128
  7460   003F5E  5827               	subwfb	??_pad^0,w,c
  7461   003F60  A0D8               	btfss	status,0,c
  7462   003F62  EFB5  F01F         	goto	u7051
  7463   003F66  EFB7  F01F         	goto	u7050
  7464   003F6A                     u7051:
  7465   003F6A  EF9C  F01F         	goto	l6708
  7466   003F6E                     u7050:
  7467   003F6E                     
  7468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7469   003F6E  C023  F01A         	movff	pad@buf,fputs@s
  7470   003F72  C024  F01B         	movff	pad@buf+1,fputs@s+1
  7471   003F76  C021  F01C         	movff	pad@fp,fputs@fp
  7472   003F7A  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  7473   003F7E  EC36  F021         	call	_fputs	;wreg free
  7474   003F82  0012               	return		;funcret
  7475   003F84                     __end_of_pad:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function _fputs *****************
  7479 ;; Defined at:
  7480 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  s               2   25[COMRAM] PTR const unsigned char 
  7483 ;;		 -> dbuf(80), 
  7484 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7485 ;;		 -> sprintf@f(11), 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  i               2   30[COMRAM] int 
  7488 ;;  c               1   29[COMRAM] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  2   25[COMRAM] int 
  7491 ;; Registers used:
  7492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7498 ;;      Params:         4       0       0       0       0       0       0       0       0
  7499 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7501 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7502 ;;Total ram usage:        7 bytes
  7503 ;; Hardware stack levels used: 1
  7504 ;; Hardware stack levels required when called: 4
  7505 ;; This function calls:
  7506 ;;		_fputc
  7507 ;; This function is called by:
  7508 ;;		_pad
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text21
  7513   00426C                     __ptext21:
  7514                           	callstack 0
  7515   00426C                     _fputs:
  7516                           	callstack 20
  7517   00426C  0E00               	movlw	0
  7518   00426E  6E20               	movwf	(fputs@i+1)^0,c
  7519   004270  0E00               	movlw	0
  7520   004272  6E1F               	movwf	fputs@i^0,c
  7521   004274  EF47  F021         	goto	l6292
  7522   004278                     l6288:
  7523   004278  C01E  F011         	movff	fputs@c,fputc@c
  7524   00427C  6A12               	clrf	(fputc@c+1)^0,c
  7525   00427E  C01C  F013         	movff	fputs@fp,fputc@fp
  7526   004282  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  7527   004286  EC4C  F01E         	call	_fputc	;wreg free
  7528   00428A  4A1F               	infsnz	fputs@i^0,f,c
  7529   00428C  2A20               	incf	(fputs@i+1)^0,f,c
  7530   00428E                     l6292:
  7531   00428E  501F               	movf	fputs@i^0,w,c
  7532   004290  241A               	addwf	fputs@s^0,w,c
  7533   004292  6ED9               	movwf	fsr2l,c
  7534   004294  5020               	movf	(fputs@i+1)^0,w,c
  7535   004296  201B               	addwfc	(fputs@s+1)^0,w,c
  7536   004298  6EDA               	movwf	fsr2h,c
  7537   00429A  50DF               	movf	indf2,w,c
  7538   00429C  6E1E               	movwf	fputs@c^0,c
  7539   00429E  501E               	movf	fputs@c^0,w,c
  7540   0042A0  A4D8               	btfss	status,2,c
  7541   0042A2  EF55  F021         	goto	u6381
  7542   0042A6  EF57  F021         	goto	u6380
  7543   0042AA                     u6381:
  7544   0042AA  EF3C  F021         	goto	l6288
  7545   0042AE                     u6380:
  7546   0042AE  0012               	return		;funcret
  7547   0042B0                     __end_of_fputs:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _fputc *****************
  7551 ;; Defined at:
  7552 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  c               2   16[COMRAM] int 
  7555 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7556 ;;		 -> sprintf@f(11), 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  2   16[COMRAM] int 
  7561 ;; Registers used:
  7562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7568 ;;      Params:         4       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7571 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:        9 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 3
  7575 ;; This function calls:
  7576 ;;		_putch
  7577 ;; This function is called by:
  7578 ;;		_pad
  7579 ;;		_vfpfcnvrt
  7580 ;;		_fputs
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text22
  7585   003C98                     __ptext22:
  7586                           	callstack 0
  7587   003C98                     _fputc:
  7588                           	callstack 20
  7589   003C98  5013               	movf	fputc@fp^0,w,c
  7590   003C9A  1014               	iorwf	(fputc@fp+1)^0,w,c
  7591   003C9C  B4D8               	btfsc	status,2,c
  7592   003C9E  EF53  F01E         	goto	u5951
  7593   003CA2  EF55  F01E         	goto	u5950
  7594   003CA6                     u5951:
  7595   003CA6  EF5E  F01E         	goto	l6074
  7596   003CAA                     u5950:
  7597   003CAA  5013               	movf	fputc@fp^0,w,c
  7598   003CAC  1014               	iorwf	(fputc@fp+1)^0,w,c
  7599   003CAE  A4D8               	btfss	status,2,c
  7600   003CB0  EF5C  F01E         	goto	u5961
  7601   003CB4  EF5E  F01E         	goto	u5960
  7602   003CB8                     u5961:
  7603   003CB8  EF63  F01E         	goto	l6076
  7604   003CBC                     u5960:
  7605   003CBC                     l6074:
  7606   003CBC  5011               	movf	fputc@c^0,w,c
  7607   003CBE  EC25  F022         	call	_putch
  7608   003CC2  EFB0  F01E         	goto	l1275
  7609   003CC6                     l6076:
  7610   003CC6  EE20 F009          	lfsr	2,9
  7611   003CCA  5013               	movf	fputc@fp^0,w,c
  7612   003CCC  26D9               	addwf	fsr2l,f,c
  7613   003CCE  5014               	movf	(fputc@fp+1)^0,w,c
  7614   003CD0  22DA               	addwfc	fsr2h,f,c
  7615   003CD2  50DE               	movf	postinc2,w,c
  7616   003CD4  10DE               	iorwf	postinc2,w,c
  7617   003CD6  B4D8               	btfsc	status,2,c
  7618   003CD8  EF70  F01E         	goto	u5971
  7619   003CDC  EF72  F01E         	goto	u5970
  7620   003CE0                     u5971:
  7621   003CE0  EF8D  F01E         	goto	l6080
  7622   003CE4                     u5970:
  7623   003CE4  EE20 F009          	lfsr	2,9
  7624   003CE8  5013               	movf	fputc@fp^0,w,c
  7625   003CEA  26D9               	addwf	fsr2l,f,c
  7626   003CEC  5014               	movf	(fputc@fp+1)^0,w,c
  7627   003CEE  22DA               	addwfc	fsr2h,f,c
  7628   003CF0  EE10 F003          	lfsr	1,3
  7629   003CF4  5013               	movf	fputc@fp^0,w,c
  7630   003CF6  26E1               	addwf	fsr1l,f,c
  7631   003CF8  5014               	movf	(fputc@fp+1)^0,w,c
  7632   003CFA  22E2               	addwfc	fsr1h,f,c
  7633   003CFC  50DE               	movf	postinc2,w,c
  7634   003CFE  5CE6               	subwf	postinc1,w,c
  7635   003D00  50E6               	movf	postinc1,w,c
  7636   003D02  0A80               	xorlw	128
  7637   003D04  6E19               	movwf	(??_fputc+4)^0,c
  7638   003D06  50DE               	movf	postinc2,w,c
  7639   003D08  0A80               	xorlw	128
  7640   003D0A  5819               	subwfb	(??_fputc+4)^0,w,c
  7641   003D0C  B0D8               	btfsc	status,0,c
  7642   003D0E  EF8B  F01E         	goto	u5981
  7643   003D12  EF8D  F01E         	goto	u5980
  7644   003D16                     u5981:
  7645   003D16  EFB0  F01E         	goto	l1275
  7646   003D1A                     u5980:
  7647   003D1A                     l6080:
  7648   003D1A  EE20 F003          	lfsr	2,3
  7649   003D1E  5013               	movf	fputc@fp^0,w,c
  7650   003D20  26D9               	addwf	fsr2l,f,c
  7651   003D22  5014               	movf	(fputc@fp+1)^0,w,c
  7652   003D24  22DA               	addwfc	fsr2h,f,c
  7653   003D26  CFDE F015          	movff	postinc2,??_fputc
  7654   003D2A  CFDD F016          	movff	postdec2,??_fputc+1
  7655   003D2E  C013  FFD9         	movff	fputc@fp,fsr2l
  7656   003D32  C014  FFDA         	movff	fputc@fp+1,fsr2h
  7657   003D36  CFDE F017          	movff	postinc2,??_fputc+2
  7658   003D3A  CFDD F018          	movff	postdec2,??_fputc+3
  7659   003D3E  5015               	movf	??_fputc^0,w,c
  7660   003D40  2417               	addwf	(??_fputc+2)^0,w,c
  7661   003D42  6ED9               	movwf	fsr2l,c
  7662   003D44  5016               	movf	(??_fputc+1)^0,w,c
  7663   003D46  2018               	addwfc	(??_fputc+3)^0,w,c
  7664   003D48  6EDA               	movwf	fsr2h,c
  7665   003D4A  C011  FFDF         	movff	fputc@c,indf2
  7666   003D4E  EE20 F003          	lfsr	2,3
  7667   003D52  5013               	movf	fputc@fp^0,w,c
  7668   003D54  26D9               	addwf	fsr2l,f,c
  7669   003D56  5014               	movf	(fputc@fp+1)^0,w,c
  7670   003D58  22DA               	addwfc	fsr2h,f,c
  7671   003D5A  2ADE               	incf	postinc2,f,c
  7672   003D5C  0E00               	movlw	0
  7673   003D5E  22DD               	addwfc	postdec2,f,c
  7674   003D60                     l1275:
  7675   003D60  0012               	return		;funcret
  7676   003D62                     __end_of_fputc:
  7677                           	callstack 0
  7678                           
  7679 ;; *************** function _putch *****************
  7680 ;; Defined at:
  7681 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  c               1    wreg     unsigned char 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  c               1    0[COMRAM] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7695 ;;      Params:         0       0       0       0       0       0       0       0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7698 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7699 ;;Total ram usage:        0 bytes
  7700 ;; Hardware stack levels used: 1
  7701 ;; Hardware stack levels required when called: 2
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_fputc
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text23
  7710   00444A                     __ptext23:
  7711                           	callstack 0
  7712   00444A                     _putch:
  7713                           	callstack 20
  7714   00444A  0012               	return		;funcret
  7715   00444C                     __end_of_putch:
  7716                           	callstack 0
  7717                           
  7718 ;; *************** function _memcpy *****************
  7719 ;; Defined at:
  7720 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  d1              2   16[COMRAM] PTR void 
  7723 ;;		 -> dbuf(80), 
  7724 ;;  s1              2   18[COMRAM] PTR const void 
  7725 ;;		 -> dbuf(80), 
  7726 ;;  n               2   20[COMRAM] unsigned int 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  s               2   25[COMRAM] PTR const unsigned char 
  7729 ;;		 -> dbuf(80), 
  7730 ;;  d               2   23[COMRAM] PTR unsigned char 
  7731 ;;		 -> dbuf(80), 
  7732 ;;  tmp             1   22[COMRAM] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2   16[COMRAM] PTR void 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7742 ;;      Params:         6       0       0       0       0       0       0       0       0
  7743 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7745 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7746 ;;Total ram usage:       11 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 2
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_efgtoa
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text24
  7757   004144                     __ptext24:
  7758                           	callstack 0
  7759   004144                     _memcpy:
  7760                           	callstack 23
  7761   004144  C013  F01A         	movff	memcpy@s1,memcpy@s
  7762   004148  C014  F01B         	movff	memcpy@s1+1,memcpy@s+1
  7763   00414C  C011  F018         	movff	memcpy@d1,memcpy@d
  7764   004150  C012  F019         	movff	memcpy@d1+1,memcpy@d+1
  7765   004154  EFBC  F020         	goto	l6784
  7766   004158                     l6776:
  7767   004158  C01A  FFD9         	movff	memcpy@s,fsr2l
  7768   00415C  C01B  FFDA         	movff	memcpy@s+1,fsr2h
  7769   004160  50DF               	movf	indf2,w,c
  7770   004162  6E17               	movwf	memcpy@tmp^0,c
  7771   004164  4A1A               	infsnz	memcpy@s^0,f,c
  7772   004166  2A1B               	incf	(memcpy@s+1)^0,f,c
  7773   004168  C018  FFD9         	movff	memcpy@d,fsr2l
  7774   00416C  C019  FFDA         	movff	memcpy@d+1,fsr2h
  7775   004170  C017  FFDF         	movff	memcpy@tmp,indf2
  7776   004174  4A18               	infsnz	memcpy@d^0,f,c
  7777   004176  2A19               	incf	(memcpy@d+1)^0,f,c
  7778   004178                     l6784:
  7779   004178  0615               	decf	memcpy@n^0,f,c
  7780   00417A  A0D8               	btfss	status,0,c
  7781   00417C  0616               	decf	(memcpy@n+1)^0,f,c
  7782   00417E  2815               	incf	memcpy@n^0,w,c
  7783   004180  E106               	bnz	u7251
  7784   004182  2816               	incf	(memcpy@n+1)^0,w,c
  7785   004184  A4D8               	btfss	status,2,c
  7786   004186  EFC7  F020         	goto	u7251
  7787   00418A  EFC9  F020         	goto	u7250
  7788   00418E                     u7251:
  7789   00418E  EFAC  F020         	goto	l6776
  7790   004192                     u7250:
  7791   004192  0012               	return		;funcret
  7792   004194                     __end_of_memcpy:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function _labs *****************
  7796 ;; Defined at:
  7797 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  a               4   16[COMRAM] long 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  4   16[COMRAM] long 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7811 ;;      Params:         4       0       0       0       0       0       0       0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7813 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7814 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7815 ;;Total ram usage:        8 bytes
  7816 ;; Hardware stack levels used: 1
  7817 ;; Hardware stack levels required when called: 2
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_efgtoa
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text25
  7826   003F84                     __ptext25:
  7827                           	callstack 0
  7828   003F84                     _labs:
  7829                           	callstack 23
  7830   003F84  BE14               	btfsc	(labs@a+3)^0,7,c
  7831   003F86  EFD1  F01F         	goto	u7140
  7832   003F8A  5014               	movf	(labs@a+3)^0,w,c
  7833   003F8C  1013               	iorwf	(labs@a+2)^0,w,c
  7834   003F8E  1012               	iorwf	(labs@a+1)^0,w,c
  7835   003F90  E106               	bnz	u7141
  7836   003F92  0411               	decf	labs@a^0,w,c
  7837   003F94  B0D8               	btfsc	status,0,c
  7838   003F96  EFCF  F01F         	goto	u7141
  7839   003F9A  EFD1  F01F         	goto	u7140
  7840   003F9E                     u7141:
  7841   003F9E  EFEC  F01F         	goto	l1254
  7842   003FA2                     u7140:
  7843   003FA2  C011  F015         	movff	labs@a,??_labs
  7844   003FA6  C012  F016         	movff	labs@a+1,??_labs+1
  7845   003FAA  C013  F017         	movff	labs@a+2,??_labs+2
  7846   003FAE  C014  F018         	movff	labs@a+3,??_labs+3
  7847   003FB2  1E15               	comf	??_labs^0,f,c
  7848   003FB4  1E16               	comf	(??_labs+1)^0,f,c
  7849   003FB6  1E17               	comf	(??_labs+2)^0,f,c
  7850   003FB8  1E18               	comf	(??_labs+3)^0,f,c
  7851   003FBA  2A15               	incf	??_labs^0,f,c
  7852   003FBC  0E00               	movlw	0
  7853   003FBE  2216               	addwfc	(??_labs+1)^0,f,c
  7854   003FC0  2217               	addwfc	(??_labs+2)^0,f,c
  7855   003FC2  2218               	addwfc	(??_labs+3)^0,f,c
  7856   003FC4  C015  F011         	movff	??_labs,?_labs
  7857   003FC8  C016  F012         	movff	??_labs+1,?_labs+1
  7858   003FCC  C017  F013         	movff	??_labs+2,?_labs+2
  7859   003FD0  C018  F014         	movff	??_labs+3,?_labs+3
  7860   003FD4  EFF4  F01F         	goto	l1257
  7861   003FD8                     l1254:
  7862   003FD8  C011  F011         	movff	labs@a,?_labs
  7863   003FDC  C012  F012         	movff	labs@a+1,?_labs+1
  7864   003FE0  C013  F013         	movff	labs@a+2,?_labs+2
  7865   003FE4  C014  F014         	movff	labs@a+3,?_labs+3
  7866   003FE8                     l1257:
  7867   003FE8  0012               	return		;funcret
  7868   003FEA                     __end_of_labs:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function _floorf *****************
  7872 ;; Defined at:
  7873 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  x               4   55[COMRAM] float 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  u               4   12[BANK0 ] struct .
  7878 ;;  m               4    6[BANK0 ] unsigned long 
  7879 ;;  e               2   10[BANK0 ] int 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  4   55[COMRAM] float 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7889 ;;      Params:         4       0       0       0       0       0       0       0       0
  7890 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7891 ;;      Temps:          0       6       0       0       0       0       0       0       0
  7892 ;;      Totals:         4      16       0       0       0       0       0       0       0
  7893 ;;Total ram usage:       20 bytes
  7894 ;; Hardware stack levels used: 1
  7895 ;; Hardware stack levels required when called: 2
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_efgtoa
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text26
  7904   002F02                     __ptext26:
  7905                           	callstack 0
  7906   002F02                     _floorf:
  7907                           	callstack 23
  7908   002F02  C0CC  F06C         	movff	floorf@F526,floorf@u
  7909   002F06  C0CD  F06D         	movff	floorf@F526+1,floorf@u+1
  7910   002F0A  C0CE  F06E         	movff	floorf@F526+2,floorf@u+2
  7911   002F0E  C0CF  F06F         	movff	floorf@F526+3,floorf@u+3
  7912   002F12  C038  F06C         	movff	floorf@x,floorf@u
  7913   002F16  C039  F06D         	movff	floorf@x+1,floorf@u+1
  7914   002F1A  C03A  F06E         	movff	floorf@x+2,floorf@u+2
  7915   002F1E  C03B  F06F         	movff	floorf@x+3,floorf@u+3
  7916   002F22  0E81               	movlw	129
  7917   002F24  0100               	movlb	0	; () banked
  7918   002F26  6F60               	movwf	??_floorf& (0+255),b
  7919   002F28  0EFF               	movlw	255
  7920   002F2A  6F61               	movwf	(??_floorf+1)& (0+255),b
  7921   002F2C  C06C  F062         	movff	floorf@u,??_floorf+2
  7922   002F30  C06D  F063         	movff	floorf@u+1,??_floorf+3
  7923   002F34  C06E  F064         	movff	floorf@u+2,??_floorf+4
  7924   002F38  C06F  F065         	movff	floorf@u+3,??_floorf+5
  7925   002F3C  0E18               	movlw	24
  7926   002F3E  EFA6  F017         	goto	u7150
  7927   002F42                     u7155:
  7928   002F42  90D8               	bcf	status,0,c
  7929   002F44  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  7930   002F46  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  7931   002F48  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  7932   002F4A  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  7933   002F4C                     u7150:
  7934   002F4C  2EE8               	decfsz	wreg,f,c
  7935   002F4E  EFA1  F017         	goto	u7155
  7936   002F52  5162               	movf	(??_floorf+2)& (0+255),w,b
  7937   002F54  2560               	addwf	??_floorf& (0+255),w,b
  7938   002F56  6F6A               	movwf	floorf@e& (0+255),b
  7939   002F58  0E00               	movlw	0
  7940   002F5A  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  7941   002F5C  6F6B               	movwf	(floorf@e+1)& (0+255),b
  7942   002F5E  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  7943   002F60  EFBB  F017         	goto	u7161
  7944   002F64  516B               	movf	(floorf@e+1)& (0+255),w,b
  7945   002F66  E109               	bnz	u7160
  7946   002F68  0E17               	movlw	23
  7947   002F6A  5D6A               	subwf	floorf@e& (0+255),w,b
  7948   002F6C  A0D8               	btfss	status,0,c
  7949   002F6E  EFBB  F017         	goto	u7161
  7950   002F72  EFBD  F017         	goto	u7160
  7951   002F76                     u7161:
  7952   002F76  EFC7  F017         	goto	l6752
  7953   002F7A                     u7160:
  7954   002F7A                     l6750:
  7955                           
  7956                           ; BSR set to: 0
  7957   002F7A  C038  F038         	movff	floorf@x,?_floorf
  7958   002F7E  C039  F039         	movff	floorf@x+1,?_floorf+1
  7959   002F82  C03A  F03A         	movff	floorf@x+2,?_floorf+2
  7960   002F86  C03B  F03B         	movff	floorf@x+3,?_floorf+3
  7961   002F8A  EF8B  F018         	goto	l1229
  7962   002F8E                     l6752:
  7963                           
  7964                           ; BSR set to: 0
  7965   002F8E  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  7966   002F90  EFCC  F017         	goto	u7171
  7967   002F94  EFCE  F017         	goto	u7170
  7968   002F98                     u7171:
  7969   002F98  EF3F  F018         	goto	l6762
  7970   002F9C                     u7170:
  7971   002F9C                     
  7972                           ; BSR set to: 0
  7973   002F9C  C06A  F060         	movff	floorf@e,??_floorf
  7974   002FA0  0EFF               	movlw	255
  7975   002FA2  6F61               	movwf	(??_floorf+1)& (0+255),b
  7976   002FA4  0EFF               	movlw	255
  7977   002FA6  6F62               	movwf	(??_floorf+2)& (0+255),b
  7978   002FA8  0E7F               	movlw	127
  7979   002FAA  6F63               	movwf	(??_floorf+3)& (0+255),b
  7980   002FAC  0E00               	movlw	0
  7981   002FAE  6F64               	movwf	(??_floorf+4)& (0+255),b
  7982   002FB0                     u7185:
  7983   002FB0  6760               	tstfsz	??_floorf& (0+255),b
  7984   002FB2  EFDD  F017         	goto	u7186
  7985   002FB6  EFE5  F017         	goto	u7187
  7986   002FBA                     u7186:
  7987   002FBA  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  7988   002FBC  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  7989   002FBE  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  7990   002FC0  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  7991   002FC2  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  7992   002FC4  2F60               	decfsz	??_floorf& (0+255),f,b
  7993   002FC6  EFD8  F017         	goto	u7185
  7994   002FCA                     u7187:
  7995   002FCA  C061  F066         	movff	??_floorf+1,floorf@m
  7996   002FCE  C062  F067         	movff	??_floorf+2,floorf@m+1
  7997   002FD2  C063  F068         	movff	??_floorf+3,floorf@m+2
  7998   002FD6  C064  F069         	movff	??_floorf+4,floorf@m+3
  7999   002FDA  0100               	movlb	0	; () banked
  8000   002FDC  5166               	movf	floorf@m& (0+255),w,b
  8001   002FDE  156C               	andwf	floorf@u& (0+255),w,b
  8002   002FE0  6F60               	movwf	??_floorf& (0+255),b
  8003   002FE2  5167               	movf	(floorf@m+1)& (0+255),w,b
  8004   002FE4  156D               	andwf	(floorf@u+1)& (0+255),w,b
  8005   002FE6  6F61               	movwf	(??_floorf+1)& (0+255),b
  8006   002FE8  5168               	movf	(floorf@m+2)& (0+255),w,b
  8007   002FEA  156E               	andwf	(floorf@u+2)& (0+255),w,b
  8008   002FEC  6F62               	movwf	(??_floorf+2)& (0+255),b
  8009   002FEE  5169               	movf	(floorf@m+3)& (0+255),w,b
  8010   002FF0  156F               	andwf	(floorf@u+3)& (0+255),w,b
  8011   002FF2  6F63               	movwf	(??_floorf+3)& (0+255),b
  8012   002FF4  5160               	movf	??_floorf& (0+255),w,b
  8013   002FF6  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8014   002FF8  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8015   002FFA  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8016   002FFC  A4D8               	btfss	status,2,c
  8017   002FFE  EF03  F018         	goto	u7191
  8018   003002  EF05  F018         	goto	u7190
  8019   003006                     u7191:
  8020   003006  EF07  F018         	goto	l6758
  8021   00300A                     u7190:
  8022   00300A  EFBD  F017         	goto	l6750
  8023   00300E                     l6758:
  8024                           
  8025                           ; BSR set to: 0
  8026   00300E  C06C  F060         	movff	floorf@u,??_floorf
  8027   003012  C06D  F061         	movff	floorf@u+1,??_floorf+1
  8028   003016  C06E  F062         	movff	floorf@u+2,??_floorf+2
  8029   00301A  C06F  F063         	movff	floorf@u+3,??_floorf+3
  8030   00301E  0E20               	movlw	32
  8031   003020  EF17  F018         	goto	u7200
  8032   003024                     u7205:
  8033   003024  90D8               	bcf	status,0,c
  8034   003026  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  8035   003028  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  8036   00302A  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  8037   00302C  3360               	rrcf	??_floorf& (0+255),f,b
  8038   00302E                     u7200:
  8039   00302E  2EE8               	decfsz	wreg,f,c
  8040   003030  EF12  F018         	goto	u7205
  8041   003034  5160               	movf	??_floorf& (0+255),w,b
  8042   003036  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8043   003038  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8044   00303A  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8045   00303C  B4D8               	btfsc	status,2,c
  8046   00303E  EF23  F018         	goto	u7211
  8047   003042  EF25  F018         	goto	u7210
  8048   003046                     u7211:
  8049   003046  EF2D  F018         	goto	l1232
  8050   00304A                     u7210:
  8051   00304A                     
  8052                           ; BSR set to: 0
  8053   00304A  5166               	movf	floorf@m& (0+255),w,b
  8054   00304C  276C               	addwf	floorf@u& (0+255),f,b
  8055   00304E  5167               	movf	(floorf@m+1)& (0+255),w,b
  8056   003050  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  8057   003052  5168               	movf	(floorf@m+2)& (0+255),w,b
  8058   003054  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  8059   003056  5169               	movf	(floorf@m+3)& (0+255),w,b
  8060   003058  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  8061   00305A                     l1232:
  8062                           
  8063                           ; BSR set to: 0
  8064   00305A  1D66               	comf	floorf@m& (0+255),w,b
  8065   00305C  6F60               	movwf	??_floorf& (0+255),b
  8066   00305E  1D67               	comf	(floorf@m+1)& (0+255),w,b
  8067   003060  6F61               	movwf	(??_floorf+1)& (0+255),b
  8068   003062  1D68               	comf	(floorf@m+2)& (0+255),w,b
  8069   003064  6F62               	movwf	(??_floorf+2)& (0+255),b
  8070   003066  1D69               	comf	(floorf@m+3)& (0+255),w,b
  8071   003068  6F63               	movwf	(??_floorf+3)& (0+255),b
  8072   00306A  5160               	movf	??_floorf& (0+255),w,b
  8073   00306C  176C               	andwf	floorf@u& (0+255),f,b
  8074   00306E  5161               	movf	(??_floorf+1)& (0+255),w,b
  8075   003070  176D               	andwf	(floorf@u+1)& (0+255),f,b
  8076   003072  5162               	movf	(??_floorf+2)& (0+255),w,b
  8077   003074  176E               	andwf	(floorf@u+2)& (0+255),f,b
  8078   003076  5163               	movf	(??_floorf+3)& (0+255),w,b
  8079   003078  176F               	andwf	(floorf@u+3)& (0+255),f,b
  8080   00307A  EF83  F018         	goto	l6770
  8081   00307E                     l6762:
  8082                           
  8083                           ; BSR set to: 0
  8084   00307E  C06C  F060         	movff	floorf@u,??_floorf
  8085   003082  C06D  F061         	movff	floorf@u+1,??_floorf+1
  8086   003086  C06E  F062         	movff	floorf@u+2,??_floorf+2
  8087   00308A  C06F  F063         	movff	floorf@u+3,??_floorf+3
  8088   00308E  0E20               	movlw	32
  8089   003090  EF4F  F018         	goto	u7220
  8090   003094                     u7225:
  8091   003094  90D8               	bcf	status,0,c
  8092   003096  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  8093   003098  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  8094   00309A  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  8095   00309C  3360               	rrcf	??_floorf& (0+255),f,b
  8096   00309E                     u7220:
  8097   00309E  2EE8               	decfsz	wreg,f,c
  8098   0030A0  EF4A  F018         	goto	u7225
  8099   0030A4  5160               	movf	??_floorf& (0+255),w,b
  8100   0030A6  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8101   0030A8  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8102   0030AA  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8103   0030AC  A4D8               	btfss	status,2,c
  8104   0030AE  EF5B  F018         	goto	u7231
  8105   0030B2  EF5D  F018         	goto	u7230
  8106   0030B6                     u7231:
  8107   0030B6  EF67  F018         	goto	l6766
  8108   0030BA                     u7230:
  8109   0030BA                     
  8110                           ; BSR set to: 0
  8111   0030BA  0E00               	movlw	0
  8112   0030BC  6F6C               	movwf	floorf@u& (0+255),b
  8113   0030BE  0E00               	movlw	0
  8114   0030C0  6F6D               	movwf	(floorf@u+1)& (0+255),b
  8115   0030C2  0E00               	movlw	0
  8116   0030C4  6F6E               	movwf	(floorf@u+2)& (0+255),b
  8117   0030C6  0E00               	movlw	0
  8118   0030C8  6F6F               	movwf	(floorf@u+3)& (0+255),b
  8119   0030CA  EF83  F018         	goto	l6770
  8120   0030CE                     l6766:
  8121                           
  8122                           ; BSR set to: 0
  8123   0030CE  90D8               	bcf	status,0,c
  8124   0030D0  356C               	rlcf	floorf@u& (0+255),w,b
  8125   0030D2  6F60               	movwf	??_floorf& (0+255),b
  8126   0030D4  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  8127   0030D6  6F61               	movwf	(??_floorf+1)& (0+255),b
  8128   0030D8  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  8129   0030DA  6F62               	movwf	(??_floorf+2)& (0+255),b
  8130   0030DC  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  8131   0030DE  6F63               	movwf	(??_floorf+3)& (0+255),b
  8132   0030E0  5160               	movf	??_floorf& (0+255),w,b
  8133   0030E2  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8134   0030E4  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8135   0030E6  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8136   0030E8  B4D8               	btfsc	status,2,c
  8137   0030EA  EF79  F018         	goto	u7241
  8138   0030EE  EF7B  F018         	goto	u7240
  8139   0030F2                     u7241:
  8140   0030F2  EF83  F018         	goto	l6770
  8141   0030F6                     u7240:
  8142   0030F6                     
  8143                           ; BSR set to: 0
  8144   0030F6  0E00               	movlw	0
  8145   0030F8  6F6C               	movwf	floorf@u& (0+255),b
  8146   0030FA  0E00               	movlw	0
  8147   0030FC  6F6D               	movwf	(floorf@u+1)& (0+255),b
  8148   0030FE  0E80               	movlw	128
  8149   003100  6F6E               	movwf	(floorf@u+2)& (0+255),b
  8150   003102  0EBF               	movlw	191
  8151   003104  6F6F               	movwf	(floorf@u+3)& (0+255),b
  8152   003106                     l6770:
  8153                           
  8154                           ; BSR set to: 0
  8155   003106  C06C  F038         	movff	floorf@u,?_floorf
  8156   00310A  C06D  F039         	movff	floorf@u+1,?_floorf+1
  8157   00310E  C06E  F03A         	movff	floorf@u+2,?_floorf+2
  8158   003112  C06F  F03B         	movff	floorf@u+3,?_floorf+3
  8159   003116                     l1229:
  8160                           
  8161                           ; BSR set to: 0
  8162   003116  0012               	return		;funcret
  8163   003118                     __end_of_floorf:
  8164                           	callstack 0
  8165                           
  8166 ;; *************** function ___fpclassifyf *****************
  8167 ;; Defined at:
  8168 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  x               4   16[COMRAM] float 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;  u               4   26[COMRAM] struct .
  8173 ;;  e               2   24[COMRAM] int 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  2   16[COMRAM] int 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8183 ;;      Params:         4       0       0       0       0       0       0       0       0
  8184 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8185 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8186 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8187 ;;Total ram usage:       14 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 2
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_efgtoa
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text27
  8198   00381E                     __ptext27:
  8199                           	callstack 0
  8200   00381E                     ___fpclassifyf:
  8201                           	callstack 23
  8202   00381E  C0D0  F01B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8203   003822  C0D1  F01C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8204   003826  C0D2  F01D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8205   00382A  C0D3  F01E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8206   00382E  C011  F01B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8207   003832  C012  F01C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8208   003836  C013  F01D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8209   00383A  C014  F01E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8210   00383E  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  8211   003842  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8212   003846  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8213   00384A  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8214   00384E  0E18               	movlw	24
  8215   003850  EF2F  F01C         	goto	u7060
  8216   003854                     u7065:
  8217   003854  90D8               	bcf	status,0,c
  8218   003856  3218               	rrcf	(??___fpclassifyf+3)^0,f,c
  8219   003858  3217               	rrcf	(??___fpclassifyf+2)^0,f,c
  8220   00385A  3216               	rrcf	(??___fpclassifyf+1)^0,f,c
  8221   00385C  3215               	rrcf	??___fpclassifyf^0,f,c
  8222   00385E                     u7060:
  8223   00385E  2EE8               	decfsz	wreg,f,c
  8224   003860  EF2A  F01C         	goto	u7065
  8225   003864  5015               	movf	??___fpclassifyf^0,w,c
  8226   003866  6E19               	movwf	___fpclassifyf@e^0,c
  8227   003868  6A1A               	clrf	(___fpclassifyf@e+1)^0,c
  8228   00386A  5019               	movf	___fpclassifyf@e^0,w,c
  8229   00386C  101A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8230   00386E  A4D8               	btfss	status,2,c
  8231   003870  EF3C  F01C         	goto	u7071
  8232   003874  EF3E  F01C         	goto	u7070
  8233   003878                     u7071:
  8234   003878  EF5E  F01C         	goto	l6728
  8235   00387C                     u7070:
  8236   00387C  90D8               	bcf	status,0,c
  8237   00387E  341B               	rlcf	___fpclassifyf@u^0,w,c
  8238   003880  6E15               	movwf	??___fpclassifyf^0,c
  8239   003882  341C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8240   003884  6E16               	movwf	(??___fpclassifyf+1)^0,c
  8241   003886  341D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8242   003888  6E17               	movwf	(??___fpclassifyf+2)^0,c
  8243   00388A  341E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8244   00388C  6E18               	movwf	(??___fpclassifyf+3)^0,c
  8245   00388E  5015               	movf	??___fpclassifyf^0,w,c
  8246   003890  1016               	iorwf	(??___fpclassifyf+1)^0,w,c
  8247   003892  1017               	iorwf	(??___fpclassifyf+2)^0,w,c
  8248   003894  1018               	iorwf	(??___fpclassifyf+3)^0,w,c
  8249   003896  A4D8               	btfss	status,2,c
  8250   003898  EF50  F01C         	goto	u7081
  8251   00389C  EF52  F01C         	goto	u7080
  8252   0038A0                     u7081:
  8253   0038A0  EF58  F01C         	goto	l6724
  8254   0038A4                     u7080:
  8255   0038A4  0E00               	movlw	0
  8256   0038A6  6E12               	movwf	(?___fpclassifyf+1)^0,c
  8257   0038A8  0E02               	movlw	2
  8258   0038AA  6E11               	movwf	?___fpclassifyf^0,c
  8259   0038AC  EF8D  F01C         	goto	l1197
  8260   0038B0                     l6724:
  8261   0038B0  0E00               	movlw	0
  8262   0038B2  6E12               	movwf	(?___fpclassifyf+1)^0,c
  8263   0038B4  0E03               	movlw	3
  8264   0038B6  6E11               	movwf	?___fpclassifyf^0,c
  8265   0038B8  EF8D  F01C         	goto	l1197
  8266   0038BC                     l6728:
  8267   0038BC  2819               	incf	___fpclassifyf@e^0,w,c
  8268   0038BE  101A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8269   0038C0  A4D8               	btfss	status,2,c
  8270   0038C2  EF65  F01C         	goto	u7091
  8271   0038C6  EF67  F01C         	goto	u7090
  8272   0038CA                     u7091:
  8273   0038CA  EF89  F01C         	goto	l6734
  8274   0038CE                     u7090:
  8275   0038CE  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  8276   0038D2  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8277   0038D6  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8278   0038DA  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8279   0038DE  0E09               	movlw	9
  8280   0038E0                     u7105:
  8281   0038E0  90D8               	bcf	status,0,c
  8282   0038E2  3615               	rlcf	??___fpclassifyf^0,f,c
  8283   0038E4  3616               	rlcf	(??___fpclassifyf+1)^0,f,c
  8284   0038E6  3617               	rlcf	(??___fpclassifyf+2)^0,f,c
  8285   0038E8  3618               	rlcf	(??___fpclassifyf+3)^0,f,c
  8286   0038EA  2EE8               	decfsz	wreg,f,c
  8287   0038EC  EF70  F01C         	goto	u7105
  8288   0038F0  5015               	movf	??___fpclassifyf^0,w,c
  8289   0038F2  1016               	iorwf	(??___fpclassifyf+1)^0,w,c
  8290   0038F4  1017               	iorwf	(??___fpclassifyf+2)^0,w,c
  8291   0038F6  1018               	iorwf	(??___fpclassifyf+3)^0,w,c
  8292   0038F8  B4D8               	btfsc	status,2,c
  8293   0038FA  EF81  F01C         	goto	u7111
  8294   0038FE  EF84  F01C         	goto	u7110
  8295   003902                     u7111:
  8296   003902  0E01               	movlw	1
  8297   003904  EF85  F01C         	goto	u7120
  8298   003908                     u7110:
  8299   003908  0E00               	movlw	0
  8300   00390A                     u7120:
  8301   00390A  6E11               	movwf	?___fpclassifyf^0,c
  8302   00390C  6A12               	clrf	(?___fpclassifyf+1)^0,c
  8303   00390E  EF8D  F01C         	goto	l1197
  8304   003912                     l6734:
  8305   003912  0E00               	movlw	0
  8306   003914  6E12               	movwf	(?___fpclassifyf+1)^0,c
  8307   003916  0E04               	movlw	4
  8308   003918  6E11               	movwf	?___fpclassifyf^0,c
  8309   00391A                     l1197:
  8310   00391A  0012               	return		;funcret
  8311   00391C                     __end_of___fpclassifyf:
  8312                           	callstack 0
  8313                           
  8314 ;; *************** function ___fltol *****************
  8315 ;; Defined at:
  8316 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  f1              4   16[COMRAM] int 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  exp1            1   25[COMRAM] unsigned char 
  8321 ;;  sign1           1   24[COMRAM] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  4   16[COMRAM] long 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8331 ;;      Params:         4       0       0       0       0       0       0       0       0
  8332 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8333 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8334 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8335 ;;Total ram usage:       10 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 2
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_efgtoa
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text28
  8346   003614                     __ptext28:
  8347                           	callstack 0
  8348   003614                     ___fltol:
  8349                           	callstack 23
  8350   003614  3413               	rlcf	(___fltol@f1+2)^0,w,c
  8351   003616  3414               	rlcf	(___fltol@f1+3)^0,w,c
  8352   003618  6E1A               	movwf	___fltol@exp1^0,c
  8353   00361A  501A               	movf	___fltol@exp1^0,w,c
  8354   00361C  A4D8               	btfss	status,2,c
  8355   00361E  EF13  F01B         	goto	u6901
  8356   003622  EF15  F01B         	goto	u6900
  8357   003626                     u6901:
  8358   003626  EF1F  F01B         	goto	l6626
  8359   00362A                     u6900:
  8360   00362A                     l6622:
  8361   00362A  0E00               	movlw	0
  8362   00362C  6E11               	movwf	?___fltol^0,c
  8363   00362E  0E00               	movlw	0
  8364   003630  6E12               	movwf	(?___fltol+1)^0,c
  8365   003632  0E00               	movlw	0
  8366   003634  6E13               	movwf	(?___fltol+2)^0,c
  8367   003636  0E00               	movlw	0
  8368   003638  6E14               	movwf	(?___fltol+3)^0,c
  8369   00363A  EF8C  F01B         	goto	l648
  8370   00363E                     l6626:
  8371   00363E  C011  F015         	movff	___fltol@f1,??___fltol
  8372   003642  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  8373   003646  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  8374   00364A  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  8375   00364E  0E20               	movlw	32
  8376   003650  EF2F  F01B         	goto	u6910
  8377   003654                     u6915:
  8378   003654  90D8               	bcf	status,0,c
  8379   003656  3218               	rrcf	(??___fltol+3)^0,f,c
  8380   003658  3217               	rrcf	(??___fltol+2)^0,f,c
  8381   00365A  3216               	rrcf	(??___fltol+1)^0,f,c
  8382   00365C  3215               	rrcf	??___fltol^0,f,c
  8383   00365E                     u6910:
  8384   00365E  2EE8               	decfsz	wreg,f,c
  8385   003660  EF2A  F01B         	goto	u6915
  8386   003664  5015               	movf	??___fltol^0,w,c
  8387   003666  6E19               	movwf	___fltol@sign1^0,c
  8388   003668  8E13               	bsf	(___fltol@f1+2)^0,7,c
  8389   00366A  0EFF               	movlw	255
  8390   00366C  1611               	andwf	___fltol@f1^0,f,c
  8391   00366E  0EFF               	movlw	255
  8392   003670  1612               	andwf	(___fltol@f1+1)^0,f,c
  8393   003672  0EFF               	movlw	255
  8394   003674  1613               	andwf	(___fltol@f1+2)^0,f,c
  8395   003676  0E00               	movlw	0
  8396   003678  1614               	andwf	(___fltol@f1+3)^0,f,c
  8397   00367A  0E96               	movlw	150
  8398   00367C  5E1A               	subwf	___fltol@exp1^0,f,c
  8399   00367E  BE1A               	btfsc	___fltol@exp1^0,7,c
  8400   003680  EF46  F01B         	goto	u6920
  8401   003684  EF44  F01B         	goto	u6921
  8402   003688                     u6921:
  8403   003688  EF5C  F01B         	goto	l6646
  8404   00368C                     u6920:
  8405   00368C  501A               	movf	___fltol@exp1^0,w,c
  8406   00368E  0A80               	xorlw	128
  8407   003690  0F97               	addlw	151
  8408   003692  B0D8               	btfsc	status,0,c
  8409   003694  EF4E  F01B         	goto	u6931
  8410   003698  EF50  F01B         	goto	u6930
  8411   00369C                     u6931:
  8412   00369C  EF52  F01B         	goto	l6642
  8413   0036A0                     u6930:
  8414   0036A0  EF15  F01B         	goto	l6622
  8415   0036A4                     l6642:
  8416   0036A4  90D8               	bcf	status,0,c
  8417   0036A6  3214               	rrcf	(___fltol@f1+3)^0,f,c
  8418   0036A8  3213               	rrcf	(___fltol@f1+2)^0,f,c
  8419   0036AA  3212               	rrcf	(___fltol@f1+1)^0,f,c
  8420   0036AC  3211               	rrcf	___fltol@f1^0,f,c
  8421   0036AE  3E1A               	incfsz	___fltol@exp1^0,f,c
  8422   0036B0  EF52  F01B         	goto	l6642
  8423   0036B4  EF74  F01B         	goto	l6656
  8424   0036B8                     l6646:
  8425   0036B8  0E1F               	movlw	31
  8426   0036BA  641A               	cpfsgt	___fltol@exp1^0,c
  8427   0036BC  EF62  F01B         	goto	u6941
  8428   0036C0  EF64  F01B         	goto	u6940
  8429   0036C4                     u6941:
  8430   0036C4  EF6C  F01B         	goto	l6654
  8431   0036C8                     u6940:
  8432   0036C8  EF15  F01B         	goto	l6622
  8433   0036CC                     l6652:
  8434   0036CC  90D8               	bcf	status,0,c
  8435   0036CE  3611               	rlcf	___fltol@f1^0,f,c
  8436   0036D0  3612               	rlcf	(___fltol@f1+1)^0,f,c
  8437   0036D2  3613               	rlcf	(___fltol@f1+2)^0,f,c
  8438   0036D4  3614               	rlcf	(___fltol@f1+3)^0,f,c
  8439   0036D6  061A               	decf	___fltol@exp1^0,f,c
  8440   0036D8                     l6654:
  8441   0036D8  501A               	movf	___fltol@exp1^0,w,c
  8442   0036DA  A4D8               	btfss	status,2,c
  8443   0036DC  EF72  F01B         	goto	u6951
  8444   0036E0  EF74  F01B         	goto	u6950
  8445   0036E4                     u6951:
  8446   0036E4  EF66  F01B         	goto	l6652
  8447   0036E8                     u6950:
  8448   0036E8                     l6656:
  8449   0036E8  5019               	movf	___fltol@sign1^0,w,c
  8450   0036EA  B4D8               	btfsc	status,2,c
  8451   0036EC  EF7A  F01B         	goto	u6961
  8452   0036F0  EF7C  F01B         	goto	u6960
  8453   0036F4                     u6961:
  8454   0036F4  EF84  F01B         	goto	l6660
  8455   0036F8                     u6960:
  8456   0036F8  1E14               	comf	(___fltol@f1+3)^0,f,c
  8457   0036FA  1E13               	comf	(___fltol@f1+2)^0,f,c
  8458   0036FC  1E12               	comf	(___fltol@f1+1)^0,f,c
  8459   0036FE  6C11               	negf	___fltol@f1^0,c
  8460   003700  0E00               	movlw	0
  8461   003702  2212               	addwfc	(___fltol@f1+1)^0,f,c
  8462   003704  2213               	addwfc	(___fltol@f1+2)^0,f,c
  8463   003706  2214               	addwfc	(___fltol@f1+3)^0,f,c
  8464   003708                     l6660:
  8465   003708  C011  F011         	movff	___fltol@f1,?___fltol
  8466   00370C  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  8467   003710  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  8468   003714  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  8469   003718                     l648:
  8470   003718  0012               	return		;funcret
  8471   00371A                     __end_of___fltol:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function ___flsub *****************
  8475 ;; Defined at:
  8476 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  b               4   41[COMRAM] long 
  8479 ;;  a               4   45[COMRAM] long 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  4   41[COMRAM] long 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8491 ;;      Params:         8       0       0       0       0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8494 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8495 ;;Total ram usage:        8 bytes
  8496 ;; Hardware stack levels used: 1
  8497 ;; Hardware stack levels required when called: 3
  8498 ;; This function calls:
  8499 ;;		___fladd
  8500 ;; This function is called by:
  8501 ;;		_efgtoa
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text29
  8506   0041E0                     __ptext29:
  8507                           	callstack 0
  8508   0041E0                     ___flsub:
  8509                           	callstack 22
  8510   0041E0  0E00               	movlw	0
  8511   0041E2  1A2E               	xorwf	___flsub@a^0,f,c
  8512   0041E4  0E00               	movlw	0
  8513   0041E6  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  8514   0041E8  0E00               	movlw	0
  8515   0041EA  1A30               	xorwf	(___flsub@a+2)^0,f,c
  8516   0041EC  0E80               	movlw	128
  8517   0041EE  1A31               	xorwf	(___flsub@a+3)^0,f,c
  8518   0041F0  C02A  F011         	movff	___flsub@b,___fladd@b
  8519   0041F4  C02B  F012         	movff	___flsub@b+1,___fladd@b+1
  8520   0041F8  C02C  F013         	movff	___flsub@b+2,___fladd@b+2
  8521   0041FC  C02D  F014         	movff	___flsub@b+3,___fladd@b+3
  8522   004200  C02E  F015         	movff	___flsub@a,___fladd@a
  8523   004204  C02F  F016         	movff	___flsub@a+1,___fladd@a+1
  8524   004208  C030  F017         	movff	___flsub@a+2,___fladd@a+2
  8525   00420C  C031  F018         	movff	___flsub@a+3,___fladd@a+3
  8526   004210  EC3B  F005         	call	___fladd	;wreg free
  8527   004214  C011  F02A         	movff	?___fladd,?___flsub
  8528   004218  C012  F02B         	movff	?___fladd+1,?___flsub+1
  8529   00421C  C013  F02C         	movff	?___fladd+2,?___flsub+2
  8530   004220  C014  F02D         	movff	?___fladd+3,?___flsub+3
  8531   004224  0012               	return		;funcret
  8532   004226                     __end_of___flsub:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function ___fladd *****************
  8536 ;; Defined at:
  8537 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  b               4   16[COMRAM] long 
  8540 ;;  a               4   20[COMRAM] long 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  grs             1   31[COMRAM] unsigned char 
  8543 ;;  bexp            1   30[COMRAM] unsigned char 
  8544 ;;  aexp            1   29[COMRAM] unsigned char 
  8545 ;;  signs           1   28[COMRAM] unsigned char 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  4   16[COMRAM] unsigned char 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8555 ;;      Params:         8       0       0       0       0       0       0       0       0
  8556 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8557 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8558 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8559 ;;Total ram usage:       16 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 2
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		___flsub
  8566 ;;		_efgtoa
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text30
  8571   000A76                     __ptext30:
  8572                           	callstack 0
  8573   000A76                     ___fladd:
  8574                           	callstack 22
  8575   000A76  5014               	movf	(___fladd@b+3)^0,w,c
  8576   000A78  0B80               	andlw	128
  8577   000A7A  6E1D               	movwf	___fladd@signs^0,c
  8578   000A7C  5014               	movf	(___fladd@b+3)^0,w,c
  8579   000A7E  2414               	addwf	(___fladd@b+3)^0,w,c
  8580   000A80  6E1F               	movwf	___fladd@bexp^0,c
  8581   000A82  AE13               	btfss	(___fladd@b+2)^0,7,c
  8582   000A84  EF46  F005         	goto	u5991
  8583   000A88  EF48  F005         	goto	u5990
  8584   000A8C                     u5991:
  8585   000A8C  EF49  F005         	goto	l6090
  8586   000A90                     u5990:
  8587   000A90  801F               	bsf	___fladd@bexp^0,0,c
  8588   000A92                     l6090:
  8589   000A92  501F               	movf	___fladd@bexp^0,w,c
  8590   000A94  B4D8               	btfsc	status,2,c
  8591   000A96  EF4F  F005         	goto	u6001
  8592   000A9A  EF51  F005         	goto	u6000
  8593   000A9E                     u6001:
  8594   000A9E  EF66  F005         	goto	l6100
  8595   000AA2                     u6000:
  8596   000AA2  281F               	incf	___fladd@bexp^0,w,c
  8597   000AA4  A4D8               	btfss	status,2,c
  8598   000AA6  EF57  F005         	goto	u6011
  8599   000AAA  EF59  F005         	goto	u6010
  8600   000AAE                     u6011:
  8601   000AAE  EF61  F005         	goto	l6096
  8602   000AB2                     u6010:
  8603   000AB2  0E00               	movlw	0
  8604   000AB4  6E11               	movwf	___fladd@b^0,c
  8605   000AB6  0E00               	movlw	0
  8606   000AB8  6E12               	movwf	(___fladd@b+1)^0,c
  8607   000ABA  0E00               	movlw	0
  8608   000ABC  6E13               	movwf	(___fladd@b+2)^0,c
  8609   000ABE  0E00               	movlw	0
  8610   000AC0  6E14               	movwf	(___fladd@b+3)^0,c
  8611   000AC2                     l6096:
  8612   000AC2  8E13               	bsf	(___fladd@b+2)^0,7,c
  8613   000AC4  0E00               	movlw	0
  8614   000AC6  6E14               	movwf	(___fladd@b+3)^0,c
  8615   000AC8  EF6E  F005         	goto	l6102
  8616   000ACC                     l6100:
  8617   000ACC  0E00               	movlw	0
  8618   000ACE  6E11               	movwf	___fladd@b^0,c
  8619   000AD0  0E00               	movlw	0
  8620   000AD2  6E12               	movwf	(___fladd@b+1)^0,c
  8621   000AD4  0E00               	movlw	0
  8622   000AD6  6E13               	movwf	(___fladd@b+2)^0,c
  8623   000AD8  0E00               	movlw	0
  8624   000ADA  6E14               	movwf	(___fladd@b+3)^0,c
  8625   000ADC                     l6102:
  8626   000ADC  5018               	movf	(___fladd@a+3)^0,w,c
  8627   000ADE  0B80               	andlw	128
  8628   000AE0  6E1E               	movwf	___fladd@aexp^0,c
  8629   000AE2  501D               	movf	___fladd@signs^0,w,c
  8630   000AE4  181E               	xorwf	___fladd@aexp^0,w,c
  8631   000AE6  B4D8               	btfsc	status,2,c
  8632   000AE8  EF78  F005         	goto	u6021
  8633   000AEC  EF7A  F005         	goto	u6020
  8634   000AF0                     u6021:
  8635   000AF0  EF7B  F005         	goto	l6108
  8636   000AF4                     u6020:
  8637   000AF4  8C1D               	bsf	___fladd@signs^0,6,c
  8638   000AF6                     l6108:
  8639   000AF6  5018               	movf	(___fladd@a+3)^0,w,c
  8640   000AF8  2418               	addwf	(___fladd@a+3)^0,w,c
  8641   000AFA  6E1E               	movwf	___fladd@aexp^0,c
  8642   000AFC  AE17               	btfss	(___fladd@a+2)^0,7,c
  8643   000AFE  EF83  F005         	goto	u6031
  8644   000B02  EF85  F005         	goto	u6030
  8645   000B06                     u6031:
  8646   000B06  EF86  F005         	goto	l6114
  8647   000B0A                     u6030:
  8648   000B0A  801E               	bsf	___fladd@aexp^0,0,c
  8649   000B0C                     l6114:
  8650   000B0C  501E               	movf	___fladd@aexp^0,w,c
  8651   000B0E  B4D8               	btfsc	status,2,c
  8652   000B10  EF8C  F005         	goto	u6041
  8653   000B14  EF8E  F005         	goto	u6040
  8654   000B18                     u6041:
  8655   000B18  EFA3  F005         	goto	l6124
  8656   000B1C                     u6040:
  8657   000B1C  281E               	incf	___fladd@aexp^0,w,c
  8658   000B1E  A4D8               	btfss	status,2,c
  8659   000B20  EF94  F005         	goto	u6051
  8660   000B24  EF96  F005         	goto	u6050
  8661   000B28                     u6051:
  8662   000B28  EF9E  F005         	goto	l6120
  8663   000B2C                     u6050:
  8664   000B2C  0E00               	movlw	0
  8665   000B2E  6E15               	movwf	___fladd@a^0,c
  8666   000B30  0E00               	movlw	0
  8667   000B32  6E16               	movwf	(___fladd@a+1)^0,c
  8668   000B34  0E00               	movlw	0
  8669   000B36  6E17               	movwf	(___fladd@a+2)^0,c
  8670   000B38  0E00               	movlw	0
  8671   000B3A  6E18               	movwf	(___fladd@a+3)^0,c
  8672   000B3C                     l6120:
  8673   000B3C  8E17               	bsf	(___fladd@a+2)^0,7,c
  8674   000B3E  0E00               	movlw	0
  8675   000B40  6E18               	movwf	(___fladd@a+3)^0,c
  8676   000B42  EFAB  F005         	goto	l6126
  8677   000B46                     l6124:
  8678   000B46  0E00               	movlw	0
  8679   000B48  6E15               	movwf	___fladd@a^0,c
  8680   000B4A  0E00               	movlw	0
  8681   000B4C  6E16               	movwf	(___fladd@a+1)^0,c
  8682   000B4E  0E00               	movlw	0
  8683   000B50  6E17               	movwf	(___fladd@a+2)^0,c
  8684   000B52  0E00               	movlw	0
  8685   000B54  6E18               	movwf	(___fladd@a+3)^0,c
  8686   000B56                     l6126:
  8687   000B56  501F               	movf	___fladd@bexp^0,w,c
  8688   000B58  5C1E               	subwf	___fladd@aexp^0,w,c
  8689   000B5A  B0D8               	btfsc	status,0,c
  8690   000B5C  EFB2  F005         	goto	u6061
  8691   000B60  EFB4  F005         	goto	u6060
  8692   000B64                     u6061:
  8693   000B64  EFDB  F005         	goto	l6162
  8694   000B68                     u6060:
  8695   000B68  AC1D               	btfss	___fladd@signs^0,6,c
  8696   000B6A  EFB9  F005         	goto	u6071
  8697   000B6E  EFBB  F005         	goto	u6070
  8698   000B72                     u6071:
  8699   000B72  EFBD  F005         	goto	l6132
  8700   000B76                     u6070:
  8701   000B76  0E80               	movlw	128
  8702   000B78  1A1D               	xorwf	___fladd@signs^0,f,c
  8703   000B7A                     l6132:
  8704   000B7A  C01F  F020         	movff	___fladd@bexp,___fladd@grs
  8705   000B7E  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  8706   000B82  C020  F01E         	movff	___fladd@grs,___fladd@aexp
  8707   000B86  C011  F020         	movff	___fladd@b,___fladd@grs
  8708   000B8A  C015  F011         	movff	___fladd@a,___fladd@b
  8709   000B8E  C020  F015         	movff	___fladd@grs,___fladd@a
  8710   000B92  C012  F020         	movff	___fladd@b+1,___fladd@grs
  8711   000B96  C016  F012         	movff	___fladd@a+1,___fladd@b+1
  8712   000B9A  C020  F016         	movff	___fladd@grs,___fladd@a+1
  8713   000B9E  C013  F020         	movff	___fladd@b+2,___fladd@grs
  8714   000BA2  C017  F013         	movff	___fladd@a+2,___fladd@b+2
  8715   000BA6  C020  F017         	movff	___fladd@grs,___fladd@a+2
  8716   000BAA  C014  F020         	movff	___fladd@b+3,___fladd@grs
  8717   000BAE  C018  F014         	movff	___fladd@a+3,___fladd@b+3
  8718   000BB2  C020  F018         	movff	___fladd@grs,___fladd@a+3
  8719   000BB6                     l6162:
  8720   000BB6  0E00               	movlw	0
  8721   000BB8  6E20               	movwf	___fladd@grs^0,c
  8722   000BBA  501F               	movf	___fladd@bexp^0,w,c
  8723   000BBC  C01E  F019         	movff	___fladd@aexp,??___fladd
  8724   000BC0  6A1A               	clrf	(??___fladd+1)^0,c
  8725   000BC2  5E19               	subwf	??___fladd^0,f,c
  8726   000BC4  0E00               	movlw	0
  8727   000BC6  5A1A               	subwfb	(??___fladd+1)^0,f,c
  8728   000BC8  BE1A               	btfsc	(??___fladd+1)^0,7,c
  8729   000BCA  EFF0  F005         	goto	u6081
  8730   000BCE  501A               	movf	(??___fladd+1)^0,w,c
  8731   000BD0  E109               	bnz	u6080
  8732   000BD2  0E1A               	movlw	26
  8733   000BD4  5C19               	subwf	??___fladd^0,w,c
  8734   000BD6  A0D8               	btfss	status,0,c
  8735   000BD8  EFF0  F005         	goto	u6081
  8736   000BDC  EFF2  F005         	goto	u6080
  8737   000BE0                     u6081:
  8738   000BE0  EF29  F006         	goto	l880
  8739   000BE4                     u6080:
  8740   000BE4  5011               	movf	___fladd@b^0,w,c
  8741   000BE6  1012               	iorwf	(___fladd@b+1)^0,w,c
  8742   000BE8  1013               	iorwf	(___fladd@b+2)^0,w,c
  8743   000BEA  1014               	iorwf	(___fladd@b+3)^0,w,c
  8744   000BEC  A4D8               	btfss	status,2,c
  8745   000BEE  EFFB  F005         	goto	u6091
  8746   000BF2  EFFE  F005         	goto	u6090
  8747   000BF6                     u6091:
  8748   000BF6  0E01               	movlw	1
  8749   000BF8  EFFF  F005         	goto	u6100
  8750   000BFC                     u6090:
  8751   000BFC  0E00               	movlw	0
  8752   000BFE                     u6100:
  8753   000BFE  6E20               	movwf	___fladd@grs^0,c
  8754   000C00  0E00               	movlw	0
  8755   000C02  6E11               	movwf	___fladd@b^0,c
  8756   000C04  0E00               	movlw	0
  8757   000C06  6E12               	movwf	(___fladd@b+1)^0,c
  8758   000C08  0E00               	movlw	0
  8759   000C0A  6E13               	movwf	(___fladd@b+2)^0,c
  8760   000C0C  0E00               	movlw	0
  8761   000C0E  6E14               	movwf	(___fladd@b+3)^0,c
  8762   000C10  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  8763   000C14  EF32  F006         	goto	l879
  8764   000C18                     l881:
  8765   000C18  A020               	btfss	___fladd@grs^0,0,c
  8766   000C1A  EF11  F006         	goto	u6111
  8767   000C1E  EF13  F006         	goto	u6110
  8768   000C22                     u6111:
  8769   000C22  EF19  F006         	goto	l6174
  8770   000C26                     u6110:
  8771   000C26  90D8               	bcf	status,0,c
  8772   000C28  3020               	rrcf	___fladd@grs^0,w,c
  8773   000C2A  0901               	iorlw	1
  8774   000C2C  6E20               	movwf	___fladd@grs^0,c
  8775   000C2E  EF1B  F006         	goto	l6176
  8776   000C32                     l6174:
  8777   000C32  90D8               	bcf	status,0,c
  8778   000C34  3220               	rrcf	___fladd@grs^0,f,c
  8779   000C36                     l6176:
  8780   000C36  A011               	btfss	___fladd@b^0,0,c
  8781   000C38  EF20  F006         	goto	u6121
  8782   000C3C  EF22  F006         	goto	u6120
  8783   000C40                     u6121:
  8784   000C40  EF23  F006         	goto	l6180
  8785   000C44                     u6120:
  8786   000C44  8E20               	bsf	___fladd@grs^0,7,c
  8787   000C46                     l6180:
  8788   000C46  3414               	rlcf	(___fladd@b+3)^0,w,c
  8789   000C48  3214               	rrcf	(___fladd@b+3)^0,f,c
  8790   000C4A  3213               	rrcf	(___fladd@b+2)^0,f,c
  8791   000C4C  3212               	rrcf	(___fladd@b+1)^0,f,c
  8792   000C4E  3211               	rrcf	___fladd@b^0,f,c
  8793   000C50  2A1F               	incf	___fladd@bexp^0,f,c
  8794   000C52                     l880:
  8795   000C52  501E               	movf	___fladd@aexp^0,w,c
  8796   000C54  5C1F               	subwf	___fladd@bexp^0,w,c
  8797   000C56  A0D8               	btfss	status,0,c
  8798   000C58  EF30  F006         	goto	u6131
  8799   000C5C  EF32  F006         	goto	u6130
  8800   000C60                     u6131:
  8801   000C60  EF0C  F006         	goto	l881
  8802   000C64                     u6130:
  8803   000C64                     l879:
  8804   000C64  BC1D               	btfsc	___fladd@signs^0,6,c
  8805   000C66  EF37  F006         	goto	u6141
  8806   000C6A  EF39  F006         	goto	u6140
  8807   000C6E                     u6141:
  8808   000C6E  EF79  F006         	goto	l6208
  8809   000C72                     u6140:
  8810   000C72  501F               	movf	___fladd@bexp^0,w,c
  8811   000C74  A4D8               	btfss	status,2,c
  8812   000C76  EF3F  F006         	goto	u6151
  8813   000C7A  EF41  F006         	goto	u6150
  8814   000C7E                     u6151:
  8815   000C7E  EF4B  F006         	goto	l6190
  8816   000C82                     u6150:
  8817   000C82  0E00               	movlw	0
  8818   000C84  6E11               	movwf	?___fladd^0,c
  8819   000C86  0E00               	movlw	0
  8820   000C88  6E12               	movwf	(?___fladd+1)^0,c
  8821   000C8A  0E00               	movlw	0
  8822   000C8C  6E13               	movwf	(?___fladd+2)^0,c
  8823   000C8E  0E00               	movlw	0
  8824   000C90  6E14               	movwf	(?___fladd+3)^0,c
  8825   000C92  EF9A  F007         	goto	l888
  8826   000C96                     l6190:
  8827   000C96  5015               	movf	___fladd@a^0,w,c
  8828   000C98  2611               	addwf	___fladd@b^0,f,c
  8829   000C9A  5016               	movf	(___fladd@a+1)^0,w,c
  8830   000C9C  2212               	addwfc	(___fladd@b+1)^0,f,c
  8831   000C9E  5017               	movf	(___fladd@a+2)^0,w,c
  8832   000CA0  2213               	addwfc	(___fladd@b+2)^0,f,c
  8833   000CA2  5018               	movf	(___fladd@a+3)^0,w,c
  8834   000CA4  2214               	addwfc	(___fladd@b+3)^0,f,c
  8835   000CA6  A014               	btfss	(___fladd@b+3)^0,0,c
  8836   000CA8  EF58  F006         	goto	u6161
  8837   000CAC  EF5A  F006         	goto	u6160
  8838   000CB0                     u6161:
  8839   000CB0  EF06  F007         	goto	l6244
  8840   000CB4                     u6160:
  8841   000CB4  A020               	btfss	___fladd@grs^0,0,c
  8842   000CB6  EF5F  F006         	goto	u6171
  8843   000CBA  EF61  F006         	goto	u6170
  8844   000CBE                     u6171:
  8845   000CBE  EF67  F006         	goto	l6198
  8846   000CC2                     u6170:
  8847   000CC2  90D8               	bcf	status,0,c
  8848   000CC4  3020               	rrcf	___fladd@grs^0,w,c
  8849   000CC6  0901               	iorlw	1
  8850   000CC8  6E20               	movwf	___fladd@grs^0,c
  8851   000CCA  EF69  F006         	goto	l6200
  8852   000CCE                     l6198:
  8853   000CCE  90D8               	bcf	status,0,c
  8854   000CD0  3220               	rrcf	___fladd@grs^0,f,c
  8855   000CD2                     l6200:
  8856   000CD2  A011               	btfss	___fladd@b^0,0,c
  8857   000CD4  EF6E  F006         	goto	u6181
  8858   000CD8  EF70  F006         	goto	u6180
  8859   000CDC                     u6181:
  8860   000CDC  EF71  F006         	goto	l6204
  8861   000CE0                     u6180:
  8862   000CE0  8E20               	bsf	___fladd@grs^0,7,c
  8863   000CE2                     l6204:
  8864   000CE2  3414               	rlcf	(___fladd@b+3)^0,w,c
  8865   000CE4  3214               	rrcf	(___fladd@b+3)^0,f,c
  8866   000CE6  3213               	rrcf	(___fladd@b+2)^0,f,c
  8867   000CE8  3212               	rrcf	(___fladd@b+1)^0,f,c
  8868   000CEA  3211               	rrcf	___fladd@b^0,f,c
  8869   000CEC  2A1F               	incf	___fladd@bexp^0,f,c
  8870   000CEE  EF06  F007         	goto	l6244
  8871   000CF2                     l6208:
  8872   000CF2  5015               	movf	___fladd@a^0,w,c
  8873   000CF4  5C11               	subwf	___fladd@b^0,w,c
  8874   000CF6  5016               	movf	(___fladd@a+1)^0,w,c
  8875   000CF8  5812               	subwfb	(___fladd@b+1)^0,w,c
  8876   000CFA  5017               	movf	(___fladd@a+2)^0,w,c
  8877   000CFC  5813               	subwfb	(___fladd@b+2)^0,w,c
  8878   000CFE  5014               	movf	(___fladd@b+3)^0,w,c
  8879   000D00  0A80               	xorlw	128
  8880   000D02  6E19               	movwf	??___fladd^0,c
  8881   000D04  5018               	movf	(___fladd@a+3)^0,w,c
  8882   000D06  0A80               	xorlw	128
  8883   000D08  5819               	subwfb	??___fladd^0,w,c
  8884   000D0A  B0D8               	btfsc	status,0,c
  8885   000D0C  EF8A  F006         	goto	u6191
  8886   000D10  EF8C  F006         	goto	u6190
  8887   000D14                     u6191:
  8888   000D14  EFB7  F006         	goto	l6218
  8889   000D18                     u6190:
  8890   000D18  5011               	movf	___fladd@b^0,w,c
  8891   000D1A  5C15               	subwf	___fladd@a^0,w,c
  8892   000D1C  6E19               	movwf	??___fladd^0,c
  8893   000D1E  5012               	movf	(___fladd@b+1)^0,w,c
  8894   000D20  5816               	subwfb	(___fladd@a+1)^0,w,c
  8895   000D22  6E1A               	movwf	(??___fladd+1)^0,c
  8896   000D24  5013               	movf	(___fladd@b+2)^0,w,c
  8897   000D26  5817               	subwfb	(___fladd@a+2)^0,w,c
  8898   000D28  6E1B               	movwf	(??___fladd+2)^0,c
  8899   000D2A  5014               	movf	(___fladd@b+3)^0,w,c
  8900   000D2C  5818               	subwfb	(___fladd@a+3)^0,w,c
  8901   000D2E  6E1C               	movwf	(??___fladd+3)^0,c
  8902   000D30  0EFF               	movlw	255
  8903   000D32  2419               	addwf	??___fladd^0,w,c
  8904   000D34  6E11               	movwf	___fladd@b^0,c
  8905   000D36  0EFF               	movlw	255
  8906   000D38  201A               	addwfc	(??___fladd+1)^0,w,c
  8907   000D3A  6E12               	movwf	(___fladd@b+1)^0,c
  8908   000D3C  0EFF               	movlw	255
  8909   000D3E  201B               	addwfc	(??___fladd+2)^0,w,c
  8910   000D40  6E13               	movwf	(___fladd@b+2)^0,c
  8911   000D42  0EFF               	movlw	255
  8912   000D44  201C               	addwfc	(??___fladd+3)^0,w,c
  8913   000D46  6E14               	movwf	(___fladd@b+3)^0,c
  8914   000D48  0E80               	movlw	128
  8915   000D4A  1A1D               	xorwf	___fladd@signs^0,f,c
  8916   000D4C  6C20               	negf	___fladd@grs^0,c
  8917   000D4E  5020               	movf	___fladd@grs^0,w,c
  8918   000D50  A4D8               	btfss	status,2,c
  8919   000D52  EFAD  F006         	goto	u6201
  8920   000D56  EFAF  F006         	goto	u6200
  8921   000D5A                     u6201:
  8922   000D5A  EFBF  F006         	goto	l896
  8923   000D5E                     u6200:
  8924   000D5E  0E01               	movlw	1
  8925   000D60  2611               	addwf	___fladd@b^0,f,c
  8926   000D62  0E00               	movlw	0
  8927   000D64  2212               	addwfc	(___fladd@b+1)^0,f,c
  8928   000D66  2213               	addwfc	(___fladd@b+2)^0,f,c
  8929   000D68  2214               	addwfc	(___fladd@b+3)^0,f,c
  8930   000D6A  EFBF  F006         	goto	l896
  8931   000D6E                     l6218:
  8932   000D6E  5015               	movf	___fladd@a^0,w,c
  8933   000D70  5E11               	subwf	___fladd@b^0,f,c
  8934   000D72  5016               	movf	(___fladd@a+1)^0,w,c
  8935   000D74  5A12               	subwfb	(___fladd@b+1)^0,f,c
  8936   000D76  5017               	movf	(___fladd@a+2)^0,w,c
  8937   000D78  5A13               	subwfb	(___fladd@b+2)^0,f,c
  8938   000D7A  5018               	movf	(___fladd@a+3)^0,w,c
  8939   000D7C  5A14               	subwfb	(___fladd@b+3)^0,f,c
  8940   000D7E                     l896:
  8941   000D7E  5011               	movf	___fladd@b^0,w,c
  8942   000D80  1012               	iorwf	(___fladd@b+1)^0,w,c
  8943   000D82  1013               	iorwf	(___fladd@b+2)^0,w,c
  8944   000D84  1014               	iorwf	(___fladd@b+3)^0,w,c
  8945   000D86  A4D8               	btfss	status,2,c
  8946   000D88  EFC8  F006         	goto	u6211
  8947   000D8C  EFCA  F006         	goto	u6210
  8948   000D90                     u6211:
  8949   000D90  EFFF  F006         	goto	l6242
  8950   000D94                     u6210:
  8951   000D94  5020               	movf	___fladd@grs^0,w,c
  8952   000D96  A4D8               	btfss	status,2,c
  8953   000D98  EFD0  F006         	goto	u6221
  8954   000D9C  EFD2  F006         	goto	u6220
  8955   000DA0                     u6221:
  8956   000DA0  EFFF  F006         	goto	l6242
  8957   000DA4                     u6220:
  8958   000DA4  0E00               	movlw	0
  8959   000DA6  6E11               	movwf	?___fladd^0,c
  8960   000DA8  0E00               	movlw	0
  8961   000DAA  6E12               	movwf	(?___fladd+1)^0,c
  8962   000DAC  0E00               	movlw	0
  8963   000DAE  6E13               	movwf	(?___fladd+2)^0,c
  8964   000DB0  0E00               	movlw	0
  8965   000DB2  6E14               	movwf	(?___fladd+3)^0,c
  8966   000DB4  EF9A  F007         	goto	l888
  8967   000DB8                     l6226:
  8968   000DB8  90D8               	bcf	status,0,c
  8969   000DBA  3611               	rlcf	___fladd@b^0,f,c
  8970   000DBC  3612               	rlcf	(___fladd@b+1)^0,f,c
  8971   000DBE  3613               	rlcf	(___fladd@b+2)^0,f,c
  8972   000DC0  3614               	rlcf	(___fladd@b+3)^0,f,c
  8973   000DC2  AE20               	btfss	___fladd@grs^0,7,c
  8974   000DC4  EFE6  F006         	goto	u6231
  8975   000DC8  EFE8  F006         	goto	u6230
  8976   000DCC                     u6231:
  8977   000DCC  EFE9  F006         	goto	l6232
  8978   000DD0                     u6230:
  8979   000DD0  8011               	bsf	___fladd@b^0,0,c
  8980   000DD2                     l6232:
  8981   000DD2  A020               	btfss	___fladd@grs^0,0,c
  8982   000DD4  EFEE  F006         	goto	u6241
  8983   000DD8  EFF0  F006         	goto	u6240
  8984   000DDC                     u6241:
  8985   000DDC  EFF4  F006         	goto	l6236
  8986   000DE0                     u6240:
  8987   000DE0  80D8               	bsf	status,0,c
  8988   000DE2  3620               	rlcf	___fladd@grs^0,f,c
  8989   000DE4  EFF6  F006         	goto	l6238
  8990   000DE8                     l6236:
  8991   000DE8  90D8               	bcf	status,0,c
  8992   000DEA  3620               	rlcf	___fladd@grs^0,f,c
  8993   000DEC                     l6238:
  8994   000DEC  501F               	movf	___fladd@bexp^0,w,c
  8995   000DEE  B4D8               	btfsc	status,2,c
  8996   000DF0  EFFC  F006         	goto	u6251
  8997   000DF4  EFFE  F006         	goto	u6250
  8998   000DF8                     u6251:
  8999   000DF8  EFFF  F006         	goto	l6242
  9000   000DFC                     u6250:
  9001   000DFC  061F               	decf	___fladd@bexp^0,f,c
  9002   000DFE                     l6242:
  9003   000DFE  AE13               	btfss	(___fladd@b+2)^0,7,c
  9004   000E00  EF04  F007         	goto	u6261
  9005   000E04  EF06  F007         	goto	u6260
  9006   000E08                     u6261:
  9007   000E08  EFDC  F006         	goto	l6226
  9008   000E0C                     u6260:
  9009   000E0C                     l6244:
  9010   000E0C  0E00               	movlw	0
  9011   000E0E  6E1E               	movwf	___fladd@aexp^0,c
  9012   000E10  AE20               	btfss	___fladd@grs^0,7,c
  9013   000E12  EF0D  F007         	goto	u6271
  9014   000E16  EF0F  F007         	goto	u6270
  9015   000E1A                     u6271:
  9016   000E1A  EF27  F007         	goto	l905
  9017   000E1E                     u6270:
  9018   000E1E  C020  F019         	movff	___fladd@grs,??___fladd
  9019   000E22  0E7F               	movlw	127
  9020   000E24  1619               	andwf	??___fladd^0,f,c
  9021   000E26  B4D8               	btfsc	status,2,c
  9022   000E28  EF18  F007         	goto	u6281
  9023   000E2C  EF1A  F007         	goto	u6280
  9024   000E30                     u6281:
  9025   000E30  EF1E  F007         	goto	l906
  9026   000E34                     u6280:
  9027   000E34                     l6250:
  9028   000E34  0E01               	movlw	1
  9029   000E36  6E1E               	movwf	___fladd@aexp^0,c
  9030   000E38  EF27  F007         	goto	l905
  9031   000E3C                     l906:
  9032   000E3C  A011               	btfss	___fladd@b^0,0,c
  9033   000E3E  EF23  F007         	goto	u6291
  9034   000E42  EF25  F007         	goto	u6290
  9035   000E46                     u6291:
  9036   000E46  EF27  F007         	goto	l905
  9037   000E4A                     u6290:
  9038   000E4A  EF1A  F007         	goto	l6250
  9039   000E4E                     l905:
  9040   000E4E  501E               	movf	___fladd@aexp^0,w,c
  9041   000E50  B4D8               	btfsc	status,2,c
  9042   000E52  EF2D  F007         	goto	u6301
  9043   000E56  EF2F  F007         	goto	u6300
  9044   000E5A                     u6301:
  9045   000E5A  EF5A  F007         	goto	l6262
  9046   000E5E                     u6300:
  9047   000E5E  0E01               	movlw	1
  9048   000E60  2611               	addwf	___fladd@b^0,f,c
  9049   000E62  0E00               	movlw	0
  9050   000E64  2212               	addwfc	(___fladd@b+1)^0,f,c
  9051   000E66  2213               	addwfc	(___fladd@b+2)^0,f,c
  9052   000E68  2214               	addwfc	(___fladd@b+3)^0,f,c
  9053   000E6A  A014               	btfss	(___fladd@b+3)^0,0,c
  9054   000E6C  EF3A  F007         	goto	u6311
  9055   000E70  EF3C  F007         	goto	u6310
  9056   000E74                     u6311:
  9057   000E74  EF5A  F007         	goto	l6262
  9058   000E78                     u6310:
  9059   000E78  C011  F019         	movff	___fladd@b,??___fladd
  9060   000E7C  C012  F01A         	movff	___fladd@b+1,??___fladd+1
  9061   000E80  C013  F01B         	movff	___fladd@b+2,??___fladd+2
  9062   000E84  C014  F01C         	movff	___fladd@b+3,??___fladd+3
  9063   000E88  341C               	rlcf	(??___fladd+3)^0,w,c
  9064   000E8A  321C               	rrcf	(??___fladd+3)^0,f,c
  9065   000E8C  321B               	rrcf	(??___fladd+2)^0,f,c
  9066   000E8E  321A               	rrcf	(??___fladd+1)^0,f,c
  9067   000E90  3219               	rrcf	??___fladd^0,f,c
  9068   000E92  C019  F011         	movff	??___fladd,___fladd@b
  9069   000E96  C01A  F012         	movff	??___fladd+1,___fladd@b+1
  9070   000E9A  C01B  F013         	movff	??___fladd+2,___fladd@b+2
  9071   000E9E  C01C  F014         	movff	??___fladd+3,___fladd@b+3
  9072   000EA2  281F               	incf	___fladd@bexp^0,w,c
  9073   000EA4  B4D8               	btfsc	status,2,c
  9074   000EA6  EF57  F007         	goto	u6321
  9075   000EAA  EF59  F007         	goto	u6320
  9076   000EAE                     u6321:
  9077   000EAE  EF5A  F007         	goto	l6262
  9078   000EB2                     u6320:
  9079   000EB2  2A1F               	incf	___fladd@bexp^0,f,c
  9080   000EB4                     l6262:
  9081   000EB4  281F               	incf	___fladd@bexp^0,w,c
  9082   000EB6  B4D8               	btfsc	status,2,c
  9083   000EB8  EF60  F007         	goto	u6331
  9084   000EBC  EF62  F007         	goto	u6330
  9085   000EC0                     u6331:
  9086   000EC0  EF6A  F007         	goto	l6266
  9087   000EC4                     u6330:
  9088   000EC4  501F               	movf	___fladd@bexp^0,w,c
  9089   000EC6  A4D8               	btfss	status,2,c
  9090   000EC8  EF68  F007         	goto	u6341
  9091   000ECC  EF6A  F007         	goto	u6340
  9092   000ED0                     u6341:
  9093   000ED0  EF7C  F007         	goto	l6270
  9094   000ED4                     u6340:
  9095   000ED4                     l6266:
  9096   000ED4  0E00               	movlw	0
  9097   000ED6  6E11               	movwf	___fladd@b^0,c
  9098   000ED8  0E00               	movlw	0
  9099   000EDA  6E12               	movwf	(___fladd@b+1)^0,c
  9100   000EDC  0E00               	movlw	0
  9101   000EDE  6E13               	movwf	(___fladd@b+2)^0,c
  9102   000EE0  0E00               	movlw	0
  9103   000EE2  6E14               	movwf	(___fladd@b+3)^0,c
  9104   000EE4  501F               	movf	___fladd@bexp^0,w,c
  9105   000EE6  A4D8               	btfss	status,2,c
  9106   000EE8  EF78  F007         	goto	u6351
  9107   000EEC  EF7A  F007         	goto	u6350
  9108   000EF0                     u6351:
  9109   000EF0  EF7C  F007         	goto	l6270
  9110   000EF4                     u6350:
  9111   000EF4  0E00               	movlw	0
  9112   000EF6  6E1D               	movwf	___fladd@signs^0,c
  9113   000EF8                     l6270:
  9114   000EF8  A01F               	btfss	___fladd@bexp^0,0,c
  9115   000EFA  EF81  F007         	goto	u6361
  9116   000EFE  EF83  F007         	goto	u6360
  9117   000F02                     u6361:
  9118   000F02  EF86  F007         	goto	l6274
  9119   000F06                     u6360:
  9120   000F06  8E13               	bsf	(___fladd@b+2)^0,7,c
  9121   000F08  EF87  F007         	goto	l6276
  9122   000F0C                     l6274:
  9123   000F0C  9E13               	bcf	(___fladd@b+2)^0,7,c
  9124   000F0E                     l6276:
  9125   000F0E  90D8               	bcf	status,0,c
  9126   000F10  301F               	rrcf	___fladd@bexp^0,w,c
  9127   000F12  6E14               	movwf	(___fladd@b+3)^0,c
  9128   000F14  AE1D               	btfss	___fladd@signs^0,7,c
  9129   000F16  EF8F  F007         	goto	u6371
  9130   000F1A  EF91  F007         	goto	u6370
  9131   000F1E                     u6371:
  9132   000F1E  EF92  F007         	goto	l6282
  9133   000F22                     u6370:
  9134   000F22  8E14               	bsf	(___fladd@b+3)^0,7,c
  9135   000F24                     l6282:
  9136   000F24  C011  F011         	movff	___fladd@b,?___fladd
  9137   000F28  C012  F012         	movff	___fladd@b+1,?___fladd+1
  9138   000F2C  C013  F013         	movff	___fladd@b+2,?___fladd+2
  9139   000F30  C014  F014         	movff	___fladd@b+3,?___fladd+3
  9140   000F34                     l888:
  9141   000F34  0012               	return		;funcret
  9142   000F36                     __end_of___fladd:
  9143                           	callstack 0
  9144                           
  9145 ;; *************** function ___flneg *****************
  9146 ;; Defined at:
  9147 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  f1              4   16[COMRAM] unsigned char 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;		None
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  4   16[COMRAM] unsigned char 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9161 ;;      Params:         4       0       0       0       0       0       0       0       0
  9162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9164 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9165 ;;Total ram usage:        4 bytes
  9166 ;; Hardware stack levels used: 1
  9167 ;; Hardware stack levels required when called: 2
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_efgtoa
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           	psect	text31
  9176   0042F0                     __ptext31:
  9177                           	callstack 0
  9178   0042F0                     ___flneg:
  9179                           	callstack 23
  9180   0042F0  5011               	movf	___flneg@f1^0,w,c
  9181   0042F2  1012               	iorwf	(___flneg@f1+1)^0,w,c
  9182   0042F4  1013               	iorwf	(___flneg@f1+2)^0,w,c
  9183   0042F6  1014               	iorwf	(___flneg@f1+3)^0,w,c
  9184   0042F8  B4D8               	btfsc	status,2,c
  9185   0042FA  EF81  F021         	goto	u6891
  9186   0042FE  EF83  F021         	goto	u6890
  9187   004302                     u6891:
  9188   004302  EF8B  F021         	goto	l6616
  9189   004306                     u6890:
  9190   004306  0E00               	movlw	0
  9191   004308  1A11               	xorwf	___flneg@f1^0,f,c
  9192   00430A  0E00               	movlw	0
  9193   00430C  1A12               	xorwf	(___flneg@f1+1)^0,f,c
  9194   00430E  0E00               	movlw	0
  9195   004310  1A13               	xorwf	(___flneg@f1+2)^0,f,c
  9196   004312  0E80               	movlw	128
  9197   004314  1A14               	xorwf	(___flneg@f1+3)^0,f,c
  9198   004316                     l6616:
  9199   004316  C011  F011         	movff	___flneg@f1,?___flneg
  9200   00431A  C012  F012         	movff	___flneg@f1+1,?___flneg+1
  9201   00431E  C013  F013         	movff	___flneg@f1+2,?___flneg+2
  9202   004322  C014  F014         	movff	___flneg@f1+3,?___flneg+3
  9203   004326  0012               	return		;funcret
  9204   004328                     __end_of___flneg:
  9205                           	callstack 0
  9206                           
  9207 ;; *************** function ___flmul *****************
  9208 ;; Defined at:
  9209 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  b               4   16[COMRAM] unsigned char 
  9212 ;;  a               4   20[COMRAM] unsigned char 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  prod            4   35[COMRAM] struct .
  9215 ;;  grs             4   30[COMRAM] unsigned long 
  9216 ;;  temp            2   39[COMRAM] struct .
  9217 ;;  bexp            1   34[COMRAM] unsigned char 
  9218 ;;  aexp            1   29[COMRAM] unsigned char 
  9219 ;;  sign            1   28[COMRAM] unsigned char 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  4   16[COMRAM] unsigned char 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0, prodl, prodh
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9229 ;;      Params:         8       0       0       0       0       0       0       0       0
  9230 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9231 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9232 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9233 ;;Total ram usage:       25 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 2
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_FILL
  9240 ;;		_efgtoa
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text32
  9245   001C9C                     __ptext32:
  9246                           	callstack 0
  9247   001C9C                     ___flmul:
  9248                           	callstack 23
  9249   001C9C  5014               	movf	(___flmul@b+3)^0,w,c
  9250   001C9E  0B80               	andlw	128
  9251   001CA0  6E1D               	movwf	___flmul@sign^0,c
  9252   001CA2  5014               	movf	(___flmul@b+3)^0,w,c
  9253   001CA4  2414               	addwf	(___flmul@b+3)^0,w,c
  9254   001CA6  6E23               	movwf	___flmul@bexp^0,c
  9255   001CA8  AE13               	btfss	(___flmul@b+2)^0,7,c
  9256   001CAA  EF59  F00E         	goto	u6621
  9257   001CAE  EF5B  F00E         	goto	u6620
  9258   001CB2                     u6621:
  9259   001CB2  EF5C  F00E         	goto	l6444
  9260   001CB6                     u6620:
  9261   001CB6  8023               	bsf	___flmul@bexp^0,0,c
  9262   001CB8                     l6444:
  9263   001CB8  5023               	movf	___flmul@bexp^0,w,c
  9264   001CBA  B4D8               	btfsc	status,2,c
  9265   001CBC  EF62  F00E         	goto	u6631
  9266   001CC0  EF64  F00E         	goto	u6630
  9267   001CC4                     u6631:
  9268   001CC4  EF77  F00E         	goto	l6452
  9269   001CC8                     u6630:
  9270   001CC8  2823               	incf	___flmul@bexp^0,w,c
  9271   001CCA  A4D8               	btfss	status,2,c
  9272   001CCC  EF6A  F00E         	goto	u6641
  9273   001CD0  EF6C  F00E         	goto	u6640
  9274   001CD4                     u6641:
  9275   001CD4  EF74  F00E         	goto	l6450
  9276   001CD8                     u6640:
  9277   001CD8  0E00               	movlw	0
  9278   001CDA  6E11               	movwf	___flmul@b^0,c
  9279   001CDC  0E00               	movlw	0
  9280   001CDE  6E12               	movwf	(___flmul@b+1)^0,c
  9281   001CE0  0E00               	movlw	0
  9282   001CE2  6E13               	movwf	(___flmul@b+2)^0,c
  9283   001CE4  0E00               	movlw	0
  9284   001CE6  6E14               	movwf	(___flmul@b+3)^0,c
  9285   001CE8                     l6450:
  9286   001CE8  8E13               	bsf	(___flmul@b+2)^0,7,c
  9287   001CEA  EF7F  F00E         	goto	l6454
  9288   001CEE                     l6452:
  9289   001CEE  0E00               	movlw	0
  9290   001CF0  6E11               	movwf	___flmul@b^0,c
  9291   001CF2  0E00               	movlw	0
  9292   001CF4  6E12               	movwf	(___flmul@b+1)^0,c
  9293   001CF6  0E00               	movlw	0
  9294   001CF8  6E13               	movwf	(___flmul@b+2)^0,c
  9295   001CFA  0E00               	movlw	0
  9296   001CFC  6E14               	movwf	(___flmul@b+3)^0,c
  9297   001CFE                     l6454:
  9298   001CFE  5018               	movf	(___flmul@a+3)^0,w,c
  9299   001D00  0B80               	andlw	128
  9300   001D02  1A1D               	xorwf	___flmul@sign^0,f,c
  9301   001D04  5018               	movf	(___flmul@a+3)^0,w,c
  9302   001D06  2418               	addwf	(___flmul@a+3)^0,w,c
  9303   001D08  6E1E               	movwf	___flmul@aexp^0,c
  9304   001D0A  AE17               	btfss	(___flmul@a+2)^0,7,c
  9305   001D0C  EF8A  F00E         	goto	u6651
  9306   001D10  EF8C  F00E         	goto	u6650
  9307   001D14                     u6651:
  9308   001D14  EF8D  F00E         	goto	l6462
  9309   001D18                     u6650:
  9310   001D18  801E               	bsf	___flmul@aexp^0,0,c
  9311   001D1A                     l6462:
  9312   001D1A  501E               	movf	___flmul@aexp^0,w,c
  9313   001D1C  B4D8               	btfsc	status,2,c
  9314   001D1E  EF93  F00E         	goto	u6661
  9315   001D22  EF95  F00E         	goto	u6660
  9316   001D26                     u6661:
  9317   001D26  EFA8  F00E         	goto	l6470
  9318   001D2A                     u6660:
  9319   001D2A  281E               	incf	___flmul@aexp^0,w,c
  9320   001D2C  A4D8               	btfss	status,2,c
  9321   001D2E  EF9B  F00E         	goto	u6671
  9322   001D32  EF9D  F00E         	goto	u6670
  9323   001D36                     u6671:
  9324   001D36  EFA5  F00E         	goto	l6468
  9325   001D3A                     u6670:
  9326   001D3A  0E00               	movlw	0
  9327   001D3C  6E15               	movwf	___flmul@a^0,c
  9328   001D3E  0E00               	movlw	0
  9329   001D40  6E16               	movwf	(___flmul@a+1)^0,c
  9330   001D42  0E00               	movlw	0
  9331   001D44  6E17               	movwf	(___flmul@a+2)^0,c
  9332   001D46  0E00               	movlw	0
  9333   001D48  6E18               	movwf	(___flmul@a+3)^0,c
  9334   001D4A                     l6468:
  9335   001D4A  8E17               	bsf	(___flmul@a+2)^0,7,c
  9336   001D4C  EFB0  F00E         	goto	l965
  9337   001D50                     l6470:
  9338   001D50  0E00               	movlw	0
  9339   001D52  6E15               	movwf	___flmul@a^0,c
  9340   001D54  0E00               	movlw	0
  9341   001D56  6E16               	movwf	(___flmul@a+1)^0,c
  9342   001D58  0E00               	movlw	0
  9343   001D5A  6E17               	movwf	(___flmul@a+2)^0,c
  9344   001D5C  0E00               	movlw	0
  9345   001D5E  6E18               	movwf	(___flmul@a+3)^0,c
  9346   001D60                     l965:
  9347   001D60  501E               	movf	___flmul@aexp^0,w,c
  9348   001D62  B4D8               	btfsc	status,2,c
  9349   001D64  EFB6  F00E         	goto	u6681
  9350   001D68  EFB8  F00E         	goto	u6680
  9351   001D6C                     u6681:
  9352   001D6C  EFC0  F00E         	goto	l6474
  9353   001D70                     u6680:
  9354   001D70  5023               	movf	___flmul@bexp^0,w,c
  9355   001D72  A4D8               	btfss	status,2,c
  9356   001D74  EFBE  F00E         	goto	u6691
  9357   001D78  EFC0  F00E         	goto	u6690
  9358   001D7C                     u6691:
  9359   001D7C  EFCA  F00E         	goto	l6478
  9360   001D80                     u6690:
  9361   001D80                     l6474:
  9362   001D80  0E00               	movlw	0
  9363   001D82  6E11               	movwf	?___flmul^0,c
  9364   001D84  0E00               	movlw	0
  9365   001D86  6E12               	movwf	(?___flmul+1)^0,c
  9366   001D88  0E00               	movlw	0
  9367   001D8A  6E13               	movwf	(?___flmul+2)^0,c
  9368   001D8C  0E00               	movlw	0
  9369   001D8E  6E14               	movwf	(?___flmul+3)^0,c
  9370   001D90  EF62  F010         	goto	l969
  9371   001D94                     l6478:
  9372   001D94  5017               	movf	(___flmul@a+2)^0,w,c
  9373   001D96  0211               	mulwf	___flmul@b^0,c
  9374   001D98  CFF3 F028          	movff	prodl,___flmul@temp
  9375   001D9C  CFF4 F029          	movff	prodh,___flmul@temp+1
  9376   001DA0  5028               	movf	___flmul@temp^0,w,c
  9377   001DA2  6E1F               	movwf	___flmul@grs^0,c
  9378   001DA4  6A20               	clrf	(___flmul@grs+1)^0,c
  9379   001DA6  6A21               	clrf	(___flmul@grs+2)^0,c
  9380   001DA8  6A22               	clrf	(___flmul@grs+3)^0,c
  9381   001DAA  5029               	movf	(___flmul@temp+1)^0,w,c
  9382   001DAC  6E24               	movwf	___flmul@prod^0,c
  9383   001DAE  6A25               	clrf	(___flmul@prod+1)^0,c
  9384   001DB0  6A26               	clrf	(___flmul@prod+2)^0,c
  9385   001DB2  6A27               	clrf	(___flmul@prod+3)^0,c
  9386   001DB4  5016               	movf	(___flmul@a+1)^0,w,c
  9387   001DB6  0212               	mulwf	(___flmul@b+1)^0,c
  9388   001DB8  CFF3 F028          	movff	prodl,___flmul@temp
  9389   001DBC  CFF4 F029          	movff	prodh,___flmul@temp+1
  9390   001DC0  5028               	movf	___flmul@temp^0,w,c
  9391   001DC2  261F               	addwf	___flmul@grs^0,f,c
  9392   001DC4  0E00               	movlw	0
  9393   001DC6  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9394   001DC8  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9395   001DCA  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9396   001DCC  5029               	movf	(___flmul@temp+1)^0,w,c
  9397   001DCE  2624               	addwf	___flmul@prod^0,f,c
  9398   001DD0  0E00               	movlw	0
  9399   001DD2  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9400   001DD4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9401   001DD6  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9402   001DD8  5015               	movf	___flmul@a^0,w,c
  9403   001DDA  0213               	mulwf	(___flmul@b+2)^0,c
  9404   001DDC  CFF3 F028          	movff	prodl,___flmul@temp
  9405   001DE0  CFF4 F029          	movff	prodh,___flmul@temp+1
  9406   001DE4  5028               	movf	___flmul@temp^0,w,c
  9407   001DE6  261F               	addwf	___flmul@grs^0,f,c
  9408   001DE8  0E00               	movlw	0
  9409   001DEA  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9410   001DEC  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9411   001DEE  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9412   001DF0  5029               	movf	(___flmul@temp+1)^0,w,c
  9413   001DF2  2624               	addwf	___flmul@prod^0,f,c
  9414   001DF4  0E00               	movlw	0
  9415   001DF6  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9416   001DF8  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9417   001DFA  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9418   001DFC  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9419   001E00  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9420   001E04  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9421   001E08  6A1F               	clrf	___flmul@grs^0,c
  9422   001E0A  5015               	movf	___flmul@a^0,w,c
  9423   001E0C  0212               	mulwf	(___flmul@b+1)^0,c
  9424   001E0E  CFF3 F028          	movff	prodl,___flmul@temp
  9425   001E12  CFF4 F029          	movff	prodh,___flmul@temp+1
  9426   001E16  5028               	movf	___flmul@temp^0,w,c
  9427   001E18  261F               	addwf	___flmul@grs^0,f,c
  9428   001E1A  5029               	movf	(___flmul@temp+1)^0,w,c
  9429   001E1C  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9430   001E1E  0E00               	movlw	0
  9431   001E20  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9432   001E22  0E00               	movlw	0
  9433   001E24  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9434   001E26  5016               	movf	(___flmul@a+1)^0,w,c
  9435   001E28  0211               	mulwf	___flmul@b^0,c
  9436   001E2A  CFF3 F028          	movff	prodl,___flmul@temp
  9437   001E2E  CFF4 F029          	movff	prodh,___flmul@temp+1
  9438   001E32  5028               	movf	___flmul@temp^0,w,c
  9439   001E34  261F               	addwf	___flmul@grs^0,f,c
  9440   001E36  5029               	movf	(___flmul@temp+1)^0,w,c
  9441   001E38  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9442   001E3A  0E00               	movlw	0
  9443   001E3C  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9444   001E3E  0E00               	movlw	0
  9445   001E40  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9446   001E42  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9447   001E46  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9448   001E4A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9449   001E4E  6A1F               	clrf	___flmul@grs^0,c
  9450   001E50  5015               	movf	___flmul@a^0,w,c
  9451   001E52  0211               	mulwf	___flmul@b^0,c
  9452   001E54  CFF3 F028          	movff	prodl,___flmul@temp
  9453   001E58  CFF4 F029          	movff	prodh,___flmul@temp+1
  9454   001E5C  5028               	movf	___flmul@temp^0,w,c
  9455   001E5E  261F               	addwf	___flmul@grs^0,f,c
  9456   001E60  5029               	movf	(___flmul@temp+1)^0,w,c
  9457   001E62  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9458   001E64  0E00               	movlw	0
  9459   001E66  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9460   001E68  0E00               	movlw	0
  9461   001E6A  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9462   001E6C  5017               	movf	(___flmul@a+2)^0,w,c
  9463   001E6E  0212               	mulwf	(___flmul@b+1)^0,c
  9464   001E70  CFF3 F028          	movff	prodl,___flmul@temp
  9465   001E74  CFF4 F029          	movff	prodh,___flmul@temp+1
  9466   001E78  5028               	movf	___flmul@temp^0,w,c
  9467   001E7A  2624               	addwf	___flmul@prod^0,f,c
  9468   001E7C  5029               	movf	(___flmul@temp+1)^0,w,c
  9469   001E7E  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9470   001E80  0E00               	movlw	0
  9471   001E82  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9472   001E84  0E00               	movlw	0
  9473   001E86  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9474   001E88  5016               	movf	(___flmul@a+1)^0,w,c
  9475   001E8A  0213               	mulwf	(___flmul@b+2)^0,c
  9476   001E8C  CFF3 F028          	movff	prodl,___flmul@temp
  9477   001E90  CFF4 F029          	movff	prodh,___flmul@temp+1
  9478   001E94  5028               	movf	___flmul@temp^0,w,c
  9479   001E96  2624               	addwf	___flmul@prod^0,f,c
  9480   001E98  5029               	movf	(___flmul@temp+1)^0,w,c
  9481   001E9A  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9482   001E9C  0E00               	movlw	0
  9483   001E9E  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9484   001EA0  0E00               	movlw	0
  9485   001EA2  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9486   001EA4  5017               	movf	(___flmul@a+2)^0,w,c
  9487   001EA6  0213               	mulwf	(___flmul@b+2)^0,c
  9488   001EA8  CFF3 F028          	movff	prodl,___flmul@temp
  9489   001EAC  CFF4 F029          	movff	prodh,___flmul@temp+1
  9490   001EB0  5028               	movf	___flmul@temp^0,w,c
  9491   001EB2  6E19               	movwf	??___flmul^0,c
  9492   001EB4  5029               	movf	(___flmul@temp+1)^0,w,c
  9493   001EB6  6E1A               	movwf	(??___flmul+1)^0,c
  9494   001EB8  6A1B               	clrf	(??___flmul+2)^0,c
  9495   001EBA  6A1C               	clrf	(??___flmul+3)^0,c
  9496   001EBC  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  9497   001EC0  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  9498   001EC4  C019  F01A         	movff	??___flmul,??___flmul+1
  9499   001EC8  6A19               	clrf	??___flmul^0,c
  9500   001ECA  5019               	movf	??___flmul^0,w,c
  9501   001ECC  2624               	addwf	___flmul@prod^0,f,c
  9502   001ECE  501A               	movf	(??___flmul+1)^0,w,c
  9503   001ED0  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9504   001ED2  501B               	movf	(??___flmul+2)^0,w,c
  9505   001ED4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9506   001ED6  501C               	movf	(??___flmul+3)^0,w,c
  9507   001ED8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9508   001EDA  C01F  F019         	movff	___flmul@grs,??___flmul
  9509   001EDE  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
  9510   001EE2  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
  9511   001EE6  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
  9512   001EEA  0E19               	movlw	25
  9513   001EEC  EF7D  F00F         	goto	u6700
  9514   001EF0                     u6705:
  9515   001EF0  90D8               	bcf	status,0,c
  9516   001EF2  321C               	rrcf	(??___flmul+3)^0,f,c
  9517   001EF4  321B               	rrcf	(??___flmul+2)^0,f,c
  9518   001EF6  321A               	rrcf	(??___flmul+1)^0,f,c
  9519   001EF8  3219               	rrcf	??___flmul^0,f,c
  9520   001EFA                     u6700:
  9521   001EFA  2EE8               	decfsz	wreg,f,c
  9522   001EFC  EF78  F00F         	goto	u6705
  9523   001F00  5019               	movf	??___flmul^0,w,c
  9524   001F02  2624               	addwf	___flmul@prod^0,f,c
  9525   001F04  501A               	movf	(??___flmul+1)^0,w,c
  9526   001F06  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9527   001F08  501B               	movf	(??___flmul+2)^0,w,c
  9528   001F0A  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9529   001F0C  501C               	movf	(??___flmul+3)^0,w,c
  9530   001F0E  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9531   001F10  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9532   001F14  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9533   001F18  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9534   001F1C  6A1F               	clrf	___flmul@grs^0,c
  9535   001F1E  501E               	movf	___flmul@aexp^0,w,c
  9536   001F20  C023  F019         	movff	___flmul@bexp,??___flmul
  9537   001F24  6A1A               	clrf	(??___flmul+1)^0,c
  9538   001F26  2619               	addwf	??___flmul^0,f,c
  9539   001F28  0E00               	movlw	0
  9540   001F2A  221A               	addwfc	(??___flmul+1)^0,f,c
  9541   001F2C  0E82               	movlw	130
  9542   001F2E  2419               	addwf	??___flmul^0,w,c
  9543   001F30  6E28               	movwf	___flmul@temp^0,c
  9544   001F32  0EFF               	movlw	255
  9545   001F34  201A               	addwfc	(??___flmul+1)^0,w,c
  9546   001F36  6E29               	movwf	(___flmul@temp+1)^0,c
  9547   001F38  EFB3  F00F         	goto	l6526
  9548   001F3C                     l6520:
  9549   001F3C  90D8               	bcf	status,0,c
  9550   001F3E  3624               	rlcf	___flmul@prod^0,f,c
  9551   001F40  3625               	rlcf	(___flmul@prod+1)^0,f,c
  9552   001F42  3626               	rlcf	(___flmul@prod+2)^0,f,c
  9553   001F44  3627               	rlcf	(___flmul@prod+3)^0,f,c
  9554   001F46  AE22               	btfss	(___flmul@grs+3)^0,7,c
  9555   001F48  EFA8  F00F         	goto	u6711
  9556   001F4C  EFAA  F00F         	goto	u6710
  9557   001F50                     u6711:
  9558   001F50  EFAB  F00F         	goto	l972
  9559   001F54                     u6710:
  9560   001F54  8024               	bsf	___flmul@prod^0,0,c
  9561   001F56                     l972:
  9562   001F56  90D8               	bcf	status,0,c
  9563   001F58  361F               	rlcf	___flmul@grs^0,f,c
  9564   001F5A  3620               	rlcf	(___flmul@grs+1)^0,f,c
  9565   001F5C  3621               	rlcf	(___flmul@grs+2)^0,f,c
  9566   001F5E  3622               	rlcf	(___flmul@grs+3)^0,f,c
  9567   001F60  0628               	decf	___flmul@temp^0,f,c
  9568   001F62  A0D8               	btfss	status,0,c
  9569   001F64  0629               	decf	(___flmul@temp+1)^0,f,c
  9570   001F66                     l6526:
  9571   001F66  AE26               	btfss	(___flmul@prod+2)^0,7,c
  9572   001F68  EFB8  F00F         	goto	u6721
  9573   001F6C  EFBA  F00F         	goto	u6720
  9574   001F70                     u6721:
  9575   001F70  EF9E  F00F         	goto	l6520
  9576   001F74                     u6720:
  9577   001F74  0E00               	movlw	0
  9578   001F76  6E1E               	movwf	___flmul@aexp^0,c
  9579   001F78  AE22               	btfss	(___flmul@grs+3)^0,7,c
  9580   001F7A  EFC1  F00F         	goto	u6731
  9581   001F7E  EFC3  F00F         	goto	u6730
  9582   001F82                     u6731:
  9583   001F82  EFE7  F00F         	goto	l974
  9584   001F86                     u6730:
  9585   001F86  0EFF               	movlw	255
  9586   001F88  141F               	andwf	___flmul@grs^0,w,c
  9587   001F8A  6E19               	movwf	??___flmul^0,c
  9588   001F8C  0EFF               	movlw	255
  9589   001F8E  1420               	andwf	(___flmul@grs+1)^0,w,c
  9590   001F90  6E1A               	movwf	(??___flmul+1)^0,c
  9591   001F92  0EFF               	movlw	255
  9592   001F94  1421               	andwf	(___flmul@grs+2)^0,w,c
  9593   001F96  6E1B               	movwf	(??___flmul+2)^0,c
  9594   001F98  0E7F               	movlw	127
  9595   001F9A  1422               	andwf	(___flmul@grs+3)^0,w,c
  9596   001F9C  6E1C               	movwf	(??___flmul+3)^0,c
  9597   001F9E  5019               	movf	??___flmul^0,w,c
  9598   001FA0  101A               	iorwf	(??___flmul+1)^0,w,c
  9599   001FA2  101B               	iorwf	(??___flmul+2)^0,w,c
  9600   001FA4  101C               	iorwf	(??___flmul+3)^0,w,c
  9601   001FA6  B4D8               	btfsc	status,2,c
  9602   001FA8  EFD8  F00F         	goto	u6741
  9603   001FAC  EFDA  F00F         	goto	u6740
  9604   001FB0                     u6741:
  9605   001FB0  EFDE  F00F         	goto	l975
  9606   001FB4                     u6740:
  9607   001FB4                     l6534:
  9608   001FB4  0E01               	movlw	1
  9609   001FB6  6E1E               	movwf	___flmul@aexp^0,c
  9610   001FB8  EFE7  F00F         	goto	l974
  9611   001FBC                     l975:
  9612   001FBC  A024               	btfss	___flmul@prod^0,0,c
  9613   001FBE  EFE3  F00F         	goto	u6751
  9614   001FC2  EFE5  F00F         	goto	u6750
  9615   001FC6                     u6751:
  9616   001FC6  EFE7  F00F         	goto	l974
  9617   001FCA                     u6750:
  9618   001FCA  EFDA  F00F         	goto	l6534
  9619   001FCE                     l974:
  9620   001FCE  501E               	movf	___flmul@aexp^0,w,c
  9621   001FD0  B4D8               	btfsc	status,2,c
  9622   001FD2  EFED  F00F         	goto	u6761
  9623   001FD6  EFEF  F00F         	goto	u6760
  9624   001FDA                     u6761:
  9625   001FDA  EF13  F010         	goto	l6546
  9626   001FDE                     u6760:
  9627   001FDE  0E01               	movlw	1
  9628   001FE0  2624               	addwf	___flmul@prod^0,f,c
  9629   001FE2  0E00               	movlw	0
  9630   001FE4  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9631   001FE6  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9632   001FE8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9633   001FEA  A027               	btfss	(___flmul@prod+3)^0,0,c
  9634   001FEC  EFFA  F00F         	goto	u6771
  9635   001FF0  EFFC  F00F         	goto	u6770
  9636   001FF4                     u6771:
  9637   001FF4  EF13  F010         	goto	l6546
  9638   001FF8                     u6770:
  9639   001FF8  C024  F019         	movff	___flmul@prod,??___flmul
  9640   001FFC  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  9641   002000  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  9642   002004  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  9643   002008  341C               	rlcf	(??___flmul+3)^0,w,c
  9644   00200A  321C               	rrcf	(??___flmul+3)^0,f,c
  9645   00200C  321B               	rrcf	(??___flmul+2)^0,f,c
  9646   00200E  321A               	rrcf	(??___flmul+1)^0,f,c
  9647   002010  3219               	rrcf	??___flmul^0,f,c
  9648   002012  C019  F024         	movff	??___flmul,___flmul@prod
  9649   002016  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  9650   00201A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  9651   00201E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  9652   002022  4A28               	infsnz	___flmul@temp^0,f,c
  9653   002024  2A29               	incf	(___flmul@temp+1)^0,f,c
  9654   002026                     l6546:
  9655   002026  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  9656   002028  EF1E  F010         	goto	u6781
  9657   00202C  5029               	movf	(___flmul@temp+1)^0,w,c
  9658   00202E  E108               	bnz	u6780
  9659   002030  2828               	incf	___flmul@temp^0,w,c
  9660   002032  A0D8               	btfss	status,0,c
  9661   002034  EF1E  F010         	goto	u6781
  9662   002038  EF20  F010         	goto	u6780
  9663   00203C                     u6781:
  9664   00203C  EF2A  F010         	goto	l6550
  9665   002040                     u6780:
  9666   002040  0E00               	movlw	0
  9667   002042  6E24               	movwf	___flmul@prod^0,c
  9668   002044  0E00               	movlw	0
  9669   002046  6E25               	movwf	(___flmul@prod+1)^0,c
  9670   002048  0E80               	movlw	128
  9671   00204A  6E26               	movwf	(___flmul@prod+2)^0,c
  9672   00204C  0E7F               	movlw	127
  9673   00204E  6E27               	movwf	(___flmul@prod+3)^0,c
  9674   002050  EF58  F010         	goto	l6562
  9675   002054                     l6550:
  9676   002054  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  9677   002056  EF37  F010         	goto	u6790
  9678   00205A  5029               	movf	(___flmul@temp+1)^0,w,c
  9679   00205C  E106               	bnz	u6791
  9680   00205E  0428               	decf	___flmul@temp^0,w,c
  9681   002060  B0D8               	btfsc	status,0,c
  9682   002062  EF35  F010         	goto	u6791
  9683   002066  EF37  F010         	goto	u6790
  9684   00206A                     u6791:
  9685   00206A  EF43  F010         	goto	l982
  9686   00206E                     u6790:
  9687   00206E  0E00               	movlw	0
  9688   002070  6E24               	movwf	___flmul@prod^0,c
  9689   002072  0E00               	movlw	0
  9690   002074  6E25               	movwf	(___flmul@prod+1)^0,c
  9691   002076  0E00               	movlw	0
  9692   002078  6E26               	movwf	(___flmul@prod+2)^0,c
  9693   00207A  0E00               	movlw	0
  9694   00207C  6E27               	movwf	(___flmul@prod+3)^0,c
  9695   00207E  0E00               	movlw	0
  9696   002080  6E1D               	movwf	___flmul@sign^0,c
  9697   002082  EF58  F010         	goto	l6562
  9698   002086                     l982:
  9699   002086  C028  F023         	movff	___flmul@temp,___flmul@bexp
  9700   00208A  0EFF               	movlw	255
  9701   00208C  1624               	andwf	___flmul@prod^0,f,c
  9702   00208E  0EFF               	movlw	255
  9703   002090  1625               	andwf	(___flmul@prod+1)^0,f,c
  9704   002092  0E7F               	movlw	127
  9705   002094  1626               	andwf	(___flmul@prod+2)^0,f,c
  9706   002096  0E00               	movlw	0
  9707   002098  1627               	andwf	(___flmul@prod+3)^0,f,c
  9708   00209A  A023               	btfss	___flmul@bexp^0,0,c
  9709   00209C  EF52  F010         	goto	u6801
  9710   0020A0  EF54  F010         	goto	u6800
  9711   0020A4                     u6801:
  9712   0020A4  EF55  F010         	goto	l6560
  9713   0020A8                     u6800:
  9714   0020A8  8E26               	bsf	(___flmul@prod+2)^0,7,c
  9715   0020AA                     l6560:
  9716   0020AA  90D8               	bcf	status,0,c
  9717   0020AC  3023               	rrcf	___flmul@bexp^0,w,c
  9718   0020AE  6E27               	movwf	(___flmul@prod+3)^0,c
  9719   0020B0                     l6562:
  9720   0020B0  501D               	movf	___flmul@sign^0,w,c
  9721   0020B2  1227               	iorwf	(___flmul@prod+3)^0,f,c
  9722   0020B4  C024  F011         	movff	___flmul@prod,?___flmul
  9723   0020B8  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  9724   0020BC  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  9725   0020C0  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  9726   0020C4                     l969:
  9727   0020C4  0012               	return		;funcret
  9728   0020C6                     __end_of___flmul:
  9729                           	callstack 0
  9730                           
  9731 ;; *************** function ___flge *****************
  9732 ;; Defined at:
  9733 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  ff1             4   41[COMRAM] unsigned char 
  9736 ;;  ff2             4   45[COMRAM] unsigned char 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;		None
  9739 ;; Return value:  Size  Location     Type
  9740 ;;		None               void
  9741 ;; Registers used:
  9742 ;;		wreg, status,2, status,0
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9748 ;;      Params:         8       0       0       0       0       0       0       0       0
  9749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9750 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9751 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9752 ;;Total ram usage:       12 bytes
  9753 ;; Hardware stack levels used: 1
  9754 ;; Hardware stack levels required when called: 2
  9755 ;; This function calls:
  9756 ;;		Nothing
  9757 ;; This function is called by:
  9758 ;;		_FILL
  9759 ;;		_efgtoa
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text33
  9764   00371A                     __ptext33:
  9765                           	callstack 0
  9766   00371A                     ___flge:
  9767                           	callstack 23
  9768   00371A  0E00               	movlw	0
  9769   00371C  142A               	andwf	___flge@ff1^0,w,c
  9770   00371E  6E32               	movwf	??___flge^0,c
  9771   003720  0E00               	movlw	0
  9772   003722  142B               	andwf	(___flge@ff1+1)^0,w,c
  9773   003724  6E33               	movwf	(??___flge+1)^0,c
  9774   003726  0E80               	movlw	128
  9775   003728  142C               	andwf	(___flge@ff1+2)^0,w,c
  9776   00372A  6E34               	movwf	(??___flge+2)^0,c
  9777   00372C  0E7F               	movlw	127
  9778   00372E  142D               	andwf	(___flge@ff1+3)^0,w,c
  9779   003730  6E35               	movwf	(??___flge+3)^0,c
  9780   003732  5032               	movf	??___flge^0,w,c
  9781   003734  1033               	iorwf	(??___flge+1)^0,w,c
  9782   003736  1034               	iorwf	(??___flge+2)^0,w,c
  9783   003738  1035               	iorwf	(??___flge+3)^0,w,c
  9784   00373A  A4D8               	btfss	status,2,c
  9785   00373C  EFA2  F01B         	goto	u6841
  9786   003740  EFA4  F01B         	goto	u6840
  9787   003744                     u6841:
  9788   003744  EFAC  F01B         	goto	l6594
  9789   003748                     u6840:
  9790   003748  0E00               	movlw	0
  9791   00374A  6E2A               	movwf	___flge@ff1^0,c
  9792   00374C  0E00               	movlw	0
  9793   00374E  6E2B               	movwf	(___flge@ff1+1)^0,c
  9794   003750  0E00               	movlw	0
  9795   003752  6E2C               	movwf	(___flge@ff1+2)^0,c
  9796   003754  0E00               	movlw	0
  9797   003756  6E2D               	movwf	(___flge@ff1+3)^0,c
  9798   003758                     l6594:
  9799   003758  0E00               	movlw	0
  9800   00375A  142E               	andwf	___flge@ff2^0,w,c
  9801   00375C  6E32               	movwf	??___flge^0,c
  9802   00375E  0E00               	movlw	0
  9803   003760  142F               	andwf	(___flge@ff2+1)^0,w,c
  9804   003762  6E33               	movwf	(??___flge+1)^0,c
  9805   003764  0E80               	movlw	128
  9806   003766  1430               	andwf	(___flge@ff2+2)^0,w,c
  9807   003768  6E34               	movwf	(??___flge+2)^0,c
  9808   00376A  0E7F               	movlw	127
  9809   00376C  1431               	andwf	(___flge@ff2+3)^0,w,c
  9810   00376E  6E35               	movwf	(??___flge+3)^0,c
  9811   003770  5032               	movf	??___flge^0,w,c
  9812   003772  1033               	iorwf	(??___flge+1)^0,w,c
  9813   003774  1034               	iorwf	(??___flge+2)^0,w,c
  9814   003776  1035               	iorwf	(??___flge+3)^0,w,c
  9815   003778  A4D8               	btfss	status,2,c
  9816   00377A  EFC1  F01B         	goto	u6851
  9817   00377E  EFC3  F01B         	goto	u6850
  9818   003782                     u6851:
  9819   003782  EFCB  F01B         	goto	l6598
  9820   003786                     u6850:
  9821   003786  0E00               	movlw	0
  9822   003788  6E2E               	movwf	___flge@ff2^0,c
  9823   00378A  0E00               	movlw	0
  9824   00378C  6E2F               	movwf	(___flge@ff2+1)^0,c
  9825   00378E  0E00               	movlw	0
  9826   003790  6E30               	movwf	(___flge@ff2+2)^0,c
  9827   003792  0E00               	movlw	0
  9828   003794  6E31               	movwf	(___flge@ff2+3)^0,c
  9829   003796                     l6598:
  9830   003796  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  9831   003798  EFD0  F01B         	goto	u6861
  9832   00379C  EFD2  F01B         	goto	u6860
  9833   0037A0                     u6861:
  9834   0037A0  EFDB  F01B         	goto	l6602
  9835   0037A4                     u6860:
  9836   0037A4  6C2A               	negf	___flge@ff1^0,c
  9837   0037A6  1E2B               	comf	(___flge@ff1+1)^0,f,c
  9838   0037A8  B0D8               	btfsc	status,0,c
  9839   0037AA  2A2B               	incf	(___flge@ff1+1)^0,f,c
  9840   0037AC  1E2C               	comf	(___flge@ff1+2)^0,f,c
  9841   0037AE  B0D8               	btfsc	status,0,c
  9842   0037B0  2A2C               	incf	(___flge@ff1+2)^0,f,c
  9843   0037B2  0E80               	movlw	128
  9844   0037B4  562D               	subfwb	(___flge@ff1+3)^0,f,c
  9845   0037B6                     l6602:
  9846   0037B6  AE31               	btfss	(___flge@ff2+3)^0,7,c
  9847   0037B8  EFE0  F01B         	goto	u6871
  9848   0037BC  EFE2  F01B         	goto	u6870
  9849   0037C0                     u6871:
  9850   0037C0  EFEB  F01B         	goto	l616
  9851   0037C4                     u6870:
  9852   0037C4  6C2E               	negf	___flge@ff2^0,c
  9853   0037C6  1E2F               	comf	(___flge@ff2+1)^0,f,c
  9854   0037C8  B0D8               	btfsc	status,0,c
  9855   0037CA  2A2F               	incf	(___flge@ff2+1)^0,f,c
  9856   0037CC  1E30               	comf	(___flge@ff2+2)^0,f,c
  9857   0037CE  B0D8               	btfsc	status,0,c
  9858   0037D0  2A30               	incf	(___flge@ff2+2)^0,f,c
  9859   0037D2  0E80               	movlw	128
  9860   0037D4  5631               	subfwb	(___flge@ff2+3)^0,f,c
  9861   0037D6                     l616:
  9862   0037D6  0E00               	movlw	0
  9863   0037D8  1A2A               	xorwf	___flge@ff1^0,f,c
  9864   0037DA  0E00               	movlw	0
  9865   0037DC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  9866   0037DE  0E00               	movlw	0
  9867   0037E0  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  9868   0037E2  0E80               	movlw	128
  9869   0037E4  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  9870   0037E6  0E00               	movlw	0
  9871   0037E8  1A2E               	xorwf	___flge@ff2^0,f,c
  9872   0037EA  0E00               	movlw	0
  9873   0037EC  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  9874   0037EE  0E00               	movlw	0
  9875   0037F0  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  9876   0037F2  0E80               	movlw	128
  9877   0037F4  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  9878   0037F6  502E               	movf	___flge@ff2^0,w,c
  9879   0037F8  5C2A               	subwf	___flge@ff1^0,w,c
  9880   0037FA  502F               	movf	(___flge@ff2+1)^0,w,c
  9881   0037FC  582B               	subwfb	(___flge@ff1+1)^0,w,c
  9882   0037FE  5030               	movf	(___flge@ff2+2)^0,w,c
  9883   003800  582C               	subwfb	(___flge@ff1+2)^0,w,c
  9884   003802  5031               	movf	(___flge@ff2+3)^0,w,c
  9885   003804  582D               	subwfb	(___flge@ff1+3)^0,w,c
  9886   003806  B0D8               	btfsc	status,0,c
  9887   003808  EF08  F01C         	goto	u6881
  9888   00380C  EF0A  F01C         	goto	u6880
  9889   003810                     u6881:
  9890   003810  EF0D  F01C         	goto	l6608
  9891   003814                     u6880:
  9892   003814  90D8               	bcf	status,0,c
  9893   003816  EF0E  F01C         	goto	l621
  9894   00381A                     l6608:
  9895   00381A  80D8               	bsf	status,0,c
  9896   00381C                     l621:
  9897   00381C  0012               	return		;funcret
  9898   00381E                     __end_of___flge:
  9899                           	callstack 0
  9900                           
  9901 ;; *************** function ___fleq *****************
  9902 ;; Defined at:
  9903 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  ff1             4   16[COMRAM] unsigned char 
  9906 ;;  ff2             4   20[COMRAM] unsigned char 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;		None               void
  9911 ;; Registers used:
  9912 ;;		wreg, status,2, status,0
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9918 ;;      Params:         8       0       0       0       0       0       0       0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9920 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9921 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9922 ;;Total ram usage:       12 bytes
  9923 ;; Hardware stack levels used: 1
  9924 ;; Hardware stack levels required when called: 2
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		_efgtoa
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           	psect	text34
  9933   003D62                     __ptext34:
  9934                           	callstack 0
  9935   003D62                     ___fleq:
  9936                           	callstack 23
  9937   003D62  0E00               	movlw	0
  9938   003D64  1411               	andwf	___fleq@ff1^0,w,c
  9939   003D66  6E19               	movwf	??___fleq^0,c
  9940   003D68  0E00               	movlw	0
  9941   003D6A  1412               	andwf	(___fleq@ff1+1)^0,w,c
  9942   003D6C  6E1A               	movwf	(??___fleq+1)^0,c
  9943   003D6E  0E80               	movlw	128
  9944   003D70  1413               	andwf	(___fleq@ff1+2)^0,w,c
  9945   003D72  6E1B               	movwf	(??___fleq+2)^0,c
  9946   003D74  0E7F               	movlw	127
  9947   003D76  1414               	andwf	(___fleq@ff1+3)^0,w,c
  9948   003D78  6E1C               	movwf	(??___fleq+3)^0,c
  9949   003D7A  5019               	movf	??___fleq^0,w,c
  9950   003D7C  101A               	iorwf	(??___fleq+1)^0,w,c
  9951   003D7E  101B               	iorwf	(??___fleq+2)^0,w,c
  9952   003D80  101C               	iorwf	(??___fleq+3)^0,w,c
  9953   003D82  A4D8               	btfss	status,2,c
  9954   003D84  EFC6  F01E         	goto	u6811
  9955   003D88  EFC8  F01E         	goto	u6810
  9956   003D8C                     u6811:
  9957   003D8C  EFD0  F01E         	goto	l6578
  9958   003D90                     u6810:
  9959   003D90  0E00               	movlw	0
  9960   003D92  6E11               	movwf	___fleq@ff1^0,c
  9961   003D94  0E00               	movlw	0
  9962   003D96  6E12               	movwf	(___fleq@ff1+1)^0,c
  9963   003D98  0E00               	movlw	0
  9964   003D9A  6E13               	movwf	(___fleq@ff1+2)^0,c
  9965   003D9C  0E00               	movlw	0
  9966   003D9E  6E14               	movwf	(___fleq@ff1+3)^0,c
  9967   003DA0                     l6578:
  9968   003DA0  0E00               	movlw	0
  9969   003DA2  1415               	andwf	___fleq@ff2^0,w,c
  9970   003DA4  6E19               	movwf	??___fleq^0,c
  9971   003DA6  0E00               	movlw	0
  9972   003DA8  1416               	andwf	(___fleq@ff2+1)^0,w,c
  9973   003DAA  6E1A               	movwf	(??___fleq+1)^0,c
  9974   003DAC  0E80               	movlw	128
  9975   003DAE  1417               	andwf	(___fleq@ff2+2)^0,w,c
  9976   003DB0  6E1B               	movwf	(??___fleq+2)^0,c
  9977   003DB2  0E7F               	movlw	127
  9978   003DB4  1418               	andwf	(___fleq@ff2+3)^0,w,c
  9979   003DB6  6E1C               	movwf	(??___fleq+3)^0,c
  9980   003DB8  5019               	movf	??___fleq^0,w,c
  9981   003DBA  101A               	iorwf	(??___fleq+1)^0,w,c
  9982   003DBC  101B               	iorwf	(??___fleq+2)^0,w,c
  9983   003DBE  101C               	iorwf	(??___fleq+3)^0,w,c
  9984   003DC0  A4D8               	btfss	status,2,c
  9985   003DC2  EFE5  F01E         	goto	u6821
  9986   003DC6  EFE7  F01E         	goto	u6820
  9987   003DCA                     u6821:
  9988   003DCA  EFEF  F01E         	goto	l6582
  9989   003DCE                     u6820:
  9990   003DCE  0E00               	movlw	0
  9991   003DD0  6E15               	movwf	___fleq@ff2^0,c
  9992   003DD2  0E00               	movlw	0
  9993   003DD4  6E16               	movwf	(___fleq@ff2+1)^0,c
  9994   003DD6  0E00               	movlw	0
  9995   003DD8  6E17               	movwf	(___fleq@ff2+2)^0,c
  9996   003DDA  0E00               	movlw	0
  9997   003DDC  6E18               	movwf	(___fleq@ff2+3)^0,c
  9998   003DDE                     l6582:
  9999   003DDE  5015               	movf	___fleq@ff2^0,w,c
 10000   003DE0  1811               	xorwf	___fleq@ff1^0,w,c
 10001   003DE2  E10F               	bnz	u6830
 10002   003DE4  5016               	movf	(___fleq@ff2+1)^0,w,c
 10003   003DE6  1812               	xorwf	(___fleq@ff1+1)^0,w,c
 10004   003DE8  E10C               	bnz	u6830
 10005   003DEA  5017               	movf	(___fleq@ff2+2)^0,w,c
 10006   003DEC  1813               	xorwf	(___fleq@ff1+2)^0,w,c
 10007   003DEE  E109               	bnz	u6830
 10008   003DF0  5018               	movf	(___fleq@ff2+3)^0,w,c
 10009   003DF2  1814               	xorwf	(___fleq@ff1+3)^0,w,c
 10010   003DF4  B4D8               	btfsc	status,2,c
 10011   003DF6  EFFF  F01E         	goto	u6831
 10012   003DFA  EF01  F01F         	goto	u6830
 10013   003DFE                     u6831:
 10014   003DFE  EF04  F01F         	goto	l6586
 10015   003E02                     u6830:
 10016   003E02  90D8               	bcf	status,0,c
 10017   003E04  EF05  F01F         	goto	l610
 10018   003E08                     l6586:
 10019   003E08  80D8               	bsf	status,0,c
 10020   003E0A                     l610:
 10021   003E0A  0012               	return		;funcret
 10022   003E0C                     __end_of___fleq:
 10023                           	callstack 0
 10024                           
 10025 ;; *************** function ___fldiv *****************
 10026 ;; Defined at:
 10027 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 10028 ;; Parameters:    Size  Location     Type
 10029 ;;  b               4   30[COMRAM] unsigned char 
 10030 ;;  a               4   34[COMRAM] unsigned char 
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;  grs             4   49[COMRAM] unsigned long 
 10033 ;;  rem             4   42[COMRAM] unsigned long 
 10034 ;;  new_exp         2   47[COMRAM] short 
 10035 ;;  aexp            1   54[COMRAM] unsigned char 
 10036 ;;  bexp            1   53[COMRAM] unsigned char 
 10037 ;;  sign            1   46[COMRAM] unsigned char 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  4   30[COMRAM] unsigned char 
 10040 ;; Registers used:
 10041 ;;		wreg, status,2, status,0
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10047 ;;      Params:         8       0       0       0       0       0       0       0       0
 10048 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10049 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10050 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10051 ;;Total ram usage:       25 bytes
 10052 ;; Hardware stack levels used: 1
 10053 ;; Hardware stack levels required when called: 2
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_FILL
 10058 ;;		_efgtoa
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text35
 10063   0020C6                     __ptext35:
 10064                           	callstack 0
 10065   0020C6                     ___fldiv:
 10066                           	callstack 23
 10067   0020C6  5022               	movf	(___fldiv@b+3)^0,w,c
 10068   0020C8  0B80               	andlw	128
 10069   0020CA  6E2F               	movwf	___fldiv@sign^0,c
 10070   0020CC  5022               	movf	(___fldiv@b+3)^0,w,c
 10071   0020CE  2422               	addwf	(___fldiv@b+3)^0,w,c
 10072   0020D0  6E36               	movwf	___fldiv@bexp^0,c
 10073   0020D2  AE21               	btfss	(___fldiv@b+2)^0,7,c
 10074   0020D4  EF6E  F010         	goto	u6391
 10075   0020D8  EF70  F010         	goto	u6390
 10076   0020DC                     u6391:
 10077   0020DC  EF71  F010         	goto	l6306
 10078   0020E0                     u6390:
 10079   0020E0  8036               	bsf	___fldiv@bexp^0,0,c
 10080   0020E2                     l6306:
 10081   0020E2  5036               	movf	___fldiv@bexp^0,w,c
 10082   0020E4  B4D8               	btfsc	status,2,c
 10083   0020E6  EF77  F010         	goto	u6401
 10084   0020EA  EF79  F010         	goto	u6400
 10085   0020EE                     u6401:
 10086   0020EE  EF8E  F010         	goto	l6316
 10087   0020F2                     u6400:
 10088   0020F2  2836               	incf	___fldiv@bexp^0,w,c
 10089   0020F4  A4D8               	btfss	status,2,c
 10090   0020F6  EF7F  F010         	goto	u6411
 10091   0020FA  EF81  F010         	goto	u6410
 10092   0020FE                     u6411:
 10093   0020FE  EF89  F010         	goto	l6312
 10094   002102                     u6410:
 10095   002102  0E00               	movlw	0
 10096   002104  6E1F               	movwf	___fldiv@b^0,c
 10097   002106  0E00               	movlw	0
 10098   002108  6E20               	movwf	(___fldiv@b+1)^0,c
 10099   00210A  0E00               	movlw	0
 10100   00210C  6E21               	movwf	(___fldiv@b+2)^0,c
 10101   00210E  0E00               	movlw	0
 10102   002110  6E22               	movwf	(___fldiv@b+3)^0,c
 10103   002112                     l6312:
 10104   002112  8E21               	bsf	(___fldiv@b+2)^0,7,c
 10105   002114  0E00               	movlw	0
 10106   002116  6E22               	movwf	(___fldiv@b+3)^0,c
 10107   002118  EF96  F010         	goto	l6318
 10108   00211C                     l6316:
 10109   00211C  0E00               	movlw	0
 10110   00211E  6E1F               	movwf	___fldiv@b^0,c
 10111   002120  0E00               	movlw	0
 10112   002122  6E20               	movwf	(___fldiv@b+1)^0,c
 10113   002124  0E00               	movlw	0
 10114   002126  6E21               	movwf	(___fldiv@b+2)^0,c
 10115   002128  0E00               	movlw	0
 10116   00212A  6E22               	movwf	(___fldiv@b+3)^0,c
 10117   00212C                     l6318:
 10118   00212C  5026               	movf	(___fldiv@a+3)^0,w,c
 10119   00212E  0B80               	andlw	128
 10120   002130  1A2F               	xorwf	___fldiv@sign^0,f,c
 10121   002132  5026               	movf	(___fldiv@a+3)^0,w,c
 10122   002134  2426               	addwf	(___fldiv@a+3)^0,w,c
 10123   002136  6E37               	movwf	___fldiv@aexp^0,c
 10124   002138  AE25               	btfss	(___fldiv@a+2)^0,7,c
 10125   00213A  EFA1  F010         	goto	u6421
 10126   00213E  EFA3  F010         	goto	u6420
 10127   002142                     u6421:
 10128   002142  EFA4  F010         	goto	l6326
 10129   002146                     u6420:
 10130   002146  8037               	bsf	___fldiv@aexp^0,0,c
 10131   002148                     l6326:
 10132   002148  5037               	movf	___fldiv@aexp^0,w,c
 10133   00214A  B4D8               	btfsc	status,2,c
 10134   00214C  EFAA  F010         	goto	u6431
 10135   002150  EFAC  F010         	goto	u6430
 10136   002154                     u6431:
 10137   002154  EFC1  F010         	goto	l6336
 10138   002158                     u6430:
 10139   002158  2837               	incf	___fldiv@aexp^0,w,c
 10140   00215A  A4D8               	btfss	status,2,c
 10141   00215C  EFB2  F010         	goto	u6441
 10142   002160  EFB4  F010         	goto	u6440
 10143   002164                     u6441:
 10144   002164  EFBC  F010         	goto	l6332
 10145   002168                     u6440:
 10146   002168  0E00               	movlw	0
 10147   00216A  6E23               	movwf	___fldiv@a^0,c
 10148   00216C  0E00               	movlw	0
 10149   00216E  6E24               	movwf	(___fldiv@a+1)^0,c
 10150   002170  0E00               	movlw	0
 10151   002172  6E25               	movwf	(___fldiv@a+2)^0,c
 10152   002174  0E00               	movlw	0
 10153   002176  6E26               	movwf	(___fldiv@a+3)^0,c
 10154   002178                     l6332:
 10155   002178  8E25               	bsf	(___fldiv@a+2)^0,7,c
 10156   00217A  0E00               	movlw	0
 10157   00217C  6E26               	movwf	(___fldiv@a+3)^0,c
 10158   00217E  EFC9  F010         	goto	l6338
 10159   002182                     l6336:
 10160   002182  0E00               	movlw	0
 10161   002184  6E23               	movwf	___fldiv@a^0,c
 10162   002186  0E00               	movlw	0
 10163   002188  6E24               	movwf	(___fldiv@a+1)^0,c
 10164   00218A  0E00               	movlw	0
 10165   00218C  6E25               	movwf	(___fldiv@a+2)^0,c
 10166   00218E  0E00               	movlw	0
 10167   002190  6E26               	movwf	(___fldiv@a+3)^0,c
 10168   002192                     l6338:
 10169   002192  5023               	movf	___fldiv@a^0,w,c
 10170   002194  1024               	iorwf	(___fldiv@a+1)^0,w,c
 10171   002196  1025               	iorwf	(___fldiv@a+2)^0,w,c
 10172   002198  1026               	iorwf	(___fldiv@a+3)^0,w,c
 10173   00219A  A4D8               	btfss	status,2,c
 10174   00219C  EFD2  F010         	goto	u6451
 10175   0021A0  EFD4  F010         	goto	u6450
 10176   0021A4                     u6451:
 10177   0021A4  EFEC  F010         	goto	l6350
 10178   0021A8                     u6450:
 10179   0021A8  0E00               	movlw	0
 10180   0021AA  6E1F               	movwf	___fldiv@b^0,c
 10181   0021AC  0E00               	movlw	0
 10182   0021AE  6E20               	movwf	(___fldiv@b+1)^0,c
 10183   0021B0  0E00               	movlw	0
 10184   0021B2  6E21               	movwf	(___fldiv@b+2)^0,c
 10185   0021B4  0E00               	movlw	0
 10186   0021B6  6E22               	movwf	(___fldiv@b+3)^0,c
 10187   0021B8  0E80               	movlw	128
 10188   0021BA  1221               	iorwf	(___fldiv@b+2)^0,f,c
 10189   0021BC  0E7F               	movlw	127
 10190   0021BE  1222               	iorwf	(___fldiv@b+3)^0,f,c
 10191   0021C0                     l6344:
 10192   0021C0  502F               	movf	___fldiv@sign^0,w,c
 10193   0021C2  1222               	iorwf	(___fldiv@b+3)^0,f,c
 10194   0021C4  C01F  F01F         	movff	___fldiv@b,?___fldiv
 10195   0021C8  C020  F020         	movff	___fldiv@b+1,?___fldiv+1
 10196   0021CC  C021  F021         	movff	___fldiv@b+2,?___fldiv+2
 10197   0021D0  C022  F022         	movff	___fldiv@b+3,?___fldiv+3
 10198   0021D4  EF2F  F012         	goto	l933
 10199   0021D8                     l6350:
 10200   0021D8  5036               	movf	___fldiv@bexp^0,w,c
 10201   0021DA  A4D8               	btfss	status,2,c
 10202   0021DC  EFF2  F010         	goto	u6461
 10203   0021E0  EFF4  F010         	goto	u6460
 10204   0021E4                     u6461:
 10205   0021E4  EFFE  F010         	goto	l6358
 10206   0021E8                     u6460:
 10207   0021E8  0E00               	movlw	0
 10208   0021EA  6E1F               	movwf	?___fldiv^0,c
 10209   0021EC  0E00               	movlw	0
 10210   0021EE  6E20               	movwf	(?___fldiv+1)^0,c
 10211   0021F0  0E00               	movlw	0
 10212   0021F2  6E21               	movwf	(?___fldiv+2)^0,c
 10213   0021F4  0E00               	movlw	0
 10214   0021F6  6E22               	movwf	(?___fldiv+3)^0,c
 10215   0021F8  EF2F  F012         	goto	l933
 10216   0021FC                     l6358:
 10217   0021FC  5037               	movf	___fldiv@aexp^0,w,c
 10218   0021FE  C036  F027         	movff	___fldiv@bexp,??___fldiv
 10219   002202  6A28               	clrf	(??___fldiv+1)^0,c
 10220   002204  5E27               	subwf	??___fldiv^0,f,c
 10221   002206  0E00               	movlw	0
 10222   002208  5A28               	subwfb	(??___fldiv+1)^0,f,c
 10223   00220A  0E7F               	movlw	127
 10224   00220C  2427               	addwf	??___fldiv^0,w,c
 10225   00220E  6E30               	movwf	___fldiv@new_exp^0,c
 10226   002210  0E00               	movlw	0
 10227   002212  2028               	addwfc	(??___fldiv+1)^0,w,c
 10228   002214  6E31               	movwf	(___fldiv@new_exp+1)^0,c
 10229   002216  C01F  F02B         	movff	___fldiv@b,___fldiv@rem
 10230   00221A  C020  F02C         	movff	___fldiv@b+1,___fldiv@rem+1
 10231   00221E  C021  F02D         	movff	___fldiv@b+2,___fldiv@rem+2
 10232   002222  C022  F02E         	movff	___fldiv@b+3,___fldiv@rem+3
 10233   002226  0E00               	movlw	0
 10234   002228  6E1F               	movwf	___fldiv@b^0,c
 10235   00222A  0E00               	movlw	0
 10236   00222C  6E20               	movwf	(___fldiv@b+1)^0,c
 10237   00222E  0E00               	movlw	0
 10238   002230  6E21               	movwf	(___fldiv@b+2)^0,c
 10239   002232  0E00               	movlw	0
 10240   002234  6E22               	movwf	(___fldiv@b+3)^0,c
 10241   002236  0E00               	movlw	0
 10242   002238  6E32               	movwf	___fldiv@grs^0,c
 10243   00223A  0E00               	movlw	0
 10244   00223C  6E33               	movwf	(___fldiv@grs+1)^0,c
 10245   00223E  0E00               	movlw	0
 10246   002240  6E34               	movwf	(___fldiv@grs+2)^0,c
 10247   002242  0E00               	movlw	0
 10248   002244  6E35               	movwf	(___fldiv@grs+3)^0,c
 10249   002246  0E00               	movlw	0
 10250   002248  6E37               	movwf	___fldiv@aexp^0,c
 10251   00224A  EF5F  F011         	goto	l935
 10252   00224E                     l6368:
 10253   00224E  5037               	movf	___fldiv@aexp^0,w,c
 10254   002250  B4D8               	btfsc	status,2,c
 10255   002252  EF2D  F011         	goto	u6471
 10256   002256  EF2F  F011         	goto	u6470
 10257   00225A                     u6471:
 10258   00225A  EF46  F011         	goto	l6376
 10259   00225E                     u6470:
 10260   00225E  90D8               	bcf	status,0,c
 10261   002260  362B               	rlcf	___fldiv@rem^0,f,c
 10262   002262  362C               	rlcf	(___fldiv@rem+1)^0,f,c
 10263   002264  362D               	rlcf	(___fldiv@rem+2)^0,f,c
 10264   002266  362E               	rlcf	(___fldiv@rem+3)^0,f,c
 10265   002268  90D8               	bcf	status,0,c
 10266   00226A  361F               	rlcf	___fldiv@b^0,f,c
 10267   00226C  3620               	rlcf	(___fldiv@b+1)^0,f,c
 10268   00226E  3621               	rlcf	(___fldiv@b+2)^0,f,c
 10269   002270  3622               	rlcf	(___fldiv@b+3)^0,f,c
 10270   002272  AE35               	btfss	(___fldiv@grs+3)^0,7,c
 10271   002274  EF3E  F011         	goto	u6481
 10272   002278  EF40  F011         	goto	u6480
 10273   00227C                     u6481:
 10274   00227C  EF41  F011         	goto	l938
 10275   002280                     u6480:
 10276   002280  801F               	bsf	___fldiv@b^0,0,c
 10277   002282                     l938:
 10278   002282  90D8               	bcf	status,0,c
 10279   002284  3632               	rlcf	___fldiv@grs^0,f,c
 10280   002286  3633               	rlcf	(___fldiv@grs+1)^0,f,c
 10281   002288  3634               	rlcf	(___fldiv@grs+2)^0,f,c
 10282   00228A  3635               	rlcf	(___fldiv@grs+3)^0,f,c
 10283   00228C                     l6376:
 10284   00228C  5023               	movf	___fldiv@a^0,w,c
 10285   00228E  5C2B               	subwf	___fldiv@rem^0,w,c
 10286   002290  5024               	movf	(___fldiv@a+1)^0,w,c
 10287   002292  582C               	subwfb	(___fldiv@rem+1)^0,w,c
 10288   002294  5025               	movf	(___fldiv@a+2)^0,w,c
 10289   002296  582D               	subwfb	(___fldiv@rem+2)^0,w,c
 10290   002298  5026               	movf	(___fldiv@a+3)^0,w,c
 10291   00229A  582E               	subwfb	(___fldiv@rem+3)^0,w,c
 10292   00229C  A0D8               	btfss	status,0,c
 10293   00229E  EF53  F011         	goto	u6491
 10294   0022A2  EF55  F011         	goto	u6490
 10295   0022A6                     u6491:
 10296   0022A6  EF5E  F011         	goto	l6382
 10297   0022AA                     u6490:
 10298   0022AA  8C35               	bsf	(___fldiv@grs+3)^0,6,c
 10299   0022AC  5023               	movf	___fldiv@a^0,w,c
 10300   0022AE  5E2B               	subwf	___fldiv@rem^0,f,c
 10301   0022B0  5024               	movf	(___fldiv@a+1)^0,w,c
 10302   0022B2  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
 10303   0022B4  5025               	movf	(___fldiv@a+2)^0,w,c
 10304   0022B6  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
 10305   0022B8  5026               	movf	(___fldiv@a+3)^0,w,c
 10306   0022BA  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
 10307   0022BC                     l6382:
 10308   0022BC  2A37               	incf	___fldiv@aexp^0,f,c
 10309   0022BE                     l935:
 10310   0022BE  0E19               	movlw	25
 10311   0022C0  6437               	cpfsgt	___fldiv@aexp^0,c
 10312   0022C2  EF65  F011         	goto	u6501
 10313   0022C6  EF67  F011         	goto	u6500
 10314   0022CA                     u6501:
 10315   0022CA  EF27  F011         	goto	l6368
 10316   0022CE                     u6500:
 10317   0022CE  502B               	movf	___fldiv@rem^0,w,c
 10318   0022D0  102C               	iorwf	(___fldiv@rem+1)^0,w,c
 10319   0022D2  102D               	iorwf	(___fldiv@rem+2)^0,w,c
 10320   0022D4  102E               	iorwf	(___fldiv@rem+3)^0,w,c
 10321   0022D6  B4D8               	btfsc	status,2,c
 10322   0022D8  EF70  F011         	goto	u6511
 10323   0022DC  EF72  F011         	goto	u6510
 10324   0022E0                     u6511:
 10325   0022E0  EF8A  F011         	goto	l6394
 10326   0022E4                     u6510:
 10327   0022E4  8032               	bsf	___fldiv@grs^0,0,c
 10328   0022E6  EF8A  F011         	goto	l6394
 10329   0022EA                     l6388:
 10330   0022EA  90D8               	bcf	status,0,c
 10331   0022EC  361F               	rlcf	___fldiv@b^0,f,c
 10332   0022EE  3620               	rlcf	(___fldiv@b+1)^0,f,c
 10333   0022F0  3621               	rlcf	(___fldiv@b+2)^0,f,c
 10334   0022F2  3622               	rlcf	(___fldiv@b+3)^0,f,c
 10335   0022F4  AE35               	btfss	(___fldiv@grs+3)^0,7,c
 10336   0022F6  EF7F  F011         	goto	u6521
 10337   0022FA  EF81  F011         	goto	u6520
 10338   0022FE                     u6521:
 10339   0022FE  EF82  F011         	goto	l944
 10340   002302                     u6520:
 10341   002302  801F               	bsf	___fldiv@b^0,0,c
 10342   002304                     l944:
 10343   002304  90D8               	bcf	status,0,c
 10344   002306  3632               	rlcf	___fldiv@grs^0,f,c
 10345   002308  3633               	rlcf	(___fldiv@grs+1)^0,f,c
 10346   00230A  3634               	rlcf	(___fldiv@grs+2)^0,f,c
 10347   00230C  3635               	rlcf	(___fldiv@grs+3)^0,f,c
 10348   00230E  0630               	decf	___fldiv@new_exp^0,f,c
 10349   002310  A0D8               	btfss	status,0,c
 10350   002312  0631               	decf	(___fldiv@new_exp+1)^0,f,c
 10351   002314                     l6394:
 10352   002314  AE21               	btfss	(___fldiv@b+2)^0,7,c
 10353   002316  EF8F  F011         	goto	u6531
 10354   00231A  EF91  F011         	goto	u6530
 10355   00231E                     u6531:
 10356   00231E  EF75  F011         	goto	l6388
 10357   002322                     u6530:
 10358   002322  0E00               	movlw	0
 10359   002324  6E37               	movwf	___fldiv@aexp^0,c
 10360   002326  AE35               	btfss	(___fldiv@grs+3)^0,7,c
 10361   002328  EF98  F011         	goto	u6541
 10362   00232C  EF9A  F011         	goto	u6540
 10363   002330                     u6541:
 10364   002330  EFBE  F011         	goto	l946
 10365   002334                     u6540:
 10366   002334  0EFF               	movlw	255
 10367   002336  1432               	andwf	___fldiv@grs^0,w,c
 10368   002338  6E27               	movwf	??___fldiv^0,c
 10369   00233A  0EFF               	movlw	255
 10370   00233C  1433               	andwf	(___fldiv@grs+1)^0,w,c
 10371   00233E  6E28               	movwf	(??___fldiv+1)^0,c
 10372   002340  0EFF               	movlw	255
 10373   002342  1434               	andwf	(___fldiv@grs+2)^0,w,c
 10374   002344  6E29               	movwf	(??___fldiv+2)^0,c
 10375   002346  0E7F               	movlw	127
 10376   002348  1435               	andwf	(___fldiv@grs+3)^0,w,c
 10377   00234A  6E2A               	movwf	(??___fldiv+3)^0,c
 10378   00234C  5027               	movf	??___fldiv^0,w,c
 10379   00234E  1028               	iorwf	(??___fldiv+1)^0,w,c
 10380   002350  1029               	iorwf	(??___fldiv+2)^0,w,c
 10381   002352  102A               	iorwf	(??___fldiv+3)^0,w,c
 10382   002354  B4D8               	btfsc	status,2,c
 10383   002356  EFAF  F011         	goto	u6551
 10384   00235A  EFB1  F011         	goto	u6550
 10385   00235E                     u6551:
 10386   00235E  EFB5  F011         	goto	l947
 10387   002362                     u6550:
 10388   002362                     l6402:
 10389   002362  0E01               	movlw	1
 10390   002364  6E37               	movwf	___fldiv@aexp^0,c
 10391   002366  EFBE  F011         	goto	l946
 10392   00236A                     l947:
 10393   00236A  A01F               	btfss	___fldiv@b^0,0,c
 10394   00236C  EFBA  F011         	goto	u6561
 10395   002370  EFBC  F011         	goto	u6560
 10396   002374                     u6561:
 10397   002374  EFBE  F011         	goto	l946
 10398   002378                     u6560:
 10399   002378  EFB1  F011         	goto	l6402
 10400   00237C                     l946:
 10401   00237C  5037               	movf	___fldiv@aexp^0,w,c
 10402   00237E  B4D8               	btfsc	status,2,c
 10403   002380  EFC4  F011         	goto	u6571
 10404   002384  EFC6  F011         	goto	u6570
 10405   002388                     u6571:
 10406   002388  EFEA  F011         	goto	l6414
 10407   00238C                     u6570:
 10408   00238C  0E01               	movlw	1
 10409   00238E  261F               	addwf	___fldiv@b^0,f,c
 10410   002390  0E00               	movlw	0
 10411   002392  2220               	addwfc	(___fldiv@b+1)^0,f,c
 10412   002394  2221               	addwfc	(___fldiv@b+2)^0,f,c
 10413   002396  2222               	addwfc	(___fldiv@b+3)^0,f,c
 10414   002398  A022               	btfss	(___fldiv@b+3)^0,0,c
 10415   00239A  EFD1  F011         	goto	u6581
 10416   00239E  EFD3  F011         	goto	u6580
 10417   0023A2                     u6581:
 10418   0023A2  EFEA  F011         	goto	l6414
 10419   0023A6                     u6580:
 10420   0023A6  C01F  F027         	movff	___fldiv@b,??___fldiv
 10421   0023AA  C020  F028         	movff	___fldiv@b+1,??___fldiv+1
 10422   0023AE  C021  F029         	movff	___fldiv@b+2,??___fldiv+2
 10423   0023B2  C022  F02A         	movff	___fldiv@b+3,??___fldiv+3
 10424   0023B6  342A               	rlcf	(??___fldiv+3)^0,w,c
 10425   0023B8  322A               	rrcf	(??___fldiv+3)^0,f,c
 10426   0023BA  3229               	rrcf	(??___fldiv+2)^0,f,c
 10427   0023BC  3228               	rrcf	(??___fldiv+1)^0,f,c
 10428   0023BE  3227               	rrcf	??___fldiv^0,f,c
 10429   0023C0  C027  F01F         	movff	??___fldiv,___fldiv@b
 10430   0023C4  C028  F020         	movff	??___fldiv+1,___fldiv@b+1
 10431   0023C8  C029  F021         	movff	??___fldiv+2,___fldiv@b+2
 10432   0023CC  C02A  F022         	movff	??___fldiv+3,___fldiv@b+3
 10433   0023D0  4A30               	infsnz	___fldiv@new_exp^0,f,c
 10434   0023D2  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
 10435   0023D4                     l6414:
 10436   0023D4  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10437   0023D6  EFF5  F011         	goto	u6591
 10438   0023DA  5031               	movf	(___fldiv@new_exp+1)^0,w,c
 10439   0023DC  E108               	bnz	u6590
 10440   0023DE  2830               	incf	___fldiv@new_exp^0,w,c
 10441   0023E0  A0D8               	btfss	status,0,c
 10442   0023E2  EFF5  F011         	goto	u6591
 10443   0023E6  EFF7  F011         	goto	u6590
 10444   0023EA                     u6591:
 10445   0023EA  EF02  F012         	goto	l6418
 10446   0023EE                     u6590:
 10447   0023EE  0E00               	movlw	0
 10448   0023F0  6E31               	movwf	(___fldiv@new_exp+1)^0,c
 10449   0023F2  6830               	setf	___fldiv@new_exp^0,c
 10450   0023F4  0E00               	movlw	0
 10451   0023F6  6E1F               	movwf	___fldiv@b^0,c
 10452   0023F8  0E00               	movlw	0
 10453   0023FA  6E20               	movwf	(___fldiv@b+1)^0,c
 10454   0023FC  0E00               	movlw	0
 10455   0023FE  6E21               	movwf	(___fldiv@b+2)^0,c
 10456   002400  0E00               	movlw	0
 10457   002402  6E22               	movwf	(___fldiv@b+3)^0,c
 10458   002404                     l6418:
 10459   002404  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10460   002406  EF0F  F012         	goto	u6600
 10461   00240A  5031               	movf	(___fldiv@new_exp+1)^0,w,c
 10462   00240C  E106               	bnz	u6601
 10463   00240E  0430               	decf	___fldiv@new_exp^0,w,c
 10464   002410  B0D8               	btfsc	status,0,c
 10465   002412  EF0D  F012         	goto	u6601
 10466   002416  EF0F  F012         	goto	u6600
 10467   00241A                     u6601:
 10468   00241A  EF1D  F012         	goto	l6422
 10469   00241E                     u6600:
 10470   00241E  0E00               	movlw	0
 10471   002420  6E31               	movwf	(___fldiv@new_exp+1)^0,c
 10472   002422  0E00               	movlw	0
 10473   002424  6E30               	movwf	___fldiv@new_exp^0,c
 10474   002426  0E00               	movlw	0
 10475   002428  6E1F               	movwf	___fldiv@b^0,c
 10476   00242A  0E00               	movlw	0
 10477   00242C  6E20               	movwf	(___fldiv@b+1)^0,c
 10478   00242E  0E00               	movlw	0
 10479   002430  6E21               	movwf	(___fldiv@b+2)^0,c
 10480   002432  0E00               	movlw	0
 10481   002434  6E22               	movwf	(___fldiv@b+3)^0,c
 10482   002436  0E00               	movlw	0
 10483   002438  6E2F               	movwf	___fldiv@sign^0,c
 10484   00243A                     l6422:
 10485   00243A  C030  F036         	movff	___fldiv@new_exp,___fldiv@bexp
 10486   00243E  A036               	btfss	___fldiv@bexp^0,0,c
 10487   002440  EF24  F012         	goto	u6611
 10488   002444  EF26  F012         	goto	u6610
 10489   002448                     u6611:
 10490   002448  EF29  F012         	goto	l6428
 10491   00244C                     u6610:
 10492   00244C  8E21               	bsf	(___fldiv@b+2)^0,7,c
 10493   00244E  EF2A  F012         	goto	l6430
 10494   002452                     l6428:
 10495   002452  9E21               	bcf	(___fldiv@b+2)^0,7,c
 10496   002454                     l6430:
 10497   002454  90D8               	bcf	status,0,c
 10498   002456  3036               	rrcf	___fldiv@bexp^0,w,c
 10499   002458  6E22               	movwf	(___fldiv@b+3)^0,c
 10500   00245A  EFE0  F010         	goto	l6344
 10501   00245E                     l933:
 10502   00245E  0012               	return		;funcret
 10503   002460                     __end_of___fldiv:
 10504                           	callstack 0
 10505                           
 10506 ;; *************** function _atoi *****************
 10507 ;; Defined at:
 10508 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
 10509 ;; Parameters:    Size  Location     Type
 10510 ;;  s               2   22[COMRAM] PTR const unsigned char 
 10511 ;;		 -> STR_32(6), STR_30(3), 
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;  n               2   29[COMRAM] int 
 10514 ;;  neg             2   27[COMRAM] int 
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  2   22[COMRAM] int 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10524 ;;      Params:         2       0       0       0       0       0       0       0       0
 10525 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10526 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10527 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10528 ;;Total ram usage:        9 bytes
 10529 ;; Hardware stack levels used: 1
 10530 ;; Hardware stack levels required when called: 3
 10531 ;; This function calls:
 10532 ;;		___wmul
 10533 ;;		_isdigit
 10534 ;;		_isspace
 10535 ;; This function is called by:
 10536 ;;		_vfpfcnvrt
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text36
 10541   0034CA                     __ptext36:
 10542                           	callstack 0
 10543   0034CA                     _atoi:
 10544                           	callstack 23
 10545   0034CA  0E00               	movlw	0
 10546   0034CC  6E1F               	movwf	(atoi@n+1)^0,c
 10547   0034CE  0E00               	movlw	0
 10548   0034D0  6E1E               	movwf	atoi@n^0,c
 10549   0034D2  0E00               	movlw	0
 10550   0034D4  6E1D               	movwf	(atoi@neg+1)^0,c
 10551   0034D6  0E00               	movlw	0
 10552   0034D8  6E1C               	movwf	atoi@neg^0,c
 10553   0034DA  EF71  F01A         	goto	l7078
 10554   0034DE                     l7074:
 10555   0034DE  4A17               	infsnz	atoi@s^0,f,c
 10556   0034E0  2A18               	incf	(atoi@s+1)^0,f,c
 10557   0034E2                     l7078:
 10558   0034E2  C017  FFF6         	movff	atoi@s,tblptrl
 10559   0034E6  C018  FFF7         	movff	atoi@s+1,tblptrh
 10560   0034EA                     	if	0	;tblptru may be non-zero
 10561   0034EA                     	endif
 10562   0034EA                     	if	0	;tblptru may be non-zero
 10563   0034EA                     	endif
 10564   0034EA  0008               	tblrd		*
 10565   0034EC  50F5               	movf	tablat,w,c
 10566   0034EE  0A20               	xorlw	32
 10567   0034F0  B4D8               	btfsc	status,2,c
 10568   0034F2  EF7D  F01A         	goto	u7721
 10569   0034F6  EF7F  F01A         	goto	u7720
 10570   0034FA                     u7721:
 10571   0034FA  EF6F  F01A         	goto	l7074
 10572   0034FE                     u7720:
 10573   0034FE  C017  FFF6         	movff	atoi@s,tblptrl
 10574   003502  C018  FFF7         	movff	atoi@s+1,tblptrh
 10575   003506                     	if	0	;tblptru may be non-zero
 10576   003506                     	endif
 10577   003506                     	if	0	;tblptru may be non-zero
 10578   003506                     	endif
 10579   003506  0008               	tblrd		*
 10580   003508  CFF5 F019          	movff	tablat,??_atoi
 10581   00350C  0EF7               	movlw	247
 10582   00350E  2419               	addwf	??_atoi^0,w,c
 10583   003510  6E1A               	movwf	(??_atoi+1)^0,c
 10584   003512  6A1B               	clrf	(??_atoi+2)^0,c
 10585   003514  0EFF               	movlw	255
 10586   003516  221B               	addwfc	(??_atoi+2)^0,f,c
 10587   003518  501B               	movf	(??_atoi+2)^0,w,c
 10588   00351A  E109               	bnz	u7730
 10589   00351C  0E05               	movlw	5
 10590   00351E  5C1A               	subwf	(??_atoi+1)^0,w,c
 10591   003520  A0D8               	btfss	status,0,c
 10592   003522  EF95  F01A         	goto	u7731
 10593   003526  EF97  F01A         	goto	u7730
 10594   00352A                     u7731:
 10595   00352A  EF6F  F01A         	goto	l7074
 10596   00352E                     u7730:
 10597   00352E  EFA1  F01A         	goto	l7086
 10598   003532                     l7082:
 10599   003532  0E00               	movlw	0
 10600   003534  6E1D               	movwf	(atoi@neg+1)^0,c
 10601   003536  0E01               	movlw	1
 10602   003538  6E1C               	movwf	atoi@neg^0,c
 10603   00353A                     l7084:
 10604   00353A  4A17               	infsnz	atoi@s^0,f,c
 10605   00353C  2A18               	incf	(atoi@s+1)^0,f,c
 10606   00353E  EFD6  F01A         	goto	l7094
 10607   003542                     l7086:
 10608   003542  C017  FFF6         	movff	atoi@s,tblptrl
 10609   003546  C018  FFF7         	movff	atoi@s+1,tblptrh
 10610   00354A                     	if	0	;tblptru may be non-zero
 10611   00354A                     	endif
 10612   00354A                     	if	0	;tblptru may be non-zero
 10613   00354A                     	endif
 10614   00354A  0008               	tblrd		*
 10615   00354C  50F5               	movf	tablat,w,c
 10616   00354E  6E19               	movwf	??_atoi^0,c
 10617   003550  6A1A               	clrf	(??_atoi+1)^0,c
 10618                           
 10619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10620                           ; Switch size 1, requested type "simple"
 10621                           ; Number of cases is 1, Range of values is 0 to 0
 10622                           ; switch strategies available:
 10623                           ; Name         Instructions Cycles
 10624                           ; simple_byte            4     3 (average)
 10625                           ;	Chosen strategy is simple_byte
 10626   003552  501A               	movf	(??_atoi+1)^0,w,c
 10627   003554  0A00               	xorlw	0	; case 0
 10628   003556  B4D8               	btfsc	status,2,c
 10629   003558  EFB0  F01A         	goto	l7866
 10630   00355C  EFD6  F01A         	goto	l7094
 10631   003560                     l7866:
 10632                           
 10633                           ; Switch size 1, requested type "simple"
 10634                           ; Number of cases is 2, Range of values is 43 to 45
 10635                           ; switch strategies available:
 10636                           ; Name         Instructions Cycles
 10637                           ; simple_byte            7     4 (average)
 10638                           ;	Chosen strategy is simple_byte
 10639   003560  5019               	movf	??_atoi^0,w,c
 10640   003562  0A2B               	xorlw	43	; case 43
 10641   003564  B4D8               	btfsc	status,2,c
 10642   003566  EF9D  F01A         	goto	l7084
 10643   00356A  0A06               	xorlw	6	; case 45
 10644   00356C  B4D8               	btfsc	status,2,c
 10645   00356E  EF99  F01A         	goto	l7082
 10646   003572  EFD6  F01A         	goto	l7094
 10647   003576                     l7088:
 10648   003576  C01E  F011         	movff	atoi@n,___wmul@multiplier
 10649   00357A  C01F  F012         	movff	atoi@n+1,___wmul@multiplier+1
 10650   00357E  0E00               	movlw	0
 10651   003580  6E14               	movwf	(___wmul@multiplicand+1)^0,c
 10652   003582  0E0A               	movlw	10
 10653   003584  6E13               	movwf	___wmul@multiplicand^0,c
 10654   003586  ECC6  F021         	call	___wmul	;wreg free
 10655   00358A  C017  FFF6         	movff	atoi@s,tblptrl
 10656   00358E  C018  FFF7         	movff	atoi@s+1,tblptrh
 10657   003592                     	if	0	;tblptru may be non-zero
 10658   003592                     	endif
 10659   003592                     	if	0	;tblptru may be non-zero
 10660   003592                     	endif
 10661   003592  0008               	tblrd		*
 10662   003594  50F5               	movf	tablat,w,c
 10663   003596  5E11               	subwf	?___wmul^0,f,c
 10664   003598  0E00               	movlw	0
 10665   00359A  5A12               	subwfb	(?___wmul+1)^0,f,c
 10666   00359C  0E30               	movlw	48
 10667   00359E  2411               	addwf	?___wmul^0,w,c
 10668   0035A0  6E1E               	movwf	atoi@n^0,c
 10669   0035A2  0E00               	movlw	0
 10670   0035A4  2012               	addwfc	(?___wmul+1)^0,w,c
 10671   0035A6  6E1F               	movwf	(atoi@n+1)^0,c
 10672   0035A8  EF9D  F01A         	goto	l7084
 10673   0035AC                     l7094:
 10674   0035AC  C017  FFF6         	movff	atoi@s,tblptrl
 10675   0035B0  C018  FFF7         	movff	atoi@s+1,tblptrh
 10676   0035B4                     	if	0	;tblptru may be non-zero
 10677   0035B4                     	endif
 10678   0035B4                     	if	0	;tblptru may be non-zero
 10679   0035B4                     	endif
 10680   0035B4  0008               	tblrd		*
 10681   0035B6  CFF5 F019          	movff	tablat,??_atoi
 10682   0035BA  0ED0               	movlw	208
 10683   0035BC  2419               	addwf	??_atoi^0,w,c
 10684   0035BE  6E1A               	movwf	(??_atoi+1)^0,c
 10685   0035C0  6A1B               	clrf	(??_atoi+2)^0,c
 10686   0035C2  0EFF               	movlw	255
 10687   0035C4  221B               	addwfc	(??_atoi+2)^0,f,c
 10688   0035C6  501B               	movf	(??_atoi+2)^0,w,c
 10689   0035C8  E109               	bnz	u7740
 10690   0035CA  0E0A               	movlw	10
 10691   0035CC  5C1A               	subwf	(??_atoi+1)^0,w,c
 10692   0035CE  A0D8               	btfss	status,0,c
 10693   0035D0  EFEC  F01A         	goto	u7741
 10694   0035D4  EFEE  F01A         	goto	u7740
 10695   0035D8                     u7741:
 10696   0035D8  EFBB  F01A         	goto	l7088
 10697   0035DC                     u7740:
 10698   0035DC  501C               	movf	atoi@neg^0,w,c
 10699   0035DE  101D               	iorwf	(atoi@neg+1)^0,w,c
 10700   0035E0  A4D8               	btfss	status,2,c
 10701   0035E2  EFF5  F01A         	goto	u7751
 10702   0035E6  EFF7  F01A         	goto	u7750
 10703   0035EA                     u7751:
 10704   0035EA  EF05  F01B         	goto	l1220
 10705   0035EE                     u7750:
 10706   0035EE  C01E  F019         	movff	atoi@n,??_atoi
 10707   0035F2  C01F  F01A         	movff	atoi@n+1,??_atoi+1
 10708   0035F6  1E19               	comf	??_atoi^0,f,c
 10709   0035F8  1E1A               	comf	(??_atoi+1)^0,f,c
 10710   0035FA  4A19               	infsnz	??_atoi^0,f,c
 10711   0035FC  2A1A               	incf	(??_atoi+1)^0,f,c
 10712   0035FE  C019  F017         	movff	??_atoi,?_atoi
 10713   003602  C01A  F018         	movff	??_atoi+1,?_atoi+1
 10714   003606  EF09  F01B         	goto	l1223
 10715   00360A                     l1220:
 10716   00360A  C01E  F017         	movff	atoi@n,?_atoi
 10717   00360E  C01F  F018         	movff	atoi@n+1,?_atoi+1
 10718   003612                     l1223:
 10719   003612  0012               	return		;funcret
 10720   003614                     __end_of_atoi:
 10721                           	callstack 0
 10722                           
 10723 ;; *************** function _isspace *****************
 10724 ;; Defined at:
 10725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  c               2   16[COMRAM] int 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  2   16[COMRAM] int 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, status,0
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10739 ;;      Params:         2       0       0       0       0       0       0       0       0
 10740 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10741 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10742 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10743 ;;Total ram usage:        5 bytes
 10744 ;; Hardware stack levels used: 1
 10745 ;; Hardware stack levels required when called: 2
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_atoi
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text37
 10754   004226                     __ptext37:
 10755                           	callstack 0
 10756   004226                     _isspace:
 10757                           	callstack 23
 10758   004226  0E01               	movlw	1
 10759   004228  6E15               	movwf	_isspace$1588^0,c
 10760   00422A  0E20               	movlw	32
 10761   00422C  1811               	xorwf	isspace@c^0,w,c
 10762   00422E  1012               	iorwf	(isspace@c+1)^0,w,c
 10763   004230  B4D8               	btfsc	status,2,c
 10764   004232  EF1D  F021         	goto	u7281
 10765   004236  EF1F  F021         	goto	u7280
 10766   00423A                     u7281:
 10767   00423A  EF32  F021         	goto	l6798
 10768   00423E                     u7280:
 10769   00423E  0EF7               	movlw	247
 10770   004240  2411               	addwf	isspace@c^0,w,c
 10771   004242  6E13               	movwf	??_isspace^0,c
 10772   004244  0EFF               	movlw	255
 10773   004246  2012               	addwfc	(isspace@c+1)^0,w,c
 10774   004248  6E14               	movwf	(??_isspace+1)^0,c
 10775   00424A  5014               	movf	(??_isspace+1)^0,w,c
 10776   00424C  E109               	bnz	u7290
 10777   00424E  0E05               	movlw	5
 10778   004250  5C13               	subwf	??_isspace^0,w,c
 10779   004252  A0D8               	btfss	status,0,c
 10780   004254  EF2E  F021         	goto	u7291
 10781   004258  EF30  F021         	goto	u7290
 10782   00425C                     u7291:
 10783   00425C  EF32  F021         	goto	l6798
 10784   004260                     u7290:
 10785   004260  0E00               	movlw	0
 10786   004262  6E15               	movwf	_isspace$1588^0,c
 10787   004264                     l6798:
 10788   004264  C015  F011         	movff	_isspace$1588,?_isspace
 10789   004268  6A12               	clrf	(?_isspace+1)^0,c
 10790   00426A  0012               	return		;funcret
 10791   00426C                     __end_of_isspace:
 10792                           	callstack 0
 10793                           
 10794 ;; *************** function _isdigit *****************
 10795 ;; Defined at:
 10796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  c               2   16[COMRAM] int 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;		None
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  2   16[COMRAM] int 
 10803 ;; Registers used:
 10804 ;;		wreg, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10810 ;;      Params:         2       0       0       0       0       0       0       0       0
 10811 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10812 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10813 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10814 ;;Total ram usage:        4 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 2
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_vfpfcnvrt
 10821 ;;		_atoi
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text38
 10826   004360                     __ptext38:
 10827                           	callstack 0
 10828   004360                     _isdigit:
 10829                           	callstack 24
 10830   004360  0ED0               	movlw	208
 10831   004362  2411               	addwf	isdigit@c^0,w,c
 10832   004364  6E13               	movwf	??_isdigit^0,c
 10833   004366  0EFF               	movlw	255
 10834   004368  2012               	addwfc	(isdigit@c+1)^0,w,c
 10835   00436A  6E14               	movwf	(??_isdigit+1)^0,c
 10836   00436C  5014               	movf	(??_isdigit+1)^0,w,c
 10837   00436E  E10A               	bnz	u7260
 10838   004370  0E0A               	movlw	10
 10839   004372  5C13               	subwf	??_isdigit^0,w,c
 10840   004374  A0D8               	btfss	status,0,c
 10841   004376  EFBF  F021         	goto	u7261
 10842   00437A  EFC2  F021         	goto	u7260
 10843   00437E                     u7261:
 10844   00437E  0E01               	movlw	1
 10845   004380  EFC3  F021         	goto	u7270
 10846   004384                     u7260:
 10847   004384  0E00               	movlw	0
 10848   004386                     u7270:
 10849   004386  6E11               	movwf	?_isdigit^0,c
 10850   004388  6A12               	clrf	(?_isdigit+1)^0,c
 10851   00438A  0012               	return		;funcret
 10852   00438C                     __end_of_isdigit:
 10853                           	callstack 0
 10854                           
 10855 ;; *************** function ___wmul *****************
 10856 ;; Defined at:
 10857 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;  multiplier      2   16[COMRAM] unsigned int 
 10860 ;;  multiplicand    2   18[COMRAM] unsigned int 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  product         2   20[COMRAM] unsigned int 
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  2   16[COMRAM] unsigned int 
 10865 ;; Registers used:
 10866 ;;		wreg, status,2, status,0, prodl, prodh
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10872 ;;      Params:         4       0       0       0       0       0       0       0       0
 10873 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10875 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10876 ;;Total ram usage:        6 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; Hardware stack levels required when called: 2
 10879 ;; This function calls:
 10880 ;;		Nothing
 10881 ;; This function is called by:
 10882 ;;		_USER_VALUE
 10883 ;;		_atoi
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           	psect	text39
 10888   00438C                     __ptext39:
 10889                           	callstack 0
 10890   00438C                     ___wmul:
 10891                           	callstack 27
 10892   00438C  5011               	movf	___wmul@multiplier^0,w,c
 10893   00438E  0213               	mulwf	___wmul@multiplicand^0,c
 10894   004390  CFF3 F015          	movff	prodl,___wmul@product
 10895   004394  CFF4 F016          	movff	prodh,___wmul@product+1
 10896   004398  5011               	movf	___wmul@multiplier^0,w,c
 10897   00439A  0214               	mulwf	(___wmul@multiplicand+1)^0,c
 10898   00439C  50F3               	movf	243,w,c
 10899   00439E  2616               	addwf	(___wmul@product+1)^0,f,c
 10900   0043A0  5012               	movf	(___wmul@multiplier+1)^0,w,c
 10901   0043A2  0213               	mulwf	___wmul@multiplicand^0,c
 10902   0043A4  50F3               	movf	243,w,c
 10903   0043A6  2616               	addwf	(___wmul@product+1)^0,f,c
 10904   0043A8  C015  F011         	movff	___wmul@product,?___wmul
 10905   0043AC  C016  F012         	movff	___wmul@product+1,?___wmul+1
 10906   0043B0  0012               	return		;funcret
 10907   0043B2                     __end_of___wmul:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function ___xxtofl *****************
 10911 ;; Defined at:
 10912 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  sign            1    wreg     unsigned char 
 10915 ;;  val             4   16[COMRAM] long 
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  sign            1   24[COMRAM] unsigned char 
 10918 ;;  arg             4   26[COMRAM] unsigned long 
 10919 ;;  exp             1   25[COMRAM] unsigned char 
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  4   16[COMRAM] unsigned char 
 10922 ;; Registers used:
 10923 ;;		wreg, status,2, status,0
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10929 ;;      Params:         4       0       0       0       0       0       0       0       0
 10930 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10931 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10932 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10933 ;;Total ram usage:       14 bytes
 10934 ;; Hardware stack levels used: 1
 10935 ;; Hardware stack levels required when called: 2
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_FILL
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           	psect	text40
 10944   003316                     __ptext40:
 10945                           	callstack 0
 10946   003316                     ___xxtofl:
 10947                           	callstack 27
 10948                           
 10949                           ;incstack = 0
 10950                           ;___xxtofl@sign stored from wreg
 10951   003316  6E19               	movwf	___xxtofl@sign^0,c
 10952   003318  5019               	movf	___xxtofl@sign^0,w,c
 10953   00331A  B4D8               	btfsc	status,2,c
 10954   00331C  EF92  F019         	goto	u5101
 10955   003320  EF94  F019         	goto	u5100
 10956   003324                     u5101:
 10957   003324  EFB6  F019         	goto	l1006
 10958   003328                     u5100:
 10959   003328  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
 10960   00332A  EF9B  F019         	goto	u5110
 10961   00332E  EF99  F019         	goto	u5111
 10962   003332                     u5111:
 10963   003332  EFB6  F019         	goto	l1006
 10964   003336                     u5110:
 10965   003336  C011  F015         	movff	___xxtofl@val,??___xxtofl
 10966   00333A  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
 10967   00333E  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
 10968   003342  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
 10969   003346  1E15               	comf	??___xxtofl^0,f,c
 10970   003348  1E16               	comf	(??___xxtofl+1)^0,f,c
 10971   00334A  1E17               	comf	(??___xxtofl+2)^0,f,c
 10972   00334C  1E18               	comf	(??___xxtofl+3)^0,f,c
 10973   00334E  2A15               	incf	??___xxtofl^0,f,c
 10974   003350  0E00               	movlw	0
 10975   003352  2216               	addwfc	(??___xxtofl+1)^0,f,c
 10976   003354  2217               	addwfc	(??___xxtofl+2)^0,f,c
 10977   003356  2218               	addwfc	(??___xxtofl+3)^0,f,c
 10978   003358  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
 10979   00335C  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10980   003360  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10981   003364  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10982   003368  EFBE  F019         	goto	l5036
 10983   00336C                     l1006:
 10984   00336C  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
 10985   003370  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10986   003374  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10987   003378  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10988   00337C                     l5036:
 10989   00337C  5011               	movf	___xxtofl@val^0,w,c
 10990   00337E  1012               	iorwf	(___xxtofl@val+1)^0,w,c
 10991   003380  1013               	iorwf	(___xxtofl@val+2)^0,w,c
 10992   003382  1014               	iorwf	(___xxtofl@val+3)^0,w,c
 10993   003384  A4D8               	btfss	status,2,c
 10994   003386  EFC7  F019         	goto	u5121
 10995   00338A  EFC9  F019         	goto	u5120
 10996   00338E                     u5121:
 10997   00338E  EFD3  F019         	goto	l5042
 10998   003392                     u5120:
 10999   003392  0E00               	movlw	0
 11000   003394  6E11               	movwf	?___xxtofl^0,c
 11001   003396  0E00               	movlw	0
 11002   003398  6E12               	movwf	(?___xxtofl+1)^0,c
 11003   00339A  0E00               	movlw	0
 11004   00339C  6E13               	movwf	(?___xxtofl+2)^0,c
 11005   00339E  0E00               	movlw	0
 11006   0033A0  6E14               	movwf	(?___xxtofl+3)^0,c
 11007   0033A2  EF64  F01A         	goto	l1009
 11008   0033A6                     l5042:
 11009   0033A6  0E96               	movlw	150
 11010   0033A8  6E1A               	movwf	___xxtofl@exp^0,c
 11011   0033AA  EFDD  F019         	goto	l5046
 11012   0033AE                     l5044:
 11013   0033AE  2A1A               	incf	___xxtofl@exp^0,f,c
 11014   0033B0  90D8               	bcf	status,0,c
 11015   0033B2  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11016   0033B4  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11017   0033B6  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11018   0033B8  321B               	rrcf	___xxtofl@arg^0,f,c
 11019   0033BA                     l5046:
 11020   0033BA  0E00               	movlw	0
 11021   0033BC  141B               	andwf	___xxtofl@arg^0,w,c
 11022   0033BE  6E15               	movwf	??___xxtofl^0,c
 11023   0033C0  0E00               	movlw	0
 11024   0033C2  141C               	andwf	(___xxtofl@arg+1)^0,w,c
 11025   0033C4  6E16               	movwf	(??___xxtofl+1)^0,c
 11026   0033C6  0E00               	movlw	0
 11027   0033C8  141D               	andwf	(___xxtofl@arg+2)^0,w,c
 11028   0033CA  6E17               	movwf	(??___xxtofl+2)^0,c
 11029   0033CC  0EFE               	movlw	254
 11030   0033CE  141E               	andwf	(___xxtofl@arg+3)^0,w,c
 11031   0033D0  6E18               	movwf	(??___xxtofl+3)^0,c
 11032   0033D2  5015               	movf	??___xxtofl^0,w,c
 11033   0033D4  1016               	iorwf	(??___xxtofl+1)^0,w,c
 11034   0033D6  1017               	iorwf	(??___xxtofl+2)^0,w,c
 11035   0033D8  1018               	iorwf	(??___xxtofl+3)^0,w,c
 11036   0033DA  A4D8               	btfss	status,2,c
 11037   0033DC  EFF2  F019         	goto	u5131
 11038   0033E0  EFF4  F019         	goto	u5130
 11039   0033E4                     u5131:
 11040   0033E4  EFD7  F019         	goto	l5044
 11041   0033E8                     u5130:
 11042   0033E8  EF02  F01A         	goto	l1013
 11043   0033EC                     l5048:
 11044   0033EC  2A1A               	incf	___xxtofl@exp^0,f,c
 11045   0033EE  0E01               	movlw	1
 11046   0033F0  261B               	addwf	___xxtofl@arg^0,f,c
 11047   0033F2  0E00               	movlw	0
 11048   0033F4  221C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11049   0033F6  221D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11050   0033F8  221E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11051   0033FA  90D8               	bcf	status,0,c
 11052   0033FC  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11053   0033FE  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11054   003400  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11055   003402  321B               	rrcf	___xxtofl@arg^0,f,c
 11056   003404                     l1013:
 11057   003404  0E00               	movlw	0
 11058   003406  141B               	andwf	___xxtofl@arg^0,w,c
 11059   003408  6E15               	movwf	??___xxtofl^0,c
 11060   00340A  0E00               	movlw	0
 11061   00340C  141C               	andwf	(___xxtofl@arg+1)^0,w,c
 11062   00340E  6E16               	movwf	(??___xxtofl+1)^0,c
 11063   003410  0E00               	movlw	0
 11064   003412  141D               	andwf	(___xxtofl@arg+2)^0,w,c
 11065   003414  6E17               	movwf	(??___xxtofl+2)^0,c
 11066   003416  0EFF               	movlw	255
 11067   003418  141E               	andwf	(___xxtofl@arg+3)^0,w,c
 11068   00341A  6E18               	movwf	(??___xxtofl+3)^0,c
 11069   00341C  5015               	movf	??___xxtofl^0,w,c
 11070   00341E  1016               	iorwf	(??___xxtofl+1)^0,w,c
 11071   003420  1017               	iorwf	(??___xxtofl+2)^0,w,c
 11072   003422  1018               	iorwf	(??___xxtofl+3)^0,w,c
 11073   003424  A4D8               	btfss	status,2,c
 11074   003426  EF17  F01A         	goto	u5141
 11075   00342A  EF19  F01A         	goto	u5140
 11076   00342E                     u5141:
 11077   00342E  EFF6  F019         	goto	l5048
 11078   003432                     u5140:
 11079   003432  EF21  F01A         	goto	l5056
 11080   003436                     l5054:
 11081   003436  061A               	decf	___xxtofl@exp^0,f,c
 11082   003438  90D8               	bcf	status,0,c
 11083   00343A  361B               	rlcf	___xxtofl@arg^0,f,c
 11084   00343C  361C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11085   00343E  361D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11086   003440  361E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11087   003442                     l5056:
 11088   003442  BE1D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11089   003444  EF26  F01A         	goto	u5151
 11090   003448  EF28  F01A         	goto	u5150
 11091   00344C                     u5151:
 11092   00344C  EF30  F01A         	goto	l1020
 11093   003450                     u5150:
 11094   003450  0E02               	movlw	2
 11095   003452  601A               	cpfslt	___xxtofl@exp^0,c
 11096   003454  EF2E  F01A         	goto	u5161
 11097   003458  EF30  F01A         	goto	u5160
 11098   00345C                     u5161:
 11099   00345C  EF1B  F01A         	goto	l5054
 11100   003460                     u5160:
 11101   003460                     l1020:
 11102   003460  B01A               	btfsc	___xxtofl@exp^0,0,c
 11103   003462  EF35  F01A         	goto	u5171
 11104   003466  EF37  F01A         	goto	u5170
 11105   00346A                     u5171:
 11106   00346A  EF38  F01A         	goto	l5062
 11107   00346E                     u5170:
 11108   00346E  9E1D               	bcf	(___xxtofl@arg+2)^0,7,c
 11109   003470                     l5062:
 11110   003470  90D8               	bcf	status,0,c
 11111   003472  321A               	rrcf	___xxtofl@exp^0,f,c
 11112   003474  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
 11113   003478  6A16               	clrf	(??___xxtofl+1)^0,c
 11114   00347A  6A17               	clrf	(??___xxtofl+2)^0,c
 11115   00347C  6A18               	clrf	(??___xxtofl+3)^0,c
 11116   00347E  C015  F018         	movff	??___xxtofl,??___xxtofl+3
 11117   003482  6A17               	clrf	(??___xxtofl+2)^0,c
 11118   003484  6A16               	clrf	(??___xxtofl+1)^0,c
 11119   003486  6A15               	clrf	??___xxtofl^0,c
 11120   003488  5015               	movf	??___xxtofl^0,w,c
 11121   00348A  121B               	iorwf	___xxtofl@arg^0,f,c
 11122   00348C  5016               	movf	(??___xxtofl+1)^0,w,c
 11123   00348E  121C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11124   003490  5017               	movf	(??___xxtofl+2)^0,w,c
 11125   003492  121D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11126   003494  5018               	movf	(??___xxtofl+3)^0,w,c
 11127   003496  121E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11128   003498  5019               	movf	___xxtofl@sign^0,w,c
 11129   00349A  B4D8               	btfsc	status,2,c
 11130   00349C  EF52  F01A         	goto	u5181
 11131   0034A0  EF54  F01A         	goto	u5180
 11132   0034A4                     u5181:
 11133   0034A4  EF5C  F01A         	goto	l5072
 11134   0034A8                     u5180:
 11135   0034A8  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
 11136   0034AA  EF5B  F01A         	goto	u5190
 11137   0034AE  EF59  F01A         	goto	u5191
 11138   0034B2                     u5191:
 11139   0034B2  EF5C  F01A         	goto	l5072
 11140   0034B6                     u5190:
 11141   0034B6  8E1E               	bsf	(___xxtofl@arg+3)^0,7,c
 11142   0034B8                     l5072:
 11143   0034B8  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
 11144   0034BC  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
 11145   0034C0  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
 11146   0034C4  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
 11147   0034C8                     l1009:
 11148   0034C8  0012               	return		;funcret
 11149   0034CA                     __end_of___xxtofl:
 11150                           	callstack 0
 11151                           
 11152 ;; *************** function _TMR0_COUNT *****************
 11153 ;; Defined at:
 11154 ;;		line 197 in file "Main_program.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;		None
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;		None
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  1    wreg      void 
 11161 ;; Registers used:
 11162 ;;		None
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0
 11169 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11171 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11172 ;;Total ram usage:        0 bytes
 11173 ;; Hardware stack levels used: 1
 11174 ;; Hardware stack levels required when called: 2
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		_FILL
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text41
 11183   00442E                     __ptext41:
 11184                           	callstack 0
 11185   00442E                     _TMR0_COUNT:
 11186                           	callstack 27
 11187   00442E                     
 11188                           ;Main_program.c: 200:     T0CONbits.T08BIT = 1;
 11189   00442E  8CD5               	bsf	213,6,c	;volatile
 11190                           
 11191                           ;Main_program.c: 201:     T0CONbits.T0CS = 1;
 11192   004430  8AD5               	bsf	213,5,c	;volatile
 11193                           
 11194                           ;Main_program.c: 202:     T0CONbits.PSA = 1;
 11195   004432  86D5               	bsf	213,3,c	;volatile
 11196                           
 11197                           ;Main_program.c: 203:     T0CONbits.T0SE = 1;
 11198   004434  88D5               	bsf	213,4,c	;volatile
 11199                           
 11200                           ;Main_program.c: 204:     TMR0L = 255;
 11201   004436  68D6               	setf	214,c	;volatile
 11202                           
 11203                           ;Main_program.c: 205:     T0CONbits.TMR0ON = 1;
 11204   004438  8ED5               	bsf	213,7,c	;volatile
 11205   00443A  0012               	return		;funcret
 11206   00443C                     __end_of_TMR0_COUNT:
 11207                           	callstack 0
 11208                           
 11209 ;; *************** function _Lcd_Write_String *****************
 11210 ;; Defined at:
 11211 ;;		line 104 in file "lcd.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  a               2   20[COMRAM] PTR const unsigned char 
 11214 ;;		 -> STRING_VALUE_IN_ML(5), STR_31(9), STRING_VAL_TYPED(5), STR_29(6), 
 11215 ;;		 -> STR_28(16), STR_27(8), STR_26(17), STR_25(8), 
 11216 ;;		 -> STR_24(8), STR_23(16), STR_22(8), STR_21(8), 
 11217 ;;		 -> STR_20(15), STR_19(8), STR_18(8), STR_17(15), 
 11218 ;;		 -> STR_16(8), STR_15(8), STR_14(16), STR_13(8), 
 11219 ;;		 -> STR_12(8), STR_11(16), STR_10(12), STR_9(17), 
 11220 ;;		 -> STR_8(12), STR_7(17), STR_6(6), STR_5(17), 
 11221 ;;		 -> STR_4(2), STR_3(6), STR_2(15), STR_1(2), 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;  i               2   24[COMRAM] int 
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      void 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11233 ;;      Params:         2       0       0       0       0       0       0       0       0
 11234 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11235 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11236 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11237 ;;Total ram usage:        6 bytes
 11238 ;; Hardware stack levels used: 1
 11239 ;; Hardware stack levels required when called: 4
 11240 ;; This function calls:
 11241 ;;		_Lcd_Write_Char
 11242 ;; This function is called by:
 11243 ;;		_main
 11244 ;;		_USER_VALUE
 11245 ;;		_FILL
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text42
 11250   003E8C                     __ptext42:
 11251                           	callstack 0
 11252   003E8C                     _Lcd_Write_String:
 11253                           	callstack 25
 11254   003E8C                     
 11255                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 11256   003E8C  0E00               	movlw	0
 11257   003E8E  6E1A               	movwf	(Lcd_Write_String@i+1)^0,c
 11258   003E90  0E00               	movlw	0
 11259   003E92  6E19               	movwf	Lcd_Write_String@i^0,c
 11260   003E94  EF66  F01F         	goto	l5010
 11261   003E98                     l5006:
 11262                           
 11263                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 11264   003E98  5019               	movf	Lcd_Write_String@i^0,w,c
 11265   003E9A  2415               	addwf	Lcd_Write_String@a^0,w,c
 11266   003E9C  6E17               	movwf	??_Lcd_Write_String^0,c
 11267   003E9E  501A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11268   003EA0  2016               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11269   003EA2  6E18               	movwf	(??_Lcd_Write_String+1)^0,c
 11270   003EA4  C017  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11271   003EA8  C018  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11272   003EAC  6AF8               	clrf	tblptru,c
 11273   003EAE  0E07               	movlw	(high __ramtop+-1)
 11274   003EB0  64F7               	cpfsgt	tblptrh,c
 11275   003EB2  D003               	bra	u5077
 11276   003EB4  0008               	tblrd		*
 11277   003EB6  50F5               	movf	tablat,w,c
 11278   003EB8  D005               	bra	u5070
 11279   003EBA                     u5077:
 11280   003EBA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11281   003EBE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11282   003EC2  50E7               	movf	indf1,w,c
 11283   003EC4                     u5070:
 11284   003EC4  EC94  F021         	call	_Lcd_Write_Char
 11285   003EC8  4A19               	infsnz	Lcd_Write_String@i^0,f,c
 11286   003ECA  2A1A               	incf	(Lcd_Write_String@i+1)^0,f,c
 11287   003ECC                     l5010:
 11288   003ECC  5019               	movf	Lcd_Write_String@i^0,w,c
 11289   003ECE  2415               	addwf	Lcd_Write_String@a^0,w,c
 11290   003ED0  6E17               	movwf	??_Lcd_Write_String^0,c
 11291   003ED2  501A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11292   003ED4  2016               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11293   003ED6  6E18               	movwf	(??_Lcd_Write_String+1)^0,c
 11294   003ED8  C017  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11295   003EDC  C018  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11296   003EE0  6AF8               	clrf	tblptru,c
 11297   003EE2  0E07               	movlw	(high __ramtop+-1)
 11298   003EE4  64F7               	cpfsgt	tblptrh,c
 11299   003EE6  D003               	bra	u5087
 11300   003EE8  0008               	tblrd		*
 11301   003EEA  50F5               	movf	tablat,w,c
 11302   003EEC  D005               	bra	u5080
 11303   003EEE                     u5087:
 11304   003EEE  CFF6 FFE1          	movff	tblptrl,fsr1l
 11305   003EF2  CFF7 FFE2          	movff	tblptrh,fsr1h
 11306   003EF6  50E7               	movf	indf1,w,c
 11307   003EF8                     u5080:
 11308   003EF8  0900               	iorlw	0
 11309   003EFA  A4D8               	btfss	status,2,c
 11310   003EFC  EF82  F01F         	goto	u5091
 11311   003F00  EF84  F01F         	goto	u5090
 11312   003F04                     u5091:
 11313   003F04  EF4C  F01F         	goto	l5006
 11314   003F08                     u5090:
 11315   003F08  0012               	return		;funcret
 11316   003F0A                     __end_of_Lcd_Write_String:
 11317                           	callstack 0
 11318                           
 11319 ;; *************** function _Lcd_Write_Char *****************
 11320 ;; Defined at:
 11321 ;;		line 88 in file "lcd.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  a               1    wreg     unsigned char 
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  a               1   19[COMRAM] unsigned char 
 11326 ;;  y               1   18[COMRAM] unsigned char 
 11327 ;;  temp            1   17[COMRAM] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0
 11338 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11340 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11341 ;;Total ram usage:        3 bytes
 11342 ;; Hardware stack levels used: 1
 11343 ;; Hardware stack levels required when called: 3
 11344 ;; This function calls:
 11345 ;;		_Lcd_Port
 11346 ;; This function is called by:
 11347 ;;		_main
 11348 ;;		_WELCOME
 11349 ;;		_USER_VALUE
 11350 ;;		_FILL
 11351 ;;		_Lcd_Write_String
 11352 ;;		_Lcd_CGRAM_CreateChar
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text43
 11357   004328                     __ptext43:
 11358                           	callstack 0
 11359   004328                     _Lcd_Write_Char:
 11360                           	callstack 26
 11361                           
 11362                           ;incstack = 0
 11363                           ;Lcd_Write_Char@a stored from wreg
 11364   004328  6E14               	movwf	Lcd_Write_Char@a^0,c
 11365   00432A                     
 11366                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 11367   00432A  5014               	movf	Lcd_Write_Char@a^0,w,c
 11368   00432C  0B0F               	andlw	15
 11369   00432E  6E12               	movwf	Lcd_Write_Char@temp^0,c
 11370                           
 11371                           ;lcd.c: 92:     y = a&0xF0;
 11372   004330  5014               	movf	Lcd_Write_Char@a^0,w,c
 11373   004332  0BF0               	andlw	240
 11374   004334  6E13               	movwf	Lcd_Write_Char@y^0,c
 11375   004336                     
 11376                           ;lcd.c: 93:     LATAbits.LA0 = 1;
 11377   004336  8089               	bsf	137,0,c	;volatile
 11378   004338                     
 11379                           ;lcd.c: 94:     Lcd_Port(y>>4);
 11380   004338  3813               	swapf	Lcd_Write_Char@y^0,w,c
 11381   00433A  0B0F               	andlw	15
 11382   00433C  ECF5  F01F         	call	_Lcd_Port
 11383   004340                     
 11384                           ;lcd.c: 95:     LATAbits.LA1 = 1;
 11385   004340  8289               	bsf	137,1,c	;volatile
 11386   004342                     
 11387                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000L/4000000.0)));
 11388   004342  0E1A               	movlw	26
 11389   004344                     u8527:
 11390   004344  2EE8               	decfsz	wreg,f,c
 11391   004346  D7FE               	bra	u8527
 11392   004348  D000               	nop2	
 11393   00434A                     
 11394                           ;lcd.c: 97:     LATAbits.LA1 = 0;
 11395   00434A  9289               	bcf	137,1,c	;volatile
 11396   00434C                     
 11397                           ;lcd.c: 98:     Lcd_Port(temp);
 11398   00434C  5012               	movf	Lcd_Write_Char@temp^0,w,c
 11399   00434E  ECF5  F01F         	call	_Lcd_Port
 11400   004352                     
 11401                           ;lcd.c: 99:     LATAbits.LA1 = 1;
 11402   004352  8289               	bsf	137,1,c	;volatile
 11403   004354                     
 11404                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000L/4000000.0)));
 11405   004354  0E1A               	movlw	26
 11406   004356                     u8537:
 11407   004356  2EE8               	decfsz	wreg,f,c
 11408   004358  D7FE               	bra	u8537
 11409   00435A  D000               	nop2	
 11410   00435C                     
 11411                           ;lcd.c: 101:     LATAbits.LA1 = 0;
 11412   00435C  9289               	bcf	137,1,c	;volatile
 11413   00435E  0012               	return		;funcret
 11414   004360                     __end_of_Lcd_Write_Char:
 11415                           	callstack 0
 11416                           
 11417 ;; *************** function _Lcd_Set_Cursor *****************
 11418 ;; Defined at:
 11419 ;;		line 26 in file "lcd.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  a               1    wreg     unsigned char 
 11422 ;;  b               1   19[COMRAM] unsigned char 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  a               1   20[COMRAM] unsigned char 
 11425 ;;  temp            1   23[COMRAM] unsigned char 
 11426 ;;  y               1   22[COMRAM] unsigned char 
 11427 ;;  z               1   21[COMRAM] unsigned char 
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0, cstack
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11437 ;;      Params:         1       0       0       0       0       0       0       0       0
 11438 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11440 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11441 ;;Total ram usage:        5 bytes
 11442 ;; Hardware stack levels used: 1
 11443 ;; Hardware stack levels required when called: 4
 11444 ;; This function calls:
 11445 ;;		_Lcd_Cmd
 11446 ;; This function is called by:
 11447 ;;		_main
 11448 ;;		_WELCOME
 11449 ;;		_USER_VALUE
 11450 ;;		_FILL
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text44
 11455   003AF6                     __ptext44:
 11456                           	callstack 0
 11457   003AF6                     _Lcd_Set_Cursor:
 11458                           	callstack 25
 11459                           
 11460                           ;incstack = 0
 11461                           ;Lcd_Set_Cursor@a stored from wreg
 11462   003AF6  6E15               	movwf	Lcd_Set_Cursor@a^0,c
 11463   003AF8                     
 11464                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 11465   003AF8  0415               	decf	Lcd_Set_Cursor@a^0,w,c
 11466   003AFA  A4D8               	btfss	status,2,c
 11467   003AFC  EF82  F01D         	goto	u5031
 11468   003B00  EF84  F01D         	goto	u5030
 11469   003B04                     u5031:
 11470   003B04  EF95  F01D         	goto	l4980
 11471   003B08                     u5030:
 11472   003B08                     
 11473                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 11474   003B08  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11475   003B0A  0F7F               	addlw	127
 11476   003B0C  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11477                           
 11478                           ;lcd.c: 32:         z = temp>>4;
 11479   003B0E  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11480   003B10  0B0F               	andlw	15
 11481   003B12  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11482                           
 11483                           ;lcd.c: 33:         y = temp & 0x0F;
 11484   003B14  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11485   003B16  0B0F               	andlw	15
 11486   003B18  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11487   003B1A                     
 11488                           ;lcd.c: 34:         Lcd_Cmd(z);
 11489   003B1A  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11490   003B1C  ECD9  F021         	call	_Lcd_Cmd
 11491   003B20                     
 11492                           ;lcd.c: 35:         Lcd_Cmd(y);
 11493   003B20  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11494   003B22  ECD9  F021         	call	_Lcd_Cmd
 11495                           
 11496                           ;lcd.c: 36:     }
 11497   003B26  EFE3  F01D         	goto	l229
 11498   003B2A                     l4980:
 11499   003B2A  0E02               	movlw	2
 11500   003B2C  1815               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11501   003B2E  A4D8               	btfss	status,2,c
 11502   003B30  EF9C  F01D         	goto	u5041
 11503   003B34  EF9E  F01D         	goto	u5040
 11504   003B38                     u5041:
 11505   003B38  EFAF  F01D         	goto	l4988
 11506   003B3C                     u5040:
 11507   003B3C                     
 11508                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 11509   003B3C  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11510   003B3E  0FBF               	addlw	191
 11511   003B40  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11512                           
 11513                           ;lcd.c: 40:         z = temp>>4;
 11514   003B42  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11515   003B44  0B0F               	andlw	15
 11516   003B46  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11517                           
 11518                           ;lcd.c: 41:         y = temp & 0x0F;
 11519   003B48  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11520   003B4A  0B0F               	andlw	15
 11521   003B4C  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11522   003B4E                     
 11523                           ;lcd.c: 42:         Lcd_Cmd(z);
 11524   003B4E  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11525   003B50  ECD9  F021         	call	_Lcd_Cmd
 11526   003B54                     
 11527                           ;lcd.c: 43:         Lcd_Cmd(y);
 11528   003B54  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11529   003B56  ECD9  F021         	call	_Lcd_Cmd
 11530                           
 11531                           ;lcd.c: 44:     }
 11532   003B5A  EFE3  F01D         	goto	l229
 11533   003B5E                     l4988:
 11534   003B5E  0E03               	movlw	3
 11535   003B60  1815               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11536   003B62  A4D8               	btfss	status,2,c
 11537   003B64  EFB6  F01D         	goto	u5051
 11538   003B68  EFB8  F01D         	goto	u5050
 11539   003B6C                     u5051:
 11540   003B6C  EFC9  F01D         	goto	l4996
 11541   003B70                     u5050:
 11542   003B70                     
 11543                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 11544   003B70  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11545   003B72  0F93               	addlw	147
 11546   003B74  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11547                           
 11548                           ;lcd.c: 48:         z = temp>>4;
 11549   003B76  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11550   003B78  0B0F               	andlw	15
 11551   003B7A  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11552                           
 11553                           ;lcd.c: 49:         y = temp & 0x0F;
 11554   003B7C  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11555   003B7E  0B0F               	andlw	15
 11556   003B80  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11557   003B82                     
 11558                           ;lcd.c: 50:         Lcd_Cmd(z);
 11559   003B82  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11560   003B84  ECD9  F021         	call	_Lcd_Cmd
 11561   003B88                     
 11562                           ;lcd.c: 51:         Lcd_Cmd(y);
 11563   003B88  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11564   003B8A  ECD9  F021         	call	_Lcd_Cmd
 11565                           
 11566                           ;lcd.c: 52:     }
 11567   003B8E  EFE3  F01D         	goto	l229
 11568   003B92                     l4996:
 11569   003B92  0E04               	movlw	4
 11570   003B94  1815               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11571   003B96  A4D8               	btfss	status,2,c
 11572   003B98  EFD0  F01D         	goto	u5061
 11573   003B9C  EFD2  F01D         	goto	u5060
 11574   003BA0                     u5061:
 11575   003BA0  EFE3  F01D         	goto	l225
 11576   003BA4                     u5060:
 11577   003BA4                     
 11578                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 11579   003BA4  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11580   003BA6  0FD3               	addlw	211
 11581   003BA8  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11582                           
 11583                           ;lcd.c: 56:         z = temp>>4;
 11584   003BAA  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11585   003BAC  0B0F               	andlw	15
 11586   003BAE  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11587                           
 11588                           ;lcd.c: 57:         y = temp & 0x0F;
 11589   003BB0  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11590   003BB2  0B0F               	andlw	15
 11591   003BB4  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11592   003BB6                     
 11593                           ;lcd.c: 58:         Lcd_Cmd(z);
 11594   003BB6  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11595   003BB8  ECD9  F021         	call	_Lcd_Cmd
 11596   003BBC                     
 11597                           ;lcd.c: 59:         Lcd_Cmd(y);
 11598   003BBC  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11599   003BBE  ECD9  F021         	call	_Lcd_Cmd
 11600   003BC2  EFE3  F01D         	goto	l229
 11601   003BC6                     l225:
 11602   003BC6                     l229:
 11603   003BC6  0012               	return		;funcret
 11604   003BC8                     __end_of_Lcd_Set_Cursor:
 11605                           	callstack 0
 11606                           
 11607 ;; *************** function _Lcd_Clear *****************
 11608 ;; Defined at:
 11609 ;;		line 20 in file "lcd.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg, status,2, cstack
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0
 11624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11626 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11627 ;;Total ram usage:        0 bytes
 11628 ;; Hardware stack levels used: 1
 11629 ;; Hardware stack levels required when called: 4
 11630 ;; This function calls:
 11631 ;;		_Lcd_Cmd
 11632 ;; This function is called by:
 11633 ;;		_main
 11634 ;;		_WELCOME
 11635 ;;		_USER_VALUE
 11636 ;;		_FILL
 11637 ;;		_Lcd_Init
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text45
 11642   00443C                     __ptext45:
 11643                           	callstack 0
 11644   00443C                     _Lcd_Clear:
 11645                           	callstack 25
 11646   00443C                     
 11647                           ;lcd.c: 22:     Lcd_Cmd(0);
 11648   00443C  0E00               	movlw	0
 11649   00443E  ECD9  F021         	call	_Lcd_Cmd
 11650                           
 11651                           ;lcd.c: 23:     Lcd_Cmd(1);
 11652   004442  0E01               	movlw	1
 11653   004444  ECD9  F021         	call	_Lcd_Cmd
 11654   004448  0012               	return		;funcret
 11655   00444A                     __end_of_Lcd_Clear:
 11656                           	callstack 0
 11657                           
 11658 ;; *************** function _Lcd_Cmd *****************
 11659 ;; Defined at:
 11660 ;;		line 11 in file "lcd.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;  a               1    wreg     unsigned char 
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;  a               1   18[COMRAM] unsigned char 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		wreg, status,2, cstack
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11674 ;;      Params:         0       0       0       0       0       0       0       0       0
 11675 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11676 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11677 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11678 ;;Total ram usage:        2 bytes
 11679 ;; Hardware stack levels used: 1
 11680 ;; Hardware stack levels required when called: 3
 11681 ;; This function calls:
 11682 ;;		_Lcd_Port
 11683 ;; This function is called by:
 11684 ;;		_Lcd_Clear
 11685 ;;		_Lcd_Set_Cursor
 11686 ;;		_Lcd_Init
 11687 ;;		_Lcd_Blink
 11688 ;;		_Lcd_NoBlink
 11689 ;;		_Lcd_CGRAM_Init
 11690 ;;		_Lcd_CGRAM_Close
 11691 ;;		_Lcd_Shift_Right
 11692 ;;		_Lcd_Shift_Left
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text46
 11697   0043B2                     __ptext46:
 11698                           	callstack 0
 11699   0043B2                     _Lcd_Cmd:
 11700                           	callstack 25
 11701                           
 11702                           ;incstack = 0
 11703                           ;Lcd_Cmd@a stored from wreg
 11704   0043B2  6E13               	movwf	Lcd_Cmd@a^0,c
 11705   0043B4                     
 11706                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA0 = 0;
 11707   0043B4  9089               	bcf	137,0,c	;volatile
 11708   0043B6                     
 11709                           ;lcd.c: 14:     Lcd_Port(a);
 11710   0043B6  5013               	movf	Lcd_Cmd@a^0,w,c
 11711   0043B8  ECF5  F01F         	call	_Lcd_Port
 11712   0043BC                     
 11713                           ;lcd.c: 15:     LATAbits.LA1 = 1;
 11714   0043BC  8289               	bsf	137,1,c	;volatile
 11715   0043BE                     
 11716                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000L/4000.0)));
 11717   0043BE  0E0B               	movlw	11
 11718   0043C0  6E12               	movwf	??_Lcd_Cmd^0,c
 11719   0043C2  0E62               	movlw	98
 11720   0043C4                     u8547:
 11721   0043C4  2EE8               	decfsz	wreg,f,c
 11722   0043C6  D7FE               	bra	u8547
 11723   0043C8  2E12               	decfsz	??_Lcd_Cmd^0,f,c
 11724   0043CA  D7FC               	bra	u8547
 11725   0043CC  D000               	nop2	
 11726   0043CE                     
 11727                           ;lcd.c: 17:     LATAbits.LA1 = 0;
 11728   0043CE  9289               	bcf	137,1,c	;volatile
 11729   0043D0  0012               	return		;funcret
 11730   0043D2                     __end_of_Lcd_Cmd:
 11731                           	callstack 0
 11732                           
 11733 ;; *************** function _Lcd_Port *****************
 11734 ;; Defined at:
 11735 ;;		line 3 in file "lcd.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;  a               1    wreg     unsigned char 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;  a               1   16[COMRAM] unsigned char 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11749 ;;      Params:         0       0       0       0       0       0       0       0       0
 11750 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11752 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11753 ;;Total ram usage:        1 bytes
 11754 ;; Hardware stack levels used: 1
 11755 ;; Hardware stack levels required when called: 2
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_Lcd_Cmd
 11760 ;;		_Lcd_Init
 11761 ;;		_Lcd_Write_Char
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text47
 11766   003FEA                     __ptext47:
 11767                           	callstack 0
 11768   003FEA                     _Lcd_Port:
 11769                           	callstack 26
 11770                           
 11771                           ;incstack = 0
 11772                           ;Lcd_Port@a stored from wreg
 11773   003FEA  6E11               	movwf	Lcd_Port@a^0,c
 11774   003FEC                     
 11775                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATBbits.LB4 = 1) 
      +                          : (LATBbits.LB4 = 0);
 11776   003FEC  A011               	btfss	Lcd_Port@a^0,0,c
 11777   003FEE  EFFB  F01F         	goto	u4911
 11778   003FF2  EFFD  F01F         	goto	u4910
 11779   003FF6                     u4911:
 11780   003FF6  EF00  F020         	goto	l198
 11781   003FFA                     u4910:
 11782   003FFA  888A               	bsf	138,4,c	;volatile
 11783   003FFC  EF01  F020         	goto	l4790
 11784   004000                     l198:
 11785   004000  988A               	bcf	138,4,c	;volatile
 11786   004002                     l4790:
 11787                           
 11788                           ;lcd.c: 6:     (a & 2) ? (LATBbits.LB5 = 1) : (LATBbits.LB5 = 0);
 11789   004002  A211               	btfss	Lcd_Port@a^0,1,c
 11790   004004  EF06  F020         	goto	u4921
 11791   004008  EF08  F020         	goto	u4920
 11792   00400C                     u4921:
 11793   00400C  EF0B  F020         	goto	l202
 11794   004010                     u4920:
 11795   004010  8A8A               	bsf	138,5,c	;volatile
 11796   004012  EF0C  F020         	goto	l4794
 11797   004016                     l202:
 11798   004016  9A8A               	bcf	138,5,c	;volatile
 11799   004018                     l4794:
 11800                           
 11801                           ;lcd.c: 7:     (a & 4) ? (LATBbits.LB6 = 1) : (LATBbits.LB6 = 0);
 11802   004018  A411               	btfss	Lcd_Port@a^0,2,c
 11803   00401A  EF11  F020         	goto	u4931
 11804   00401E  EF13  F020         	goto	u4930
 11805   004022                     u4931:
 11806   004022  EF16  F020         	goto	l206
 11807   004026                     u4930:
 11808   004026  8C8A               	bsf	138,6,c	;volatile
 11809   004028  EF17  F020         	goto	l4798
 11810   00402C                     l206:
 11811   00402C  9C8A               	bcf	138,6,c	;volatile
 11812   00402E                     l4798:
 11813                           
 11814                           ;lcd.c: 8:     (a & 8) ? (LATBbits.LB7 = 1) : (LATBbits.LB7 = 0);
 11815   00402E  A611               	btfss	Lcd_Port@a^0,3,c
 11816   004030  EF1C  F020         	goto	u4941
 11817   004034  EF1E  F020         	goto	u4940
 11818   004038                     u4941:
 11819   004038  EF21  F020         	goto	l210
 11820   00403C                     u4940:
 11821   00403C  8E8A               	bsf	138,7,c	;volatile
 11822   00403E  EF22  F020         	goto	l213
 11823   004042                     l210:
 11824   004042  9E8A               	bcf	138,7,c	;volatile
 11825   004044                     l213:
 11826   004044  0012               	return		;funcret
 11827   004046                     __end_of_Lcd_Port:
 11828                           	callstack 0
 11829                           
 11830 ;; *************** function _ISR_TIMER0 *****************
 11831 ;; Defined at:
 11832 ;;		line 48 in file "Main_program.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;		None
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;		None
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      void 
 11839 ;; Registers used:
 11840 ;;		wreg, status,2, status,0, cstack
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11846 ;;      Params:         0       0       0       0       0       0       0       0       0
 11847 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11849 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11850 ;;Total ram usage:        0 bytes
 11851 ;; Hardware stack levels used: 1
 11852 ;; Hardware stack levels required when called: 1
 11853 ;; This function calls:
 11854 ;;		i2___fladd
 11855 ;; This function is called by:
 11856 ;;		Interrupt level 2
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	intcode
 11861   000008                     __pintcode:
 11862                           	callstack 0
 11863   000008                     _ISR_TIMER0:
 11864                           	callstack 20
 11865                           
 11866                           ;incstack = 0
 11867   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11868   00000A  EDCA  F020         	call	int_func,f	;refresh shadow registers
 11869                           
 11870                           	psect	intcode_body
 11871   004194                     __pintcode_body:
 11872                           	callstack 20
 11873   004194                     int_func:
 11874                           	callstack 20
 11875   004194  0006               	pop		; remove dummy address from shadow register refresh
 11876   004196                     
 11877                           ;Main_program.c: 51:     if (INTCONbits.TMR0IF == 1)
 11878   004196  A4F2               	btfss	242,2,c	;volatile
 11879   004198  EFD0  F020         	goto	i2u585_41
 11880   00419C  EFD2  F020         	goto	i2u585_40
 11881   0041A0                     i2u585_41:
 11882   0041A0  EFEE  F020         	goto	i2l104
 11883   0041A4                     i2u585_40:
 11884   0041A4                     
 11885                           ;Main_program.c: 52:     {;Main_program.c: 53:         PULSE++;
 11886   0041A4  C040  F001         	movff	_PULSE,i2___fladd@b
 11887   0041A8  C041  F002         	movff	_PULSE+1,i2___fladd@b+1
 11888   0041AC  C042  F003         	movff	_PULSE+2,i2___fladd@b+2
 11889   0041B0  C043  F004         	movff	_PULSE+3,i2___fladd@b+3
 11890   0041B4  0E00               	movlw	0
 11891   0041B6  6E05               	movwf	i2___fladd@a^0,c
 11892   0041B8  0E00               	movlw	0
 11893   0041BA  6E06               	movwf	(i2___fladd@a+1)^0,c
 11894   0041BC  0E80               	movlw	128
 11895   0041BE  6E07               	movwf	(i2___fladd@a+2)^0,c
 11896   0041C0  0E3F               	movlw	63
 11897   0041C2  6E08               	movwf	(i2___fladd@a+3)^0,c
 11898   0041C4  EC9B  F007         	call	i2___fladd	;wreg free
 11899   0041C8  C001  F040         	movff	?i2___fladd,_PULSE
 11900   0041CC  C002  F041         	movff	?i2___fladd+1,_PULSE+1
 11901   0041D0  C003  F042         	movff	?i2___fladd+2,_PULSE+2
 11902   0041D4  C004  F043         	movff	?i2___fladd+3,_PULSE+3
 11903   0041D8                     
 11904                           ;Main_program.c: 54:         TMR0L = 255;
 11905   0041D8  68D6               	setf	214,c	;volatile
 11906   0041DA                     
 11907                           ;Main_program.c: 55:         INTCONbits.TMR0IF = 0;
 11908   0041DA  94F2               	bcf	242,2,c	;volatile
 11909   0041DC                     i2l104:
 11910   0041DC  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11911   0041DE  0011               	retfie		f
 11912   0041E0                     __end_of_ISR_TIMER0:
 11913                           	callstack 0
 11914                           
 11915 ;; *************** function i2___fladd *****************
 11916 ;; Defined at:
 11917 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;  b               4    0[COMRAM] void 
 11920 ;;  a               4    4[COMRAM] void 
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;  grs             1   15[COMRAM] unsigned char 
 11923 ;;  bexp            1   14[COMRAM] unsigned char 
 11924 ;;  aexp            1   13[COMRAM] unsigned char 
 11925 ;;  signs           1   12[COMRAM] unsigned char 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  4    0[COMRAM] unsigned char 
 11928 ;; Registers used:
 11929 ;;		wreg, status,2, status,0
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11935 ;;      Params:         8       0       0       0       0       0       0       0       0
 11936 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11937 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11938 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11939 ;;Total ram usage:       16 bytes
 11940 ;; Hardware stack levels used: 1
 11941 ;; This function calls:
 11942 ;;		Nothing
 11943 ;; This function is called by:
 11944 ;;		_ISR_TIMER0
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           	psect	text49
 11949   000F36                     __ptext49:
 11950                           	callstack 0
 11951   000F36                     i2___fladd:
 11952                           	callstack 20
 11953   000F36  5004               	movf	(i2___fladd@b+3)^0,w,c
 11954   000F38  0B80               	andlw	128
 11955   000F3A  6E0D               	movwf	i2___fladd@signs^0,c
 11956   000F3C  5004               	movf	(i2___fladd@b+3)^0,w,c
 11957   000F3E  2404               	addwf	(i2___fladd@b+3)^0,w,c
 11958   000F40  6E0F               	movwf	i2___fladd@bexp^0,c
 11959   000F42  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 11960   000F44  EFA6  F007         	goto	i2u546_41
 11961   000F48  EFA8  F007         	goto	i2u546_40
 11962   000F4C                     i2u546_41:
 11963   000F4C  EFA9  F007         	goto	i2l5534
 11964   000F50                     i2u546_40:
 11965   000F50  800F               	bsf	i2___fladd@bexp^0,0,c
 11966   000F52                     i2l5534:
 11967   000F52  500F               	movf	i2___fladd@bexp^0,w,c
 11968   000F54  B4D8               	btfsc	status,2,c
 11969   000F56  EFAF  F007         	goto	i2u547_41
 11970   000F5A  EFB1  F007         	goto	i2u547_40
 11971   000F5E                     i2u547_41:
 11972   000F5E  EFC6  F007         	goto	i2l5544
 11973   000F62                     i2u547_40:
 11974   000F62  280F               	incf	i2___fladd@bexp^0,w,c
 11975   000F64  A4D8               	btfss	status,2,c
 11976   000F66  EFB7  F007         	goto	i2u548_41
 11977   000F6A  EFB9  F007         	goto	i2u548_40
 11978   000F6E                     i2u548_41:
 11979   000F6E  EFC1  F007         	goto	i2l5540
 11980   000F72                     i2u548_40:
 11981   000F72  0E00               	movlw	0
 11982   000F74  6E01               	movwf	i2___fladd@b^0,c
 11983   000F76  0E00               	movlw	0
 11984   000F78  6E02               	movwf	(i2___fladd@b+1)^0,c
 11985   000F7A  0E00               	movlw	0
 11986   000F7C  6E03               	movwf	(i2___fladd@b+2)^0,c
 11987   000F7E  0E00               	movlw	0
 11988   000F80  6E04               	movwf	(i2___fladd@b+3)^0,c
 11989   000F82                     i2l5540:
 11990   000F82  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 11991   000F84  0E00               	movlw	0
 11992   000F86  6E04               	movwf	(i2___fladd@b+3)^0,c
 11993   000F88  EFCE  F007         	goto	i2l5546
 11994   000F8C                     i2l5544:
 11995   000F8C  0E00               	movlw	0
 11996   000F8E  6E01               	movwf	i2___fladd@b^0,c
 11997   000F90  0E00               	movlw	0
 11998   000F92  6E02               	movwf	(i2___fladd@b+1)^0,c
 11999   000F94  0E00               	movlw	0
 12000   000F96  6E03               	movwf	(i2___fladd@b+2)^0,c
 12001   000F98  0E00               	movlw	0
 12002   000F9A  6E04               	movwf	(i2___fladd@b+3)^0,c
 12003   000F9C                     i2l5546:
 12004   000F9C  5008               	movf	(i2___fladd@a+3)^0,w,c
 12005   000F9E  0B80               	andlw	128
 12006   000FA0  6E0E               	movwf	i2___fladd@aexp^0,c
 12007   000FA2  500D               	movf	i2___fladd@signs^0,w,c
 12008   000FA4  180E               	xorwf	i2___fladd@aexp^0,w,c
 12009   000FA6  B4D8               	btfsc	status,2,c
 12010   000FA8  EFD8  F007         	goto	i2u549_41
 12011   000FAC  EFDA  F007         	goto	i2u549_40
 12012   000FB0                     i2u549_41:
 12013   000FB0  EFDB  F007         	goto	i2l5552
 12014   000FB4                     i2u549_40:
 12015   000FB4  8C0D               	bsf	i2___fladd@signs^0,6,c
 12016   000FB6                     i2l5552:
 12017   000FB6  5008               	movf	(i2___fladd@a+3)^0,w,c
 12018   000FB8  2408               	addwf	(i2___fladd@a+3)^0,w,c
 12019   000FBA  6E0E               	movwf	i2___fladd@aexp^0,c
 12020   000FBC  AE07               	btfss	(i2___fladd@a+2)^0,7,c
 12021   000FBE  EFE3  F007         	goto	i2u550_41
 12022   000FC2  EFE5  F007         	goto	i2u550_40
 12023   000FC6                     i2u550_41:
 12024   000FC6  EFE6  F007         	goto	i2l5558
 12025   000FCA                     i2u550_40:
 12026   000FCA  800E               	bsf	i2___fladd@aexp^0,0,c
 12027   000FCC                     i2l5558:
 12028   000FCC  500E               	movf	i2___fladd@aexp^0,w,c
 12029   000FCE  B4D8               	btfsc	status,2,c
 12030   000FD0  EFEC  F007         	goto	i2u551_41
 12031   000FD4  EFEE  F007         	goto	i2u551_40
 12032   000FD8                     i2u551_41:
 12033   000FD8  EF03  F008         	goto	i2l5568
 12034   000FDC                     i2u551_40:
 12035   000FDC  280E               	incf	i2___fladd@aexp^0,w,c
 12036   000FDE  A4D8               	btfss	status,2,c
 12037   000FE0  EFF4  F007         	goto	i2u552_41
 12038   000FE4  EFF6  F007         	goto	i2u552_40
 12039   000FE8                     i2u552_41:
 12040   000FE8  EFFE  F007         	goto	i2l5564
 12041   000FEC                     i2u552_40:
 12042   000FEC  0E00               	movlw	0
 12043   000FEE  6E05               	movwf	i2___fladd@a^0,c
 12044   000FF0  0E00               	movlw	0
 12045   000FF2  6E06               	movwf	(i2___fladd@a+1)^0,c
 12046   000FF4  0E00               	movlw	0
 12047   000FF6  6E07               	movwf	(i2___fladd@a+2)^0,c
 12048   000FF8  0E00               	movlw	0
 12049   000FFA  6E08               	movwf	(i2___fladd@a+3)^0,c
 12050   000FFC                     i2l5564:
 12051   000FFC  8E07               	bsf	(i2___fladd@a+2)^0,7,c
 12052   000FFE  0E00               	movlw	0
 12053   001000  6E08               	movwf	(i2___fladd@a+3)^0,c
 12054   001002  EF0B  F008         	goto	i2l5570
 12055   001006                     i2l5568:
 12056   001006  0E00               	movlw	0
 12057   001008  6E05               	movwf	i2___fladd@a^0,c
 12058   00100A  0E00               	movlw	0
 12059   00100C  6E06               	movwf	(i2___fladd@a+1)^0,c
 12060   00100E  0E00               	movlw	0
 12061   001010  6E07               	movwf	(i2___fladd@a+2)^0,c
 12062   001012  0E00               	movlw	0
 12063   001014  6E08               	movwf	(i2___fladd@a+3)^0,c
 12064   001016                     i2l5570:
 12065   001016  500F               	movf	i2___fladd@bexp^0,w,c
 12066   001018  5C0E               	subwf	i2___fladd@aexp^0,w,c
 12067   00101A  B0D8               	btfsc	status,0,c
 12068   00101C  EF12  F008         	goto	i2u553_41
 12069   001020  EF14  F008         	goto	i2u553_40
 12070   001024                     i2u553_41:
 12071   001024  EF3B  F008         	goto	i2l5606
 12072   001028                     i2u553_40:
 12073   001028  AC0D               	btfss	i2___fladd@signs^0,6,c
 12074   00102A  EF19  F008         	goto	i2u554_41
 12075   00102E  EF1B  F008         	goto	i2u554_40
 12076   001032                     i2u554_41:
 12077   001032  EF1D  F008         	goto	i2l5576
 12078   001036                     i2u554_40:
 12079   001036  0E80               	movlw	128
 12080   001038  1A0D               	xorwf	i2___fladd@signs^0,f,c
 12081   00103A                     i2l5576:
 12082   00103A  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 12083   00103E  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 12084   001042  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 12085   001046  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 12086   00104A  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 12087   00104E  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 12088   001052  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 12089   001056  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 12090   00105A  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 12091   00105E  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 12092   001062  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 12093   001066  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 12094   00106A  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 12095   00106E  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 12096   001072  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 12097   001076                     i2l5606:
 12098   001076  0E00               	movlw	0
 12099   001078  6E10               	movwf	i2___fladd@grs^0,c
 12100   00107A  500F               	movf	i2___fladd@bexp^0,w,c
 12101   00107C  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 12102   001080  6A0A               	clrf	(??i2___fladd+1)^0,c
 12103   001082  5E09               	subwf	??i2___fladd^0,f,c
 12104   001084  0E00               	movlw	0
 12105   001086  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
 12106   001088  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
 12107   00108A  EF50  F008         	goto	i2u555_41
 12108   00108E  500A               	movf	(??i2___fladd+1)^0,w,c
 12109   001090  E109               	bnz	i2u555_40
 12110   001092  0E1A               	movlw	26
 12111   001094  5C09               	subwf	??i2___fladd^0,w,c
 12112   001096  A0D8               	btfss	status,0,c
 12113   001098  EF50  F008         	goto	i2u555_41
 12114   00109C  EF52  F008         	goto	i2u555_40
 12115   0010A0                     i2u555_41:
 12116   0010A0  EF89  F008         	goto	i2l880
 12117   0010A4                     i2u555_40:
 12118   0010A4  5001               	movf	i2___fladd@b^0,w,c
 12119   0010A6  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 12120   0010A8  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 12121   0010AA  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 12122   0010AC  A4D8               	btfss	status,2,c
 12123   0010AE  EF5B  F008         	goto	i2u556_41
 12124   0010B2  EF5E  F008         	goto	i2u556_40
 12125   0010B6                     i2u556_41:
 12126   0010B6  0E01               	movlw	1
 12127   0010B8  EF5F  F008         	goto	i2u557_40
 12128   0010BC                     i2u556_40:
 12129   0010BC  0E00               	movlw	0
 12130   0010BE                     i2u557_40:
 12131   0010BE  6E10               	movwf	i2___fladd@grs^0,c
 12132   0010C0  0E00               	movlw	0
 12133   0010C2  6E01               	movwf	i2___fladd@b^0,c
 12134   0010C4  0E00               	movlw	0
 12135   0010C6  6E02               	movwf	(i2___fladd@b+1)^0,c
 12136   0010C8  0E00               	movlw	0
 12137   0010CA  6E03               	movwf	(i2___fladd@b+2)^0,c
 12138   0010CC  0E00               	movlw	0
 12139   0010CE  6E04               	movwf	(i2___fladd@b+3)^0,c
 12140   0010D0  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 12141   0010D4  EF92  F008         	goto	i2l879
 12142   0010D8                     i2l881:
 12143   0010D8  A010               	btfss	i2___fladd@grs^0,0,c
 12144   0010DA  EF71  F008         	goto	i2u558_41
 12145   0010DE  EF73  F008         	goto	i2u558_40
 12146   0010E2                     i2u558_41:
 12147   0010E2  EF79  F008         	goto	i2l5618
 12148   0010E6                     i2u558_40:
 12149   0010E6  90D8               	bcf	status,0,c
 12150   0010E8  3010               	rrcf	i2___fladd@grs^0,w,c
 12151   0010EA  0901               	iorlw	1
 12152   0010EC  6E10               	movwf	i2___fladd@grs^0,c
 12153   0010EE  EF7B  F008         	goto	i2l5620
 12154   0010F2                     i2l5618:
 12155   0010F2  90D8               	bcf	status,0,c
 12156   0010F4  3210               	rrcf	i2___fladd@grs^0,f,c
 12157   0010F6                     i2l5620:
 12158   0010F6  A001               	btfss	i2___fladd@b^0,0,c
 12159   0010F8  EF80  F008         	goto	i2u559_41
 12160   0010FC  EF82  F008         	goto	i2u559_40
 12161   001100                     i2u559_41:
 12162   001100  EF83  F008         	goto	i2l5624
 12163   001104                     i2u559_40:
 12164   001104  8E10               	bsf	i2___fladd@grs^0,7,c
 12165   001106                     i2l5624:
 12166   001106  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 12167   001108  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 12168   00110A  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 12169   00110C  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 12170   00110E  3201               	rrcf	i2___fladd@b^0,f,c
 12171   001110  2A0F               	incf	i2___fladd@bexp^0,f,c
 12172   001112                     i2l880:
 12173   001112  500E               	movf	i2___fladd@aexp^0,w,c
 12174   001114  5C0F               	subwf	i2___fladd@bexp^0,w,c
 12175   001116  A0D8               	btfss	status,0,c
 12176   001118  EF90  F008         	goto	i2u560_41
 12177   00111C  EF92  F008         	goto	i2u560_40
 12178   001120                     i2u560_41:
 12179   001120  EF6C  F008         	goto	i2l881
 12180   001124                     i2u560_40:
 12181   001124                     i2l879:
 12182   001124  BC0D               	btfsc	i2___fladd@signs^0,6,c
 12183   001126  EF97  F008         	goto	i2u561_41
 12184   00112A  EF99  F008         	goto	i2u561_40
 12185   00112E                     i2u561_41:
 12186   00112E  EFD9  F008         	goto	i2l5652
 12187   001132                     i2u561_40:
 12188   001132  500F               	movf	i2___fladd@bexp^0,w,c
 12189   001134  A4D8               	btfss	status,2,c
 12190   001136  EF9F  F008         	goto	i2u562_41
 12191   00113A  EFA1  F008         	goto	i2u562_40
 12192   00113E                     i2u562_41:
 12193   00113E  EFAB  F008         	goto	i2l5634
 12194   001142                     i2u562_40:
 12195   001142  0E00               	movlw	0
 12196   001144  6E01               	movwf	?i2___fladd^0,c
 12197   001146  0E00               	movlw	0
 12198   001148  6E02               	movwf	(?i2___fladd+1)^0,c
 12199   00114A  0E00               	movlw	0
 12200   00114C  6E03               	movwf	(?i2___fladd+2)^0,c
 12201   00114E  0E00               	movlw	0
 12202   001150  6E04               	movwf	(?i2___fladd+3)^0,c
 12203   001152  EFFA  F009         	goto	i2l888
 12204   001156                     i2l5634:
 12205   001156  5005               	movf	i2___fladd@a^0,w,c
 12206   001158  2601               	addwf	i2___fladd@b^0,f,c
 12207   00115A  5006               	movf	(i2___fladd@a+1)^0,w,c
 12208   00115C  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 12209   00115E  5007               	movf	(i2___fladd@a+2)^0,w,c
 12210   001160  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 12211   001162  5008               	movf	(i2___fladd@a+3)^0,w,c
 12212   001164  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 12213   001166  A004               	btfss	(i2___fladd@b+3)^0,0,c
 12214   001168  EFB8  F008         	goto	i2u563_41
 12215   00116C  EFBA  F008         	goto	i2u563_40
 12216   001170                     i2u563_41:
 12217   001170  EF66  F009         	goto	i2l5688
 12218   001174                     i2u563_40:
 12219   001174  A010               	btfss	i2___fladd@grs^0,0,c
 12220   001176  EFBF  F008         	goto	i2u564_41
 12221   00117A  EFC1  F008         	goto	i2u564_40
 12222   00117E                     i2u564_41:
 12223   00117E  EFC7  F008         	goto	i2l5642
 12224   001182                     i2u564_40:
 12225   001182  90D8               	bcf	status,0,c
 12226   001184  3010               	rrcf	i2___fladd@grs^0,w,c
 12227   001186  0901               	iorlw	1
 12228   001188  6E10               	movwf	i2___fladd@grs^0,c
 12229   00118A  EFC9  F008         	goto	i2l5644
 12230   00118E                     i2l5642:
 12231   00118E  90D8               	bcf	status,0,c
 12232   001190  3210               	rrcf	i2___fladd@grs^0,f,c
 12233   001192                     i2l5644:
 12234   001192  A001               	btfss	i2___fladd@b^0,0,c
 12235   001194  EFCE  F008         	goto	i2u565_41
 12236   001198  EFD0  F008         	goto	i2u565_40
 12237   00119C                     i2u565_41:
 12238   00119C  EFD1  F008         	goto	i2l5648
 12239   0011A0                     i2u565_40:
 12240   0011A0  8E10               	bsf	i2___fladd@grs^0,7,c
 12241   0011A2                     i2l5648:
 12242   0011A2  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 12243   0011A4  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 12244   0011A6  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 12245   0011A8  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 12246   0011AA  3201               	rrcf	i2___fladd@b^0,f,c
 12247   0011AC  2A0F               	incf	i2___fladd@bexp^0,f,c
 12248   0011AE  EF66  F009         	goto	i2l5688
 12249   0011B2                     i2l5652:
 12250   0011B2  5005               	movf	i2___fladd@a^0,w,c
 12251   0011B4  5C01               	subwf	i2___fladd@b^0,w,c
 12252   0011B6  5006               	movf	(i2___fladd@a+1)^0,w,c
 12253   0011B8  5802               	subwfb	(i2___fladd@b+1)^0,w,c
 12254   0011BA  5007               	movf	(i2___fladd@a+2)^0,w,c
 12255   0011BC  5803               	subwfb	(i2___fladd@b+2)^0,w,c
 12256   0011BE  5004               	movf	(i2___fladd@b+3)^0,w,c
 12257   0011C0  0A80               	xorlw	128
 12258   0011C2  6E09               	movwf	??i2___fladd^0,c
 12259   0011C4  5008               	movf	(i2___fladd@a+3)^0,w,c
 12260   0011C6  0A80               	xorlw	128
 12261   0011C8  5809               	subwfb	??i2___fladd^0,w,c
 12262   0011CA  B0D8               	btfsc	status,0,c
 12263   0011CC  EFEA  F008         	goto	i2u566_41
 12264   0011D0  EFEC  F008         	goto	i2u566_40
 12265   0011D4                     i2u566_41:
 12266   0011D4  EF17  F009         	goto	i2l5662
 12267   0011D8                     i2u566_40:
 12268   0011D8  5001               	movf	i2___fladd@b^0,w,c
 12269   0011DA  5C05               	subwf	i2___fladd@a^0,w,c
 12270   0011DC  6E09               	movwf	??i2___fladd^0,c
 12271   0011DE  5002               	movf	(i2___fladd@b+1)^0,w,c
 12272   0011E0  5806               	subwfb	(i2___fladd@a+1)^0,w,c
 12273   0011E2  6E0A               	movwf	(??i2___fladd+1)^0,c
 12274   0011E4  5003               	movf	(i2___fladd@b+2)^0,w,c
 12275   0011E6  5807               	subwfb	(i2___fladd@a+2)^0,w,c
 12276   0011E8  6E0B               	movwf	(??i2___fladd+2)^0,c
 12277   0011EA  5004               	movf	(i2___fladd@b+3)^0,w,c
 12278   0011EC  5808               	subwfb	(i2___fladd@a+3)^0,w,c
 12279   0011EE  6E0C               	movwf	(??i2___fladd+3)^0,c
 12280   0011F0  0EFF               	movlw	255
 12281   0011F2  2409               	addwf	??i2___fladd^0,w,c
 12282   0011F4  6E01               	movwf	i2___fladd@b^0,c
 12283   0011F6  0EFF               	movlw	255
 12284   0011F8  200A               	addwfc	(??i2___fladd+1)^0,w,c
 12285   0011FA  6E02               	movwf	(i2___fladd@b+1)^0,c
 12286   0011FC  0EFF               	movlw	255
 12287   0011FE  200B               	addwfc	(??i2___fladd+2)^0,w,c
 12288   001200  6E03               	movwf	(i2___fladd@b+2)^0,c
 12289   001202  0EFF               	movlw	255
 12290   001204  200C               	addwfc	(??i2___fladd+3)^0,w,c
 12291   001206  6E04               	movwf	(i2___fladd@b+3)^0,c
 12292   001208  0E80               	movlw	128
 12293   00120A  1A0D               	xorwf	i2___fladd@signs^0,f,c
 12294   00120C  6C10               	negf	i2___fladd@grs^0,c
 12295   00120E  5010               	movf	i2___fladd@grs^0,w,c
 12296   001210  A4D8               	btfss	status,2,c
 12297   001212  EF0D  F009         	goto	i2u567_41
 12298   001216  EF0F  F009         	goto	i2u567_40
 12299   00121A                     i2u567_41:
 12300   00121A  EF1F  F009         	goto	i2l896
 12301   00121E                     i2u567_40:
 12302   00121E  0E01               	movlw	1
 12303   001220  2601               	addwf	i2___fladd@b^0,f,c
 12304   001222  0E00               	movlw	0
 12305   001224  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 12306   001226  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 12307   001228  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 12308   00122A  EF1F  F009         	goto	i2l896
 12309   00122E                     i2l5662:
 12310   00122E  5005               	movf	i2___fladd@a^0,w,c
 12311   001230  5E01               	subwf	i2___fladd@b^0,f,c
 12312   001232  5006               	movf	(i2___fladd@a+1)^0,w,c
 12313   001234  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
 12314   001236  5007               	movf	(i2___fladd@a+2)^0,w,c
 12315   001238  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
 12316   00123A  5008               	movf	(i2___fladd@a+3)^0,w,c
 12317   00123C  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
 12318   00123E                     i2l896:
 12319   00123E  5001               	movf	i2___fladd@b^0,w,c
 12320   001240  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 12321   001242  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 12322   001244  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 12323   001246  A4D8               	btfss	status,2,c
 12324   001248  EF28  F009         	goto	i2u568_41
 12325   00124C  EF2A  F009         	goto	i2u568_40
 12326   001250                     i2u568_41:
 12327   001250  EF5F  F009         	goto	i2l5686
 12328   001254                     i2u568_40:
 12329   001254  5010               	movf	i2___fladd@grs^0,w,c
 12330   001256  A4D8               	btfss	status,2,c
 12331   001258  EF30  F009         	goto	i2u569_41
 12332   00125C  EF32  F009         	goto	i2u569_40
 12333   001260                     i2u569_41:
 12334   001260  EF5F  F009         	goto	i2l5686
 12335   001264                     i2u569_40:
 12336   001264  0E00               	movlw	0
 12337   001266  6E01               	movwf	?i2___fladd^0,c
 12338   001268  0E00               	movlw	0
 12339   00126A  6E02               	movwf	(?i2___fladd+1)^0,c
 12340   00126C  0E00               	movlw	0
 12341   00126E  6E03               	movwf	(?i2___fladd+2)^0,c
 12342   001270  0E00               	movlw	0
 12343   001272  6E04               	movwf	(?i2___fladd+3)^0,c
 12344   001274  EFFA  F009         	goto	i2l888
 12345   001278                     i2l5670:
 12346   001278  90D8               	bcf	status,0,c
 12347   00127A  3601               	rlcf	i2___fladd@b^0,f,c
 12348   00127C  3602               	rlcf	(i2___fladd@b+1)^0,f,c
 12349   00127E  3603               	rlcf	(i2___fladd@b+2)^0,f,c
 12350   001280  3604               	rlcf	(i2___fladd@b+3)^0,f,c
 12351   001282  AE10               	btfss	i2___fladd@grs^0,7,c
 12352   001284  EF46  F009         	goto	i2u570_41
 12353   001288  EF48  F009         	goto	i2u570_40
 12354   00128C                     i2u570_41:
 12355   00128C  EF49  F009         	goto	i2l5676
 12356   001290                     i2u570_40:
 12357   001290  8001               	bsf	i2___fladd@b^0,0,c
 12358   001292                     i2l5676:
 12359   001292  A010               	btfss	i2___fladd@grs^0,0,c
 12360   001294  EF4E  F009         	goto	i2u571_41
 12361   001298  EF50  F009         	goto	i2u571_40
 12362   00129C                     i2u571_41:
 12363   00129C  EF54  F009         	goto	i2l5680
 12364   0012A0                     i2u571_40:
 12365   0012A0  80D8               	bsf	status,0,c
 12366   0012A2  3610               	rlcf	i2___fladd@grs^0,f,c
 12367   0012A4  EF56  F009         	goto	i2l5682
 12368   0012A8                     i2l5680:
 12369   0012A8  90D8               	bcf	status,0,c
 12370   0012AA  3610               	rlcf	i2___fladd@grs^0,f,c
 12371   0012AC                     i2l5682:
 12372   0012AC  500F               	movf	i2___fladd@bexp^0,w,c
 12373   0012AE  B4D8               	btfsc	status,2,c
 12374   0012B0  EF5C  F009         	goto	i2u572_41
 12375   0012B4  EF5E  F009         	goto	i2u572_40
 12376   0012B8                     i2u572_41:
 12377   0012B8  EF5F  F009         	goto	i2l5686
 12378   0012BC                     i2u572_40:
 12379   0012BC  060F               	decf	i2___fladd@bexp^0,f,c
 12380   0012BE                     i2l5686:
 12381   0012BE  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 12382   0012C0  EF64  F009         	goto	i2u573_41
 12383   0012C4  EF66  F009         	goto	i2u573_40
 12384   0012C8                     i2u573_41:
 12385   0012C8  EF3C  F009         	goto	i2l5670
 12386   0012CC                     i2u573_40:
 12387   0012CC                     i2l5688:
 12388   0012CC  0E00               	movlw	0
 12389   0012CE  6E0E               	movwf	i2___fladd@aexp^0,c
 12390   0012D0  AE10               	btfss	i2___fladd@grs^0,7,c
 12391   0012D2  EF6D  F009         	goto	i2u574_41
 12392   0012D6  EF6F  F009         	goto	i2u574_40
 12393   0012DA                     i2u574_41:
 12394   0012DA  EF87  F009         	goto	i2l905
 12395   0012DE                     i2u574_40:
 12396   0012DE  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 12397   0012E2  0E7F               	movlw	127
 12398   0012E4  1609               	andwf	??i2___fladd^0,f,c
 12399   0012E6  B4D8               	btfsc	status,2,c
 12400   0012E8  EF78  F009         	goto	i2u575_41
 12401   0012EC  EF7A  F009         	goto	i2u575_40
 12402   0012F0                     i2u575_41:
 12403   0012F0  EF7E  F009         	goto	i2l906
 12404   0012F4                     i2u575_40:
 12405   0012F4                     i2l5694:
 12406   0012F4  0E01               	movlw	1
 12407   0012F6  6E0E               	movwf	i2___fladd@aexp^0,c
 12408   0012F8  EF87  F009         	goto	i2l905
 12409   0012FC                     i2l906:
 12410   0012FC  A001               	btfss	i2___fladd@b^0,0,c
 12411   0012FE  EF83  F009         	goto	i2u576_41
 12412   001302  EF85  F009         	goto	i2u576_40
 12413   001306                     i2u576_41:
 12414   001306  EF87  F009         	goto	i2l905
 12415   00130A                     i2u576_40:
 12416   00130A  EF7A  F009         	goto	i2l5694
 12417   00130E                     i2l905:
 12418   00130E  500E               	movf	i2___fladd@aexp^0,w,c
 12419   001310  B4D8               	btfsc	status,2,c
 12420   001312  EF8D  F009         	goto	i2u577_41
 12421   001316  EF8F  F009         	goto	i2u577_40
 12422   00131A                     i2u577_41:
 12423   00131A  EFBA  F009         	goto	i2l5706
 12424   00131E                     i2u577_40:
 12425   00131E  0E01               	movlw	1
 12426   001320  2601               	addwf	i2___fladd@b^0,f,c
 12427   001322  0E00               	movlw	0
 12428   001324  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 12429   001326  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 12430   001328  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 12431   00132A  A004               	btfss	(i2___fladd@b+3)^0,0,c
 12432   00132C  EF9A  F009         	goto	i2u578_41
 12433   001330  EF9C  F009         	goto	i2u578_40
 12434   001334                     i2u578_41:
 12435   001334  EFBA  F009         	goto	i2l5706
 12436   001338                     i2u578_40:
 12437   001338  C001  F009         	movff	i2___fladd@b,??i2___fladd
 12438   00133C  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 12439   001340  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 12440   001344  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 12441   001348  340C               	rlcf	(??i2___fladd+3)^0,w,c
 12442   00134A  320C               	rrcf	(??i2___fladd+3)^0,f,c
 12443   00134C  320B               	rrcf	(??i2___fladd+2)^0,f,c
 12444   00134E  320A               	rrcf	(??i2___fladd+1)^0,f,c
 12445   001350  3209               	rrcf	??i2___fladd^0,f,c
 12446   001352  C009  F001         	movff	??i2___fladd,i2___fladd@b
 12447   001356  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 12448   00135A  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 12449   00135E  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 12450   001362  280F               	incf	i2___fladd@bexp^0,w,c
 12451   001364  B4D8               	btfsc	status,2,c
 12452   001366  EFB7  F009         	goto	i2u579_41
 12453   00136A  EFB9  F009         	goto	i2u579_40
 12454   00136E                     i2u579_41:
 12455   00136E  EFBA  F009         	goto	i2l5706
 12456   001372                     i2u579_40:
 12457   001372  2A0F               	incf	i2___fladd@bexp^0,f,c
 12458   001374                     i2l5706:
 12459   001374  280F               	incf	i2___fladd@bexp^0,w,c
 12460   001376  B4D8               	btfsc	status,2,c
 12461   001378  EFC0  F009         	goto	i2u580_41
 12462   00137C  EFC2  F009         	goto	i2u580_40
 12463   001380                     i2u580_41:
 12464   001380  EFCA  F009         	goto	i2l5710
 12465   001384                     i2u580_40:
 12466   001384  500F               	movf	i2___fladd@bexp^0,w,c
 12467   001386  A4D8               	btfss	status,2,c
 12468   001388  EFC8  F009         	goto	i2u581_41
 12469   00138C  EFCA  F009         	goto	i2u581_40
 12470   001390                     i2u581_41:
 12471   001390  EFDC  F009         	goto	i2l5714
 12472   001394                     i2u581_40:
 12473   001394                     i2l5710:
 12474   001394  0E00               	movlw	0
 12475   001396  6E01               	movwf	i2___fladd@b^0,c
 12476   001398  0E00               	movlw	0
 12477   00139A  6E02               	movwf	(i2___fladd@b+1)^0,c
 12478   00139C  0E00               	movlw	0
 12479   00139E  6E03               	movwf	(i2___fladd@b+2)^0,c
 12480   0013A0  0E00               	movlw	0
 12481   0013A2  6E04               	movwf	(i2___fladd@b+3)^0,c
 12482   0013A4  500F               	movf	i2___fladd@bexp^0,w,c
 12483   0013A6  A4D8               	btfss	status,2,c
 12484   0013A8  EFD8  F009         	goto	i2u582_41
 12485   0013AC  EFDA  F009         	goto	i2u582_40
 12486   0013B0                     i2u582_41:
 12487   0013B0  EFDC  F009         	goto	i2l5714
 12488   0013B4                     i2u582_40:
 12489   0013B4  0E00               	movlw	0
 12490   0013B6  6E0D               	movwf	i2___fladd@signs^0,c
 12491   0013B8                     i2l5714:
 12492   0013B8  A00F               	btfss	i2___fladd@bexp^0,0,c
 12493   0013BA  EFE1  F009         	goto	i2u583_41
 12494   0013BE  EFE3  F009         	goto	i2u583_40
 12495   0013C2                     i2u583_41:
 12496   0013C2  EFE6  F009         	goto	i2l5718
 12497   0013C6                     i2u583_40:
 12498   0013C6  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 12499   0013C8  EFE7  F009         	goto	i2l5720
 12500   0013CC                     i2l5718:
 12501   0013CC  9E03               	bcf	(i2___fladd@b+2)^0,7,c
 12502   0013CE                     i2l5720:
 12503   0013CE  90D8               	bcf	status,0,c
 12504   0013D0  300F               	rrcf	i2___fladd@bexp^0,w,c
 12505   0013D2  6E04               	movwf	(i2___fladd@b+3)^0,c
 12506   0013D4  AE0D               	btfss	i2___fladd@signs^0,7,c
 12507   0013D6  EFEF  F009         	goto	i2u584_41
 12508   0013DA  EFF1  F009         	goto	i2u584_40
 12509   0013DE                     i2u584_41:
 12510   0013DE  EFF2  F009         	goto	i2l5726
 12511   0013E2                     i2u584_40:
 12512   0013E2  8E04               	bsf	(i2___fladd@b+3)^0,7,c
 12513   0013E4                     i2l5726:
 12514   0013E4  C001  F001         	movff	i2___fladd@b,?i2___fladd
 12515   0013E8  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 12516   0013EC  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 12517   0013F0  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 12518   0013F4                     i2l888:
 12519   0013F4  0012               	return		;funcret
 12520   0013F6                     __end_ofi2___fladd:
 12521                           	callstack 0
 12522                           
 12523                           	psect	rparam
 12524   000000                     
 12525                           	psect	temp
 12526   00004F                     btemp:
 12527                           	callstack 0
 12528   00004F                     	ds	1
 12529   000000                     int$flags	set	btemp
 12530   000000                     wtemp8	set	btemp+1
 12531   000000                     ttemp5	set	btemp+1
 12532   000000                     ttemp6	set	btemp+4
 12533   000000                     ttemp7	set	btemp+8
 12534                           
 12535                           	psect	idloc
 12536                           
 12537                           ;Config register IDLOC0 @ 0x200000
 12538                           ;	unspecified, using default values
 12539   200000                     	org	2097152
 12540   200000  FF                 	db	255
 12541                           
 12542                           ;Config register IDLOC1 @ 0x200001
 12543                           ;	unspecified, using default values
 12544   200001                     	org	2097153
 12545   200001  FF                 	db	255
 12546                           
 12547                           ;Config register IDLOC2 @ 0x200002
 12548                           ;	unspecified, using default values
 12549   200002                     	org	2097154
 12550   200002  FF                 	db	255
 12551                           
 12552                           ;Config register IDLOC3 @ 0x200003
 12553                           ;	unspecified, using default values
 12554   200003                     	org	2097155
 12555   200003  FF                 	db	255
 12556                           
 12557                           ;Config register IDLOC4 @ 0x200004
 12558                           ;	unspecified, using default values
 12559   200004                     	org	2097156
 12560   200004  FF                 	db	255
 12561                           
 12562                           ;Config register IDLOC5 @ 0x200005
 12563                           ;	unspecified, using default values
 12564   200005                     	org	2097157
 12565   200005  FF                 	db	255
 12566                           
 12567                           ;Config register IDLOC6 @ 0x200006
 12568                           ;	unspecified, using default values
 12569   200006                     	org	2097158
 12570   200006  FF                 	db	255
 12571                           
 12572                           ;Config register IDLOC7 @ 0x200007
 12573                           ;	unspecified, using default values
 12574   200007                     	org	2097159
 12575   200007  FF                 	db	255
 12576                           
 12577                           	psect	config
 12578                           
 12579                           ;Config register CONFIG1L @ 0x300000
 12580                           ;	PLL Prescaler Selection bits
 12581                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12582                           ;	System Clock Postscaler Selection bits
 12583                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12584                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12585                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12586   300000                     	org	3145728
 12587   300000  00                 	db	0
 12588                           
 12589                           ;Config register CONFIG1H @ 0x300001
 12590                           ;	Oscillator Selection bits
 12591                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
 12592                           ;	Fail-Safe Clock Monitor Enable bit
 12593                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12594                           ;	Internal/External Oscillator Switchover bit
 12595                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12596   300001                     	org	3145729
 12597   300001  0B                 	db	11
 12598                           
 12599                           ;Config register CONFIG2L @ 0x300002
 12600                           ;	Power-up Timer Enable bit
 12601                           ;	PWRT = ON, PWRT enabled
 12602                           ;	Brown-out Reset Enable bits
 12603                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12604                           ;	Brown-out Reset Voltage bits
 12605                           ;	BORV = 3, Minimum setting 2.05V
 12606                           ;	USB Voltage Regulator Enable bit
 12607                           ;	VREGEN = OFF, USB voltage regulator disabled
 12608   300002                     	org	3145730
 12609   300002  18                 	db	24
 12610                           
 12611                           ;Config register CONFIG2H @ 0x300003
 12612                           ;	Watchdog Timer Enable bit
 12613                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12614                           ;	Watchdog Timer Postscale Select bits
 12615                           ;	WDTPS = 32768, 1:32768
 12616   300003                     	org	3145731
 12617   300003  1E                 	db	30
 12618                           
 12619                           ; Padding undefined space
 12620   300004                     	org	3145732
 12621   300004  FF                 	db	255
 12622                           
 12623                           ;Config register CONFIG3H @ 0x300005
 12624                           ;	CCP2 MUX bit
 12625                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12626                           ;	PORTB A/D Enable bit
 12627                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 12628                           ;	Low-Power Timer 1 Oscillator Enable bit
 12629                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12630                           ;	MCLR Pin Enable bit
 12631                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12632   300005                     	org	3145733
 12633   300005  83                 	db	131
 12634                           
 12635                           ;Config register CONFIG4L @ 0x300006
 12636                           ;	Stack Full/Underflow Reset Enable bit
 12637                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12638                           ;	Single-Supply ICSP Enable bit
 12639                           ;	LVP = OFF, Single-Supply ICSP disabled
 12640                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12641                           ;	ICPRT = OFF, ICPORT disabled
 12642                           ;	Extended Instruction Set Enable bit
 12643                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12644                           ;	Background Debugger Enable bit
 12645                           ;	DEBUG = 0x1, unprogrammed default
 12646   300006                     	org	3145734
 12647   300006  81                 	db	129
 12648                           
 12649                           ; Padding undefined space
 12650   300007                     	org	3145735
 12651   300007  FF                 	db	255
 12652                           
 12653                           ;Config register CONFIG5L @ 0x300008
 12654                           ;	Code Protection bit
 12655                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12656                           ;	Code Protection bit
 12657                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12658                           ;	Code Protection bit
 12659                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12660                           ;	Code Protection bit
 12661                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12662   300008                     	org	3145736
 12663   300008  0F                 	db	15
 12664                           
 12665                           ;Config register CONFIG5H @ 0x300009
 12666                           ;	Boot Block Code Protection bit
 12667                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12668                           ;	Data EEPROM Code Protection bit
 12669                           ;	CPD = OFF, Data EEPROM is not code-protected
 12670   300009                     	org	3145737
 12671   300009  C0                 	db	192
 12672                           
 12673                           ;Config register CONFIG6L @ 0x30000A
 12674                           ;	Write Protection bit
 12675                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12676                           ;	Write Protection bit
 12677                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12678                           ;	Write Protection bit
 12679                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12680                           ;	Write Protection bit
 12681                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12682   30000A                     	org	3145738
 12683   30000A  0F                 	db	15
 12684                           
 12685                           ;Config register CONFIG6H @ 0x30000B
 12686                           ;	Configuration Register Write Protection bit
 12687                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12688                           ;	Boot Block Write Protection bit
 12689                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12690                           ;	Data EEPROM Write Protection bit
 12691                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12692   30000B                     	org	3145739
 12693   30000B  E0                 	db	224
 12694                           
 12695                           ;Config register CONFIG7L @ 0x30000C
 12696                           ;	Table Read Protection bit
 12697                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12698                           ;	Table Read Protection bit
 12699                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12700                           ;	Table Read Protection bit
 12701                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12702                           ;	Table Read Protection bit
 12703                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12704   30000C                     	org	3145740
 12705   30000C  0F                 	db	15
 12706                           
 12707                           ;Config register CONFIG7H @ 0x30000D
 12708                           ;	Boot Block Table Read Protection bit
 12709                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12710   30000D                     	org	3145741
 12711   30000D  40                 	db	64
 12712                           tosu	equ	0xFFF
 12713                           tosh	equ	0xFFE
 12714                           tosl	equ	0xFFD
 12715                           stkptr	equ	0xFFC
 12716                           pclatu	equ	0xFFB
 12717                           pclath	equ	0xFFA
 12718                           pcl	equ	0xFF9
 12719                           tblptru	equ	0xFF8
 12720                           tblptrh	equ	0xFF7
 12721                           tblptrl	equ	0xFF6
 12722                           tablat	equ	0xFF5
 12723                           prodh	equ	0xFF4
 12724                           prodl	equ	0xFF3
 12725                           indf0	equ	0xFEF
 12726                           postinc0	equ	0xFEE
 12727                           postdec0	equ	0xFED
 12728                           preinc0	equ	0xFEC
 12729                           plusw0	equ	0xFEB
 12730                           fsr0h	equ	0xFEA
 12731                           fsr0l	equ	0xFE9
 12732                           wreg	equ	0xFE8
 12733                           indf1	equ	0xFE7
 12734                           postinc1	equ	0xFE6
 12735                           postdec1	equ	0xFE5
 12736                           preinc1	equ	0xFE4
 12737                           plusw1	equ	0xFE3
 12738                           fsr1h	equ	0xFE2
 12739                           fsr1l	equ	0xFE1
 12740                           bsr	equ	0xFE0
 12741                           indf2	equ	0xFDF
 12742                           postinc2	equ	0xFDE
 12743                           postdec2	equ	0xFDD
 12744                           preinc2	equ	0xFDC
 12745                           plusw2	equ	0xFDB
 12746                           fsr2h	equ	0xFDA
 12747                           fsr2l	equ	0xFD9
 12748                           status	equ	0xFD8

Data Sizes:
    Strings     255
    Constant    8
    Data        20
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      78
    BANK0           160    108     159
    BANK1           256     13      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_33(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_33(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1443$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> STRING_VALUE_IN_ML(BANK0[5]), STRING_VAL_TYPED(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1364$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1364$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(2) Largest target is 8
		 -> SENSOR(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STRING_VALUE_IN_ML(BANK0[5]), STR_31(CODE[9]), STRING_VAL_TYPED(BANK0[5]), STR_29(CODE[6]), 
		 -> STR_28(CODE[16]), STR_27(CODE[8]), STR_26(CODE[17]), STR_25(CODE[8]), 
		 -> STR_24(CODE[8]), STR_23(CODE[16]), STR_22(CODE[8]), STR_21(CODE[8]), 
		 -> STR_20(CODE[15]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[15]), 
		 -> STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[16]), STR_13(CODE[8]), 
		 -> STR_12(CODE[8]), STR_11(CODE[16]), STR_10(CODE[12]), STR_9(CODE[17]), 
		 -> STR_8(CODE[12]), STR_7(CODE[17]), STR_6(CODE[6]), STR_5(CODE[17]), 
		 -> STR_4(CODE[2]), STR_3(CODE[6]), STR_2(CODE[15]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _WELCOME->_Lcd_Set_Cursor
    _USER_VALUE->_Lcd_Write_String
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR_TIMER0 in COMRAM

    _ISR_TIMER0->i2___fladd

Critical Paths under _main in BANK0

    _main->_FILL
    _FILL->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    _FILL->_sprintf

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   71055
                                            106 BANK0      2     2      0
                               _FILL
                    _Keypad_Get_Char
                        _Keypad_Init
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                         _USER_VALUE
                            _WELCOME
 ---------------------------------------------------------------------------------
 (1) _WELCOME                                              6     6      0    4038
                                             24 COMRAM     6     6      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _USER_VALUE                                           2     2      0    7414
                                             26 COMRAM     2     2      0
                    _Keypad_Get_Char
                          _Lcd_Blink
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Keypad_Get_Char                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                             19 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                15    13      2     996
                                             20 COMRAM    15    13      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FILL                                                 2     2      0   51477
                                            104 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                         _TMR0_COUNT
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   36635
                                             96 BANK0      8     0      8
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   35951
                                             61 COMRAM     2     2      0
                                             90 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6   35439
                                             67 BANK0     23    17      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4755
                                             43 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             16 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             16 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   26450
                                             59 COMRAM     2     2      0
                                             16 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     497
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3343
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     857
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             55 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4117
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3552
                                             16 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3593
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1346
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2903
                                             30 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1584
                                             22 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _TMR0_COUNT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    2700
                                             20 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                             17 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    3614
                                             19 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                             17 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_TIMER0                                          0     0      0    2036
                          i2___fladd
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FILL
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _TMR0_COUNT
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
   _Keypad_Get_Char
   _Keypad_Init
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   _USER_VALUE
     _Keypad_Get_Char
     _Lcd_Blink
       _Lcd_Cmd
     _Lcd_Clear
     _Lcd_NoBlink
       _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
     ___wmul
   _WELCOME
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char

 _ISR_TIMER0 (ROOT)
   i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      5D       7       36.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      4E       1       83.0%
BITBIGSFRlllhlh     2A      0       0      24        0.0%
BITBIGSFRllllll     20      0       0      29        0.0%
BITBIGSFRlh         1B      0       0      21        0.0%
BITBIGSFRlllhh      11      0       0      23        0.0%
BITBIGSFRh           D      0       0      20        0.0%
BITBIGSFRlllllh      5      0       0      27        0.0%
BITBIGSFRllllhh      4      0       0      25        0.0%
BITBIGSFRlllllh      1      0       0      28        0.0%
BITBIGSFRllllhl      1      0       0      26        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14A      30        0.0%
DATA                 0      0     14A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 15 20:24:42 2023

                  _USER_VALUE 1864                  ___fldiv@aexp 0037                  ___fldiv@bexp 0036  
                ___fldiv@sign 002F           ___wmul@multiplicand 0013                           l210 4042  
                         l202 4016                           l123 2DD8                           l300 24A8  
                         l140 3AB4                           l213 4044                           l301 2486  
                         l141 3AF4                           l125 2E9A                           l206 402C  
                         l134 443A                           l310 2506                           l216 43D0  
                         l232 3E8A                           l304 2782                           l225 3BC6  
                         l241 3F08                           l321 25F0                           l313 2570  
                         l305 24E8                           l330 2656                           l322 25CE  
                         l314 254E                           l306 24C6                           l250 4410  
                         l162 1A1A                           l219 4448                           l235 435E  
                         l229 3BC6                           l341 2740                           l333 26B8  
                         l325 2638                           l317 25B0                           l309 2528  
                         l253 4402                           l342 271E                           l334 2696  
                         l326 2616                           l318 258E                           l351 43B0  
                         l175 1C9A                           l167 1A6A                           l184 2A46  
                         l337 2700                           l329 2678                           l610 3E0A  
                         l282 2CAC                           l346 275E                           l338 26DE  
                         l621 381C                           l285 441E                           l198 4000  
                         l616 37D6                           l288 442C                           l625 4326  
                         l297 43F4                           _CAL 00FB                           l806 3C96  
                         l648 3718                           l905 0E4E                           l921 4224  
                         l906 0E3C                           l933 245E                           l935 22BE  
                         l944 2304                           l880 0C52                           l881 0C18  
                         l946 237C                           l938 2282                           l947 236A  
                         l972 1F56                           l796 3A0A                           l965 1D60  
                         l789 39EA                           l982 2086                           l974 1FCE  
                         l975 1FBC                           l879 0C64                           l799 3C76  
                         l896 0D7E                           l888 0F34                           l969 20C4  
                 i2___fladd@a 0005                   i2___fladd@b 0001                           _pad 3F0A  
                         wreg 000FE8                  ___flmul@aexp 001E                  ___flmul@bexp 0023  
         __end_of_Lcd_NoBlink 4404                  ___flmul@sign 001D                  ___flmul@temp 0028  
                ___flmul@prod 0024         Lcd_CGRAM_CreateChar@i 001C                  ___fltol@exp1 001A  
                        l1020 3460                          l1013 3404                          l1006 336C  
                        l1111 07EC                          l1009 34C8                          l1130 3150  
                        l1220 360A                          l1140 3314                          l1132 3158  
                        l1029 409E                          l1223 3612                          l1063 3F2C  
                        l1232 305A                          l1081 03A4                          l1067 3F82  
                        l1083 01EA                          l1164 1862                          l1229 3116  
                        l1254 3FD8                          l1078 0A74                          l1239 438A  
                        l1247 426A                          l1263 4192                          l1257 3FE8  
                        l1275 3D60                          l1283 42AE                          l1187 4142  
                        l1292 42EE                          l1197 391A                          l1286 444A  
                        l5000 3BB6                          l5002 3BBC                          l5010 3ECC  
                        l5004 3E8C                          l5012 442E                          l5100 3E74  
                        l2540 2514                          l2532 24B6                          l2524 2460  
                        l5006 3E98                          l5030 3318                          l5110 2A4A  
                        l5102 3E7A                          l2550 257E                          l2534 24D4  
                        l2526 2476                          l5014 4404                          l5008 3EC8  
                        l5032 3328                          l5120 2A6E                          l5112 2A4E  
                        l5104 3E80                          l2552 259C                          l2544 253E  
                        l2528 2494                          l5016 43F6                          l5050 33EE  
                        l5042 33A6                          l5034 3336                          l2706 43E6  
                        l5202 2C14                          l5130 2A88                          l5122 2A70  
                        l5210 2C52                          l5106 3E86                          l2570 2664  
                        l2562 2606                          l2546 255C                          l2538 24F6  
                        l5060 346E                          l5052 33FA                          l5044 33AE  
                        l5036 337C                          l6100 0ACC                          l5204 2C3C  
                        l5132 2AB0                          l5124 2A84                          l5108 4412  
                        l2580 26CE                          l2564 2624                          l2556 25BE  
                        l5220 3A10                          l5070 34B6                          l5062 3470  
                        l5054 3436                          l5046 33BA                          l5038 3392  
                        l6110 0AFC                          l6102 0ADC                          l5206 2C3E  
                        l5142 2ACA                          l5134 2AB2                          l5118 2A52  
                        l2582 26EC                          l2574 2686                          l2558 25DC  
                        l5230 3A42                          l5222 3A1A                          l5072 34B8  
                        l5064 3474                          l5056 3442                          l5048 33EC  
                        l6200 0CD2                          l6120 0B3C                          l6112 0B0A  
                        l6104 0AE2                          l7000 0914                          l5216 4420  
                        l5160 2B4A                          l5144 2AF2                          l5136 2AC6  
                        l5080 3E1E                          l2592 274E                          l2576 26A4  
                        l2568 2646                          l5232 3A46                          l5066 3498  
                        l5058 3450                          l6210 0D18                          l6202 0CE0  
                        l6130 0B76                          l6122 0B3E                          l6114 0B0C  
                        l6106 0AF4                          l7010 0996                          l7002 0932  
                        l5170 2B78                          l5154 2B0C                          l5146 2AF4  
                        l5090 3E56                          l5082 3E2C                          l2594 276C  
                        l2586 270E                          l5250 3AB6                          l5242 3A74  
                        l5234 3A62                          l5226 3A22                          l5218 3A0C  
                        l5068 34A8                          l6300 20C6                          l6220 0D94  
                        l6212 0D4C                          l6204 0CE2                          l6140 0B8A  
                        l6132 0B7A                          l6116 0B1C                          l6124 0B46  
                        l6108 0AF6                          l7020 09E4                          l7012 09A4  
                        l7004 094E                          l5180 2BB8                          l5172 2B8C  
                        l5156 2B34                          l5148 2B08                          l5092 3E5C  
                        l5084 3E32                          l5076 3E0C                          l2588 272C  
                        l5252 3AC4                          l5244 3A82                          l5236 3A6C  
                        l5228 3A30                          l6310 2102                          l6302 20D2  
                        l6230 0DD0                          l6222 0DA4                          l6214 0D4E  
                        l6206 0CEC                          l6150 0B9E                          l6142 0B8E  
                        l6134 0B7E                          l6126 0B56                          l6118 0B2C  
                        l6070 3C98                          l7030 0A4C                          l7022 09EA  
                        l7014 09BC                          l7006 0956                          l7110 1436  
                        l5190 2BD2                          l5182 2BBA                          l5166 2B4E  
                        l5158 2B36                          l5094 3E62                          l5086 3E40  
                        l5078 3E18                          l2598 2780                          l5254 3ADE  
                        l5246 3A94                          ?_pad 0021                          l4800 403C  
                        l6400 2334                          l6320 2132                          l6312 2112  
                        l6304 20E0                          l6240 0DFC                          l6232 0DD2  
                        l6216 0D5E                          l6208 0CF2                          l6160 0BB2  
                        l6152 0BA2                          l6144 0B92                          l6136 0B82  
                        l6128 0B68                          l6080 3D1A                          l6072 3CAA  
                        l7032 0A54                          l7024 0A08                          l7008 0966  
                        l7040 312A                          l7112 143A                          l7104 13F6  
                        l5192 2BFA                          l5184 2BCE                          l5168 2B76  
                        l5096 3E68                          l5088 3E46                          l5256 3AEE  
                        l5248 3A98                          l6410 23A6                          l6402 2362  
                        l6330 2168                          l6322 2138                          l6314 2114  
                        l6306 20E2                          l6250 0E34                          l6234 0DE0  
                        l6226 0DB8                          l6242 0DFE                          l6218 0D6E  
                        l6170 0C10                          l6154 0BA6                          l6146 0B96  
                        l6138 0B86                          l6162 0BB6                          l6090 0A92  
                        l6074 3CBC                          l7018 09CE                          l7026 0A26  
                        l7050 3198                          l7042 3144                          l7130 14D8  
                        l7122 1466                          l7114 1446                          l7106 141A  
                        l5194 2BFC                          l5178 2B90                          l5098 3E6E  
                        l5258 3AF0                          l6420 241E                          l6412 23D0  
                        l6340 21A8                          l6332 2178                          l6324 2146  
                        l6308 20F2                          l6316 211C                          l6500 1E32  
                        l6260 0EB2                          l6236 0DE8                          l6228 0DC2  
                        l6244 0E0C                          l6180 0C46                          l6172 0C26  
                        l6164 0BBA                          l6156 0BAA                          l6148 0B9A  
                        l6092 0AA2                          l6084 0A76                          l6076 3CC6  
                        l7028 0A36                          l7060 3294                          l7052 320E  
                        l7044 3180                          l7036 3118                          l7132 14E6  
                        l7116 1448                          l7124 149A                          l7108 1428  
                        l5196 2C10                          l7300 196A                          l6430 2454  
                        l6422 243A                          l6406 238C                          l6414 23D4  
                        l6342 21B8                          l6350 21D8                          l6334 217A  
                        l6326 2148                          l6318 212C                          l6510 1E94  
                        l6502 1E42                          l6270 0EF8                          l6254 0E5E  
                        l6262 0EB4                          l6246 0E10                          l6238 0DEC  
                        l6190 0C96                          l6182 0C50                          l6174 0C32  
                        l6166 0BE4                          l6158 0BAE                          l6094 0AB2  
                        l6086 0A82                          l6078 3CE4                          l7062 32B2  
                        l7054 3216                          l7046 3188                          l7038 3128  
                        l7150 1634                          l7142 1572                          l7134 150A  
                        l7126 14AC                          l7118 145A                          l7302 196E  
                        l7310 199E                          l7080 34FE                          l7072 34CA  
                        l6424 243E                          l6416 23EE                          l6408 2398  
                        l6360 2216                          l6352 21E8                          l6344 21C0  
                        l6328 2158                          l6336 2182                          l6600 37A4  
                        l6520 1F3C                          l6512 1EB0                          l6504 1E5C  
                        l6440 1CA8                          l6280 0F22                          l6272 0F06  
                        l6264 0EC4                          l6256 0E6A                          l6248 0E1E  
                        l6192 0CA6                          l6184 0C72                          l6176 0C36  
                        l6168 0C00                          l6096 0AC2                          l6088 0A90  
                        l7064 32CC                          l7056 321C                          l7048 3192  
                        l7160 16A0                          l7136 1544                          l7128 14D0  
                        l7144 15AC                          l7232 40F2                          l7400 1BA2  
                        l7320 1A04                          l7312 19AE                          l7304 1974  
                        l4930 432A                          l7082 3532                          l7074 34DE  
                        l6426 244C                          l6418 2404                          l6370 225E  
                        l6362 2226                          l6354 21E8                          l6346 21C4  
                        l6338 2192                          l6602 37B6                          l6530 1F78  
                        l6522 1F46                          l6514 1EDA                          l6506 1E6C  
                        l6450 1CE8                          l6442 1CB6                          l6282 0F24  
                        l6274 0F0C                          l6266 0ED4                          l6258 0E78  
                        l6194 0CB4                          l6186 0C82                          l6178 0C44  
                        l6098 0AC4                          l6290 428A                          l7066 32E6  
                        l7058 3280                          l7162 16B2                          l7170 16CA  
                        l7146 15BC                          l7138 1564                          l7234 40FE  
                        l7250 4086                          l7242 4046                          l7410 1BCC  
                        l7402 1BAE                          l7330 1A5A                          l7322 1A0E  
                        l7314 19CE                          l7306 1984                          l4940 434A  
                        l4932 4336                          l7084 353A                          l6428 2452  
                        l6380 22AC                          l6372 2272                          l6364 2236  
                        l6604 37C4                          l6540 1FEA                          l6532 1F86  
                        l6524 1F54                          l6516 1F10                          l6508 1E88  
                        l6460 1D18                          l6452 1CEE                          l6444 1CB8  
                        l6612 42F0                          l6276 0F0E                          l6268 0EF4  
                        l6196 0CC2                          l6620 3614                          l6292 428E  
                        l6700 3C70                          l7068 32F4                          l7180 1784  
                        l7164 16BA                          l7172 16FC                          l7156 1664  
                        l7148 15D8                          l7236 411C                          l7244 4058  
                        l7500 2972                          l7420 1C00                          l7412 1BD6  
                        l7404 1BB8                          l7340 1A86                          l7332 1A5C  
                        l7324 1A28                          l7316 19E8                          l7308 1992  
                        l7260 1882                          l4790 4002                          l4950 43B4  
                        l4942 434C                          l4934 4338                          l6294 438C  
                        l7094 35AC                          l7086 3542                          l7078 34E2  
                        l6390 22F4                          l6382 22BC                          l6374 2280  
                        l6366 2246                          l6358 21FC                          l6606 3814  
                        l6550 2054                          l6542 1FF8                          l6534 1FB4  
                        l6526 1F66                          l6518 1F1E                          l6470 1D50  
                        l6462 1D1A                          l6454 1CFE                          l6446 1CC8  
                        l6438 1C9C                          l6614 4306                          l6278 0F14  
                        l6198 0CCE                          l6630 366A                          l6622 362A  
                        l6286 426C                          l6710 3F4C                          l6702 3F0A  
                        l7190 17FC                          l7182 17AE                          l7174 171C  
                        l7166 16C2                          l7158 1690                          l7238 4138  
                        l7246 4060                          l7510 29F4                          l7502 2974  
                        l7430 1C28                          l7422 1C0A                          l7414 1BE2  
                        l7350 1ABA                          l7342 1A92                          l7334 1A6C  
                        l7326 1A44                          l7318 1A00                          l7270 18AA  
                        l7262 188C                          l7254 1864                          l4792 4010  
                        l4952 43B6                          l4944 4352                          l4936 4340  
                        l6296 43A8                          l7096 35DC                          l7088 3576  
                        l6392 2302                          l6384 22CE                          l6376 228C  
                        l6368 224E                          l6608 381A                          l6560 20AA  
                        l6552 206E                          l6544 2022                          l6528 1F74  
                        l6480 1DA0                          l6472 1D70                          l6464 1D2A  
                        l6456 1D04                          l6448 1CD8                          l6616 4316  
                        l6632 367A                          l6720 387C                          l6288 4278  
                        l6712 3F50                          l6704 3F18                          l7184 17CE  
                        l7176 1750                          l7192 1828                          l7248 4068  
                        l7520 2A24                          l7512 29F6                          l7504 2984  
                        l7432 1C34                          l7416 1BEA                          l7408 1BC8  
                        l7360 1AEC                          l7352 1AC6                          l7344 1A9A  
                        l7336 1A78                          l7328 1A4E                          l7280 18EC  
                        l7272 18B2                          l7264 1898                          l7256 186C  
                        l7600 2E5C                          l4794 4018                          l4786 3FEC  
                        l4954 43BC                          l4970 443C                          l4946 4354  
                        l4938 4342                          l7098 35EE                          l6386 22E4  
                        l6394 2314                          l6378 22AA                          l6554 208A  
                        l6562 20B0                          l6538 1FDE                          l6546 2026  
                        l6490 1DF0                          l6482 1DAA                          l6474 1D80  
                        l6466 1D3A                          l6458 1D0A                          l6570 41F0  
                        l6642 36A4                          l6634 367E                          l6626 363E  
                        l6730 38CE                          l6722 38A4                          l6714 3F6E  
                        l6706 3F24                          l6810 003A                          l6802 0012  
                        l7514 2A06                          l7506 2990                          l7450 27B8  
                        l7442 2784                          l7434 1C3E                          l7426 1C1A  
                        l7418 1BF4                          l7362 1AF4                          l7354 1AD2  
                        l7346 1AA4                          l7338 1A7C                          l7282 18F0  
                        l7274 18B8                          l7290 191C                          l7266 18A2  
                        l7258 1876                          l7602 2E68                          l7610 2EB4  
                        l7530 2CB8                          l7522 2CAE                          l4796 4026  
                        l4788 3FFA                          l4956 43BE                          l4980 3B2A  
                        l4972 3AF8                          l4948 435C                          l6396 2322  
                        l6388 22EA                          l6580 3DCE                          l6564 20B4  
                        l6556 209A                          l6548 2040                          l6492 1DFC  
                        l6484 1DC0                          l6468 1D4A                          l6660 3708  
                        l6652 36CC                          l6644 36AE                          l6636 368C  
                        l6628 3668                          l6724 38B0                          l6716 381E  
                        l6708 3F38                          l6740 42C0                          l6900 03DC  
                        l6820 0090                          l6812 005E                          l6804 0018  
                        l7196 183A                          l7516 2A08                          l7508 29C2  
                        l7460 2800                          l7452 27C2                          l7444 2788  
                        l7428 1C1E                          l7380 1B46                          l7372 1B24  
                        l7364 1AFE                          l7356 1AD6                          l7348 1AB0  
                        l7436 1C4E                          l7292 1930                          l7284 18F6  
                        l7276 18C8                          l7268 18A6                          l7604 2E80  
                        l7540 2CC6                          l7532 2CBE                          l7524 2CB2  
                        l4798 402E                          l4958 43CE                          l4990 3B70  
                        l4982 3B3C                          l4974 3B08                          l6398 2326  
                        l6582 3DDE                          l6574 3D62                          l6590 371A  
                        l6558 20A8                          l6494 1E0A                          l6486 1DCC  
                        l6478 1D94                          l6654 36D8                          l6646 36B8  
                        l6734 3912                          l6718 383E                          l6750 2F7A  
                        l6742 3F84                          l6902 03EE                          l6910 042E  
                        l6830 00E0                          l6822 009C                          l6814 0068  
                        l6806 0028                          l6670 394E                          l7518 2A22  
                        l7470 283E                          l7462 280C                          l7454 27CE  
                        l7446 27A2                          l7390 1B76                          l7382 1B50  
                        l7374 1B28                          l7366 1B0A                          l7358 1AE0  
                        l7294 1936                          l7278 18DA                          l7286 1902  
                        l7606 2E8E                          l7614 2EC8                          l7550 2CF4  
                        l7542 2CC8                          l7534 2CC0                          l7526 2CB4  
                        l4992 3B82                          l4984 3B4E                          l4976 3B1A  
                        l6584 3E02                          l6576 3D90                          l6592 3748  
                        l6496 1E16                          l6488 1DE4                          l6568 41E0  
                        l6656 36E8                          l6728 38BC                          l6760 304A  
                        l6752 2F8E                          l6744 3FA2                          l6920 0516  
                        l6912 0436                          l6904 03FC                          l6840 0114  
                        l6832 00E4                          l6824 00A4                          l6816 0070  
                        l6808 0036                          l6680 39D0                          l6672 3962  
                        l6664 391C                          l7480 28B2                          l7472 2840  
                        l7464 2816                          l7456 27D8                          l7448 27AC  
                        l7392 1B7A                          l7384 1B5C                          l7376 1B32  
                        l7368 1B14                          l7296 1946                          l7288 1910  
                        l7608 2EA8                          l7560 2D28                          l7552 2CF8  
                        l7544 2CD6                          l7536 2CC2                          l7528 2CB6  
                        l4994 3B88                          l4986 3B54                          l4978 3B20  
                        l6586 3E08                          l6578 3DA0                          l6594 3758  
                        l6498 1E26                          l6658 36F8                          l6770 3106  
                        l6754 2F9C                          l6762 307E                          l6746 2F02  
                        l6738 42B0                          l6930 05D4                          l6922 054A  
                        l6914 0446                          l6906 0414                          l6850 0170  
                        l6834 00EA                          l6818 0080                          l6826 00A8  
                        l6682 39D2                          l6674 3970                          l6666 3928  
                        l6690 3BEE                          l7490 2928                          l7482 28B8  
                        l7474 288C                          l7466 2822                          l7458 27F6  
                        l7394 1B84                          l7386 1B66                          l7378 1B3E  
                        l7298 1958                          l7570 2D66                          l7562 2D3A  
                        l7554 2D16                          l7546 2CE2                          l7538 2CC4  
                        l4996 3B92                          l4988 3B5E                          l6596 3786  
                        l6764 30BA                          l6748 2F22                          l6780 4168  
                        l6940 0670                          l6932 05EA                          l6916 045A  
                        l6924 0550                          l6908 0426                          l6852 0176  
                        l6836 00F2                          l6828 00CE                          l6844 0134  
                        l6684 39E4                          l6676 3982                          l6668 3946  
                        l6692 3C02                          l7492 2936                          l7484 28EC  
                        l7476 289C                          l7468 2824                          l7396 1B90  
                        l7580 2DB6                          l7572 2D7E                          l7564 2D42  
                        l7556 2D1A                          l7548 2CF0                          l4998 3BA4  
                        l6790 4226                          l6598 3796                          l6766 30CE  
                        l6758 300E                          l6782 4174                          l6774 4144  
                        l6942 06C6                          l6950 0718                          l6934 061C  
                        l6926 056E                          l6918 04BE                          l6870 0200  
                        l6854 017E                          l6846 015A                          l6862 019A  
                        l6838 010A                          l6678 39B0                          l6694 3C10  
                        l6686 3BC8                          l7494 2946                          l7486 2912  
                        l7478 28AE                          l7398 1B98                          l7590 2E0C  
                        l7582 2DCC                          l7574 2D8C                          l7566 2D50  
                        l7558 2D22                          l6792 422A                          l6768 30F6  
                        l6776 4158                          l6784 4178                          l6960 074A  
                        l6952 0728                          l6944 06CC                          l6936 062C  
                        l6928 05A2                          l6880 02F6                          l6872 0234  
                        l6864 01B4                          l6848 016C                          l6696 3C3E  
                        l6688 3BE6                          l7496 2954                          l7488 291C  
                        l7592 2E26                          l7584 2DD0                          l7576 2DA0  
                        l7568 2D5E                          l6786 4360                          l6794 423E  
                        l6778 4164                          l6970 081C                          l6962 07C2  
                        l6954 0730                          l6946 0700                          l6938 063C  
                        l6890 03AC                          l6882 032A                          l6874 0272  
                        l6698 3C5E                          l7498 2958                          l7850 2EE0  
                        l7594 2E30                          l7586 2DE6                          l7578 2DAA  
                        l6796 4260                          l6980 0842                          l6972 0820  
                        l6964 07E2                          l6956 0736                          l6948 0714  
                        l6892 03BC                          l6884 0332                          l6876 02A4  
                        l6868 01FA                          l7860 16DE                          l7852 1C64  
                        l7596 2E3C                          l7588 2E00                          l6798 4264  
                        l6990 0876                          l6982 0848                          l6974 0826  
                        l6966 07FE                          l6958 073E                          l6894 03C8  
                        l6878 02E2                          l7862 1798                          l7854 2C66  
                        l7598 2E52                          l6992 087C                          l6976 082E  
                        l6968 080C                          l6984 084E                          l6896 03D0  
                        l6888 0372                          l7864 181A                          l7856 148C  
                        l7866 3560                          l6994 08D4                          l6986 0860  
                        l6978 083E                          l6898 03D8                          l7858 1682  
                        l6996 0908                          l6988 0872                          l6998 0910  
                        STR_1 7F0E                          STR_2 7F83                          STR_3 7FE7  
                        STR_4 7F0E                          STR_5 7EFF                          STR_6 7FE7  
                        STR_7 7F21                          STR_8 7FBC                          STR_9 7F32  
             ?_Lcd_CGRAM_Init 0001                          _FILL 2784                          u2000 253E  
                        u2001 253A                          u2010 255C                          u2011 2558  
                        u2100 2686                          u2020 257E                          u2101 2682  
                        u2021 257A                          u2110 26A4                          u2030 259C  
                        u2111 26A0                          u2031 2598                          u2120 26CE  
                        u2040 25BE                          u2121 26CA                          u2041 25BA  
                        u2130 26EC                          u2050 25DC                          u2131 26E8  
                        u2051 25D8                          u2140 270E                          u2060 2606  
                        u2141 270A                          u2061 2602                          u2150 272C  
                        u2070 2624                          _LATB 000F8A                          u2151 2728  
                        u2071 2620                          _LATC 000F8B                          u2160 274E  
                        u2080 2646                          u2161 274A                          u2081 2642  
                        _LATE 000F8D                          u2170 276C                          u2090 2664  
                        u2171 2768                          u2091 2660                          u5100 3328  
                        u5101 3324                          u5030 3B08                          u5110 3336  
                        u5031 3B04                          u5111 3332                          u5040 3B3C  
                        u5120 3392                          u6000 0AA2                          u5200 2A80  
                        u5041 3B38                          u5121 338E                          u6001 0A9E  
                        u5201 2A7C                          u5050 3B70                          u5130 33E8  
                        u6010 0AB2                          u5210 2AC2                          u5051 3B6C  
                        u5131 33E4                          u6011 0AAE                          u5211 2ABE  
                        u5060 3BA4                          u5140 3432                          u6100 0BFE  
                        u6020 0AF4                          u5220 2B04                          u1940 2476  
                        u5061 3BA0                          u5141 342E                          u6021 0AF0  
                        u5221 2B00                          u1941 2472                          u5070 3EC4  
                        u5150 3450                          u6110 0C26                          u6030 0B0A  
                        u5230 2B46                          u1950 2494                          u5151 344C  
                        u6111 0C22                          u6031 0B06                          u5231 2B42  
                        u1951 2490                          u5080 3EF8                          u5160 3460  
                        u6200 0D5E                          u6120 0C44                          u6040 0B1C  
                        u7000 39B0                          u5240 2B88                          u1960 24B6  
                        u5161 345C                          u6201 0D5A                          u6121 0C40  
                        u6041 0B18                          u7001 39AC                          u5241 2B84  
                        u1961 24B2                          u5090 3F08                          u5170 346E  
                        u6210 0D94                          u6130 0C64                          u6050 0B2C  
                        u7010 3BE6                          u5250 2BCA                          u1970 24D4  
                        u5091 3F04                          u5171 346A                          u6211 0D90  
                        u6131 0C60                          u6051 0B28                          u7011 3BE2  
                        u5251 2BC6                          u1971 24D0                          u5180 34A8  
                        u6300 0E5E                          u6220 0DA4                          u6140 0C72  
                        u6060 0B68                          u7020 3C10                          u5260 2C0C  
                        u1980 24F6                          u5077 3EBA                          u5181 34A4  
                        u6301 0E5A                          u6221 0DA0                          u6141 0C6E  
                        u6061 0B64                          u7021 3C0C                          u5261 2C08  
                        u1981 24F2                          u5190 34B6                          u6310 0E78  
                        u6230 0DD0                          u6150 0C82                          u6070 0B76  
                        u7110 3908                          u7030 3C3E                          u5270 2C4E  
                        u1990 2514                          u5087 3EEE                          u5191 34B2  
                        u6311 0E74                          u6231 0DCC                          u6151 0C7E  
                        u6071 0B72                          u7111 3902                          u7031 3C3A  
                        u5271 2C4A                          u1991 2510                          u6400 20F2  
                        u6320 0EB2                          u6240 0DE0                          u6160 0CB4  
                        u6080 0BE4                          u7120 390A                          u7200 302E  
                        u7040 3F18                          u5280 3A62                          u8000 2D3A  
                        u6401 20EE                          u6321 0EAE                          u6241 0DDC  
                        u6161 0CB0                          u6081 0BE0                          u7105 38E0  
                        u7041 3F14                          u5281 3A5E                          u8001 2D36  
                        u6410 2102                          u6330 0EC4                          u6250 0DFC  
                        u6170 0CC2                          u6090 0BFC                          u7210 304A  
                        u7050 3F6E                          u7130 42EE                          u5290 3AB4  
                        u8010 2D50                          u6411 20FE                          u6331 0EC0  
                        u6251 0DF8                          u6171 0CBE                          u6091 0BF6  
                        u7211 3046                          u7051 3F6A                          u7131 42EA  
                        u5291 3AB0                          u8011 2D4C                          u6500 22CE  
                        u6420 2146                          u6340 0ED4                          u6260 0E0C  
                        u6180 0CE0                          u7060 385E                          u7220 309E  
                        u7140 3FA2                          u7300 0036                          u8020 2D5E  
                        u6501 22CA                          u6421 2142                          u6341 0ED0  
                        u6261 0E08                          u6181 0CDC                          u7205 3024  
                        u7141 3F9E                          u7301 0032                          u8021 2D5A  
                        u4910 3FFA                          u6510 22E4                          u6430 2158  
                        u6350 0EF4                          u6270 0E1E                          u6190 0D18  
                        u7070 387C                          u7230 30BA                          u7150 2F4C  
                        u7310 0080                          u8030 2D8C                          u4911 3FF6  
                        u6511 22E0                          u6431 2154                          u6351 0EF0  
                        u6271 0E1A                          u6191 0D14                          u7071 3878  
                        u7231 30B6                          u7311 007C                          u8031 2D88  
                        u4920 4010                          u6600 241E                          u6520 2302  
                        u6440 2168                          u6360 0F06                          u6280 0E34  
                        u7080 38A4                          u7240 30F6                          u7160 2F7A  
                        u7400 02E2                          u7320 0090                          u8040 2DC8  
                        u4921 400C                          u6601 241A                          u6521 22FE  
                        u6441 2164                          u6361 0F02                          u6281 0E30  
                        u7081 38A0                          u7065 3854                          u7241 30F2  
                        u7225 3094                          u7161 2F76                          u7401 02DE  
                        u7321 008C                          u8041 2DC4                          u4930 4026  
                        u6610 244C                          u6530 2322                          u6450 21A8  
                        u6370 0F22                          u6290 0E4A                          u7090 38CE  
                        u7170 2F9C                          u7250 4192                          u7410 036E  
                        u7330 00CE                          u8050 2DE6                          u4931 4022  
                        u6611 2448                          u6531 231E                          u6451 21A4  
                        u6371 0F1E                          u6291 0E46                          u7091 38CA  
                        u7171 2F98                          u7155 2F42                          u7251 418E  
                        u7411 036A                          u7331 00CA                          u8051 2DE2  
                        u8107 2D72                          u4940 403C                          u7260 4384  
                        u6540 2334                          u6460 21E8                          u6700 1EFA  
                        u6620 1CB6                          u6380 42AE                          u7500 062C  
                        u7420 03A4                          u7340 00E0                          u8060 2E8E  
                        u4941 4038                          u7261 437E                          u6541 2330  
                        u6461 21E4                          u6621 1CB2                          u6381 42AA  
                        u7501 0628                          u7421 03A0                          u7341 00DC  
                        u8061 2E8A                          u8117 2E74                          u7270 4386  
                        u6550 2362                          u6470 225E                          u6390 20E0  
                        u6710 1F54                          u6630 1CC8                          u7190 300A  
                        u7510 06C6                          u7430 03BC                          u7350 015A  
                        u8070 2EA8                          u6551 235E                          u6471 225A  
                        u6391 20DC                          u6711 1F50                          u6631 1CC4  
                        u7191 3006                          u7511 06C2                          u7431 03B8  
                        u7351 0156                          u8207 247C                          u8127 3A28  
                        u8071 2EA4                          u7280 423E                          u6560 2378  
                        u6480 2280                          u6800 20A8                          u6720 1F74  
                        u6640 1CD8                          u7600 09B8                          u7520 0714  
                        u7440 03EE                          u7360 016C                          u8080 2EC8  
                        u7281 423A                          u6561 2374                          u6481 227C  
                        u6801 20A4                          u6721 1F70                          u6705 1EF0  
                        u6641 1CD4                          u7185 2FB0                          u7521 0710  
                        u7441 03EA                          u7361 0168                          u8217 249A  
                        u8137 3A7A                          u8081 2EC4                          u7290 4260  
                        u6570 238C                          u6490 22AA                          u6810 3D90  
                        u6730 1F86                          u6650 1D18                          u7186 2FBA  
                        u7610 09CA                          u7530 07C2                          u7450 03FC  
                        u7370 01E6                          u7291 425C                          u6571 2388  
                        u6491 22A6                          u6811 3D8C                          u6731 1F82  
                        u6651 1D14                          u7187 2FCA                          u7611 09C6  
                        u7531 07BE                          u7451 03F8                          u7371 01E2  
                        u8307 25C4                          u8227 24BC                          u8147 3ABC  
                        u6580 23A6                          u6820 3DCE                          u6740 1FB4  
                        u6660 1D2A                          u6900 362A                          u7620 0A08  
                        u7540 07FE                          u7460 0426                          u7380 0272  
                        u7700 32E6                          u6581 23A2                          u6821 3DCA  
                        u6741 1FB0                          u6661 1D26                          u6901 3626  
                        u7621 0A04                          u7541 07FA                          u7461 0422  
                        u7381 026E                          u7701 32E2                          u8317 25E2  
                        u8237 24DA                          u8157 3AD0                          u6590 23EE  
                        u6830 3E02                          u6750 1FCA                          u6670 1D3A  
                        u6910 365E                          u5950 3CAA                          u7630 0A26  
                        u7550 080C                          u7470 056E                          u7390 02A4  
                        u7710 32F4                          u6591 23EA                          u6831 3DFE  
                        u6751 1FC6                          u6671 1D36                          u5951 3CA6  
                        u7631 0A22                          u7551 0808                          u7471 056A  
                        u7391 02A0                          u7711 32F0                          u8407 2714  
                        u8327 260C                          u8247 24FC                          u8167 3AE6  
                        u7720 34FE                          u6840 3748                          u6760 1FDE  
                        u6680 1D70                          u6920 368C                          u5960 3CBC  
                        u7640 0A36                          u7560 0860                          u7480 05D4  
                        u7800 15AC                          u7721 34FA                          u6841 3744  
                        u6761 1FDA                          u6681 1D6C                          u6921 3688  
                        u5961 3CB8                          u7641 0A32                          u7561 085C  
                        u7481 05D0                          u7801 15A8                          u8417 2732  
                        u8337 262A                          u8257 251A                          u8177 19D8  
                        u8097 2D04                          u7730 352E                          u6850 3786  
                        u6770 1FF8                          u6690 1D80                          u6930 36A0  
                        u5970 3CE4                          u7570 0932                          u7490 061C  
                        u7650 3128                          u7810 15D8                          u7731 352A  
                        u6851 3782                          u6771 1FF4                          u6691 1D7C  
                        u6931 369C                          u6915 3654                          u5971 3CE0  
                        u7571 092E                          u7491 0618                          u7651 3124  
                        u7811 15D4                          u8507 2A14                          u8427 2754  
                        u8347 264C                          u8267 2544                          u8187 19F2  
                        u7740 35DC                          u6860 37A4                          u6780 2040  
                        u6940 36C8                          u5980 3D1A                          u7580 094E  
                        u7660 3144                          u7820 1718                          u7900 1958  
                        u7741 35D8                          u6861 37A0                          u6781 203C  
                        u6941 36C4                          u5981 3D16                          u7581 094A  
                        u7661 3140                          u7821 1714                          u8517 2A38  
                        u8437 2772                          u8357 266A                          u8277 2562  
                        u8197 1A32                          u7901 1954                          u7750 35EE  
                        u6870 37C4                          u6790 206E                          u5990 0A90  
                        u6950 36E8                          u7590 09B6                          u7670 3294  
                        u7830 4138                          u7910 196A                          u8527 4344  
                        u7751 35EA                          u6871 37C0                          u6791 206A  
                        u5991 0A8C                          u6951 36E4                          u7591 09B0  
                        u7671 3290                          u7831 4134                          u8447 3E24  
                        u8367 268C                          u8287 2584                          u7911 1966  
                        u6880 3814                          u6960 36F8                          u7680 32B2  
                        u7760 141A                          u7920 1992                          u7840 18C8  
                        u8537 4356                          u6881 3810                          u6961 36F4  
                        u7681 32AE                          u7761 1416                          u8457 3E38  
                        u8377 26AA                          u8297 25A2                          u7921 198E  
                        u7841 18C4                          u6890 4306                          u7690 32CC  
                        u7770 14AC                          u7930 19AE                          u7850 18DA  
                        u8547 43C4                          u6891 4302                          u6971 3922  
                        u7691 32C8                          u7771 14A8                          u8467 3E4C  
                        u8387 26D4                          u7931 19AA                          u7851 18D6  
                        u6980 3946                          u7780 14D0                          u7940 1A28  
                        u7860 18EC                          u6981 3942                          u7781 14CC  
                        u8477 2794                          u8397 26F2                          u7941 1A24  
                        u7861 18E8                          u6990 3970                          u7790 150A  
                        u7950 1A6A                          u7870 1910                          u6991 396C  
                        u7791 1506                          u8487 2830                          u7951 1A66  
                        u7871 190C                          u7960 2936                          u7880 192C  
                        u8497 2964                          u7961 2932                          u7881 1928  
                        u7970 2954                          u7890 1946                          u7971 2950  
                        u7891 1942                          u7980 29C2                          u7981 29BE  
                        u7990 29F4                          u7991 29F0               __end_of_WELCOME 3AF6  
           ?_Lcd_Write_String 0015                          _dbuf 0100                          _labs 3F84  
                        _atoi 34CA                          _main 2CAE                          _num1 0044  
                        _num2 0046                          _prec 00DE                          pad@i 0028  
                        pad@p 0025                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 002A                          fsr2l 000FD9                          btemp 004F  
                        _utoa 3118                 ___fpclassifyf 381E                          prodh 000FF4  
                        prodl 000FF3                          start 000E            ??_Lcd_Write_String 0017  
             ___fldiv@new_exp 0030               __end_of_Lcd_Cmd 43D2                   ?_ISR_TIMER0 0001  
                ___param_bank 000000                         ??_pad 0027                         ?_FILL 0001  
               ___fltol@sign1 0019                         ?_labs 0011                         ?_atoi 0017  
             __end_of___fladd 0F36                         ?_main 0001               __end_of___fldiv 2460  
             __end_of___flneg 4328                         STR_10 7FB0                         STR_11 7F73  
                       STR_12 7FD1                         STR_20 7FA1                         STR_21 7FD1  
                       STR_13 7FD9                         STR_22 7FD9                         STR_30 7FFB  
                       STR_14 7F63                         STR_15 7FD1                         STR_31 7FC8  
                       STR_23 7F43                         STR_24 7FD1                         STR_16 7FD9  
                       STR_32 7FE1                         STR_25 7FD9                         STR_33 7FF3  
                       STR_17 7F92                         STR_18 7FD1                         STR_26 7F10  
                       STR_27 7FD1                         STR_19 7FD9                         STR_36 7FF7  
                       STR_28 7F53              ?_Lcd_CGRAM_Close 0001                         STR_29 7FED  
             __end_of___flmul 20C6               __end_of___flsub 4226               __end_of___fltol 371A  
                       ?_utoa 002C               __end_of___lodiv 3A0C                         _NAME1 00EB  
                       _NAME2 00F6               __end_of___lomod 3C98                         i2l104 41DC  
                       i2l905 130E                         i2l906 12FC                         i2l880 1112  
                       i2l881 10D8                         i2l879 1124                         i2l896 123E  
                       i2l888 13F4                 ??_Keypad_Init 0011                   ?_TMR0_COUNT 0001  
                vfpfcnvrt@fmt 00A5                         _TMR0L 000FD6                         _PULSE 0040  
               i2___fladd@grs 0010                         _flags 00E0                         _fputc 3C98  
                       _fputs 426C               __end_of_isdigit 438C                         labs@a 0011  
                       atoi@n 001E                         pad@fp 0021                         atoi@s 0017  
                       _width 00DC                         _putch 444A               __end_of_isspace 426C  
                       tablat 000FF5                         ttemp5 0050                         ttemp6 0053  
                       ttemp7 0057                         utoa@d 002E                         utoa@i 006C  
                       utoa@n 0064                         utoa@p 0060                         utoa@w 0062  
                       status 000FD8                         wtemp8 0050               __end_of_sprintf 40A0  
              ?___fpclassifyf 0011              ___lodiv@dividend 0011                  __end_of_FILL 2A48  
            __end_of_Lcd_Init 3E8C              __end_of_Lcd_Port 4046               __initialization 40A0  
                 ?_USER_VALUE 0001                  __end_of_labs 3FEA                  __end_of_atoi 3614  
                __end_of_main 2F02                  __end_of_utoa 3316                        ??_FILL 00C8  
                 _Lcd_NoBlink 43F6                        ??_labs 0015                        ??_atoi 0019  
                      ??_main 00CA                        ??_utoa 0036                 __activetblptr 000002  
            ___lodiv@quotient 0021       Lcd_CGRAM_CreateChar@add 001B                     ??_WELCOME 0019  
                      ?_fputc 0011                        ?_fputs 001A                        ?_putch 0001  
         __end_of_Keypad_Init 43F6                        i2l5600 106A                        i2l5610 10A4  
                      i2l5602 106E                        i2l5530 0F42                        i2l5700 132A  
                      i2l5620 10F6                        i2l5612 10C0                        i2l5604 1072  
                      i2l5540 0F82                        i2l5532 0F50                        i2l5710 1394  
                      i2l5702 1338                        i2l5630 1142                        i2l5622 1104  
                      i2l5614 10D0                        i2l5606 1076                        i2l5550 0FB4  
                      i2l5542 0F84                        i2l5534 0F52                        i2l5720 13CE  
                      i2l5712 13B4                        i2l5704 1372                        i2l5640 1182  
                      i2l5624 1106                        i2l5616 10E6                        i2l5608 107A  
                      i2l5560 0FDC                        i2l5552 0FB6                        i2l5536 0F62  
                      i2l5544 0F8C                        i2l5528 0F36                        i2l5722 13D4  
                      i2l5714 13B8                        i2l5706 1374                        i2l5650 11AC  
                      i2l5642 118E                        i2l5634 1156                        i2l5626 1110  
                      i2l5618 10F2                        i2l5570 1016                        i2l5562 0FEC  
                      i2l5554 0FBC                        i2l5546 0F9C                        i2l5538 0F72  
                      i2l5730 4196                        i2l5724 13E2                        i2l5716 13C6  
                      i2l5708 1384                        i2l5660 121E                        i2l5644 1192  
                      i2l5636 1166                        i2l5628 1132                        i2l5652 11B2  
                      i2l5580 1042                        i2l5572 1028                        i2l5564 0FFC  
                      i2l5556 0FCA                        i2l5548 0FA2                        i2l5732 41A4  
                      i2l5726 13E4                        i2l5718 13CC                        i2l5670 1278  
                      i2l5654 11D8                        i2l5662 122E                        i2l5646 11A0  
                      i2l5638 1174                        i2l5590 1056                        i2l5582 1046  
                      i2l5574 1036                        i2l5566 0FFE                        i2l5558 0FCC  
                      i2l5734 41D8                        i2l5680 12A8                        i2l5672 1282  
                      i2l5664 1254                        i2l5656 120C                        i2l5648 11A2  
                      i2l5592 105A                        i2l5584 104A                        i2l5576 103A  
                      i2l5568 1006                        i2l5736 41DA                        i2l5690 12D0  
                      i2l5682 12AC                        i2l5674 1290                        i2l5666 1264  
                      i2l5658 120E                        i2l5594 105E                        i2l5586 104E  
                      i2l5578 103E                        i2l5692 12DE                        i2l5684 12BC  
                      i2l5676 1292                        i2l5596 1062                        i2l5588 1052  
                      i2l5694 12F4                        i2l5678 12A0                        i2l5686 12BE  
                      i2l5598 1066                        i2l5688 12CC                        i2l5698 131E  
                      _OSCCON 000FD3                     ??_Lcd_Cmd 0012                 vfpfcnvrt@done 00AD  
                      _SENSOR 7EF7                        __CHAR1 004D                        __CHAR2 004E  
            __end_of___xxtofl 34CA                i2___fladd@aexp 000E                i2___fladd@bexp 000F  
                vfprintf@cfmt 003E                        ___flge 371A                        ___fleq 3D62  
Lcd_CGRAM_CreateChar@chardata 0015                     ??___fladd 0019                        ___wmul 438C  
                   ??___fldiv 0027                     ??___flneg 0015                     ??___flmul 0019  
                   ??___flsub 0032                     ??___fltol 0015                     ??___lodiv 0021  
                   ??___lomod 0021                        _efgtoa 0012                        _floorf 2F02  
                      _memcpy 4144                        clear_0 40C6                        clear_1 40D2  
                      clear_2 40DE                        isa$std 000001               _PULSES_TO_REACH 00D8  
                      pad@buf 0023                        _strcpy 42B0                        fputc@c 0011  
                      fputs@c 001E                        fputs@i 001F                        fputs@s 001A  
           __end_ofi2___fladd 13F6                     ??_isdigit 0013               ___fpclassifyf@e 0019  
             ___fpclassifyf@u 001B               ___fpclassifyf@x 0011                  __mediumconst 7EF6  
                   ??_isspace 0013                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0001              __end_of_vfprintf 4144  
                      utoa@fp 002C                     ??_sprintf 0040               Lcd_Set_Cursor@a 0015  
             Lcd_Set_Cursor@b 0014               Lcd_Set_Cursor@y 0017               Lcd_Set_Cursor@z 0016  
                  ___flge@ff1 002A                    ___flge@ff2 002E               ??___fpclassifyf 0015  
   Lcd_CGRAM_CreateChar@i_811 001D                  ___xxtofl@arg 001B     Lcd_CGRAM_CreateChar@i_812 001E  
   Lcd_CGRAM_CreateChar@i_813 001F     Lcd_CGRAM_CreateChar@i_814 0020     Lcd_CGRAM_CreateChar@i_815 0021  
   Lcd_CGRAM_CreateChar@i_816 0022     Lcd_CGRAM_CreateChar@i_817 0023                  ___xxtofl@exp 001A  
                ___xxtofl@val 0011                    ___fleq@ff1 0011                    ___fleq@ff2 0015  
                  __accesstop 0060       __end_of__initialization 40E4                    ___flneg@f1 0011  
           __end_of_Lcd_Clear 444A             __end_of_Lcd_Blink 4412                 ___rparam_used 000001  
                  ___fltol@f1 0011                __pcstackCOMRAM 0001                  __pidataBANK0 43D2  
               __end_of_fputc 3D62                 __end_of_fputs 42B0                 __end_of_putch 444C  
              _Lcd_Set_Cursor 3AF6                   _Keypad_Init 43E6              ??_Lcd_CGRAM_Init 0014  
                   ?_Lcd_Init 0001                     ?_Lcd_Port 0001                       ??_fputc 0015  
                     ??_fputs 001E                       ??_putch 0011                    __pbssBANK0 00CC  
                  __pbssBANK1 0100                  ??_ISR_TIMER0 0011                       ?___flge 002A  
                     ?___fleq 0011                       ?___wmul 0011                       ?_efgtoa 0070  
                     ?_floorf 0038                       ?_memcpy 0011        __end_of_Lcd_Set_Cursor 3BC8  
                     ?_strcpy 0011                  ??_TMR0_COUNT 0011                     ?___xxtofl 0011  
                     _WELCOME 3A0C                    ??_Lcd_Init 0014                    ??_Lcd_Port 0011  
          __end_of_ISR_TIMER0 41E0              ___lomod@dividend 0011                _Lcd_Write_Char 4328  
                     _Lcd_Cmd 43B2               i2___fladd@signs 000D                       __Hparam 0000  
                     __Lparam 0000            __end_of_TMR0_COUNT 443C                  ??_USER_VALUE 001B  
                     ___fladd 0A76                       ___fldiv 20C6                       ___flneg 42F0  
                     ___flmul 1C9C                       ___flsub 41E0                       ___fltol 3614  
                     ___lodiv 391C                       ___lomod 3BC8                     ?_vfprintf 00BA  
                     __pcinit 40A0                       __ramtop 0800               ?_Lcd_Set_Cursor 0014  
                ?_Lcd_NoBlink 0001                       __ptext0 2CAE                       __ptext1 3A0C  
                     __ptext2 1864                       __ptext3 43F6                       __ptext4 4404  
                     __ptext5 2460                       __ptext6 3E0C                       __ptext7 4412  
                     __ptext8 2A48                       __ptext9 4420                     _T0CONbits 000FD5  
                     _isdigit 4360                    ??___xxtofl 0015                       _isspace 4226  
                     efgtoa@c 0076                       efgtoa@d 0082                       efgtoa@e 0086  
                     efgtoa@f 0072                       efgtoa@g 0099                       efgtoa@h 008E  
                     efgtoa@i 0096                       efgtoa@l 0092                       efgtoa@m 0084  
                     efgtoa@n 009D                       efgtoa@p 0079                       efgtoa@t 007B  
                     efgtoa@u 009F                       efgtoa@w 008C                       atoi@neg 001C  
                     _sprintf 4046        __end_of_Lcd_Write_Char 4360                __pintcode_body 4194  
        end_of_initialization 40E4            __end_of_USER_VALUE 1C9C                       floorf@e 006A  
                     floorf@m 0066                       floorf@u 006C                       floorf@x 0038  
           ??_Keypad_Get_Char 0011                       memcpy@d 0018                       memcpy@n 0015  
                     memcpy@s 001A                       fputc@fp 0013                 __Lmediumconst 7EF6  
                     int_func 4194                       fputs@fp 001C                     _SELECTED2 004C  
           __end_of_vfpfcnvrt 1864                    efgtoa@mode 0080                    efgtoa@sign 0098  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE              vfpfcnvrt@convarg 00AF  
                   Lcd_Port@a 0011                    ??_vfprintf 003E                       strcpy@d 0017  
                     strcpy@s 0015                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTDbits 000F83                   ___fladd@grs 0020                 ___xxtofl@sign 0019  
                   _TRISAbits 000F92                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TRISDbits 000F95                     _TRISEbits 000F96                   ___fldiv@grs 0032  
                 ___fldiv@rem 002B                     i2___fladd 0F36               ?_Lcd_Write_Char 0001  
           Lcd_Write_String@a 0015             Lcd_Write_String@i 0019                   ___flmul@grs 001F  
              __end_of_SENSOR 7EFF                     _Lcd_Clear 443C                     _Lcd_Blink 4404  
              __end_of___flge 381E                __end_of___fleq 3E0C                   vfpfcnvrt@ap 00A7  
                 vfpfcnvrt@cp 00B8                   vfpfcnvrt@fp 00A3                __end_of___wmul 43B2  
            _Lcd_Write_String 3E8C                __end_of_efgtoa 0A76                __end_of_floorf 3118  
              __end_of_memcpy 4194                    floorf@F526 00CC  __end_of_Lcd_CGRAM_CreateChar 2CAE  
                ?_Keypad_Init 0001                __end_of_strcpy 42F0           start_initialization 40A0  
             ___lodiv@divisor 0019               ___lodiv@counter 0029                   __end_of_pad 3F84  
                  ?i2___fladd 0001         __end_of___fpclassifyf 391C             ??_Lcd_CGRAM_Close 0014  
                 vfprintf@fmt 00BC                    ?_Lcd_Clear 0001                      ??___flge 0032  
                    ??___fleq 0019                    ?_Lcd_Blink 0001                      ??___wmul 0015  
                    ??_efgtoa 003C                   __pdataBANK0 00EB                      ??_floorf 0060  
                    ??_memcpy 0017               Lcd_Write_Char@a 0014               Lcd_Write_Char@y 0013  
                    ??_strcpy 0015                     ___fladd@a 0015                     ___fladd@b 0011  
                   ___fldiv@a 0023                     ___fldiv@b 001F                     ___flmul@a 0015  
                   ___flmul@b 0011                   __pbssCOMRAM 0040                     ___flsub@a 002E  
                   ___flsub@b 002A                 __pcstackBANK0 0060                 __pcstackBANK1 0150  
                    ?_WELCOME 0001                      ?_Lcd_Cmd 0001                   _efgtoa$1502 007D  
            ??_Lcd_Set_Cursor 0015                     __pintcode 0008                      WELCOME@a 001B  
               __pmediumconst 7EF6                      ?___fladd 0011                      ?___fldiv 001F  
                    ?___flneg 0011                      ?___flmul 0011                      ?___flsub 002A  
                    ?___fltol 0011                      ?___lodiv 0011                      ?___lomod 0011  
             ___lomod@divisor 0019               _Keypad_Get_Char 2460               ___lomod@counter 0021  
                    ?_isdigit 0011                      ?_isspace 0011                   ??i2___fladd 0009  
                    ?_sprintf 00C0                ___wmul@product 0015                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B          _Lcd_CGRAM_CreateChar 2A48  
                WELCOME@a_621 001D                      Lcd_Cmd@a 0013                      i2u550_40 0FCA  
                    i2u550_41 0FC6                      i2u551_40 0FDC                      i2u551_41 0FD8  
                    i2u560_40 1124                      i2u552_40 0FEC                      i2u560_41 1120  
                    i2u552_41 0FE8                      i2u561_40 1132                      i2u553_40 1028  
                    i2u561_41 112E                      i2u553_41 1024                      i2u570_40 1290  
                    i2u562_40 1142                      i2u554_40 1036                      i2u546_40 0F50  
                    i2u570_41 128C                      i2u562_41 113E                      i2u554_41 1032  
                    i2u546_41 0F4C                      i2u571_40 12A0                      i2u563_40 1174  
                    i2u555_40 10A4                      i2u547_40 0F62                      i2u571_41 129C  
                    i2u563_41 1170                      i2u555_41 10A0                      i2u547_41 0F5E  
                    i2u580_40 1384                      i2u572_40 12BC                      i2u564_40 1182  
                    i2u556_40 10BC                      i2u548_40 0F72                      i2u580_41 1380  
                    i2u572_41 12B8                      i2u564_41 117E                      i2u556_41 10B6  
                    i2u548_41 0F6E                      i2u581_40 1394                      i2u573_40 12CC  
                    i2u565_40 11A0                      i2u557_40 10BE                      i2u549_40 0FB4  
                    i2u581_41 1390                      i2u573_41 12C8                      i2u565_41 119C  
                    i2u549_41 0FB0                      i2u582_40 13B4                      i2u574_40 12DE  
                    i2u566_40 11D8                      i2u558_40 10E6                      i2u582_41 13B0  
                    i2u574_41 12DA                      i2u566_41 11D4                      i2u558_41 10E2  
                    i2u583_40 13C6                      i2u575_40 12F4                      i2u567_40 121E  
                    i2u559_40 1104                      i2u583_41 13C2                      i2u575_41 12F0  
                    i2u567_41 121A                      i2u559_41 1100                      i2u584_40 13E2  
                    i2u576_40 130A                      i2u568_40 1254                      i2u584_41 13DE  
                    i2u576_41 1306                      i2u568_41 1250                      i2u577_40 131E  
                    i2u569_40 1264                      i2u585_40 41A4                      i2u577_41 131A  
                    i2u569_41 1260                      i2u585_41 41A0                      i2u578_40 1338  
                    i2u578_41 1334                      i2u579_40 1372                      i2u579_41 136E  
                 ??_Lcd_Clear 0014                   ??_Lcd_Blink 0014                     _vfpfcnvrt 13F6  
                  _ADCON1bits 000FC1             ___wmul@multiplier 0011              ??_Lcd_Write_Char 0012  
                _isspace$1588 0015                      _Lcd_Init 3E0C                      _Lcd_Port 3FEA  
                  vfpfcnvrt@c 00B7                     copy_data0 40B4      __end_of_Lcd_Write_String 3F0A  
       ?_Lcd_CGRAM_CreateChar 0015                      __Hrparam 0000                     memcpy@tmp 0017  
                  vfprintf@ap 00BE                      __Lrparam 0000                    vfprintf@fp 00BA  
     __end_of_Keypad_Get_Char 2784                    ?_vfpfcnvrt 00A3            ___fpclassifyf@F465 00D0  
                  sprintf@fmt 00C2                      ___xxtofl 3316               _Lcd_CGRAM_Close 4420  
                    __ptext10 43E6                      __ptext11 2784                      __ptext20 3F0A  
                    __ptext12 4046                      __ptext21 426C                      __ptext13 40F2  
                    __ptext30 0A76                      __ptext22 3C98                      __ptext14 13F6  
                    __ptext31 42F0                      __ptext23 444A                      __ptext15 3118  
                    __ptext40 3316                      __ptext32 1C9C                      __ptext24 4144  
                    __ptext16 3BC8                      __ptext41 442E                      __ptext33 371A  
                    __ptext25 3F84                      __ptext17 391C                      __ptext42 3E8C  
                    __ptext34 3D62                      __ptext26 2F02                      __ptext18 0012  
                    __ptext43 4328                      __ptext35 20C6                      __ptext27 381E  
                    __ptext19 42B0                      __ptext44 3AF6                      __ptext36 34CA  
                    __ptext28 3614                      __ptext45 443C                      __ptext37 4226  
                    __ptext29 41E0                      __ptext46 43B2                      __ptext38 4360  
                    __ptext47 3FEA                      __ptext39 438C                      __ptext49 0F36  
                  strcpy@dest 0011                      efgtoa@fp 0070                      efgtoa@ne 0077  
                    efgtoa@pp 007F                      efgtoa@ou 0088                      isa$xinst 000000  
                    int$flags 004F                      _vfprintf 40F2                   _VALUE_IN_ML 00D4  
                  _INTCONbits 000FF2                      memcpy@d1 0011                      memcpy@s1 0013  
                    isdigit@c 0011                   _PROFILE_NUM 0048            Lcd_Write_Char@temp 0012  
                    intlevel2 0000                     sprintf@ap 0150        ??_Lcd_CGRAM_CreateChar 0017  
              _Lcd_CGRAM_Init 4412                      isspace@c 0011                     strcpy@src 0013  
                  _ISR_TIMER0 0008                   efgtoa@nmode 0081              ?_Keypad_Get_Char 0001  
                 ??_vfpfcnvrt 00A9            Lcd_Set_Cursor@temp 0018                 ??_Lcd_NoBlink 0014  
     __end_of_Lcd_CGRAM_Close 442E                      sprintf@f 0152                      sprintf@s 00C0  
                  _TMR0_COUNT 442E            _STRING_VALUE_IN_ML 00E1                 ___fladd@signs 001D  
      __end_of_Lcd_CGRAM_Init 4420                  ___fladd@aexp 001E                  ___fladd@bexp 001F  
              _CURRENT_OPTION 004A              _STRING_VAL_TYPED 00E6  
