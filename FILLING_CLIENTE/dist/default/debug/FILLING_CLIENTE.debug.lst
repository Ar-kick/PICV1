

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 06 19:25:27 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 23/03/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataBANK0
   108   0043F2                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _NAME1
   112   0043F2  45                 	db	69
   113   0043F3  78                 	db	120
   114   0043F4  70                 	db	112
   115   0043F5  72                 	db	114
   116   0043F6  65                 	db	101
   117   0043F7  73                 	db	115
   118   0043F8  20                 	db	32
   119   0043F9  46                 	db	70
   120   0043FA  69                 	db	105
   121   0043FB  6C                 	db	108
   122   0043FC  6C                 	db	108
   123                           
   124                           ;initializer for _NAME2
   125   0043FD  55                 	db	85
   126   0043FE  4E                 	db	78
   127   0043FF  4E                 	db	78
   128   004400  55                 	db	85
   129   004401  53                 	db	83
   130                           
   131                           ;initializer for _CAL
   132   004402  B08D               	dw	45197
   133   004404  405C               	dw	16476
   134                           
   135                           	psect	mediumconst
   136   007C2E                     __pmediumconst:
   137                           	callstack 0
   138   007C2E  00                 	db	0
   139   007C2F                     _SENSOR:
   140                           	callstack 0
   141   007C2F  04                 	db	4
   142   007C30  0E                 	db	14
   143   007C31  04                 	db	4
   144   007C32  00                 	db	0
   145   007C33  04                 	db	4
   146   007C34  0E                 	db	14
   147   007C35  04                 	db	4
   148   007C36  00                 	db	0
   149   007C37                     __end_of_SENSOR:
   150                           	callstack 0
   151   000000                     _TRISDbits	set	3989
   152   000000                     _T0CONbits	set	4053
   153   000000                     _TRISEbits	set	3990
   154   000000                     _TRISCbits	set	3988
   155   000000                     _TRISBbits	set	3987
   156   000000                     _TMR0L	set	4054
   157   000000                     _LATBbits	set	3978
   158   000000                     _LATCbits	set	3979
   159   000000                     _TMR2ON	set	32338
   160   000000                     _PORTAbits	set	3968
   161   000000                     _PORTBbits	set	3969
   162   000000                     _LATB	set	3978
   163   000000                     _TRISAbits	set	3986
   164   000000                     _CCP2CON	set	4026
   165   000000                     _CCPR2L	set	4027
   166   000000                     _CCPR1L	set	4030
   167   000000                     _ADCON1bits	set	4033
   168   000000                     _OSCCON	set	4051
   169   000000                     _INTCONbits	set	4082
   170   000000                     _T2CON	set	4042
   171   000000                     _PR2	set	4043
   172   000000                     _LATE	set	3981
   173   000000                     _LATC	set	3979
   174   000000                     _TMR2	set	4044
   175   000000                     _CCP1CON	set	4029
   176   000000                     _PORTDbits	set	3971
   177   000000                     _LATAbits	set	3977
   178   007C37                     STR_5:
   179   007C37  50                 	db	80	;'P'
   180   007C38  6F                 	db	111	;'o'
   181   007C39  6E                 	db	110	;'n'
   182   007C3A  67                 	db	103	;'g'
   183   007C3B  61                 	db	97	;'a'
   184   007C3C  20                 	db	32
   185   007C3D  75                 	db	117	;'u'
   186   007C3E  6E                 	db	110	;'n'
   187   007C3F  20                 	db	32
   188   007C40  65                 	db	101	;'e'
   189   007C41  6E                 	db	110	;'n'
   190   007C42  76                 	db	118	;'v'
   191   007C43  61                 	db	97	;'a'
   192   007C44  73                 	db	115	;'s'
   193   007C45  65                 	db	101	;'e'
   194   007C46  20                 	db	32
   195   007C47  00                 	db	0
   196   007C48                     STR_23:
   197   007C48  50                 	db	80	;'P'
   198   007C49  65                 	db	101	;'e'
   199   007C4A  72                 	db	114	;'r'
   200   007C4B  66                 	db	102	;'f'
   201   007C4C  2E                 	db	46
   202   007C4D  30                 	db	48	;'0'
   203   007C4E  35                 	db	53	;'5'
   204   007C4F  20                 	db	32
   205   007C50  3D                 	db	61	;'='
   206   007C51  20                 	db	32
   207   007C52  31                 	db	49	;'1'
   208   007C53  30                 	db	48	;'0'
   209   007C54  30                 	db	48	;'0'
   210   007C55  6D                 	db	109	;'m'
   211   007C56  6C                 	db	108	;'l'
   212   007C57  20                 	db	32
   213   007C58  00                 	db	0
   214   007C59                     STR_26:
   215   007C59  20                 	db	32
   216   007C5A  20                 	db	32
   217   007C5B  4E                 	db	78	;'N'
   218   007C5C  6F                 	db	111	;'o'
   219   007C5D  20                 	db	32
   220   007C5E  65                 	db	101	;'e'
   221   007C5F  6E                 	db	110	;'n'
   222   007C60  63                 	db	99	;'c'
   223   007C61  6F                 	db	111	;'o'
   224   007C62  6E                 	db	110	;'n'
   225   007C63  74                 	db	116	;'t'
   226   007C64  72                 	db	114	;'r'
   227   007C65  61                 	db	97	;'a'
   228   007C66  64                 	db	100	;'d'
   229   007C67  6F                 	db	111	;'o'
   230   007C68  20                 	db	32
   231   007C69  00                 	db	0
   232   007C6A                     STR_9:
   233   007C6A  4D                 	db	77	;'M'
   234   007C6B  61                 	db	97	;'a'
   235   007C6C  6E                 	db	110	;'n'
   236   007C6D  74                 	db	116	;'t'
   237   007C6E  65                 	db	101	;'e'
   238   007C6F  6E                 	db	110	;'n'
   239   007C70  67                 	db	103	;'g'
   240   007C71  61                 	db	97	;'a'
   241   007C72  20                 	db	32
   242   007C73  69                 	db	105	;'i'
   243   007C74  6E                 	db	110	;'n'
   244   007C75  69                 	db	105	;'i'
   245   007C76  63                 	db	99	;'c'
   246   007C77  69                 	db	105	;'i'
   247   007C78  6F                 	db	111	;'o'
   248   007C79  20                 	db	32
   249   007C7A  00                 	db	0
   250   007C7B                     STR_2:
   251   007C7B  52                 	db	82	;'R'
   252   007C7C  65                 	db	101	;'e'
   253   007C7D  74                 	db	116	;'t'
   254   007C7E  69                 	db	105	;'i'
   255   007C7F  72                 	db	114	;'r'
   256   007C80  65                 	db	101	;'e'
   257   007C81  20                 	db	32
   258   007C82  65                 	db	101	;'e'
   259   007C83  6C                 	db	108	;'l'
   260   007C84  20                 	db	32
   261   007C85  65                 	db	101	;'e'
   262   007C86  6E                 	db	110	;'n'
   263   007C87  76                 	db	118	;'v'
   264   007C88  61                 	db	97	;'a'
   265   007C89  73                 	db	115	;'s'
   266   007C8A  65                 	db	101	;'e'
   267   007C8B  00                 	db	0
   268   007C8C                     STR_28:
   269   007C8C  4C                 	db	76	;'L'
   270   007C8D  6C                 	db	108	;'l'
   271   007C8E  65                 	db	101	;'e'
   272   007C8F  6E                 	db	110	;'n'
   273   007C90  61                 	db	97	;'a'
   274   007C91  6E                 	db	110	;'n'
   275   007C92  64                 	db	100	;'d'
   276   007C93  6F                 	db	111	;'o'
   277   007C94  20                 	db	32
   278   007C95  20                 	db	32
   279   007C96  20                 	db	32
   280   007C97  20                 	db	32
   281   007C98  20                 	db	32
   282   007C99  20                 	db	32
   283   007C9A  6D                 	db	109	;'m'
   284   007C9B  6C                 	db	108	;'l'
   285   007C9C  00                 	db	0
   286   007C9D                     STR_14:
   287   007C9D  50                 	db	80	;'P'
   288   007C9E  65                 	db	101	;'e'
   289   007C9F  72                 	db	114	;'r'
   290   007CA0  66                 	db	102	;'f'
   291   007CA1  2E                 	db	46
   292   007CA2  30                 	db	48	;'0'
   293   007CA3  32                 	db	50	;'2'
   294   007CA4  20                 	db	32
   295   007CA5  3D                 	db	61	;'='
   296   007CA6  20                 	db	32
   297   007CA7  31                 	db	49	;'1'
   298   007CA8  30                 	db	48	;'0'
   299   007CA9  30                 	db	48	;'0'
   300   007CAA  30                 	db	48	;'0'
   301   007CAB  6D                 	db	109	;'m'
   302   007CAC  6C                 	db	108	;'l'
   303   007CAD  00                 	db	0
   304   007CAE                     STR_11:
   305   007CAE  50                 	db	80	;'P'
   306   007CAF  65                 	db	101	;'e'
   307   007CB0  72                 	db	114	;'r'
   308   007CB1  66                 	db	102	;'f'
   309   007CB2  2E                 	db	46
   310   007CB3  30                 	db	48	;'0'
   311   007CB4  31                 	db	49	;'1'
   312   007CB5  20                 	db	32
   313   007CB6  3D                 	db	61	;'='
   314   007CB7  20                 	db	32
   315   007CB8  31                 	db	49	;'1'
   316   007CB9  35                 	db	53	;'5'
   317   007CBA  30                 	db	48	;'0'
   318   007CBB  30                 	db	48	;'0'
   319   007CBC  6D                 	db	109	;'m'
   320   007CBD  6C                 	db	108	;'l'
   321   007CBE  00                 	db	0
   322   007CBF                     STR_7:
   323   007CBF  4C                 	db	76	;'L'
   324   007CC0  69                 	db	105	;'i'
   325   007CC1  6D                 	db	109	;'m'
   326   007CC2  70                 	db	112	;'p'
   327   007CC3  69                 	db	105	;'i'
   328   007CC4  61                 	db	97	;'a'
   329   007CC5  72                 	db	114	;'r'
   330   007CC6  3A                 	db	58	;':'
   331   007CC7  20                 	db	32
   332   007CC8  20                 	db	32
   333   007CC9  49                 	db	73	;'I'
   334   007CCA  6E                 	db	110	;'n'
   335   007CCB  69                 	db	105	;'i'
   336   007CCC  63                 	db	99	;'c'
   337   007CCD  69                 	db	105	;'i'
   338   007CCE  6F                 	db	111	;'o'
   339   007CCF  00                 	db	0
   340   007CD0                     STR_17:
   341   007CD0  50                 	db	80	;'P'
   342   007CD1  65                 	db	101	;'e'
   343   007CD2  72                 	db	114	;'r'
   344   007CD3  66                 	db	102	;'f'
   345   007CD4  2E                 	db	46
   346   007CD5  30                 	db	48	;'0'
   347   007CD6  33                 	db	51	;'3'
   348   007CD7  20                 	db	32
   349   007CD8  3D                 	db	61	;'='
   350   007CD9  20                 	db	32
   351   007CDA  35                 	db	53	;'5'
   352   007CDB  30                 	db	48	;'0'
   353   007CDC  30                 	db	48	;'0'
   354   007CDD  6D                 	db	109	;'m'
   355   007CDE  6C                 	db	108	;'l'
   356   007CDF  00                 	db	0
   357   007CE0                     STR_20:
   358   007CE0  50                 	db	80	;'P'
   359   007CE1  65                 	db	101	;'e'
   360   007CE2  72                 	db	114	;'r'
   361   007CE3  66                 	db	102	;'f'
   362   007CE4  2E                 	db	46
   363   007CE5  30                 	db	48	;'0'
   364   007CE6  34                 	db	52	;'4'
   365   007CE7  20                 	db	32
   366   007CE8  3D                 	db	61	;'='
   367   007CE9  20                 	db	32
   368   007CEA  32                 	db	50	;'2'
   369   007CEB  35                 	db	53	;'5'
   370   007CEC  30                 	db	48	;'0'
   371   007CED  6D                 	db	109	;'m'
   372   007CEE  6C                 	db	108	;'l'
   373   007CEF  00                 	db	0
   374   007CF0                     STR_10:
   375   007CF0  4C                 	db	76	;'L'
   376   007CF1  69                 	db	105	;'i'
   377   007CF2  6D                 	db	109	;'m'
   378   007CF3  70                 	db	112	;'p'
   379   007CF4  69                 	db	105	;'i'
   380   007CF5  61                 	db	97	;'a'
   381   007CF6  6E                 	db	110	;'n'
   382   007CF7  64                 	db	100	;'d'
   383   007CF8  6F                 	db	111	;'o'
   384   007CF9  2E                 	db	46
   385   007CFA  2E                 	db	46
   386   007CFB  00                 	db	0
   387   007CFC                     STR_8:
   388   007CFC  50                 	db	80	;'P'
   389   007CFD  65                 	db	101	;'e'
   390   007CFE  72                 	db	114	;'r'
   391   007CFF  66                 	db	102	;'f'
   392   007D00  69                 	db	105	;'i'
   393   007D01  6C                 	db	108	;'l'
   394   007D02  3A                 	db	58	;':'
   395   007D03  20                 	db	32
   396   007D04  23                 	db	35
   397   007D05  30                 	db	48	;'0'
   398   007D06  30                 	db	48	;'0'
   399   007D07  00                 	db	0
   400   007D08                     STR_31:
   401   007D08  20                 	db	32
   402   007D09  20                 	db	32
   403   007D0A  20                 	db	32
   404   007D0B  20                 	db	32
   405   007D0C  20                 	db	32
   406   007D0D  6D                 	db	109	;'m'
   407   007D0E  6C                 	db	108	;'l'
   408   007D0F  20                 	db	32
   409   007D10  00                 	db	0
   410   007D11                     STR_12:
   411   007D11  41                 	db	65	;'A'
   412   007D12  74                 	db	116	;'t'
   413   007D13  72                 	db	114	;'r'
   414   007D14  61                 	db	97	;'a'
   415   007D15  73                 	db	115	;'s'
   416   007D16  20                 	db	32
   417   007D17  2A                 	db	42
   418   007D18  00                 	db	0
   419   007D19                     STR_13:
   420   007D19  49                 	db	73	;'I'
   421   007D1A  6E                 	db	110	;'n'
   422   007D1B  69                 	db	105	;'i'
   423   007D1C  63                 	db	99	;'c'
   424   007D1D  69                 	db	105	;'i'
   425   007D1E  61                 	db	97	;'a'
   426   007D1F  72                 	db	114	;'r'
   427   007D20  00                 	db	0
   428   007D21                     STR_29:
   429   007D21  53                 	db	83	;'S'
   430   007D22  61                 	db	97	;'a'
   431   007D23  6C                 	db	108	;'l'
   432   007D24  69                 	db	105	;'i'
   433   007D25  72                 	db	114	;'r'
   434   007D26  20                 	db	32
   435   007D27  00                 	db	0
   436   007D28                     STR_32:
   437   007D28  25                 	db	37
   438   007D29  30                 	db	48	;'0'
   439   007D2A  2E                 	db	46
   440   007D2B  31                 	db	49	;'1'
   441   007D2C  66                 	db	102	;'f'
   442   007D2D  00                 	db	0
   443   007D2E                     STR_3:
   444   007D2E  50                 	db	80	;'P'
   445   007D2F  61                 	db	97	;'a'
   446   007D30  72                 	db	114	;'r'
   447   007D31  61                 	db	97	;'a'
   448   007D32  72                 	db	114	;'r'
   449   007D33  00                 	db	0
   450   007D34                     STR_33:
   451   007D34  69                 	db	105	;'i'
   452   007D35  6E                 	db	110	;'n'
   453   007D36  66                 	db	102	;'f'
   454   007D37  00                 	db	0
   455   007D38                     STR_36:
   456   007D38  6E                 	db	110	;'n'
   457   007D39  61                 	db	97	;'a'
   458   007D3A  6E                 	db	110	;'n'
   459   007D3B  00                 	db	0
   460   007D3C                     STR_30:
   461   007D3C  25                 	db	37
   462   007D3D  75                 	db	117	;'u'
   463   007D3E  00                 	db	0
   464   007D3F  00                 	db	0	; dummy byte at the end
   465   000000                     
   466                           ; #config settings
   467                           
   468                           	psect	cinit
   469   0040C0                     __pcinit:
   470                           	callstack 0
   471   0040C0                     start_initialization:
   472                           	callstack 0
   473   0040C0                     __initialization:
   474                           	callstack 0
   475                           
   476                           ; Initialize objects allocated to BANK0 (20 bytes)
   477                           ; load TBLPTR registers with __pidataBANK0
   478   0040C0  0EF2               	movlw	low __pidataBANK0
   479   0040C2  6EF6               	movwf	tblptrl,c
   480   0040C4  0E43               	movlw	high __pidataBANK0
   481   0040C6  6EF7               	movwf	tblptrh,c
   482   0040C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   483   0040CA  6EF8               	movwf	tblptru,c
   484   0040CC  EE00  F0EB         	lfsr	0,__pdataBANK0
   485   0040D0  EE10 F014          	lfsr	1,20
   486   0040D4                     copy_data0:
   487   0040D4  0009               	tblrd		*+
   488   0040D6  CFF5 FFEE          	movff	tablat,postinc0
   489   0040DA  50E5               	movf	postdec1,w,c
   490   0040DC  50E1               	movf	fsr1l,w,c
   491   0040DE  E1FA               	bnz	copy_data0
   492                           
   493                           ; Clear objects allocated to BANK1 (80 bytes)
   494   0040E0  EE01  F000         	lfsr	0,__pbssBANK1
   495   0040E4  0E50               	movlw	80
   496   0040E6                     clear_0:
   497   0040E6  6AEE               	clrf	postinc0,c
   498   0040E8  06E8               	decf	wreg,f,c
   499   0040EA  E1FD               	bnz	clear_0
   500                           
   501                           ; Clear objects allocated to BANK0 (33 bytes)
   502   0040EC  EE00  F0CA         	lfsr	0,__pbssBANK0
   503   0040F0  0E21               	movlw	33
   504   0040F2                     clear_1:
   505   0040F2  6AEE               	clrf	postinc0,c
   506   0040F4  06E8               	decf	wreg,f,c
   507   0040F6  E1FD               	bnz	clear_1
   508                           
   509                           ; Clear objects allocated to COMRAM (16 bytes)
   510   0040F8  EE00  F03E         	lfsr	0,__pbssCOMRAM
   511   0040FC  0E10               	movlw	16
   512   0040FE                     clear_2:
   513   0040FE  6AEE               	clrf	postinc0,c
   514   004100  06E8               	decf	wreg,f,c
   515   004102  E1FD               	bnz	clear_2
   516   004104                     end_of_initialization:
   517                           	callstack 0
   518   004104                     __end_of__initialization:
   519                           	callstack 0
   520   004104  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   521   004106  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   522   004108  0E00               	movlw	low (__Lmediumconst shr (0+16))
   523   00410A  6EF8               	movwf	tblptru,c
   524   00410C  0100               	movlb	0
   525   00410E  EF24  F015         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528   00003E                     __pbssCOMRAM:
   529                           	callstack 0
   530   00003E                     _PULSE:
   531                           	callstack 0
   532   00003E                     	ds	4
   533   000042                     _num1:
   534                           	callstack 0
   535   000042                     	ds	2
   536   000044                     _num2:
   537                           	callstack 0
   538   000044                     	ds	2
   539   000046                     _PROFILE_NUM:
   540                           	callstack 0
   541   000046                     	ds	2
   542   000048                     _CURRENT_OPTION:
   543                           	callstack 0
   544   000048                     	ds	2
   545   00004A                     _SELECTED2:
   546                           	callstack 0
   547   00004A                     	ds	1
   548   00004B                     __CHAR1:
   549                           	callstack 0
   550   00004B                     	ds	1
   551   00004C                     __CHAR2:
   552                           	callstack 0
   553   00004C                     	ds	1
   554   00004D                     _SHIFT_TEXT:
   555                           	callstack 0
   556   00004D                     	ds	1
   557                           
   558                           	psect	bssBANK0
   559   0000CA                     __pbssBANK0:
   560                           	callstack 0
   561   0000CA                     floorf@F526:
   562                           	callstack 0
   563   0000CA                     	ds	4
   564   0000CE                     ___fpclassifyf@F465:
   565                           	callstack 0
   566   0000CE                     	ds	4
   567   0000D2                     _VALUE_IN_ML:
   568                           	callstack 0
   569   0000D2                     	ds	4
   570   0000D6                     _PULSES_TO_REACH:
   571                           	callstack 0
   572   0000D6                     	ds	4
   573   0000DA                     _width:
   574                           	callstack 0
   575   0000DA                     	ds	2
   576   0000DC                     _prec:
   577                           	callstack 0
   578   0000DC                     	ds	2
   579   0000DE                     _flow_pulse:
   580                           	callstack 0
   581   0000DE                     	ds	2
   582   0000E0                     _flags:
   583                           	callstack 0
   584   0000E0                     	ds	1
   585   0000E1                     _STRING_VALUE_IN_ML:
   586                           	callstack 0
   587   0000E1                     	ds	5
   588   0000E6                     _STRING_VAL_TYPED:
   589                           	callstack 0
   590   0000E6                     	ds	5
   591                           
   592                           	psect	dataBANK0
   593   0000EB                     __pdataBANK0:
   594                           	callstack 0
   595   0000EB                     _NAME1:
   596                           	callstack 0
   597   0000EB                     	ds	11
   598   0000F6                     _NAME2:
   599                           	callstack 0
   600   0000F6                     	ds	5
   601   0000FB                     _CAL:
   602                           	callstack 0
   603   0000FB                     	ds	4
   604                           
   605                           	psect	bssBANK1
   606   000100                     __pbssBANK1:
   607                           	callstack 0
   608   000100                     _dbuf:
   609                           	callstack 0
   610   000100                     	ds	80
   611                           
   612                           	psect	cstackBANK1
   613   000150                     __pcstackBANK1:
   614                           	callstack 0
   615   000150                     sprintf@ap:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x0
   619   000150                     	ds	2
   620   000152                     sprintf@f:
   621                           	callstack 0
   622                           
   623                           ; 11 bytes @ 0x2
   624   000152                     	ds	11
   625   00015D                     ??_FILL:
   626                           
   627                           ; 1 bytes @ 0xD
   628   00015D                     	ds	2
   629   00015F                     ??_main:
   630                           
   631                           ; 1 bytes @ 0xF
   632   00015F                     	ds	2
   633                           
   634                           	psect	cstackBANK0
   635   000060                     __pcstackBANK0:
   636                           	callstack 0
   637   000060                     ??_floorf:
   638   000060                     utoa@p:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x0
   642   000060                     	ds	2
   643   000062                     utoa@w:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x2
   647   000062                     	ds	2
   648   000064                     utoa@n:
   649                           	callstack 0
   650                           
   651                           ; 8 bytes @ 0x4
   652   000064                     	ds	2
   653   000066                     floorf@m:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x6
   657   000066                     	ds	4
   658   00006A                     floorf@e:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0xA
   662   00006A                     	ds	2
   663   00006C                     utoa@i:
   664                           	callstack 0
   665   00006C                     floorf@u:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0xC
   669   00006C                     	ds	4
   670   000070                     efgtoa@fp:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x10
   674   000070                     	ds	2
   675   000072                     efgtoa@f:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x12
   679   000072                     	ds	4
   680   000076                     efgtoa@c:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x16
   684   000076                     	ds	1
   685   000077                     efgtoa@ne:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x17
   689   000077                     	ds	2
   690   000079                     efgtoa@p:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694   000079                     	ds	2
   695   00007B                     efgtoa@t:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x1B
   699   00007B                     	ds	2
   700   00007D                     _efgtoa$1512:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x1D
   704   00007D                     	ds	2
   705   00007F                     efgtoa@pp:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x1F
   709   00007F                     	ds	1
   710   000080                     efgtoa@mode:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x20
   714   000080                     	ds	1
   715   000081                     efgtoa@nmode:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x21
   719   000081                     	ds	1
   720   000082                     efgtoa@d:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x22
   724   000082                     	ds	2
   725   000084                     efgtoa@m:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x24
   729   000084                     	ds	2
   730   000086                     efgtoa@e:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x26
   734   000086                     	ds	2
   735   000088                     efgtoa@ou:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x28
   739   000088                     	ds	4
   740   00008C                     efgtoa@w:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x2C
   744   00008C                     	ds	2
   745   00008E                     efgtoa@h:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x2E
   749   00008E                     	ds	4
   750   000092                     efgtoa@l:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x32
   754   000092                     	ds	4
   755   000096                     efgtoa@i:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x36
   759   000096                     	ds	2
   760   000098                     efgtoa@sign:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x38
   764   000098                     	ds	1
   765   000099                     efgtoa@g:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x39
   769   000099                     	ds	4
   770   00009D                     efgtoa@n:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x3D
   774   00009D                     	ds	2
   775   00009F                     efgtoa@u:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x3F
   779   00009F                     	ds	4
   780   0000A3                     vfpfcnvrt@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x43
   784   0000A3                     	ds	2
   785   0000A5                     vfpfcnvrt@fmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x45
   789   0000A5                     	ds	2
   790   0000A7                     vfpfcnvrt@ap:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x47
   794   0000A7                     	ds	2
   795   0000A9                     ??_vfpfcnvrt:
   796                           
   797                           ; 1 bytes @ 0x49
   798   0000A9                     	ds	4
   799   0000AD                     vfpfcnvrt@done:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x4D
   803   0000AD                     	ds	2
   804   0000AF                     vfpfcnvrt@convarg:
   805                           	callstack 0
   806                           
   807                           ; 8 bytes @ 0x4F
   808   0000AF                     	ds	8
   809   0000B7                     vfpfcnvrt@c:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x57
   813   0000B7                     	ds	1
   814   0000B8                     vfpfcnvrt@cp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x58
   818   0000B8                     	ds	2
   819   0000BA                     ?_vfprintf:
   820                           	callstack 0
   821   0000BA                     vfprintf@fp:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x5A
   825   0000BA                     	ds	2
   826   0000BC                     vfprintf@fmt:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x5C
   830   0000BC                     	ds	2
   831   0000BE                     vfprintf@ap:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x5E
   835   0000BE                     	ds	2
   836   0000C0                     vfprintf@cfmt:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x60
   840   0000C0                     	ds	2
   841   0000C2                     ?_sprintf:
   842                           	callstack 0
   843   0000C2                     sprintf@s:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x62
   847   0000C2                     	ds	2
   848   0000C4                     sprintf@fmt:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x64
   852   0000C4                     	ds	6
   853                           
   854                           	psect	cstackCOMRAM
   855   000001                     __pcstackCOMRAM:
   856                           	callstack 0
   857   000001                     ?i2___fladd:
   858                           	callstack 0
   859   000001                     i2___fladd@b:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x0
   863   000001                     	ds	4
   864   000005                     i2___fladd@a:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x4
   868   000005                     	ds	4
   869   000009                     ??i2___fladd:
   870                           
   871                           ; 1 bytes @ 0x8
   872   000009                     	ds	4
   873   00000D                     i2___fladd@signs:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0xC
   877   00000D                     	ds	1
   878   00000E                     i2___fladd@aexp:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0xD
   882   00000E                     	ds	1
   883   00000F                     i2___fladd@bexp:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0xE
   887   00000F                     	ds	1
   888   000010                     i2___fladd@grs:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0xF
   892   000010                     	ds	1
   893   000011                     ??_Keypad_Get_Char:
   894   000011                     ?___fpclassifyf:
   895                           	callstack 0
   896   000011                     ?_isdigit:
   897                           	callstack 0
   898   000011                     ?_isspace:
   899                           	callstack 0
   900   000011                     ?___wmul:
   901                           	callstack 0
   902   000011                     ?___fladd:
   903                           	callstack 0
   904   000011                     ?___flmul:
   905                           	callstack 0
   906   000011                     ?_labs:
   907                           	callstack 0
   908   000011                     ?___flneg:
   909                           	callstack 0
   910   000011                     ?___fltol:
   911                           	callstack 0
   912   000011                     ?___xxtofl:
   913                           	callstack 0
   914   000011                     ?___lodiv:
   915                           	callstack 0
   916   000011                     ?___lomod:
   917                           	callstack 0
   918   000011                     Lcd_Port@a:
   919                           	callstack 0
   920   000011                     ___wmul@multiplier:
   921                           	callstack 0
   922   000011                     isdigit@c:
   923                           	callstack 0
   924   000011                     isspace@c:
   925                           	callstack 0
   926   000011                     memcpy@d1:
   927                           	callstack 0
   928   000011                     fputc@c:
   929                           	callstack 0
   930   000011                     strcpy@dest:
   931                           	callstack 0
   932   000011                     ___fleq@ff1:
   933                           	callstack 0
   934   000011                     ___flneg@f1:
   935                           	callstack 0
   936   000011                     ___fltol@f1:
   937                           	callstack 0
   938   000011                     ___fladd@b:
   939                           	callstack 0
   940   000011                     ___flmul@b:
   941                           	callstack 0
   942   000011                     ___xxtofl@val:
   943                           	callstack 0
   944   000011                     ___fpclassifyf@x:
   945                           	callstack 0
   946   000011                     labs@a:
   947                           	callstack 0
   948   000011                     ___lodiv@dividend:
   949                           	callstack 0
   950   000011                     ___lomod@dividend:
   951                           	callstack 0
   952                           
   953                           ; 8 bytes @ 0x10
   954   000011                     	ds	1
   955   000012                     ??_Lcd_Cmd:
   956   000012                     Lcd_Write_Char@temp:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x11
   960   000012                     	ds	1
   961   000013                     ??_isdigit:
   962   000013                     ??_isspace:
   963   000013                     Lcd_Cmd@a:
   964                           	callstack 0
   965   000013                     Lcd_Write_Char@y:
   966                           	callstack 0
   967   000013                     ___wmul@multiplicand:
   968                           	callstack 0
   969   000013                     memcpy@s1:
   970                           	callstack 0
   971   000013                     fputc@fp:
   972                           	callstack 0
   973   000013                     strcpy@src:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x12
   977   000013                     	ds	1
   978   000014                     ??_Lcd_Init:
   979   000014                     Lcd_Set_Cursor@b:
   980                           	callstack 0
   981   000014                     Lcd_Write_Char@a:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x13
   985   000014                     	ds	1
   986   000015                     ??_fputc:
   987   000015                     ??___fpclassifyf:
   988   000015                     ??_labs:
   989   000015                     ??___fltol:
   990   000015                     ??___xxtofl:
   991   000015                     Lcd_Set_Cursor@a:
   992                           	callstack 0
   993   000015                     _isspace$1598:
   994                           	callstack 0
   995   000015                     Lcd_Write_String@a:
   996                           	callstack 0
   997   000015                     Lcd_CGRAM_CreateChar@chardata:
   998                           	callstack 0
   999   000015                     ___wmul@product:
  1000                           	callstack 0
  1001   000015                     memcpy@n:
  1002                           	callstack 0
  1003   000015                     strcpy@s:
  1004                           	callstack 0
  1005   000015                     ___fleq@ff2:
  1006                           	callstack 0
  1007   000015                     ___fladd@a:
  1008                           	callstack 0
  1009   000015                     ___flmul@a:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x14
  1013   000015                     	ds	1
  1014   000016                     Lcd_Set_Cursor@z:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x15
  1018   000016                     	ds	1
  1019   000017                     ??_Lcd_CGRAM_CreateChar:
  1020   000017                     ??_Lcd_Write_String:
  1021   000017                     ?_atoi:
  1022                           	callstack 0
  1023   000017                     Lcd_Set_Cursor@y:
  1024                           	callstack 0
  1025   000017                     memcpy@tmp:
  1026                           	callstack 0
  1027   000017                     atoi@s:
  1028                           	callstack 0
  1029   000017                     strcpy@d:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x16
  1033   000017                     	ds	1
  1034   000018                     Lcd_Set_Cursor@temp:
  1035                           	callstack 0
  1036   000018                     memcpy@d:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x17
  1040   000018                     	ds	1
  1041   000019                     ??_WELCOME:
  1042   000019                     ??___fladd:
  1043   000019                     ??___flmul:
  1044   000019                     ??_atoi:
  1045   000019                     ??___fleq:
  1046   000019                     ___fltol@sign1:
  1047                           	callstack 0
  1048   000019                     ___xxtofl@sign:
  1049                           	callstack 0
  1050   000019                     Lcd_Write_String@i:
  1051                           	callstack 0
  1052   000019                     ___fpclassifyf@e:
  1053                           	callstack 0
  1054   000019                     ___lodiv@divisor:
  1055                           	callstack 0
  1056   000019                     ___lomod@divisor:
  1057                           	callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x18
  1060   000019                     	ds	1
  1061   00001A                     ___fltol@exp1:
  1062                           	callstack 0
  1063   00001A                     ___xxtofl@exp:
  1064                           	callstack 0
  1065   00001A                     memcpy@s:
  1066                           	callstack 0
  1067   00001A                     fputs@s:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x19
  1071   00001A                     	ds	1
  1072   00001B                     ??_USER_VALUE:
  1073   00001B                     Lcd_CGRAM_CreateChar@add:
  1074                           	callstack 0
  1075   00001B                     WELCOME@a:
  1076                           	callstack 0
  1077   00001B                     ___xxtofl@arg:
  1078                           	callstack 0
  1079   00001B                     ___fpclassifyf@u:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x1A
  1083   00001B                     	ds	1
  1084   00001C                     Lcd_CGRAM_CreateChar@i:
  1085                           	callstack 0
  1086   00001C                     atoi@neg:
  1087                           	callstack 0
  1088   00001C                     fputs@fp:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x1B
  1092   00001C                     	ds	1
  1093   00001D                     Lcd_CGRAM_CreateChar@i_821:
  1094                           	callstack 0
  1095   00001D                     ___fladd@signs:
  1096                           	callstack 0
  1097   00001D                     ___flmul@sign:
  1098                           	callstack 0
  1099   00001D                     WELCOME@a_631:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x1C
  1103   00001D                     	ds	1
  1104   00001E                     Lcd_CGRAM_CreateChar@i_822:
  1105                           	callstack 0
  1106   00001E                     ___fladd@aexp:
  1107                           	callstack 0
  1108   00001E                     ___flmul@aexp:
  1109                           	callstack 0
  1110   00001E                     fputs@c:
  1111                           	callstack 0
  1112   00001E                     atoi@n:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x1D
  1116   00001E                     	ds	1
  1117   00001F                     ?___fldiv:
  1118                           	callstack 0
  1119   00001F                     Lcd_CGRAM_CreateChar@i_823:
  1120                           	callstack 0
  1121   00001F                     ___fladd@bexp:
  1122                           	callstack 0
  1123   00001F                     fputs@i:
  1124                           	callstack 0
  1125   00001F                     ___fldiv@b:
  1126                           	callstack 0
  1127   00001F                     ___flmul@grs:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x1E
  1131   00001F                     	ds	1
  1132   000020                     Lcd_CGRAM_CreateChar@i_824:
  1133                           	callstack 0
  1134   000020                     ___fladd@grs:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x1F
  1138   000020                     	ds	1
  1139   000021                     Lcd_CGRAM_CreateChar@i_825:
  1140                           	callstack 0
  1141   000021                     ___lomod@counter:
  1142                           	callstack 0
  1143   000021                     pad@fp:
  1144                           	callstack 0
  1145   000021                     ___lodiv@quotient:
  1146                           	callstack 0
  1147                           
  1148                           ; 8 bytes @ 0x20
  1149   000021                     	ds	1
  1150   000022                     Lcd_CGRAM_CreateChar@i_826:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x21
  1154   000022                     	ds	1
  1155   000023                     Lcd_CGRAM_CreateChar@i_827:
  1156                           	callstack 0
  1157   000023                     ___flmul@bexp:
  1158                           	callstack 0
  1159   000023                     pad@buf:
  1160                           	callstack 0
  1161   000023                     ___fldiv@a:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x22
  1165   000023                     	ds	1
  1166   000024                     ___flmul@prod:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x23
  1170   000024                     	ds	1
  1171   000025                     pad@p:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x24
  1175   000025                     	ds	2
  1176   000027                     ??___fldiv:
  1177   000027                     ??_pad:
  1178                           
  1179                           ; 1 bytes @ 0x26
  1180   000027                     	ds	1
  1181   000028                     ___flmul@temp:
  1182                           	callstack 0
  1183   000028                     pad@i:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x27
  1187   000028                     	ds	1
  1188   000029                     ___lodiv@counter:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x28
  1192   000029                     	ds	1
  1193   00002A                     ?___flsub:
  1194                           	callstack 0
  1195   00002A                     pad@w:
  1196                           	callstack 0
  1197   00002A                     ___flge@ff1:
  1198                           	callstack 0
  1199   00002A                     ___flsub@b:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x29
  1203   00002A                     	ds	1
  1204   00002B                     ___fldiv@rem:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x2A
  1208   00002B                     	ds	1
  1209   00002C                     utoa@fp:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x2B
  1213   00002C                     	ds	2
  1214   00002E                     ___flge@ff2:
  1215                           	callstack 0
  1216   00002E                     ___flsub@a:
  1217                           	callstack 0
  1218   00002E                     utoa@d:
  1219                           	callstack 0
  1220                           
  1221                           ; 8 bytes @ 0x2D
  1222   00002E                     	ds	1
  1223   00002F                     ___fldiv@sign:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x2E
  1227   00002F                     	ds	1
  1228   000030                     ___fldiv@new_exp:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x2F
  1232   000030                     	ds	2
  1233   000032                     ??___flge:
  1234   000032                     ___fldiv@grs:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x31
  1238   000032                     	ds	4
  1239   000036                     ??_utoa:
  1240   000036                     ___fldiv@bexp:
  1241                           	callstack 0
  1242                           
  1243                           ; 1 bytes @ 0x35
  1244   000036                     	ds	1
  1245   000037                     ___fldiv@aexp:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0x36
  1249   000037                     	ds	1
  1250   000038                     ?_floorf:
  1251                           	callstack 0
  1252   000038                     floorf@x:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x37
  1256   000038                     	ds	4
  1257   00003C                     ??_efgtoa:
  1258                           
  1259                           ; 1 bytes @ 0x3B
  1260   00003C                     	ds	2
  1261   00003E                     
  1262                           ; 1 bytes @ 0x3D
  1263 ;;
  1264 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1265 ;;
  1266 ;; *************** function _main *****************
  1267 ;; Defined at:
  1268 ;;		line 72 in file "Main_program.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1285 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1286 ;;Total ram usage:        2 bytes
  1287 ;; Hardware stack levels required when called: 11
  1288 ;; This function calls:
  1289 ;;		_FILL
  1290 ;;		_Keypad_Get_Char
  1291 ;;		_Keypad_Init
  1292 ;;		_Lcd_CGRAM_Close
  1293 ;;		_Lcd_CGRAM_CreateChar
  1294 ;;		_Lcd_CGRAM_Init
  1295 ;;		_Lcd_Clear
  1296 ;;		_Lcd_Init
  1297 ;;		_Lcd_Set_Cursor
  1298 ;;		_Lcd_Write_Char
  1299 ;;		_Lcd_Write_String
  1300 ;;		_USER_VALUE
  1301 ;;		_WELCOME
  1302 ;; This function is called by:
  1303 ;;		Startup code after reset
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text0
  1308   002A48                     __ptext0:
  1309                           	callstack 0
  1310   002A48                     _main:
  1311                           	callstack 20
  1312   002A48                     
  1313                           ;Main_program.c: 75:     OSCCON = 0X72;
  1314   002A48  0E72               	movlw	114
  1315   002A4A  6ED3               	movwf	211,c	;volatile
  1316   002A4C                     
  1317                           ;Main_program.c: 80:     INTCONbits.GIE = 1;
  1318   002A4C  8EF2               	bsf	242,7,c	;volatile
  1319   002A4E                     
  1320                           ;Main_program.c: 81:     INTCONbits.T0IF = 0;
  1321   002A4E  94F2               	bcf	242,2,c	;volatile
  1322   002A50                     
  1323                           ;Main_program.c: 82:     INTCONbits.TMR0IE = 1;
  1324   002A50  8AF2               	bsf	242,5,c	;volatile
  1325   002A52                     
  1326                           ;Main_program.c: 83:     TRISAbits.TRISA4 = 1;
  1327   002A52  8892               	bsf	146,4,c	;volatile
  1328                           
  1329                           ;Main_program.c: 84:     ADCON1bits.PCFG = 0X0F;
  1330   002A54  0E0F               	movlw	15
  1331   002A56  12C1               	iorwf	193,f,c	;volatile
  1332   002A58                     
  1333                           ;Main_program.c: 86:     TRISAbits.TRISA5 = 1;
  1334   002A58  8A92               	bsf	146,5,c	;volatile
  1335   002A5A                     
  1336                           ;Main_program.c: 87:     TRISBbits.TRISB0 = 1;
  1337   002A5A  8093               	bsf	147,0,c	;volatile
  1338   002A5C                     
  1339                           ;Main_program.c: 88:     TRISBbits.TRISB3 = 0;
  1340   002A5C  9693               	bcf	147,3,c	;volatile
  1341   002A5E                     
  1342                           ;Main_program.c: 89:     TRISCbits.TRISC2 = 0;
  1343   002A5E  9494               	bcf	148,2,c	;volatile
  1344   002A60                     
  1345                           ;Main_program.c: 90:     TRISEbits.TRISE2 = 0;
  1346   002A60  9496               	bcf	150,2,c	;volatile
  1347   002A62                     
  1348                           ;Main_program.c: 91:     TRISCbits.TRISC0 = 0;
  1349   002A62  9094               	bcf	148,0,c	;volatile
  1350                           
  1351                           ;Main_program.c: 92:     LATB = 0;
  1352   002A64  0E00               	movlw	0
  1353   002A66  6E8A               	movwf	138,c	;volatile
  1354                           
  1355                           ;Main_program.c: 93:     LATC = 0;
  1356   002A68  0E00               	movlw	0
  1357   002A6A  6E8B               	movwf	139,c	;volatile
  1358                           
  1359                           ;Main_program.c: 94:     LATE = 0;
  1360   002A6C  0E00               	movlw	0
  1361   002A6E  6E8D               	movwf	141,c	;volatile
  1362   002A70                     
  1363                           ;Main_program.c: 96:     Keypad_Init();
  1364   002A70  EC03  F022         	call	_Keypad_Init	;wreg free
  1365                           
  1366                           ;Main_program.c: 97:     Lcd_Init();
  1367   002A74  EC16  F01F         	call	_Lcd_Init	;wreg free
  1368                           
  1369                           ;Main_program.c: 98:     Lcd_CGRAM_Init();
  1370   002A78  EC19  F022         	call	_Lcd_CGRAM_Init	;wreg free
  1371   002A7C                     
  1372                           ;Main_program.c: 99:     Lcd_CGRAM_CreateChar(0, SENSOR);
  1373   002A7C  0E2F               	movlw	low _SENSOR
  1374   002A7E  6E15               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1375   002A80  0E7C               	movlw	high _SENSOR
  1376   002A82  6E16               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)^0,c
  1377   002A84  0E00               	movlw	0
  1378   002A86  EC5E  F016         	call	_Lcd_CGRAM_CreateChar
  1379   002A8A                     
  1380                           ;Main_program.c: 100:     Lcd_CGRAM_Close();
  1381   002A8A  EC20  F022         	call	_Lcd_CGRAM_Close	;wreg free
  1382   002A8E                     
  1383                           ;Main_program.c: 101:     Lcd_Clear();
  1384   002A8E  EC2E  F022         	call	_Lcd_Clear	;wreg free
  1385   002A92                     
  1386                           ;Main_program.c: 102:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  1387   002A92  0E02               	movlw	2
  1388   002A94  0101               	movlb	1	; () banked
  1389   002A96  6F60               	movwf	(??_main+1)& (0+255),b
  1390   002A98  0E04               	movlw	4
  1391   002A9A  6F5F               	movwf	??_main& (0+255),b
  1392   002A9C  0EBA               	movlw	186
  1393   002A9E                     u8097:
  1394   002A9E  2EE8               	decfsz	wreg,f,c
  1395   002AA0  D7FE               	bra	u8097
  1396   002AA2  2F5F               	decfsz	??_main& (0+255),f,b
  1397   002AA4  D7FC               	bra	u8097
  1398   002AA6  2F60               	decfsz	(??_main+1)& (0+255),f,b
  1399   002AA8  D7FA               	bra	u8097
  1400   002AAA  F000               	nop	
  1401   002AAC                     
  1402                           ;Main_program.c: 108:     PR2 = 0X3E;
  1403   002AAC  0E3E               	movlw	62
  1404   002AAE  6ECB               	movwf	203,c	;volatile
  1405   002AB0                     
  1406                           ;Main_program.c: 109:     CCPR1L = 0;
  1407   002AB0  0E00               	movlw	0
  1408   002AB2  6EBE               	movwf	190,c	;volatile
  1409   002AB4                     
  1410                           ;Main_program.c: 110:     CCPR2L = 0;
  1411   002AB4  0E00               	movlw	0
  1412   002AB6  6EBB               	movwf	187,c	;volatile
  1413   002AB8                     
  1414                           ;Main_program.c: 111:     TRISCbits.TRISC2 = 0;
  1415   002AB8  9494               	bcf	148,2,c	;volatile
  1416   002ABA                     
  1417                           ;Main_program.c: 112:     TRISCbits.TRISC1 = 0;
  1418   002ABA  9294               	bcf	148,1,c	;volatile
  1419   002ABC                     
  1420                           ;Main_program.c: 113:     T2CON = 0X03;
  1421   002ABC  0E03               	movlw	3
  1422   002ABE  6ECA               	movwf	202,c	;volatile
  1423   002AC0                     
  1424                           ;Main_program.c: 114:     CCP1CON = 0X0C;
  1425   002AC0  0E0C               	movlw	12
  1426   002AC2  6EBD               	movwf	189,c	;volatile
  1427   002AC4                     
  1428                           ;Main_program.c: 115:     CCP2CON = 0X0C;
  1429   002AC4  0E0C               	movlw	12
  1430   002AC6  6EBA               	movwf	186,c	;volatile
  1431   002AC8                     
  1432                           ;Main_program.c: 116:     TMR2 = 255;
  1433   002AC8  68CC               	setf	204,c	;volatile
  1434   002ACA                     
  1435                           ;Main_program.c: 117:     TMR2ON = 1;
  1436   002ACA  84CA               	bsf	4042,2,c	;volatile
  1437   002ACC  EF41  F016         	goto	l7694
  1438   002AD0                     l7634:
  1439                           
  1440                           ; BSR set to: 1
  1441                           ;Main_program.c: 129:                 WELCOME();
  1442   002AD0  EC16  F01D         	call	_WELCOME	;wreg free
  1443   002AD4                     
  1444                           ;Main_program.c: 130:                 USER_VALUE();
  1445   002AD4  EC32  F00C         	call	_USER_VALUE	;wreg free
  1446                           
  1447                           ;Main_program.c: 131:                 break;
  1448   002AD8  EF41  F016         	goto	l7694
  1449   002ADC                     l7638:
  1450                           
  1451                           ;Main_program.c: 136:                 {;Main_program.c: 137:                     SELECTE
      +                          D2 = Keypad_Get_Char();
  1452   002ADC  EC30  F012         	call	_Keypad_Get_Char	;wreg free
  1453   002AE0  6E4A               	movwf	_SELECTED2^0,c
  1454   002AE2                     
  1455                           ;Main_program.c: 138:                     if (SELECTED2 == '*')
  1456   002AE2  0E2A               	movlw	42
  1457   002AE4  184A               	xorwf	_SELECTED2^0,w,c
  1458   002AE6  A4D8               	btfss	status,2,c
  1459   002AE8  EF78  F015         	goto	u8001
  1460   002AEC  EF7A  F015         	goto	u8000
  1461   002AF0                     u8001:
  1462   002AF0  EF7E  F015         	goto	l7644
  1463   002AF4                     u8000:
  1464   002AF4                     
  1465                           ;Main_program.c: 139:                     {;Main_program.c: 140:                        
      +                           CURRENT_OPTION = 0;
  1466   002AF4  0E00               	movlw	0
  1467   002AF6  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  1468   002AF8  0E00               	movlw	0
  1469   002AFA  6E48               	movwf	_CURRENT_OPTION^0,c
  1470   002AFC                     l7644:
  1471                           
  1472                           ;Main_program.c: 144:                     if (PORTBbits.RB0 == 0 && PORTAbits.RA5 == 0)
  1473   002AFC  B081               	btfsc	129,0,c	;volatile
  1474   002AFE  EF83  F015         	goto	u8011
  1475   002B02  EF85  F015         	goto	u8010
  1476   002B06                     u8011:
  1477   002B06  EF9C  F015         	goto	l7652
  1478   002B0A                     u8010:
  1479   002B0A  BA80               	btfsc	128,5,c	;volatile
  1480   002B0C  EF8A  F015         	goto	u8021
  1481   002B10  EF8C  F015         	goto	u8020
  1482   002B14                     u8021:
  1483   002B14  EF9C  F015         	goto	l7652
  1484   002B18                     u8020:
  1485   002B18                     
  1486                           ;Main_program.c: 145:                     {;Main_program.c: 147:                        
      +                           CURRENT_OPTION = 2;
  1487   002B18  0E00               	movlw	0
  1488   002B1A  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  1489   002B1C  0E02               	movlw	2
  1490   002B1E  6E48               	movwf	_CURRENT_OPTION^0,c
  1491   002B20                     
  1492                           ;Main_program.c: 148:                         _delay((unsigned long)((700)*(8000000L/400
      +                          0.0)));
  1493   002B20  0E08               	movlw	8
  1494   002B22  0101               	movlb	1	; () banked
  1495   002B24  6F60               	movwf	(??_main+1)& (0+255),b
  1496   002B26  0E1B               	movlw	27
  1497   002B28  6F5F               	movwf	??_main& (0+255),b
  1498   002B2A  0E27               	movlw	39
  1499   002B2C                     u8107:
  1500   002B2C  2EE8               	decfsz	wreg,f,c
  1501   002B2E  D7FE               	bra	u8107
  1502   002B30  2F5F               	decfsz	??_main& (0+255),f,b
  1503   002B32  D7FC               	bra	u8107
  1504   002B34  2F60               	decfsz	(??_main+1)& (0+255),f,b
  1505   002B36  D7FA               	bra	u8107
  1506   002B38                     l7652:
  1507                           
  1508                           ;Main_program.c: 150:                     if (PORTAbits.RA5 == 0)
  1509   002B38  BA80               	btfsc	128,5,c	;volatile
  1510   002B3A  EFA1  F015         	goto	u8031
  1511   002B3E  EFA3  F015         	goto	u8030
  1512   002B42                     u8031:
  1513   002B42  EFAD  F015         	goto	l7656
  1514   002B46                     u8030:
  1515   002B46                     
  1516                           ;Main_program.c: 151:                     {;Main_program.c: 152:                        
      +                           Lcd_Set_Cursor(2,16);
  1517   002B46  0E10               	movlw	16
  1518   002B48  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1519   002B4A  0E02               	movlw	2
  1520   002B4C  EC8B  F01D         	call	_Lcd_Set_Cursor
  1521                           
  1522                           ;Main_program.c: 153:                         Lcd_Write_Char(0);
  1523   002B50  0E00               	movlw	0
  1524   002B52  ECA4  F021         	call	_Lcd_Write_Char
  1525                           
  1526                           ;Main_program.c: 154:                     }
  1527   002B56  EFB8  F015         	goto	l7660
  1528   002B5A                     l7656:
  1529                           
  1530                           ;Main_program.c: 156:                     {;Main_program.c: 157:                        
      +                           Lcd_Set_Cursor(2,16);
  1531   002B5A  0E10               	movlw	16
  1532   002B5C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1533   002B5E  0E02               	movlw	2
  1534   002B60  EC8B  F01D         	call	_Lcd_Set_Cursor
  1535   002B64                     
  1536                           ;Main_program.c: 158:                         Lcd_Write_String(" ");
  1537   002B64  0E46               	movlw	low (STR_5+15)
  1538   002B66  6E15               	movwf	Lcd_Write_String@a^0,c
  1539   002B68  0E7C               	movlw	high (STR_5+15)
  1540   002B6A  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1541   002B6C  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  1542   002B70                     l7660:
  1543                           
  1544                           ;Main_program.c: 135:                 while (CURRENT_OPTION == 1)
  1545   002B70  0448               	decf	_CURRENT_OPTION^0,w,c
  1546   002B72  1049               	iorwf	(_CURRENT_OPTION+1)^0,w,c
  1547   002B74  B4D8               	btfsc	status,2,c
  1548   002B76  EFBF  F015         	goto	u8041
  1549   002B7A  EFC1  F015         	goto	u8040
  1550   002B7E                     u8041:
  1551   002B7E  EF6E  F015         	goto	l7638
  1552   002B82                     u8040:
  1553   002B82  EF41  F016         	goto	l7694
  1554   002B86                     l7662:
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;Main_program.c: 164:                 FILL();
  1558   002B86  ECC2  F013         	call	_FILL	;wreg free
  1559   002B8A                     
  1560                           ;Main_program.c: 165:                 Lcd_Init();
  1561   002B8A  EC16  F01F         	call	_Lcd_Init	;wreg free
  1562                           
  1563                           ;Main_program.c: 166:                 while (CURRENT_OPTION == 2)
  1564   002B8E  EF37  F016         	goto	l7690
  1565   002B92                     l143:
  1566                           
  1567                           ;Main_program.c: 167:                 {;Main_program.c: 168:                     if (POR
      +                          TAbits.RA5 == 0)
  1568   002B92  BA80               	btfsc	128,5,c	;volatile
  1569   002B94  EFCE  F015         	goto	u8051
  1570   002B98  EFD0  F015         	goto	u8050
  1571   002B9C                     u8051:
  1572   002B9C  EFF0  F015         	goto	l7672
  1573   002BA0                     u8050:
  1574   002BA0                     
  1575                           ;Main_program.c: 169:                     {;Main_program.c: 170:                        
      +                           Lcd_Set_Cursor(2,16);
  1576   002BA0  0E10               	movlw	16
  1577   002BA2  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1578   002BA4  0E02               	movlw	2
  1579   002BA6  EC8B  F01D         	call	_Lcd_Set_Cursor
  1580                           
  1581                           ;Main_program.c: 171:                         Lcd_Write_Char(0);
  1582   002BAA  0E00               	movlw	0
  1583   002BAC  ECA4  F021         	call	_Lcd_Write_Char
  1584                           
  1585                           ;Main_program.c: 172:                         Lcd_Set_Cursor(1, 1);
  1586   002BB0  0E01               	movlw	1
  1587   002BB2  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1588   002BB4  0E01               	movlw	1
  1589   002BB6  EC8B  F01D         	call	_Lcd_Set_Cursor
  1590   002BBA                     
  1591                           ;Main_program.c: 173:                         Lcd_Write_String("Retire el envase");
  1592   002BBA  0E7B               	movlw	low STR_2
  1593   002BBC  6E15               	movwf	Lcd_Write_String@a^0,c
  1594   002BBE  0E7C               	movlw	high STR_2
  1595   002BC0  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1596   002BC2  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  1597   002BC6                     
  1598                           ;Main_program.c: 174:                         Lcd_Set_Cursor(2, 1);
  1599   002BC6  0E01               	movlw	1
  1600   002BC8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1601   002BCA  0E02               	movlw	2
  1602   002BCC  EC8B  F01D         	call	_Lcd_Set_Cursor
  1603                           
  1604                           ;Main_program.c: 175:                         Lcd_Write_String("Parar");
  1605   002BD0  0E2E               	movlw	low STR_3
  1606   002BD2  6E15               	movwf	Lcd_Write_String@a^0,c
  1607   002BD4  0E7D               	movlw	high STR_3
  1608   002BD6  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1609   002BD8  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  1610                           
  1611                           ;Main_program.c: 176:                     }
  1612   002BDC  EF2A  F016         	goto	l145
  1613   002BE0                     l7672:
  1614                           
  1615                           ;Main_program.c: 178:                     {;Main_program.c: 179:                        
      +                           Lcd_Set_Cursor(2,16);
  1616   002BE0  0E10               	movlw	16
  1617   002BE2  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1618   002BE4  0E02               	movlw	2
  1619   002BE6  EC8B  F01D         	call	_Lcd_Set_Cursor
  1620   002BEA                     
  1621                           ;Main_program.c: 180:                         Lcd_Write_String(" ");
  1622   002BEA  0E46               	movlw	low (STR_5+15)
  1623   002BEC  6E15               	movwf	Lcd_Write_String@a^0,c
  1624   002BEE  0E7C               	movlw	high (STR_5+15)
  1625   002BF0  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1626   002BF2  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  1627   002BF6                     
  1628                           ;Main_program.c: 181:                         Lcd_Set_Cursor(1, 1);
  1629   002BF6  0E01               	movlw	1
  1630   002BF8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1631   002BFA  0E01               	movlw	1
  1632   002BFC  EC8B  F01D         	call	_Lcd_Set_Cursor
  1633                           
  1634                           ;Main_program.c: 182:                         Lcd_Write_String("Ponga un envase ");
  1635   002C00  0E37               	movlw	low STR_5
  1636   002C02  6E15               	movwf	Lcd_Write_String@a^0,c
  1637   002C04  0E7C               	movlw	high STR_5
  1638   002C06  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1639   002C08  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  1640   002C0C                     
  1641                           ;Main_program.c: 183:                         Lcd_Set_Cursor(2, 1);
  1642   002C0C  0E01               	movlw	1
  1643   002C0E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1644   002C10  0E02               	movlw	2
  1645   002C12  EC8B  F01D         	call	_Lcd_Set_Cursor
  1646   002C16                     
  1647                           ;Main_program.c: 184:                         Lcd_Write_String("Parar");
  1648   002C16  0E2E               	movlw	low STR_3
  1649   002C18  6E15               	movwf	Lcd_Write_String@a^0,c
  1650   002C1A  0E7D               	movlw	high STR_3
  1651   002C1C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  1652   002C1E  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  1653   002C22                     
  1654                           ;Main_program.c: 185:                         _delay((unsigned long)((400)*(8000000L/400
      +                          0.0)));
  1655   002C22  0E05               	movlw	5
  1656   002C24  0101               	movlb	1	; () banked
  1657   002C26  6F60               	movwf	(??_main+1)& (0+255),b
  1658   002C28  0E0F               	movlw	15
  1659   002C2A  6F5F               	movwf	??_main& (0+255),b
  1660   002C2C  0EF1               	movlw	241
  1661   002C2E                     u8117:
  1662   002C2E  2EE8               	decfsz	wreg,f,c
  1663   002C30  D7FE               	bra	u8117
  1664   002C32  2F5F               	decfsz	??_main& (0+255),f,b
  1665   002C34  D7FC               	bra	u8117
  1666   002C36  2F60               	decfsz	(??_main+1)& (0+255),f,b
  1667   002C38  D7FA               	bra	u8117
  1668   002C3A                     
  1669                           ;Main_program.c: 186:                         if (PORTAbits.RA5 == 0)
  1670   002C3A  BA80               	btfsc	128,5,c	;volatile
  1671   002C3C  EF22  F016         	goto	u8061
  1672   002C40  EF24  F016         	goto	u8060
  1673   002C44                     u8061:
  1674   002C44  EF2A  F016         	goto	l145
  1675   002C48                     u8060:
  1676   002C48                     
  1677                           ;Main_program.c: 187:                         {;Main_program.c: 188:                    
      +                                   CURRENT_OPTION = 2;
  1678   002C48  0E00               	movlw	0
  1679   002C4A  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  1680   002C4C  0E02               	movlw	2
  1681   002C4E  6E48               	movwf	_CURRENT_OPTION^0,c
  1682                           
  1683                           ;Main_program.c: 189:                             break;
  1684   002C50  EF41  F016         	goto	l7694
  1685   002C54                     l145:
  1686                           
  1687                           ;Main_program.c: 193:                     if (PORTBbits.RB0 == 0)
  1688   002C54  B081               	btfsc	129,0,c	;volatile
  1689   002C56  EF2F  F016         	goto	u8071
  1690   002C5A  EF31  F016         	goto	u8070
  1691   002C5E                     u8071:
  1692   002C5E  EF37  F016         	goto	l7690
  1693   002C62                     u8070:
  1694   002C62                     
  1695                           ;Main_program.c: 194:                     {;Main_program.c: 195:                        
      +                           CURRENT_OPTION = 0;
  1696   002C62  0E00               	movlw	0
  1697   002C64  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  1698   002C66  0E00               	movlw	0
  1699   002C68  6E48               	movwf	_CURRENT_OPTION^0,c
  1700                           
  1701                           ;Main_program.c: 196:                         break;
  1702   002C6A  EF41  F016         	goto	l7694
  1703   002C6E                     l7690:
  1704                           
  1705                           ;Main_program.c: 166:                 while (CURRENT_OPTION == 2)
  1706   002C6E  0E02               	movlw	2
  1707   002C70  1848               	xorwf	_CURRENT_OPTION^0,w,c
  1708   002C72  1049               	iorwf	(_CURRENT_OPTION+1)^0,w,c
  1709   002C74  B4D8               	btfsc	status,2,c
  1710   002C76  EF3F  F016         	goto	u8081
  1711   002C7A  EF41  F016         	goto	u8080
  1712   002C7E                     u8081:
  1713   002C7E  EFC9  F015         	goto	l143
  1714   002C82                     u8080:
  1715   002C82                     l7694:
  1716   002C82  C048  F15F         	movff	_CURRENT_OPTION,??_main
  1717   002C86  C049  F160         	movff	_CURRENT_OPTION+1,??_main+1
  1718                           
  1719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1720                           ; Switch size 1, requested type "simple"
  1721                           ; Number of cases is 1, Range of values is 0 to 0
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte            4     3 (average)
  1725                           ;	Chosen strategy is simple_byte
  1726   002C8A  0101               	movlb	1	; () banked
  1727   002C8C  5160               	movf	(??_main+1)& (0+255),w,b
  1728   002C8E  0A00               	xorlw	0	; case 0
  1729   002C90  B4D8               	btfsc	status,2,c
  1730   002C92  EF4D  F016         	goto	l7954
  1731   002C96  EF41  F016         	goto	l7694
  1732   002C9A                     l7954:
  1733                           
  1734                           ; BSR set to: 1
  1735                           ; Switch size 1, requested type "simple"
  1736                           ; Number of cases is 3, Range of values is 0 to 2
  1737                           ; switch strategies available:
  1738                           ; Name         Instructions Cycles
  1739                           ; simple_byte           10     6 (average)
  1740                           ;	Chosen strategy is simple_byte
  1741   002C9A  515F               	movf	??_main& (0+255),w,b
  1742   002C9C  0A00               	xorlw	0	; case 0
  1743   002C9E  B4D8               	btfsc	status,2,c
  1744   002CA0  EF68  F015         	goto	l7634
  1745   002CA4  0A01               	xorlw	1	; case 1
  1746   002CA6  B4D8               	btfsc	status,2,c
  1747   002CA8  EFB8  F015         	goto	l7660
  1748   002CAC  0A03               	xorlw	3	; case 2
  1749   002CAE  B4D8               	btfsc	status,2,c
  1750   002CB0  EFC3  F015         	goto	l7662
  1751   002CB4  EF41  F016         	goto	l7694
  1752   002CB8  EF07  F000         	goto	start
  1753   002CBC                     __end_of_main:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _WELCOME *****************
  1757 ;; Defined at:
  1758 ;;		line 224 in file "Main_program.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  a               2   28[COMRAM] int 
  1763 ;;  a               2   26[COMRAM] int 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0
  1774 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1775 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1776 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1777 ;;Total ram usage:        6 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 5
  1780 ;; This function calls:
  1781 ;;		_Lcd_Clear
  1782 ;;		_Lcd_Set_Cursor
  1783 ;;		_Lcd_Write_Char
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text1
  1790   003A2C                     __ptext1:
  1791                           	callstack 0
  1792   003A2C                     _WELCOME:
  1793                           	callstack 25
  1794   003A2C                     
  1795                           ;Main_program.c: 227:     Lcd_Clear();
  1796   003A2C  EC2E  F022         	call	_Lcd_Clear	;wreg free
  1797   003A30                     
  1798                           ;Main_program.c: 228:     Lcd_Set_Cursor(1, 4);
  1799   003A30  0E04               	movlw	4
  1800   003A32  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1801   003A34  0E01               	movlw	1
  1802   003A36  EC8B  F01D         	call	_Lcd_Set_Cursor
  1803   003A3A                     
  1804                           ;Main_program.c: 229:     for (int a = 0; a < 11; a++) {
  1805   003A3A  0E00               	movlw	0
  1806   003A3C  6E1C               	movwf	(WELCOME@a+1)^0,c
  1807   003A3E  0E00               	movlw	0
  1808   003A40  6E1B               	movwf	WELCOME@a^0,c
  1809   003A42                     l5266:
  1810                           
  1811                           ;Main_program.c: 230:         _delay((unsigned long)((80)*(8000000L/4000.0)));
  1812   003A42  0ED0               	movlw	208
  1813   003A44  6E19               	movwf	??_WELCOME^0,c
  1814   003A46  0ECA               	movlw	202
  1815   003A48                     u8127:
  1816   003A48  2EE8               	decfsz	wreg,f,c
  1817   003A4A  D7FE               	bra	u8127
  1818   003A4C  2E19               	decfsz	??_WELCOME^0,f,c
  1819   003A4E  D7FC               	bra	u8127
  1820   003A50                     
  1821                           ;Main_program.c: 231:         Lcd_Write_Char(NAME1[a]);
  1822   003A50  0EEB               	movlw	low _NAME1
  1823   003A52  241B               	addwf	WELCOME@a^0,w,c
  1824   003A54  6ED9               	movwf	fsr2l,c
  1825   003A56  0E00               	movlw	high _NAME1
  1826   003A58  201C               	addwfc	(WELCOME@a+1)^0,w,c
  1827   003A5A  6EDA               	movwf	fsr2h,c
  1828   003A5C  50DF               	movf	indf2,w,c
  1829   003A5E  ECA4  F021         	call	_Lcd_Write_Char
  1830   003A62                     
  1831                           ;Main_program.c: 232:     }
  1832   003A62  4A1B               	infsnz	WELCOME@a^0,f,c
  1833   003A64  2A1C               	incf	(WELCOME@a+1)^0,f,c
  1834   003A66  BE1C               	btfsc	(WELCOME@a+1)^0,7,c
  1835   003A68  EF3F  F01D         	goto	u5281
  1836   003A6C  501C               	movf	(WELCOME@a+1)^0,w,c
  1837   003A6E  E109               	bnz	u5280
  1838   003A70  0E0B               	movlw	11
  1839   003A72  5C1B               	subwf	WELCOME@a^0,w,c
  1840   003A74  A0D8               	btfss	status,0,c
  1841   003A76  EF3F  F01D         	goto	u5281
  1842   003A7A  EF41  F01D         	goto	u5280
  1843   003A7E                     u5281:
  1844   003A7E  EF21  F01D         	goto	l5266
  1845   003A82                     u5280:
  1846   003A82                     
  1847                           ;Main_program.c: 233:     Lcd_Set_Cursor(2, 6);
  1848   003A82  0E06               	movlw	6
  1849   003A84  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  1850   003A86  0E02               	movlw	2
  1851   003A88  EC8B  F01D         	call	_Lcd_Set_Cursor
  1852   003A8C                     
  1853                           ;Main_program.c: 234:     for (int a = 0; a < 5; a++) {
  1854   003A8C  0E00               	movlw	0
  1855   003A8E  6E1E               	movwf	(WELCOME@a_631+1)^0,c
  1856   003A90  0E00               	movlw	0
  1857   003A92  6E1D               	movwf	WELCOME@a_631^0,c
  1858   003A94                     l5282:
  1859                           
  1860                           ;Main_program.c: 235:         _delay((unsigned long)((80)*(8000000L/4000.0)));
  1861   003A94  0ED0               	movlw	208
  1862   003A96  6E19               	movwf	??_WELCOME^0,c
  1863   003A98  0ECA               	movlw	202
  1864   003A9A                     u8137:
  1865   003A9A  2EE8               	decfsz	wreg,f,c
  1866   003A9C  D7FE               	bra	u8137
  1867   003A9E  2E19               	decfsz	??_WELCOME^0,f,c
  1868   003AA0  D7FC               	bra	u8137
  1869   003AA2                     
  1870                           ;Main_program.c: 236:         Lcd_Write_Char(NAME2[a]);
  1871   003AA2  0EF6               	movlw	low _NAME2
  1872   003AA4  241D               	addwf	WELCOME@a_631^0,w,c
  1873   003AA6  6ED9               	movwf	fsr2l,c
  1874   003AA8  0E00               	movlw	high _NAME2
  1875   003AAA  201E               	addwfc	(WELCOME@a_631+1)^0,w,c
  1876   003AAC  6EDA               	movwf	fsr2h,c
  1877   003AAE  50DF               	movf	indf2,w,c
  1878   003AB0  ECA4  F021         	call	_Lcd_Write_Char
  1879   003AB4                     
  1880                           ;Main_program.c: 237:     }
  1881   003AB4  4A1D               	infsnz	WELCOME@a_631^0,f,c
  1882   003AB6  2A1E               	incf	(WELCOME@a_631+1)^0,f,c
  1883   003AB8  BE1E               	btfsc	(WELCOME@a_631+1)^0,7,c
  1884   003ABA  EF68  F01D         	goto	u5291
  1885   003ABE  501E               	movf	(WELCOME@a_631+1)^0,w,c
  1886   003AC0  E109               	bnz	u5290
  1887   003AC2  0E05               	movlw	5
  1888   003AC4  5C1D               	subwf	WELCOME@a_631^0,w,c
  1889   003AC6  A0D8               	btfss	status,0,c
  1890   003AC8  EF68  F01D         	goto	u5291
  1891   003ACC  EF6A  F01D         	goto	u5290
  1892   003AD0                     u5291:
  1893   003AD0  EF4A  F01D         	goto	l5282
  1894   003AD4                     u5290:
  1895   003AD4                     
  1896                           ;Main_program.c: 238:     LATCbits.LATC0 = 1;
  1897   003AD4  808B               	bsf	139,0,c	;volatile
  1898   003AD6                     
  1899                           ;Main_program.c: 239:     _delay((unsigned long)((50)*(8000000L/4000.0)));
  1900   003AD6  0E82               	movlw	130
  1901   003AD8  6E19               	movwf	??_WELCOME^0,c
  1902   003ADA  0EDE               	movlw	222
  1903   003ADC                     u8147:
  1904   003ADC  2EE8               	decfsz	wreg,f,c
  1905   003ADE  D7FE               	bra	u8147
  1906   003AE0  2E19               	decfsz	??_WELCOME^0,f,c
  1907   003AE2  D7FC               	bra	u8147
  1908   003AE4                     
  1909                           ;Main_program.c: 240:     LATCbits.LATC0 = 0;
  1910   003AE4  908B               	bcf	139,0,c	;volatile
  1911                           
  1912                           ;Main_program.c: 241:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  1913   003AE6  0E02               	movlw	2
  1914   003AE8  6E1A               	movwf	(??_WELCOME+1)^0,c
  1915   003AEA  0E04               	movlw	4
  1916   003AEC  6E19               	movwf	??_WELCOME^0,c
  1917   003AEE  0EBA               	movlw	186
  1918   003AF0                     u8157:
  1919   003AF0  2EE8               	decfsz	wreg,f,c
  1920   003AF2  D7FE               	bra	u8157
  1921   003AF4  2E19               	decfsz	??_WELCOME^0,f,c
  1922   003AF6  D7FC               	bra	u8157
  1923   003AF8  2E1A               	decfsz	(??_WELCOME+1)^0,f,c
  1924   003AFA  D7FA               	bra	u8157
  1925   003AFC  D000               	nop2	
  1926   003AFE                     
  1927                           ;Main_program.c: 242:     LATCbits.LATC0 = 1;
  1928   003AFE  808B               	bsf	139,0,c	;volatile
  1929                           
  1930                           ;Main_program.c: 243:     _delay((unsigned long)((50)*(8000000L/4000.0)));
  1931   003B00  0E82               	movlw	130
  1932   003B02  6E19               	movwf	??_WELCOME^0,c
  1933   003B04  0EDE               	movlw	222
  1934   003B06                     u8167:
  1935   003B06  2EE8               	decfsz	wreg,f,c
  1936   003B08  D7FE               	bra	u8167
  1937   003B0A  2E19               	decfsz	??_WELCOME^0,f,c
  1938   003B0C  D7FC               	bra	u8167
  1939   003B0E                     
  1940                           ;Main_program.c: 244:     LATCbits.LATC0 = 0;
  1941   003B0E  908B               	bcf	139,0,c	;volatile
  1942   003B10                     
  1943                           ;Main_program.c: 245:     Lcd_Clear();
  1944   003B10  EC2E  F022         	call	_Lcd_Clear	;wreg free
  1945   003B14  0012               	return		;funcret
  1946   003B16                     __end_of_WELCOME:
  1947                           	callstack 0
  1948                           
  1949 ;; *************** function _USER_VALUE *****************
  1950 ;; Defined at:
  1951 ;;		line 249 in file "Main_program.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1967 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1968 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1969 ;;Total ram usage:        2 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 5
  1972 ;; This function calls:
  1973 ;;		_Keypad_Get_Char
  1974 ;;		_Lcd_Blink
  1975 ;;		_Lcd_Clear
  1976 ;;		_Lcd_NoBlink
  1977 ;;		_Lcd_Set_Cursor
  1978 ;;		_Lcd_Write_Char
  1979 ;;		_Lcd_Write_String
  1980 ;;		___wmul
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text2
  1987   001864                     __ptext2:
  1988                           	callstack 0
  1989   001864                     _USER_VALUE:
  1990                           	callstack 25
  1991   001864                     
  1992                           ;Main_program.c: 252:     PROFILE_NUM = 0;
  1993   001864  0E00               	movlw	0
  1994   001866  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  1995   001868  0E00               	movlw	0
  1996   00186A  6E46               	movwf	_PROFILE_NUM^0,c
  1997   00186C                     
  1998                           ;Main_program.c: 253:     Lcd_Set_Cursor(2, 1);
  1999   00186C  0E01               	movlw	1
  2000   00186E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2001   001870  0E02               	movlw	2
  2002   001872  EC8B  F01D         	call	_Lcd_Set_Cursor
  2003   001876                     
  2004                           ;Main_program.c: 254:     Lcd_Write_String("Limpiar:  Inicio");
  2005   001876  0EBF               	movlw	low STR_7
  2006   001878  6E15               	movwf	Lcd_Write_String@a^0,c
  2007   00187A  0E7C               	movlw	high STR_7
  2008   00187C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2009   00187E  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2010   001882                     
  2011                           ;Main_program.c: 255:     Lcd_Set_Cursor(1, 1);
  2012   001882  0E01               	movlw	1
  2013   001884  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2014   001886  0E01               	movlw	1
  2015   001888  EC8B  F01D         	call	_Lcd_Set_Cursor
  2016   00188C                     
  2017                           ;Main_program.c: 256:     Lcd_Write_String("Perfil: #00");
  2018   00188C  0EFC               	movlw	low STR_8
  2019   00188E  6E15               	movwf	Lcd_Write_String@a^0,c
  2020   001890  0E7C               	movlw	high STR_8
  2021   001892  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2022   001894  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2023   001898                     
  2024                           ;Main_program.c: 257:     Lcd_Set_Cursor(1, 10);
  2025   001898  0E0A               	movlw	10
  2026   00189A  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2027   00189C  0E01               	movlw	1
  2028   00189E  EC8B  F01D         	call	_Lcd_Set_Cursor
  2029   0018A2                     
  2030                           ;Main_program.c: 258:     Lcd_Blink();
  2031   0018A2  EC12  F022         	call	_Lcd_Blink	;wreg free
  2032   0018A6                     
  2033                           ;Main_program.c: 259:     _CHAR2 = 0;
  2034   0018A6  0E00               	movlw	0
  2035   0018A8  6E4C               	movwf	__CHAR2^0,c
  2036   0018AA                     
  2037                           ;Main_program.c: 260:     _CHAR1 = 0;
  2038   0018AA  0E00               	movlw	0
  2039   0018AC  6E4B               	movwf	__CHAR1^0,c
  2040                           
  2041                           ;Main_program.c: 262:     while (_CHAR2 == 0)
  2042   0018AE  EF8E  F00C         	goto	l7350
  2043   0018B2                     l7332:
  2044                           
  2045                           ;Main_program.c: 263:     {;Main_program.c: 264:         _CHAR2 = Keypad_Get_Char();
  2046   0018B2  EC30  F012         	call	_Keypad_Get_Char	;wreg free
  2047   0018B6  6E4C               	movwf	__CHAR2^0,c
  2048   0018B8                     
  2049                           ;Main_program.c: 265:         if (_CHAR2)
  2050   0018B8  504C               	movf	__CHAR2^0,w,c
  2051   0018BA  B4D8               	btfsc	status,2,c
  2052   0018BC  EF62  F00C         	goto	u7841
  2053   0018C0  EF64  F00C         	goto	u7840
  2054   0018C4                     u7841:
  2055   0018C4  EF81  F00C         	goto	l7346
  2056   0018C8                     u7840:
  2057   0018C8                     
  2058                           ;Main_program.c: 266:         {;Main_program.c: 267:             if (_CHAR2 == '*' || _C
      +                          HAR2 == '#')
  2059   0018C8  0E2A               	movlw	42
  2060   0018CA  184C               	xorwf	__CHAR2^0,w,c
  2061   0018CC  B4D8               	btfsc	status,2,c
  2062   0018CE  EF6B  F00C         	goto	u7851
  2063   0018D2  EF6D  F00C         	goto	u7850
  2064   0018D6                     u7851:
  2065   0018D6  EF76  F00C         	goto	l7340
  2066   0018DA                     u7850:
  2067   0018DA  0E23               	movlw	35
  2068   0018DC  184C               	xorwf	__CHAR2^0,w,c
  2069   0018DE  A4D8               	btfss	status,2,c
  2070   0018E0  EF74  F00C         	goto	u7861
  2071   0018E4  EF76  F00C         	goto	u7860
  2072   0018E8                     u7861:
  2073   0018E8  EF78  F00C         	goto	l7342
  2074   0018EC                     u7860:
  2075   0018EC                     l7340:
  2076                           
  2077                           ;Main_program.c: 268:                 _CHAR2 = '0';
  2078   0018EC  0E30               	movlw	48
  2079   0018EE  6E4C               	movwf	__CHAR2^0,c
  2080   0018F0                     l7342:
  2081                           
  2082                           ;Main_program.c: 269:             Lcd_Write_Char(_CHAR2);
  2083   0018F0  504C               	movf	__CHAR2^0,w,c
  2084   0018F2  ECA4  F021         	call	_Lcd_Write_Char
  2085   0018F6                     
  2086                           ;Main_program.c: 270:             num2 = _CHAR2 - '0';
  2087   0018F6  0ED0               	movlw	208
  2088   0018F8  244C               	addwf	__CHAR2^0,w,c
  2089   0018FA  6E44               	movwf	_num2^0,c
  2090   0018FC  6A45               	clrf	(_num2+1)^0,c
  2091   0018FE  0EFF               	movlw	255
  2092   001900  2245               	addwfc	(_num2+1)^0,f,c
  2093   001902                     l7346:
  2094                           
  2095                           ;Main_program.c: 272:         if(PORTBbits.RB0 == 0)
  2096   001902  B081               	btfsc	129,0,c	;volatile
  2097   001904  EF86  F00C         	goto	u7871
  2098   001908  EF88  F00C         	goto	u7870
  2099   00190C                     u7871:
  2100   00190C  EF8E  F00C         	goto	l7350
  2101   001910                     u7870:
  2102   001910                     
  2103                           ;Main_program.c: 273:         {;Main_program.c: 274:             num2 = 0;
  2104   001910  0E00               	movlw	0
  2105   001912  6E45               	movwf	(_num2+1)^0,c
  2106   001914  0E00               	movlw	0
  2107   001916  6E44               	movwf	_num2^0,c
  2108                           
  2109                           ;Main_program.c: 275:             break;
  2110   001918  EFCF  F00C         	goto	l7370
  2111   00191C                     l7350:
  2112                           
  2113                           ;Main_program.c: 262:     while (_CHAR2 == 0)
  2114   00191C  504C               	movf	__CHAR2^0,w,c
  2115   00191E  B4D8               	btfsc	status,2,c
  2116   001920  EF94  F00C         	goto	u7881
  2117   001924  EF96  F00C         	goto	u7880
  2118   001928                     u7881:
  2119   001928  EF59  F00C         	goto	l7332
  2120   00192C                     u7880:
  2121   00192C  EFCF  F00C         	goto	l7370
  2122   001930                     l7352:
  2123                           
  2124                           ;Main_program.c: 279:     {;Main_program.c: 280:         _CHAR1 = Keypad_Get_Char();
  2125   001930  EC30  F012         	call	_Keypad_Get_Char	;wreg free
  2126   001934  6E4B               	movwf	__CHAR1^0,c
  2127   001936                     
  2128                           ;Main_program.c: 281:         if (_CHAR1)
  2129   001936  504B               	movf	__CHAR1^0,w,c
  2130   001938  B4D8               	btfsc	status,2,c
  2131   00193A  EFA1  F00C         	goto	u7891
  2132   00193E  EFA3  F00C         	goto	u7890
  2133   001942                     u7891:
  2134   001942  EFC2  F00C         	goto	l7366
  2135   001946                     u7890:
  2136   001946                     
  2137                           ;Main_program.c: 282:         {;Main_program.c: 283:             if (_CHAR1 == '*' || _C
      +                          HAR1 == '#')
  2138   001946  0E2A               	movlw	42
  2139   001948  184B               	xorwf	__CHAR1^0,w,c
  2140   00194A  B4D8               	btfsc	status,2,c
  2141   00194C  EFAA  F00C         	goto	u7901
  2142   001950  EFAC  F00C         	goto	u7900
  2143   001954                     u7901:
  2144   001954  EFB5  F00C         	goto	l7360
  2145   001958                     u7900:
  2146   001958  0E23               	movlw	35
  2147   00195A  184B               	xorwf	__CHAR1^0,w,c
  2148   00195C  A4D8               	btfss	status,2,c
  2149   00195E  EFB3  F00C         	goto	u7911
  2150   001962  EFB5  F00C         	goto	u7910
  2151   001966                     u7911:
  2152   001966  EFB7  F00C         	goto	l7362
  2153   00196A                     u7910:
  2154   00196A                     l7360:
  2155                           
  2156                           ;Main_program.c: 284:                 _CHAR1 = '0';
  2157   00196A  0E30               	movlw	48
  2158   00196C  6E4B               	movwf	__CHAR1^0,c
  2159   00196E                     l7362:
  2160                           
  2161                           ;Main_program.c: 285:             Lcd_Write_Char(_CHAR1);
  2162   00196E  504B               	movf	__CHAR1^0,w,c
  2163   001970  ECA4  F021         	call	_Lcd_Write_Char
  2164   001974                     
  2165                           ;Main_program.c: 286:             Lcd_NoBlink();
  2166   001974  EC0B  F022         	call	_Lcd_NoBlink	;wreg free
  2167                           
  2168                           ;Main_program.c: 287:             num1 = _CHAR1 - '0';
  2169   001978  0ED0               	movlw	208
  2170   00197A  244B               	addwf	__CHAR1^0,w,c
  2171   00197C  6E42               	movwf	_num1^0,c
  2172   00197E  6A43               	clrf	(_num1+1)^0,c
  2173   001980  0EFF               	movlw	255
  2174   001982  2243               	addwfc	(_num1+1)^0,f,c
  2175   001984                     l7366:
  2176                           
  2177                           ;Main_program.c: 289:         if(PORTBbits.RB0 == 0)
  2178   001984  B081               	btfsc	129,0,c	;volatile
  2179   001986  EFC7  F00C         	goto	u7921
  2180   00198A  EFC9  F00C         	goto	u7920
  2181   00198E                     u7921:
  2182   00198E  EFCF  F00C         	goto	l7370
  2183   001992                     u7920:
  2184   001992                     
  2185                           ;Main_program.c: 290:         {;Main_program.c: 291:             num1 = 0;
  2186   001992  0E00               	movlw	0
  2187   001994  6E43               	movwf	(_num1+1)^0,c
  2188   001996  0E00               	movlw	0
  2189   001998  6E42               	movwf	_num1^0,c
  2190                           
  2191                           ;Main_program.c: 292:             break;
  2192   00199A  EFD7  F00C         	goto	l7372
  2193   00199E                     l7370:
  2194                           
  2195                           ;Main_program.c: 278:     while (_CHAR1 == 0)
  2196   00199E  504B               	movf	__CHAR1^0,w,c
  2197   0019A0  B4D8               	btfsc	status,2,c
  2198   0019A2  EFD5  F00C         	goto	u7931
  2199   0019A6  EFD7  F00C         	goto	u7930
  2200   0019AA                     u7931:
  2201   0019AA  EF98  F00C         	goto	l7352
  2202   0019AE                     u7930:
  2203   0019AE                     l7372:
  2204                           
  2205                           ;Main_program.c: 295:     PROFILE_NUM = num2 * 10 + num1;
  2206   0019AE  C044  F011         	movff	_num2,___wmul@multiplier
  2207   0019B2  C045  F012         	movff	_num2+1,___wmul@multiplier+1
  2208   0019B6  0E00               	movlw	0
  2209   0019B8  6E14               	movwf	(___wmul@multiplicand+1)^0,c
  2210   0019BA  0E0A               	movlw	10
  2211   0019BC  6E13               	movwf	___wmul@multiplicand^0,c
  2212   0019BE  ECD6  F021         	call	___wmul	;wreg free
  2213   0019C2  5042               	movf	_num1^0,w,c
  2214   0019C4  2411               	addwf	?___wmul^0,w,c
  2215   0019C6  6E46               	movwf	_PROFILE_NUM^0,c
  2216   0019C8  5043               	movf	(_num1+1)^0,w,c
  2217   0019CA  2012               	addwfc	(?___wmul+1)^0,w,c
  2218   0019CC  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  2219   0019CE                     
  2220                           ;Main_program.c: 296:     _delay((unsigned long)((500)*(8000000L/4000.0)));
  2221   0019CE  0E06               	movlw	6
  2222   0019D0  6E1C               	movwf	(??_USER_VALUE+1)^0,c
  2223   0019D2  0E13               	movlw	19
  2224   0019D4  6E1B               	movwf	??_USER_VALUE^0,c
  2225   0019D6  0EAE               	movlw	174
  2226   0019D8                     u8177:
  2227   0019D8  2EE8               	decfsz	wreg,f,c
  2228   0019DA  D7FE               	bra	u8177
  2229   0019DC  2E1B               	decfsz	??_USER_VALUE^0,f,c
  2230   0019DE  D7FC               	bra	u8177
  2231   0019E0  2E1C               	decfsz	(??_USER_VALUE+1)^0,f,c
  2232   0019E2  D7FA               	bra	u8177
  2233                           
  2234                           ;Main_program.c: 298:     switch (PROFILE_NUM)
  2235   0019E4  EF27  F00E         	goto	l7496
  2236   0019E8                     l7376:
  2237                           
  2238                           ;Main_program.c: 302:             _delay((unsigned long)((400)*(8000000L/4000.0)));
  2239   0019E8  0E05               	movlw	5
  2240   0019EA  6E1C               	movwf	(??_USER_VALUE+1)^0,c
  2241   0019EC  0E0F               	movlw	15
  2242   0019EE  6E1B               	movwf	??_USER_VALUE^0,c
  2243   0019F0  0EF1               	movlw	241
  2244   0019F2                     u8187:
  2245   0019F2  2EE8               	decfsz	wreg,f,c
  2246   0019F4  D7FE               	bra	u8187
  2247   0019F6  2E1B               	decfsz	??_USER_VALUE^0,f,c
  2248   0019F8  D7FC               	bra	u8187
  2249   0019FA  2E1C               	decfsz	(??_USER_VALUE+1)^0,f,c
  2250   0019FC  D7FA               	bra	u8187
  2251   0019FE  F000               	nop	
  2252   001A00                     
  2253                           ;Main_program.c: 303:             Lcd_Clear();
  2254   001A00  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2255   001A04                     
  2256                           ;Main_program.c: 304:             Lcd_Set_Cursor(2,1);
  2257   001A04  0E01               	movlw	1
  2258   001A06  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2259   001A08  0E02               	movlw	2
  2260   001A0A  EC8B  F01D         	call	_Lcd_Set_Cursor
  2261   001A0E                     
  2262                           ;Main_program.c: 305:             Lcd_Write_String("Mantenga inicio ");
  2263   001A0E  0E6A               	movlw	low STR_9
  2264   001A10  6E15               	movwf	Lcd_Write_String@a^0,c
  2265   001A12  0E7C               	movlw	high STR_9
  2266   001A14  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2267   001A16  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2268   001A1A                     l182:
  2269   001A1A  B081               	btfsc	129,0,c	;volatile
  2270   001A1C  EF12  F00D         	goto	u7941
  2271   001A20  EF14  F00D         	goto	u7940
  2272   001A24                     u7941:
  2273   001A24  EF0D  F00D         	goto	l182
  2274   001A28                     u7940:
  2275   001A28                     
  2276                           ;Main_program.c: 307:             _delay((unsigned long)((200)*(8000000L/4000.0)));
  2277   001A28  0E03               	movlw	3
  2278   001A2A  6E1C               	movwf	(??_USER_VALUE+1)^0,c
  2279   001A2C  0E08               	movlw	8
  2280   001A2E  6E1B               	movwf	??_USER_VALUE^0,c
  2281   001A30  0E77               	movlw	119
  2282   001A32                     u8197:
  2283   001A32  2EE8               	decfsz	wreg,f,c
  2284   001A34  D7FE               	bra	u8197
  2285   001A36  2E1B               	decfsz	??_USER_VALUE^0,f,c
  2286   001A38  D7FC               	bra	u8197
  2287   001A3A  2E1C               	decfsz	(??_USER_VALUE+1)^0,f,c
  2288   001A3C  D7FA               	bra	u8197
  2289   001A3E  F000               	nop	
  2290                           
  2291                           ;Main_program.c: 308:             while (PORTBbits.RB0 == 0)
  2292   001A40  EF2E  F00D         	goto	l7392
  2293   001A44                     l7386:
  2294                           
  2295                           ;Main_program.c: 309:             {;Main_program.c: 310:                 Lcd_Set_Cursor(
      +                          1,1);
  2296   001A44  0E01               	movlw	1
  2297   001A46  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2298   001A48  0E01               	movlw	1
  2299   001A4A  EC8B  F01D         	call	_Lcd_Set_Cursor
  2300   001A4E                     
  2301                           ;Main_program.c: 311:                 Lcd_Write_String("Limpiando..");
  2302   001A4E  0EF0               	movlw	low STR_10
  2303   001A50  6E15               	movwf	Lcd_Write_String@a^0,c
  2304   001A52  0E7C               	movlw	high STR_10
  2305   001A54  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2306   001A56  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2307   001A5A                     
  2308                           ;Main_program.c: 313:                 LATBbits.LATB3 = 1;
  2309   001A5A  868A               	bsf	138,3,c	;volatile
  2310   001A5C                     l7392:
  2311                           
  2312                           ;Main_program.c: 308:             while (PORTBbits.RB0 == 0)
  2313   001A5C  A081               	btfss	129,0,c	;volatile
  2314   001A5E  EF33  F00D         	goto	u7951
  2315   001A62  EF35  F00D         	goto	u7950
  2316   001A66                     u7951:
  2317   001A66  EF22  F00D         	goto	l7386
  2318   001A6A                     u7950:
  2319   001A6A                     
  2320                           ;Main_program.c: 315:             LATBbits.LATB3 = 0;
  2321   001A6A  968A               	bcf	138,3,c	;volatile
  2322   001A6C                     
  2323                           ;Main_program.c: 316:             CURRENT_OPTION = 0;
  2324   001A6C  0E00               	movlw	0
  2325   001A6E  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  2326   001A70  0E00               	movlw	0
  2327   001A72  6E48               	movwf	_CURRENT_OPTION^0,c
  2328                           
  2329                           ;Main_program.c: 317:             break;
  2330   001A74  EF4D  F00E         	goto	l195
  2331   001A78                     l7396:
  2332                           
  2333                           ;Main_program.c: 320:             Lcd_Clear();
  2334   001A78  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2335   001A7C                     
  2336                           ;Main_program.c: 321:             Lcd_Set_Cursor(1, 1);
  2337   001A7C  0E01               	movlw	1
  2338   001A7E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2339   001A80  0E01               	movlw	1
  2340   001A82  EC8B  F01D         	call	_Lcd_Set_Cursor
  2341   001A86                     
  2342                           ;Main_program.c: 322:             Lcd_Write_String("Perf.01 = 1500ml");
  2343   001A86  0EAE               	movlw	low STR_11
  2344   001A88  6E15               	movwf	Lcd_Write_String@a^0,c
  2345   001A8A  0E7C               	movlw	high STR_11
  2346   001A8C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2347   001A8E  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2348   001A92                     
  2349                           ;Main_program.c: 323:             PROFILE_NUM = 1500;
  2350   001A92  0E05               	movlw	5
  2351   001A94  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  2352   001A96  0EDC               	movlw	220
  2353   001A98  6E46               	movwf	_PROFILE_NUM^0,c
  2354   001A9A                     
  2355                           ;Main_program.c: 324:             Lcd_Set_Cursor(2, 1);
  2356   001A9A  0E01               	movlw	1
  2357   001A9C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2358   001A9E  0E02               	movlw	2
  2359   001AA0  EC8B  F01D         	call	_Lcd_Set_Cursor
  2360   001AA4                     
  2361                           ;Main_program.c: 325:             Lcd_Write_String("Atras *");
  2362   001AA4  0E11               	movlw	low STR_12
  2363   001AA6  6E15               	movwf	Lcd_Write_String@a^0,c
  2364   001AA8  0E7D               	movlw	high STR_12
  2365   001AAA  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2366   001AAC  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2367   001AB0                     
  2368                           ;Main_program.c: 326:             Lcd_Set_Cursor(2, 9);
  2369   001AB0  0E09               	movlw	9
  2370   001AB2  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2371   001AB4  0E02               	movlw	2
  2372   001AB6  EC8B  F01D         	call	_Lcd_Set_Cursor
  2373   001ABA                     
  2374                           ;Main_program.c: 327:             Lcd_Write_String("Iniciar");
  2375   001ABA  0E19               	movlw	low STR_13
  2376   001ABC  6E15               	movwf	Lcd_Write_String@a^0,c
  2377   001ABE  0E7D               	movlw	high STR_13
  2378   001AC0  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2379   001AC2  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2380   001AC6                     l7412:
  2381                           
  2382                           ;Main_program.c: 328:             CURRENT_OPTION = 1;
  2383   001AC6  0E00               	movlw	0
  2384   001AC8  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  2385   001ACA  0E01               	movlw	1
  2386   001ACC  6E48               	movwf	_CURRENT_OPTION^0,c
  2387                           
  2388                           ;Main_program.c: 329:             break;
  2389   001ACE  EF4D  F00E         	goto	l195
  2390   001AD2                     l7414:
  2391                           
  2392                           ;Main_program.c: 332:             Lcd_Clear();
  2393   001AD2  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2394   001AD6                     
  2395                           ;Main_program.c: 333:             Lcd_Set_Cursor(1, 1);
  2396   001AD6  0E01               	movlw	1
  2397   001AD8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2398   001ADA  0E01               	movlw	1
  2399   001ADC  EC8B  F01D         	call	_Lcd_Set_Cursor
  2400   001AE0                     
  2401                           ;Main_program.c: 334:             Lcd_Write_String("Perf.02 = 1000ml");
  2402   001AE0  0E9D               	movlw	low STR_14
  2403   001AE2  6E15               	movwf	Lcd_Write_String@a^0,c
  2404   001AE4  0E7C               	movlw	high STR_14
  2405   001AE6  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2406   001AE8  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2407   001AEC                     
  2408                           ;Main_program.c: 335:             PROFILE_NUM = 1000;
  2409   001AEC  0E03               	movlw	3
  2410   001AEE  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  2411   001AF0  0EE8               	movlw	232
  2412   001AF2  6E46               	movwf	_PROFILE_NUM^0,c
  2413   001AF4                     
  2414                           ;Main_program.c: 336:             Lcd_Set_Cursor(2, 1);
  2415   001AF4  0E01               	movlw	1
  2416   001AF6  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2417   001AF8  0E02               	movlw	2
  2418   001AFA  EC8B  F01D         	call	_Lcd_Set_Cursor
  2419   001AFE                     
  2420                           ;Main_program.c: 337:             Lcd_Write_String("Atras *");
  2421   001AFE  0E11               	movlw	low STR_12
  2422   001B00  6E15               	movwf	Lcd_Write_String@a^0,c
  2423   001B02  0E7D               	movlw	high STR_12
  2424   001B04  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2425   001B06  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2426   001B0A                     
  2427                           ;Main_program.c: 338:             Lcd_Set_Cursor(2, 9);
  2428   001B0A  0E09               	movlw	9
  2429   001B0C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2430   001B0E  0E02               	movlw	2
  2431   001B10  EC8B  F01D         	call	_Lcd_Set_Cursor
  2432   001B14                     
  2433                           ;Main_program.c: 339:             Lcd_Write_String("Iniciar");
  2434   001B14  0E19               	movlw	low STR_13
  2435   001B16  6E15               	movwf	Lcd_Write_String@a^0,c
  2436   001B18  0E7D               	movlw	high STR_13
  2437   001B1A  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2438   001B1C  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2439   001B20  EF63  F00D         	goto	l7412
  2440   001B24                     l7432:
  2441                           
  2442                           ;Main_program.c: 344:             Lcd_Clear();
  2443   001B24  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2444   001B28                     
  2445                           ;Main_program.c: 345:             Lcd_Set_Cursor(1, 1);
  2446   001B28  0E01               	movlw	1
  2447   001B2A  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2448   001B2C  0E01               	movlw	1
  2449   001B2E  EC8B  F01D         	call	_Lcd_Set_Cursor
  2450   001B32                     
  2451                           ;Main_program.c: 346:             Lcd_Write_String("Perf.03 = 500ml");
  2452   001B32  0ED0               	movlw	low STR_17
  2453   001B34  6E15               	movwf	Lcd_Write_String@a^0,c
  2454   001B36  0E7C               	movlw	high STR_17
  2455   001B38  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2456   001B3A  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2457   001B3E                     
  2458                           ;Main_program.c: 347:             PROFILE_NUM = 500;
  2459   001B3E  0E01               	movlw	1
  2460   001B40  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  2461   001B42  0EF4               	movlw	244
  2462   001B44  6E46               	movwf	_PROFILE_NUM^0,c
  2463   001B46                     
  2464                           ;Main_program.c: 348:             Lcd_Set_Cursor(2, 1);
  2465   001B46  0E01               	movlw	1
  2466   001B48  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2467   001B4A  0E02               	movlw	2
  2468   001B4C  EC8B  F01D         	call	_Lcd_Set_Cursor
  2469   001B50                     
  2470                           ;Main_program.c: 349:             Lcd_Write_String("Atras *");
  2471   001B50  0E11               	movlw	low STR_12
  2472   001B52  6E15               	movwf	Lcd_Write_String@a^0,c
  2473   001B54  0E7D               	movlw	high STR_12
  2474   001B56  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2475   001B58  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2476   001B5C                     
  2477                           ;Main_program.c: 350:             Lcd_Set_Cursor(2, 9);
  2478   001B5C  0E09               	movlw	9
  2479   001B5E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2480   001B60  0E02               	movlw	2
  2481   001B62  EC8B  F01D         	call	_Lcd_Set_Cursor
  2482   001B66                     
  2483                           ;Main_program.c: 351:             Lcd_Write_String("Iniciar");
  2484   001B66  0E19               	movlw	low STR_13
  2485   001B68  6E15               	movwf	Lcd_Write_String@a^0,c
  2486   001B6A  0E7D               	movlw	high STR_13
  2487   001B6C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2488   001B6E  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2489   001B72  EF63  F00D         	goto	l7412
  2490   001B76                     l7450:
  2491                           
  2492                           ;Main_program.c: 356:             Lcd_Clear();
  2493   001B76  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2494   001B7A                     
  2495                           ;Main_program.c: 357:             Lcd_Set_Cursor(1, 1);
  2496   001B7A  0E01               	movlw	1
  2497   001B7C  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2498   001B7E  0E01               	movlw	1
  2499   001B80  EC8B  F01D         	call	_Lcd_Set_Cursor
  2500   001B84                     
  2501                           ;Main_program.c: 358:             Lcd_Write_String("Perf.04 = 250ml");
  2502   001B84  0EE0               	movlw	low STR_20
  2503   001B86  6E15               	movwf	Lcd_Write_String@a^0,c
  2504   001B88  0E7C               	movlw	high STR_20
  2505   001B8A  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2506   001B8C  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2507   001B90                     
  2508                           ;Main_program.c: 359:             PROFILE_NUM = 250;
  2509   001B90  0E00               	movlw	0
  2510   001B92  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  2511   001B94  0EFA               	movlw	250
  2512   001B96  6E46               	movwf	_PROFILE_NUM^0,c
  2513   001B98                     
  2514                           ;Main_program.c: 360:             Lcd_Set_Cursor(2, 1);
  2515   001B98  0E01               	movlw	1
  2516   001B9A  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2517   001B9C  0E02               	movlw	2
  2518   001B9E  EC8B  F01D         	call	_Lcd_Set_Cursor
  2519   001BA2                     
  2520                           ;Main_program.c: 361:             Lcd_Write_String("Atras *");
  2521   001BA2  0E11               	movlw	low STR_12
  2522   001BA4  6E15               	movwf	Lcd_Write_String@a^0,c
  2523   001BA6  0E7D               	movlw	high STR_12
  2524   001BA8  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2525   001BAA  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2526   001BAE                     
  2527                           ;Main_program.c: 362:             Lcd_Set_Cursor(2, 9);
  2528   001BAE  0E09               	movlw	9
  2529   001BB0  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2530   001BB2  0E02               	movlw	2
  2531   001BB4  EC8B  F01D         	call	_Lcd_Set_Cursor
  2532   001BB8                     
  2533                           ;Main_program.c: 363:             Lcd_Write_String("Iniciar");
  2534   001BB8  0E19               	movlw	low STR_13
  2535   001BBA  6E15               	movwf	Lcd_Write_String@a^0,c
  2536   001BBC  0E7D               	movlw	high STR_13
  2537   001BBE  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2538   001BC0  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2539   001BC4  EF63  F00D         	goto	l7412
  2540   001BC8                     l7468:
  2541                           
  2542                           ;Main_program.c: 368:             Lcd_Clear();
  2543   001BC8  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2544   001BCC                     
  2545                           ;Main_program.c: 369:             Lcd_Set_Cursor(1, 1);
  2546   001BCC  0E01               	movlw	1
  2547   001BCE  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2548   001BD0  0E01               	movlw	1
  2549   001BD2  EC8B  F01D         	call	_Lcd_Set_Cursor
  2550   001BD6                     
  2551                           ;Main_program.c: 370:             Lcd_Write_String("Perf.05 = 100ml ");
  2552   001BD6  0E48               	movlw	low STR_23
  2553   001BD8  6E15               	movwf	Lcd_Write_String@a^0,c
  2554   001BDA  0E7C               	movlw	high STR_23
  2555   001BDC  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2556   001BDE  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2557   001BE2                     
  2558                           ;Main_program.c: 371:             PROFILE_NUM = 100;
  2559   001BE2  0E00               	movlw	0
  2560   001BE4  6E47               	movwf	(_PROFILE_NUM+1)^0,c
  2561   001BE6  0E64               	movlw	100
  2562   001BE8  6E46               	movwf	_PROFILE_NUM^0,c
  2563   001BEA                     
  2564                           ;Main_program.c: 372:             Lcd_Set_Cursor(2, 1);
  2565   001BEA  0E01               	movlw	1
  2566   001BEC  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2567   001BEE  0E02               	movlw	2
  2568   001BF0  EC8B  F01D         	call	_Lcd_Set_Cursor
  2569   001BF4                     
  2570                           ;Main_program.c: 373:             Lcd_Write_String("Atras *");
  2571   001BF4  0E11               	movlw	low STR_12
  2572   001BF6  6E15               	movwf	Lcd_Write_String@a^0,c
  2573   001BF8  0E7D               	movlw	high STR_12
  2574   001BFA  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2575   001BFC  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2576   001C00                     
  2577                           ;Main_program.c: 374:             Lcd_Set_Cursor(2, 9);
  2578   001C00  0E09               	movlw	9
  2579   001C02  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2580   001C04  0E02               	movlw	2
  2581   001C06  EC8B  F01D         	call	_Lcd_Set_Cursor
  2582   001C0A                     
  2583                           ;Main_program.c: 375:             Lcd_Write_String("Iniciar");
  2584   001C0A  0E19               	movlw	low STR_13
  2585   001C0C  6E15               	movwf	Lcd_Write_String@a^0,c
  2586   001C0E  0E7D               	movlw	high STR_13
  2587   001C10  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2588   001C12  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2589   001C16  EF63  F00D         	goto	l7412
  2590   001C1A                     l7486:
  2591                           
  2592                           ;Main_program.c: 380:             Lcd_Clear();
  2593   001C1A  EC2E  F022         	call	_Lcd_Clear	;wreg free
  2594   001C1E                     
  2595                           ;Main_program.c: 381:             Lcd_Set_Cursor(1, 1);
  2596   001C1E  0E01               	movlw	1
  2597   001C20  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2598   001C22  0E01               	movlw	1
  2599   001C24  EC8B  F01D         	call	_Lcd_Set_Cursor
  2600   001C28                     
  2601                           ;Main_program.c: 382:             Lcd_Write_String("  No encontrado ");
  2602   001C28  0E59               	movlw	low STR_26
  2603   001C2A  6E15               	movwf	Lcd_Write_String@a^0,c
  2604   001C2C  0E7C               	movlw	high STR_26
  2605   001C2E  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2606   001C30  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2607   001C34                     
  2608                           ;Main_program.c: 383:             Lcd_Set_Cursor(2, 1);
  2609   001C34  0E01               	movlw	1
  2610   001C36  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  2611   001C38  0E02               	movlw	2
  2612   001C3A  EC8B  F01D         	call	_Lcd_Set_Cursor
  2613   001C3E                     
  2614                           ;Main_program.c: 384:             Lcd_Write_String("Atras *");
  2615   001C3E  0E11               	movlw	low STR_12
  2616   001C40  6E15               	movwf	Lcd_Write_String@a^0,c
  2617   001C42  0E7D               	movlw	high STR_12
  2618   001C44  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  2619   001C46  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  2620                           
  2621                           ;Main_program.c: 385:     }
  2622   001C4A  EF4D  F00E         	goto	l195
  2623   001C4E                     l7496:
  2624   001C4E  C046  F01B         	movff	_PROFILE_NUM,??_USER_VALUE
  2625   001C52  C047  F01C         	movff	_PROFILE_NUM+1,??_USER_VALUE+1
  2626                           
  2627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2628                           ; Switch size 1, requested type "simple"
  2629                           ; Number of cases is 1, Range of values is 0 to 0
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte            4     3 (average)
  2633                           ;	Chosen strategy is simple_byte
  2634   001C56  501C               	movf	(??_USER_VALUE+1)^0,w,c
  2635   001C58  0A00               	xorlw	0	; case 0
  2636   001C5A  B4D8               	btfsc	status,2,c
  2637   001C5C  EF32  F00E         	goto	l7956
  2638   001C60  EF0D  F00E         	goto	l7486
  2639   001C64                     l7956:
  2640                           
  2641                           ; Switch size 1, requested type "simple"
  2642                           ; Number of cases is 6, Range of values is 0 to 5
  2643                           ; switch strategies available:
  2644                           ; Name         Instructions Cycles
  2645                           ; simple_byte           19    10 (average)
  2646                           ;	Chosen strategy is simple_byte
  2647   001C64  501B               	movf	??_USER_VALUE^0,w,c
  2648   001C66  0A00               	xorlw	0	; case 0
  2649   001C68  B4D8               	btfsc	status,2,c
  2650   001C6A  EFF4  F00C         	goto	l7376
  2651   001C6E  0A01               	xorlw	1	; case 1
  2652   001C70  B4D8               	btfsc	status,2,c
  2653   001C72  EF3C  F00D         	goto	l7396
  2654   001C76  0A03               	xorlw	3	; case 2
  2655   001C78  B4D8               	btfsc	status,2,c
  2656   001C7A  EF69  F00D         	goto	l7414
  2657   001C7E  0A01               	xorlw	1	; case 3
  2658   001C80  B4D8               	btfsc	status,2,c
  2659   001C82  EF92  F00D         	goto	l7432
  2660   001C86  0A07               	xorlw	7	; case 4
  2661   001C88  B4D8               	btfsc	status,2,c
  2662   001C8A  EFBB  F00D         	goto	l7450
  2663   001C8E  0A01               	xorlw	1	; case 5
  2664   001C90  B4D8               	btfsc	status,2,c
  2665   001C92  EFE4  F00D         	goto	l7468
  2666   001C96  EF0D  F00E         	goto	l7486
  2667   001C9A                     l195:
  2668   001C9A  0012               	return		;funcret
  2669   001C9C                     __end_of_USER_VALUE:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _Lcd_NoBlink *****************
  2673 ;; Defined at:
  2674 ;;		line 129 in file "lcd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 4
  2695 ;; This function calls:
  2696 ;;		_Lcd_Cmd
  2697 ;; This function is called by:
  2698 ;;		_USER_VALUE
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text3
  2703   004416                     __ptext3:
  2704                           	callstack 0
  2705   004416                     _Lcd_NoBlink:
  2706                           	callstack 25
  2707   004416                     
  2708                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  2709   004416  0E00               	movlw	0
  2710   004418  ECE9  F021         	call	_Lcd_Cmd
  2711                           
  2712                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  2713   00441C  0E0C               	movlw	12
  2714   00441E  ECE9  F021         	call	_Lcd_Cmd
  2715   004422  0012               	return		;funcret
  2716   004424                     __end_of_Lcd_NoBlink:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _Lcd_Blink *****************
  2720 ;; Defined at:
  2721 ;;		line 123 in file "lcd.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2735 ;;      Params:         0       0       0       0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 4
  2742 ;; This function calls:
  2743 ;;		_Lcd_Cmd
  2744 ;; This function is called by:
  2745 ;;		_USER_VALUE
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text4
  2750   004424                     __ptext4:
  2751                           	callstack 0
  2752   004424                     _Lcd_Blink:
  2753                           	callstack 25
  2754   004424                     
  2755                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  2756   004424  0E00               	movlw	0
  2757   004426  ECE9  F021         	call	_Lcd_Cmd
  2758                           
  2759                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  2760   00442A  0E0F               	movlw	15
  2761   00442C  ECE9  F021         	call	_Lcd_Cmd
  2762   004430  0012               	return		;funcret
  2763   004432                     __end_of_Lcd_Blink:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _Keypad_Get_Char *****************
  2767 ;; Defined at:
  2768 ;;		line 23 in file "kbd4x4.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      unsigned char 
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2784 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; Hardware stack levels required when called: 2
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;;		_USER_VALUE
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text5
  2798   002460                     __ptext5:
  2799                           	callstack 0
  2800   002460                     _Keypad_Get_Char:
  2801                           	callstack 27
  2802   002460                     
  2803                           ;kbd4x4.c: 25:     PORTDbits.RD7 = 0;
  2804   002460  9E83               	bcf	131,7,c	;volatile
  2805                           
  2806                           ;kbd4x4.c: 26:     PORTDbits.RD6 = 1;
  2807   002462  8C83               	bsf	131,6,c	;volatile
  2808                           
  2809                           ;kbd4x4.c: 27:     PORTDbits.RD5 = 1;
  2810   002464  8A83               	bsf	131,5,c	;volatile
  2811                           
  2812                           ;kbd4x4.c: 28:     PORTDbits.RD4 = 1;
  2813   002466  8883               	bsf	131,4,c	;volatile
  2814                           
  2815                           ;kbd4x4.c: 29:     if(PORTDbits.RD3 == 0){
  2816   002468  B683               	btfsc	131,3,c	;volatile
  2817   00246A  EF39  F012         	goto	u1941
  2818   00246E  EF3B  F012         	goto	u1940
  2819   002472                     u1941:
  2820   002472  EF54  F012         	goto	l320
  2821   002476                     u1940:
  2822   002476                     
  2823                           ;kbd4x4.c: 30:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2824   002476  0E06               	movlw	6
  2825   002478  6E11               	movwf	??_Keypad_Get_Char^0,c
  2826   00247A  0E30               	movlw	48
  2827   00247C                     u8207:
  2828   00247C  2EE8               	decfsz	wreg,f,c
  2829   00247E  D7FE               	bra	u8207
  2830   002480  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2831   002482  D7FC               	bra	u8207
  2832   002484  D000               	nop2	
  2833   002486                     l321:
  2834   002486  A683               	btfss	131,3,c	;volatile
  2835   002488  EF48  F012         	goto	u1951
  2836   00248C  EF4A  F012         	goto	u1950
  2837   002490                     u1951:
  2838   002490  EF43  F012         	goto	l321
  2839   002494                     u1950:
  2840   002494                     
  2841                           ;kbd4x4.c: 32:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2842   002494  0E0D               	movlw	13
  2843   002496  6E11               	movwf	??_Keypad_Get_Char^0,c
  2844   002498  0EFC               	movlw	252
  2845   00249A                     u8217:
  2846   00249A  2EE8               	decfsz	wreg,f,c
  2847   00249C  D7FE               	bra	u8217
  2848   00249E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2849   0024A0  D7FC               	bra	u8217
  2850                           
  2851                           ;kbd4x4.c: 33:         return '1';
  2852   0024A2  0E31               	movlw	49
  2853   0024A4  EFC1  F013         	goto	l324
  2854   0024A8                     l320:
  2855                           
  2856                           ;kbd4x4.c: 35:     if(PORTDbits.RD2 == 0){
  2857   0024A8  B483               	btfsc	131,2,c	;volatile
  2858   0024AA  EF59  F012         	goto	u1961
  2859   0024AE  EF5B  F012         	goto	u1960
  2860   0024B2                     u1961:
  2861   0024B2  EF74  F012         	goto	l325
  2862   0024B6                     u1960:
  2863   0024B6                     
  2864                           ;kbd4x4.c: 36:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2865   0024B6  0E06               	movlw	6
  2866   0024B8  6E11               	movwf	??_Keypad_Get_Char^0,c
  2867   0024BA  0E30               	movlw	48
  2868   0024BC                     u8227:
  2869   0024BC  2EE8               	decfsz	wreg,f,c
  2870   0024BE  D7FE               	bra	u8227
  2871   0024C0  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2872   0024C2  D7FC               	bra	u8227
  2873   0024C4  D000               	nop2	
  2874   0024C6                     l326:
  2875   0024C6  A483               	btfss	131,2,c	;volatile
  2876   0024C8  EF68  F012         	goto	u1971
  2877   0024CC  EF6A  F012         	goto	u1970
  2878   0024D0                     u1971:
  2879   0024D0  EF63  F012         	goto	l326
  2880   0024D4                     u1970:
  2881   0024D4                     
  2882                           ;kbd4x4.c: 38:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2883   0024D4  0E0D               	movlw	13
  2884   0024D6  6E11               	movwf	??_Keypad_Get_Char^0,c
  2885   0024D8  0EFC               	movlw	252
  2886   0024DA                     u8237:
  2887   0024DA  2EE8               	decfsz	wreg,f,c
  2888   0024DC  D7FE               	bra	u8237
  2889   0024DE  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2890   0024E0  D7FC               	bra	u8237
  2891                           
  2892                           ;kbd4x4.c: 39:         return '2';
  2893   0024E2  0E32               	movlw	50
  2894   0024E4  EFC1  F013         	goto	l324
  2895   0024E8                     l325:
  2896                           
  2897                           ;kbd4x4.c: 41:     if(PORTDbits.RD1 == 0){
  2898   0024E8  B283               	btfsc	131,1,c	;volatile
  2899   0024EA  EF79  F012         	goto	u1981
  2900   0024EE  EF7B  F012         	goto	u1980
  2901   0024F2                     u1981:
  2902   0024F2  EF94  F012         	goto	l329
  2903   0024F6                     u1980:
  2904   0024F6                     
  2905                           ;kbd4x4.c: 42:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2906   0024F6  0E06               	movlw	6
  2907   0024F8  6E11               	movwf	??_Keypad_Get_Char^0,c
  2908   0024FA  0E30               	movlw	48
  2909   0024FC                     u8247:
  2910   0024FC  2EE8               	decfsz	wreg,f,c
  2911   0024FE  D7FE               	bra	u8247
  2912   002500  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2913   002502  D7FC               	bra	u8247
  2914   002504  D000               	nop2	
  2915   002506                     l330:
  2916   002506  A283               	btfss	131,1,c	;volatile
  2917   002508  EF88  F012         	goto	u1991
  2918   00250C  EF8A  F012         	goto	u1990
  2919   002510                     u1991:
  2920   002510  EF83  F012         	goto	l330
  2921   002514                     u1990:
  2922   002514                     
  2923                           ;kbd4x4.c: 44:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2924   002514  0E0D               	movlw	13
  2925   002516  6E11               	movwf	??_Keypad_Get_Char^0,c
  2926   002518  0EFC               	movlw	252
  2927   00251A                     u8257:
  2928   00251A  2EE8               	decfsz	wreg,f,c
  2929   00251C  D7FE               	bra	u8257
  2930   00251E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2931   002520  D7FC               	bra	u8257
  2932                           
  2933                           ;kbd4x4.c: 45:         return '3';
  2934   002522  0E33               	movlw	51
  2935   002524  EFC1  F013         	goto	l324
  2936   002528                     l329:
  2937                           
  2938                           ;kbd4x4.c: 54:     PORTDbits.RD7 = 1;
  2939   002528  8E83               	bsf	131,7,c	;volatile
  2940                           
  2941                           ;kbd4x4.c: 55:     PORTDbits.RD6 = 0;
  2942   00252A  9C83               	bcf	131,6,c	;volatile
  2943                           
  2944                           ;kbd4x4.c: 56:     PORTDbits.RD5 = 1;
  2945   00252C  8A83               	bsf	131,5,c	;volatile
  2946                           
  2947                           ;kbd4x4.c: 57:     PORTDbits.RD4 = 1;
  2948   00252E  8883               	bsf	131,4,c	;volatile
  2949                           
  2950                           ;kbd4x4.c: 58:     if(PORTDbits.RD3 == 0){
  2951   002530  B683               	btfsc	131,3,c	;volatile
  2952   002532  EF9D  F012         	goto	u2001
  2953   002536  EF9F  F012         	goto	u2000
  2954   00253A                     u2001:
  2955   00253A  EFB8  F012         	goto	l333
  2956   00253E                     u2000:
  2957   00253E                     
  2958                           ;kbd4x4.c: 59:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  2959   00253E  0E06               	movlw	6
  2960   002540  6E11               	movwf	??_Keypad_Get_Char^0,c
  2961   002542  0E30               	movlw	48
  2962   002544                     u8267:
  2963   002544  2EE8               	decfsz	wreg,f,c
  2964   002546  D7FE               	bra	u8267
  2965   002548  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2966   00254A  D7FC               	bra	u8267
  2967   00254C  D000               	nop2	
  2968   00254E                     l334:
  2969   00254E  A683               	btfss	131,3,c	;volatile
  2970   002550  EFAC  F012         	goto	u2011
  2971   002554  EFAE  F012         	goto	u2010
  2972   002558                     u2011:
  2973   002558  EFA7  F012         	goto	l334
  2974   00255C                     u2010:
  2975   00255C                     
  2976                           ;kbd4x4.c: 61:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  2977   00255C  0E0D               	movlw	13
  2978   00255E  6E11               	movwf	??_Keypad_Get_Char^0,c
  2979   002560  0EFC               	movlw	252
  2980   002562                     u8277:
  2981   002562  2EE8               	decfsz	wreg,f,c
  2982   002564  D7FE               	bra	u8277
  2983   002566  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  2984   002568  D7FC               	bra	u8277
  2985                           
  2986                           ;kbd4x4.c: 62:         return '4';
  2987   00256A  0E34               	movlw	52
  2988   00256C  EFC1  F013         	goto	l324
  2989   002570                     l333:
  2990                           
  2991                           ;kbd4x4.c: 64:     if(PORTDbits.RD2 == 0){
  2992   002570  B483               	btfsc	131,2,c	;volatile
  2993   002572  EFBD  F012         	goto	u2021
  2994   002576  EFBF  F012         	goto	u2020
  2995   00257A                     u2021:
  2996   00257A  EFD8  F012         	goto	l337
  2997   00257E                     u2020:
  2998   00257E                     
  2999                           ;kbd4x4.c: 65:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3000   00257E  0E06               	movlw	6
  3001   002580  6E11               	movwf	??_Keypad_Get_Char^0,c
  3002   002582  0E30               	movlw	48
  3003   002584                     u8287:
  3004   002584  2EE8               	decfsz	wreg,f,c
  3005   002586  D7FE               	bra	u8287
  3006   002588  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3007   00258A  D7FC               	bra	u8287
  3008   00258C  D000               	nop2	
  3009   00258E                     l338:
  3010   00258E  A483               	btfss	131,2,c	;volatile
  3011   002590  EFCC  F012         	goto	u2031
  3012   002594  EFCE  F012         	goto	u2030
  3013   002598                     u2031:
  3014   002598  EFC7  F012         	goto	l338
  3015   00259C                     u2030:
  3016   00259C                     
  3017                           ;kbd4x4.c: 67:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3018   00259C  0E0D               	movlw	13
  3019   00259E  6E11               	movwf	??_Keypad_Get_Char^0,c
  3020   0025A0  0EFC               	movlw	252
  3021   0025A2                     u8297:
  3022   0025A2  2EE8               	decfsz	wreg,f,c
  3023   0025A4  D7FE               	bra	u8297
  3024   0025A6  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3025   0025A8  D7FC               	bra	u8297
  3026                           
  3027                           ;kbd4x4.c: 68:         return '5';
  3028   0025AA  0E35               	movlw	53
  3029   0025AC  EFC1  F013         	goto	l324
  3030   0025B0                     l337:
  3031                           
  3032                           ;kbd4x4.c: 70:     if(PORTDbits.RD1 == 0){
  3033   0025B0  B283               	btfsc	131,1,c	;volatile
  3034   0025B2  EFDD  F012         	goto	u2041
  3035   0025B6  EFDF  F012         	goto	u2040
  3036   0025BA                     u2041:
  3037   0025BA  EFF8  F012         	goto	l341
  3038   0025BE                     u2040:
  3039   0025BE                     
  3040                           ;kbd4x4.c: 71:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3041   0025BE  0E06               	movlw	6
  3042   0025C0  6E11               	movwf	??_Keypad_Get_Char^0,c
  3043   0025C2  0E30               	movlw	48
  3044   0025C4                     u8307:
  3045   0025C4  2EE8               	decfsz	wreg,f,c
  3046   0025C6  D7FE               	bra	u8307
  3047   0025C8  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3048   0025CA  D7FC               	bra	u8307
  3049   0025CC  D000               	nop2	
  3050   0025CE                     l342:
  3051   0025CE  A283               	btfss	131,1,c	;volatile
  3052   0025D0  EFEC  F012         	goto	u2051
  3053   0025D4  EFEE  F012         	goto	u2050
  3054   0025D8                     u2051:
  3055   0025D8  EFE7  F012         	goto	l342
  3056   0025DC                     u2050:
  3057   0025DC                     
  3058                           ;kbd4x4.c: 73:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3059   0025DC  0E0D               	movlw	13
  3060   0025DE  6E11               	movwf	??_Keypad_Get_Char^0,c
  3061   0025E0  0EFC               	movlw	252
  3062   0025E2                     u8317:
  3063   0025E2  2EE8               	decfsz	wreg,f,c
  3064   0025E4  D7FE               	bra	u8317
  3065   0025E6  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3066   0025E8  D7FC               	bra	u8317
  3067                           
  3068                           ;kbd4x4.c: 74:         return '6';
  3069   0025EA  0E36               	movlw	54
  3070   0025EC  EFC1  F013         	goto	l324
  3071   0025F0                     l341:
  3072                           
  3073                           ;kbd4x4.c: 83:     PORTDbits.RD7 = 1;
  3074   0025F0  8E83               	bsf	131,7,c	;volatile
  3075                           
  3076                           ;kbd4x4.c: 84:     PORTDbits.RD6 = 1;
  3077   0025F2  8C83               	bsf	131,6,c	;volatile
  3078                           
  3079                           ;kbd4x4.c: 85:     PORTDbits.RD5 = 0;
  3080   0025F4  9A83               	bcf	131,5,c	;volatile
  3081                           
  3082                           ;kbd4x4.c: 86:     PORTDbits.RD4 = 1;
  3083   0025F6  8883               	bsf	131,4,c	;volatile
  3084                           
  3085                           ;kbd4x4.c: 87:     if(PORTDbits.RD3 == 0){
  3086   0025F8  B683               	btfsc	131,3,c	;volatile
  3087   0025FA  EF01  F013         	goto	u2061
  3088   0025FE  EF03  F013         	goto	u2060
  3089   002602                     u2061:
  3090   002602  EF1C  F013         	goto	l345
  3091   002606                     u2060:
  3092   002606                     
  3093                           ;kbd4x4.c: 88:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3094   002606  0E06               	movlw	6
  3095   002608  6E11               	movwf	??_Keypad_Get_Char^0,c
  3096   00260A  0E30               	movlw	48
  3097   00260C                     u8327:
  3098   00260C  2EE8               	decfsz	wreg,f,c
  3099   00260E  D7FE               	bra	u8327
  3100   002610  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3101   002612  D7FC               	bra	u8327
  3102   002614  D000               	nop2	
  3103   002616                     l346:
  3104   002616  A683               	btfss	131,3,c	;volatile
  3105   002618  EF10  F013         	goto	u2071
  3106   00261C  EF12  F013         	goto	u2070
  3107   002620                     u2071:
  3108   002620  EF0B  F013         	goto	l346
  3109   002624                     u2070:
  3110   002624                     
  3111                           ;kbd4x4.c: 90:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3112   002624  0E0D               	movlw	13
  3113   002626  6E11               	movwf	??_Keypad_Get_Char^0,c
  3114   002628  0EFC               	movlw	252
  3115   00262A                     u8337:
  3116   00262A  2EE8               	decfsz	wreg,f,c
  3117   00262C  D7FE               	bra	u8337
  3118   00262E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3119   002630  D7FC               	bra	u8337
  3120                           
  3121                           ;kbd4x4.c: 91:         return '7';
  3122   002632  0E37               	movlw	55
  3123   002634  EFC1  F013         	goto	l324
  3124   002638                     l345:
  3125                           
  3126                           ;kbd4x4.c: 93:     if(PORTDbits.RD2 == 0){
  3127   002638  B483               	btfsc	131,2,c	;volatile
  3128   00263A  EF21  F013         	goto	u2081
  3129   00263E  EF23  F013         	goto	u2080
  3130   002642                     u2081:
  3131   002642  EF3C  F013         	goto	l349
  3132   002646                     u2080:
  3133   002646                     
  3134                           ;kbd4x4.c: 94:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3135   002646  0E06               	movlw	6
  3136   002648  6E11               	movwf	??_Keypad_Get_Char^0,c
  3137   00264A  0E30               	movlw	48
  3138   00264C                     u8347:
  3139   00264C  2EE8               	decfsz	wreg,f,c
  3140   00264E  D7FE               	bra	u8347
  3141   002650  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3142   002652  D7FC               	bra	u8347
  3143   002654  D000               	nop2	
  3144   002656                     l350:
  3145   002656  A483               	btfss	131,2,c	;volatile
  3146   002658  EF30  F013         	goto	u2091
  3147   00265C  EF32  F013         	goto	u2090
  3148   002660                     u2091:
  3149   002660  EF2B  F013         	goto	l350
  3150   002664                     u2090:
  3151   002664                     
  3152                           ;kbd4x4.c: 96:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3153   002664  0E0D               	movlw	13
  3154   002666  6E11               	movwf	??_Keypad_Get_Char^0,c
  3155   002668  0EFC               	movlw	252
  3156   00266A                     u8357:
  3157   00266A  2EE8               	decfsz	wreg,f,c
  3158   00266C  D7FE               	bra	u8357
  3159   00266E  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3160   002670  D7FC               	bra	u8357
  3161                           
  3162                           ;kbd4x4.c: 97:         return '8';
  3163   002672  0E38               	movlw	56
  3164   002674  EFC1  F013         	goto	l324
  3165   002678                     l349:
  3166                           
  3167                           ;kbd4x4.c: 99:     if(PORTDbits.RD1 == 0){
  3168   002678  B283               	btfsc	131,1,c	;volatile
  3169   00267A  EF41  F013         	goto	u2101
  3170   00267E  EF43  F013         	goto	u2100
  3171   002682                     u2101:
  3172   002682  EF5C  F013         	goto	l353
  3173   002686                     u2100:
  3174   002686                     
  3175                           ;kbd4x4.c: 100:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3176   002686  0E06               	movlw	6
  3177   002688  6E11               	movwf	??_Keypad_Get_Char^0,c
  3178   00268A  0E30               	movlw	48
  3179   00268C                     u8367:
  3180   00268C  2EE8               	decfsz	wreg,f,c
  3181   00268E  D7FE               	bra	u8367
  3182   002690  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3183   002692  D7FC               	bra	u8367
  3184   002694  D000               	nop2	
  3185   002696                     l354:
  3186   002696  A283               	btfss	131,1,c	;volatile
  3187   002698  EF50  F013         	goto	u2111
  3188   00269C  EF52  F013         	goto	u2110
  3189   0026A0                     u2111:
  3190   0026A0  EF4B  F013         	goto	l354
  3191   0026A4                     u2110:
  3192   0026A4                     
  3193                           ;kbd4x4.c: 102:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3194   0026A4  0E0D               	movlw	13
  3195   0026A6  6E11               	movwf	??_Keypad_Get_Char^0,c
  3196   0026A8  0EFC               	movlw	252
  3197   0026AA                     u8377:
  3198   0026AA  2EE8               	decfsz	wreg,f,c
  3199   0026AC  D7FE               	bra	u8377
  3200   0026AE  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3201   0026B0  D7FC               	bra	u8377
  3202                           
  3203                           ;kbd4x4.c: 103:         return '9';
  3204   0026B2  0E39               	movlw	57
  3205   0026B4  EFC1  F013         	goto	l324
  3206   0026B8                     l353:
  3207                           
  3208                           ;kbd4x4.c: 112:     PORTDbits.RD7 = 1;
  3209   0026B8  8E83               	bsf	131,7,c	;volatile
  3210                           
  3211                           ;kbd4x4.c: 113:     PORTDbits.RD6 = 1;
  3212   0026BA  8C83               	bsf	131,6,c	;volatile
  3213                           
  3214                           ;kbd4x4.c: 114:     PORTDbits.RD5 = 1;
  3215   0026BC  8A83               	bsf	131,5,c	;volatile
  3216                           
  3217                           ;kbd4x4.c: 115:     PORTDbits.RD4 = 0;
  3218   0026BE  9883               	bcf	131,4,c	;volatile
  3219                           
  3220                           ;kbd4x4.c: 116:     if(PORTDbits.RD3 == 0){
  3221   0026C0  B683               	btfsc	131,3,c	;volatile
  3222   0026C2  EF65  F013         	goto	u2121
  3223   0026C6  EF67  F013         	goto	u2120
  3224   0026CA                     u2121:
  3225   0026CA  EF80  F013         	goto	l357
  3226   0026CE                     u2120:
  3227   0026CE                     
  3228                           ;kbd4x4.c: 117:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3229   0026CE  0E06               	movlw	6
  3230   0026D0  6E11               	movwf	??_Keypad_Get_Char^0,c
  3231   0026D2  0E30               	movlw	48
  3232   0026D4                     u8387:
  3233   0026D4  2EE8               	decfsz	wreg,f,c
  3234   0026D6  D7FE               	bra	u8387
  3235   0026D8  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3236   0026DA  D7FC               	bra	u8387
  3237   0026DC  D000               	nop2	
  3238   0026DE                     l358:
  3239   0026DE  A683               	btfss	131,3,c	;volatile
  3240   0026E0  EF74  F013         	goto	u2131
  3241   0026E4  EF76  F013         	goto	u2130
  3242   0026E8                     u2131:
  3243   0026E8  EF6F  F013         	goto	l358
  3244   0026EC                     u2130:
  3245   0026EC                     
  3246                           ;kbd4x4.c: 119:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3247   0026EC  0E0D               	movlw	13
  3248   0026EE  6E11               	movwf	??_Keypad_Get_Char^0,c
  3249   0026F0  0EFC               	movlw	252
  3250   0026F2                     u8397:
  3251   0026F2  2EE8               	decfsz	wreg,f,c
  3252   0026F4  D7FE               	bra	u8397
  3253   0026F6  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3254   0026F8  D7FC               	bra	u8397
  3255                           
  3256                           ;kbd4x4.c: 120:         return '*';
  3257   0026FA  0E2A               	movlw	42
  3258   0026FC  EFC1  F013         	goto	l324
  3259   002700                     l357:
  3260                           
  3261                           ;kbd4x4.c: 122:     if(PORTDbits.RD2 == 0){
  3262   002700  B483               	btfsc	131,2,c	;volatile
  3263   002702  EF85  F013         	goto	u2141
  3264   002706  EF87  F013         	goto	u2140
  3265   00270A                     u2141:
  3266   00270A  EFA0  F013         	goto	l361
  3267   00270E                     u2140:
  3268   00270E                     
  3269                           ;kbd4x4.c: 123:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3270   00270E  0E06               	movlw	6
  3271   002710  6E11               	movwf	??_Keypad_Get_Char^0,c
  3272   002712  0E30               	movlw	48
  3273   002714                     u8407:
  3274   002714  2EE8               	decfsz	wreg,f,c
  3275   002716  D7FE               	bra	u8407
  3276   002718  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3277   00271A  D7FC               	bra	u8407
  3278   00271C  D000               	nop2	
  3279   00271E                     l362:
  3280   00271E  A483               	btfss	131,2,c	;volatile
  3281   002720  EF94  F013         	goto	u2151
  3282   002724  EF96  F013         	goto	u2150
  3283   002728                     u2151:
  3284   002728  EF8F  F013         	goto	l362
  3285   00272C                     u2150:
  3286   00272C                     
  3287                           ;kbd4x4.c: 125:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3288   00272C  0E0D               	movlw	13
  3289   00272E  6E11               	movwf	??_Keypad_Get_Char^0,c
  3290   002730  0EFC               	movlw	252
  3291   002732                     u8417:
  3292   002732  2EE8               	decfsz	wreg,f,c
  3293   002734  D7FE               	bra	u8417
  3294   002736  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3295   002738  D7FC               	bra	u8417
  3296                           
  3297                           ;kbd4x4.c: 126:         return '0';
  3298   00273A  0E30               	movlw	48
  3299   00273C  EFC1  F013         	goto	l324
  3300   002740                     l361:
  3301                           
  3302                           ;kbd4x4.c: 128:     if(PORTDbits.RD1 == 0){
  3303   002740  B283               	btfsc	131,1,c	;volatile
  3304   002742  EFA5  F013         	goto	u2161
  3305   002746  EFA7  F013         	goto	u2160
  3306   00274A                     u2161:
  3307   00274A  EFC0  F013         	goto	l2618
  3308   00274E                     u2160:
  3309   00274E                     
  3310                           ;kbd4x4.c: 129:         _delay((unsigned long)((2)*(8000000L/4000.0)));
  3311   00274E  0E06               	movlw	6
  3312   002750  6E11               	movwf	??_Keypad_Get_Char^0,c
  3313   002752  0E30               	movlw	48
  3314   002754                     u8427:
  3315   002754  2EE8               	decfsz	wreg,f,c
  3316   002756  D7FE               	bra	u8427
  3317   002758  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3318   00275A  D7FC               	bra	u8427
  3319   00275C  D000               	nop2	
  3320   00275E                     l366:
  3321   00275E  A283               	btfss	131,1,c	;volatile
  3322   002760  EFB4  F013         	goto	u2171
  3323   002764  EFB6  F013         	goto	u2170
  3324   002768                     u2171:
  3325   002768  EFAF  F013         	goto	l366
  3326   00276C                     u2170:
  3327   00276C                     
  3328                           ;kbd4x4.c: 131:         _delay((unsigned long)((5)*(8000000L/4000.0)));
  3329   00276C  0E0D               	movlw	13
  3330   00276E  6E11               	movwf	??_Keypad_Get_Char^0,c
  3331   002770  0EFC               	movlw	252
  3332   002772                     u8437:
  3333   002772  2EE8               	decfsz	wreg,f,c
  3334   002774  D7FE               	bra	u8437
  3335   002776  2E11               	decfsz	??_Keypad_Get_Char^0,f,c
  3336   002778  D7FC               	bra	u8437
  3337                           
  3338                           ;kbd4x4.c: 132:         return '#';
  3339   00277A  0E23               	movlw	35
  3340   00277C  EFC1  F013         	goto	l324
  3341   002780                     l2618:
  3342                           
  3343                           ;kbd4x4.c: 140:     return 0;
  3344   002780  0E00               	movlw	0
  3345   002782                     l324:
  3346   002782  0012               	return		;funcret
  3347   002784                     __end_of_Keypad_Get_Char:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _Lcd_Init *****************
  3351 ;; Defined at:
  3352 ;;		line 63 in file "lcd.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        1 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 5
  3373 ;; This function calls:
  3374 ;;		_Lcd_Clear
  3375 ;;		_Lcd_Cmd
  3376 ;;		_Lcd_Port
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text6
  3383   003E2C                     __ptext6:
  3384                           	callstack 0
  3385   003E2C                     _Lcd_Init:
  3386                           	callstack 25
  3387   003E2C                     
  3388                           ;lcd.c: 65:  TRISAbits.TRISA0 = 0;
  3389   003E2C  9092               	bcf	146,0,c	;volatile
  3390                           
  3391                           ;lcd.c: 66:  TRISAbits.TRISA1 = 0;
  3392   003E2E  9292               	bcf	146,1,c	;volatile
  3393                           
  3394                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  3395   003E30  9893               	bcf	147,4,c	;volatile
  3396                           
  3397                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  3398   003E32  9A93               	bcf	147,5,c	;volatile
  3399                           
  3400                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  3401   003E34  9C93               	bcf	147,6,c	;volatile
  3402                           
  3403                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  3404   003E36  9E93               	bcf	147,7,c	;volatile
  3405   003E38                     
  3406                           ;lcd.c: 71:     Lcd_Port(0x00);
  3407   003E38  0E00               	movlw	0
  3408   003E3A  EC05  F020         	call	_Lcd_Port
  3409   003E3E                     
  3410                           ;lcd.c: 72:     _delay((unsigned long)((20)*(8000000L/4000.0)));
  3411   003E3E  0E34               	movlw	52
  3412   003E40  6E14               	movwf	??_Lcd_Init^0,c
  3413   003E42  0EF2               	movlw	242
  3414   003E44                     u8447:
  3415   003E44  2EE8               	decfsz	wreg,f,c
  3416   003E46  D7FE               	bra	u8447
  3417   003E48  2E14               	decfsz	??_Lcd_Init^0,f,c
  3418   003E4A  D7FC               	bra	u8447
  3419   003E4C                     
  3420                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  3421   003E4C  0E03               	movlw	3
  3422   003E4E  ECE9  F021         	call	_Lcd_Cmd
  3423   003E52                     
  3424                           ;lcd.c: 74:     _delay((unsigned long)((5)*(8000000L/4000.0)));
  3425   003E52  0E0D               	movlw	13
  3426   003E54  6E14               	movwf	??_Lcd_Init^0,c
  3427   003E56  0EFC               	movlw	252
  3428   003E58                     u8457:
  3429   003E58  2EE8               	decfsz	wreg,f,c
  3430   003E5A  D7FE               	bra	u8457
  3431   003E5C  2E14               	decfsz	??_Lcd_Init^0,f,c
  3432   003E5E  D7FC               	bra	u8457
  3433   003E60                     
  3434                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  3435   003E60  0E03               	movlw	3
  3436   003E62  ECE9  F021         	call	_Lcd_Cmd
  3437   003E66                     
  3438                           ;lcd.c: 76:     _delay((unsigned long)((11)*(8000000L/4000.0)));
  3439   003E66  0E1D               	movlw	29
  3440   003E68  6E14               	movwf	??_Lcd_Init^0,c
  3441   003E6A  0E91               	movlw	145
  3442   003E6C                     u8467:
  3443   003E6C  2EE8               	decfsz	wreg,f,c
  3444   003E6E  D7FE               	bra	u8467
  3445   003E70  2E14               	decfsz	??_Lcd_Init^0,f,c
  3446   003E72  D7FC               	bra	u8467
  3447   003E74  F000               	nop	
  3448   003E76                     
  3449                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  3450   003E76  0E03               	movlw	3
  3451   003E78  ECE9  F021         	call	_Lcd_Cmd
  3452   003E7C                     
  3453                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  3454   003E7C  0E02               	movlw	2
  3455   003E7E  ECE9  F021         	call	_Lcd_Cmd
  3456   003E82                     
  3457                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  3458   003E82  0E02               	movlw	2
  3459   003E84  ECE9  F021         	call	_Lcd_Cmd
  3460   003E88                     
  3461                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  3462   003E88  0E08               	movlw	8
  3463   003E8A  ECE9  F021         	call	_Lcd_Cmd
  3464   003E8E                     
  3465                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  3466   003E8E  0E00               	movlw	0
  3467   003E90  ECE9  F021         	call	_Lcd_Cmd
  3468   003E94                     
  3469                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  3470   003E94  0E0C               	movlw	12
  3471   003E96  ECE9  F021         	call	_Lcd_Cmd
  3472   003E9A                     
  3473                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  3474   003E9A  0E00               	movlw	0
  3475   003E9C  ECE9  F021         	call	_Lcd_Cmd
  3476   003EA0                     
  3477                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  3478   003EA0  0E06               	movlw	6
  3479   003EA2  ECE9  F021         	call	_Lcd_Cmd
  3480   003EA6                     
  3481                           ;lcd.c: 85:     Lcd_Clear();
  3482   003EA6  EC2E  F022         	call	_Lcd_Clear	;wreg free
  3483   003EAA  0012               	return		;funcret
  3484   003EAC                     __end_of_Lcd_Init:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _Lcd_CGRAM_Init *****************
  3488 ;; Defined at:
  3489 ;;		line 175 in file "lcd.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 4
  3510 ;; This function calls:
  3511 ;;		_Lcd_Cmd
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text7
  3518   004432                     __ptext7:
  3519                           	callstack 0
  3520   004432                     _Lcd_CGRAM_Init:
  3521                           	callstack 26
  3522   004432                     
  3523                           ;lcd.c: 177:     Lcd_Cmd(0x04);
  3524   004432  0E04               	movlw	4
  3525   004434  ECE9  F021         	call	_Lcd_Cmd
  3526                           
  3527                           ;lcd.c: 178:     Lcd_Cmd(0x00);
  3528   004438  0E00               	movlw	0
  3529   00443A  ECE9  F021         	call	_Lcd_Cmd
  3530   00443E  0012               	return		;funcret
  3531   004440                     __end_of_Lcd_CGRAM_Init:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  3535 ;; Defined at:
  3536 ;;		line 136 in file "lcd.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  add             1    wreg     unsigned char 
  3539 ;;  chardata        2   20[COMRAM] PTR const unsigned char 
  3540 ;;		 -> SENSOR(8), 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  add             1   26[COMRAM] unsigned char 
  3543 ;;  i               1   34[COMRAM] unsigned char 
  3544 ;;  i               1   33[COMRAM] unsigned char 
  3545 ;;  i               1   32[COMRAM] unsigned char 
  3546 ;;  i               1   31[COMRAM] unsigned char 
  3547 ;;  i               1   30[COMRAM] unsigned char 
  3548 ;;  i               1   29[COMRAM] unsigned char 
  3549 ;;  i               1   28[COMRAM] unsigned char 
  3550 ;;  i               1   27[COMRAM] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3560 ;;      Params:         2       0       0       0       0       0       0       0       0
  3561 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3562 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3563 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3564 ;;Total ram usage:       15 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 4
  3567 ;; This function calls:
  3568 ;;		_Lcd_Write_Char
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text8
  3575   002CBC                     __ptext8:
  3576                           	callstack 0
  3577   002CBC                     _Lcd_CGRAM_CreateChar:
  3578                           	callstack 26
  3579                           
  3580                           ;incstack = 0
  3581                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  3582   002CBC  6E1B               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  3583   002CBE                     
  3584                           ;lcd.c: 136: void Lcd_CGRAM_CreateChar(char add, const char* chardata);lcd.c: 137: {;lcd
      +                          .c: 138:     switch(add)
  3585   002CBE  EF63  F017         	goto	l5250
  3586   002CC2                     l5152:
  3587                           
  3588                           ;lcd.c: 141:             for(char i=0; i<=7; i++)
  3589   002CC2  0E00               	movlw	0
  3590   002CC4  6E1C               	movwf	Lcd_CGRAM_CreateChar@i^0,c
  3591   002CC6                     l5158:
  3592                           
  3593                           ;lcd.c: 142:                 Lcd_Write_Char(chardata[i]);
  3594   002CC6  501C               	movf	Lcd_CGRAM_CreateChar@i^0,w,c
  3595   002CC8  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3596   002CCA  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3597   002CCC  0E00               	movlw	0
  3598   002CCE  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3599   002CD0  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3600   002CD2  C017  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  3601   002CD6  C018  FFF7         	movff	??_Lcd_CGRAM_CreateChar+1,tblptrh
  3602   002CDA                     	if	0	;tblptru may be non-zero
  3603   002CDA                     	endif
  3604   002CDA                     	if	0	;tblptru may be non-zero
  3605   002CDA                     	endif
  3606   002CDA  0008               	tblrd		*
  3607   002CDC  50F5               	movf	tablat,w,c
  3608   002CDE  ECA4  F021         	call	_Lcd_Write_Char
  3609   002CE2  2A1C               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  3610   002CE4  0E07               	movlw	7
  3611   002CE6  641C               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  3612   002CE8  EF78  F016         	goto	u5201
  3613   002CEC  EF7A  F016         	goto	u5200
  3614   002CF0                     u5201:
  3615   002CF0  EF63  F016         	goto	l5158
  3616   002CF4                     u5200:
  3617   002CF4  EF90  F017         	goto	l302
  3618   002CF8                     l5164:
  3619                           
  3620                           ;lcd.c: 145:             for(char i=8; i<=15; i++)
  3621   002CF8  0E08               	movlw	8
  3622   002CFA  6E1D               	movwf	Lcd_CGRAM_CreateChar@i_821^0,c
  3623   002CFC                     l5170:
  3624                           
  3625                           ;lcd.c: 146:                 Lcd_Write_Char(chardata[i-8]);
  3626   002CFC  501D               	movf	Lcd_CGRAM_CreateChar@i_821^0,w,c
  3627   002CFE  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3628   002D00  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3629   002D02  0E00               	movlw	0
  3630   002D04  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3631   002D06  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3632   002D08  0EF8               	movlw	248
  3633   002D0A  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3634   002D0C  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3635   002D0E  0EFF               	movlw	255
  3636   002D10  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3637   002D12  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3638   002D14  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3639   002D18  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3640   002D1C                     	if	0	;tblptru may be non-zero
  3641   002D1C                     	endif
  3642   002D1C                     	if	0	;tblptru may be non-zero
  3643   002D1C                     	endif
  3644   002D1C  0008               	tblrd		*
  3645   002D1E  50F5               	movf	tablat,w,c
  3646   002D20  ECA4  F021         	call	_Lcd_Write_Char
  3647   002D24  2A1D               	incf	Lcd_CGRAM_CreateChar@i_821^0,f,c
  3648   002D26  0E0F               	movlw	15
  3649   002D28  641D               	cpfsgt	Lcd_CGRAM_CreateChar@i_821^0,c
  3650   002D2A  EF99  F016         	goto	u5211
  3651   002D2E  EF9B  F016         	goto	u5210
  3652   002D32                     u5211:
  3653   002D32  EF7E  F016         	goto	l5170
  3654   002D36                     u5210:
  3655   002D36  EF90  F017         	goto	l302
  3656   002D3A                     l5176:
  3657                           
  3658                           ;lcd.c: 149:             for(char i=16; i<=23; i++)
  3659   002D3A  0E10               	movlw	16
  3660   002D3C  6E1E               	movwf	Lcd_CGRAM_CreateChar@i_822^0,c
  3661   002D3E                     l5182:
  3662                           
  3663                           ;lcd.c: 150:                 Lcd_Write_Char(chardata[i-16]);
  3664   002D3E  501E               	movf	Lcd_CGRAM_CreateChar@i_822^0,w,c
  3665   002D40  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3666   002D42  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3667   002D44  0E00               	movlw	0
  3668   002D46  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3669   002D48  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3670   002D4A  0EF0               	movlw	240
  3671   002D4C  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3672   002D4E  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3673   002D50  0EFF               	movlw	255
  3674   002D52  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3675   002D54  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3676   002D56  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3677   002D5A  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3678   002D5E                     	if	0	;tblptru may be non-zero
  3679   002D5E                     	endif
  3680   002D5E                     	if	0	;tblptru may be non-zero
  3681   002D5E                     	endif
  3682   002D5E  0008               	tblrd		*
  3683   002D60  50F5               	movf	tablat,w,c
  3684   002D62  ECA4  F021         	call	_Lcd_Write_Char
  3685   002D66  2A1E               	incf	Lcd_CGRAM_CreateChar@i_822^0,f,c
  3686   002D68  0E17               	movlw	23
  3687   002D6A  641E               	cpfsgt	Lcd_CGRAM_CreateChar@i_822^0,c
  3688   002D6C  EFBA  F016         	goto	u5221
  3689   002D70  EFBC  F016         	goto	u5220
  3690   002D74                     u5221:
  3691   002D74  EF9F  F016         	goto	l5182
  3692   002D78                     u5220:
  3693   002D78  EF90  F017         	goto	l302
  3694   002D7C                     l5188:
  3695                           
  3696                           ;lcd.c: 153:             for(char i=24; i<=31; i++)
  3697   002D7C  0E18               	movlw	24
  3698   002D7E  6E1F               	movwf	Lcd_CGRAM_CreateChar@i_823^0,c
  3699   002D80                     l5194:
  3700                           
  3701                           ;lcd.c: 154:                 Lcd_Write_Char(chardata[i-24]);
  3702   002D80  501F               	movf	Lcd_CGRAM_CreateChar@i_823^0,w,c
  3703   002D82  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3704   002D84  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3705   002D86  0E00               	movlw	0
  3706   002D88  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3707   002D8A  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3708   002D8C  0EE8               	movlw	232
  3709   002D8E  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3710   002D90  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3711   002D92  0EFF               	movlw	255
  3712   002D94  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3713   002D96  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3714   002D98  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3715   002D9C  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3716   002DA0                     	if	0	;tblptru may be non-zero
  3717   002DA0                     	endif
  3718   002DA0                     	if	0	;tblptru may be non-zero
  3719   002DA0                     	endif
  3720   002DA0  0008               	tblrd		*
  3721   002DA2  50F5               	movf	tablat,w,c
  3722   002DA4  ECA4  F021         	call	_Lcd_Write_Char
  3723   002DA8  2A1F               	incf	Lcd_CGRAM_CreateChar@i_823^0,f,c
  3724   002DAA  0E1F               	movlw	31
  3725   002DAC  641F               	cpfsgt	Lcd_CGRAM_CreateChar@i_823^0,c
  3726   002DAE  EFDB  F016         	goto	u5231
  3727   002DB2  EFDD  F016         	goto	u5230
  3728   002DB6                     u5231:
  3729   002DB6  EFC0  F016         	goto	l5194
  3730   002DBA                     u5230:
  3731   002DBA  EF90  F017         	goto	l302
  3732   002DBE                     l5200:
  3733                           
  3734                           ;lcd.c: 157:             for(char i=32; i<=39; i++)
  3735   002DBE  0E20               	movlw	32
  3736   002DC0  6E20               	movwf	Lcd_CGRAM_CreateChar@i_824^0,c
  3737   002DC2                     l5206:
  3738                           
  3739                           ;lcd.c: 158:                 Lcd_Write_Char(chardata[i-32]);
  3740   002DC2  5020               	movf	Lcd_CGRAM_CreateChar@i_824^0,w,c
  3741   002DC4  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3742   002DC6  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3743   002DC8  0E00               	movlw	0
  3744   002DCA  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3745   002DCC  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3746   002DCE  0EE0               	movlw	224
  3747   002DD0  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3748   002DD2  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3749   002DD4  0EFF               	movlw	255
  3750   002DD6  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3751   002DD8  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3752   002DDA  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3753   002DDE  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3754   002DE2                     	if	0	;tblptru may be non-zero
  3755   002DE2                     	endif
  3756   002DE2                     	if	0	;tblptru may be non-zero
  3757   002DE2                     	endif
  3758   002DE2  0008               	tblrd		*
  3759   002DE4  50F5               	movf	tablat,w,c
  3760   002DE6  ECA4  F021         	call	_Lcd_Write_Char
  3761   002DEA  2A20               	incf	Lcd_CGRAM_CreateChar@i_824^0,f,c
  3762   002DEC  0E27               	movlw	39
  3763   002DEE  6420               	cpfsgt	Lcd_CGRAM_CreateChar@i_824^0,c
  3764   002DF0  EFFC  F016         	goto	u5241
  3765   002DF4  EFFE  F016         	goto	u5240
  3766   002DF8                     u5241:
  3767   002DF8  EFE1  F016         	goto	l5206
  3768   002DFC                     u5240:
  3769   002DFC  EF90  F017         	goto	l302
  3770   002E00                     l5212:
  3771                           
  3772                           ;lcd.c: 161:             for(char i=40; i<=47; i++)
  3773   002E00  0E28               	movlw	40
  3774   002E02  6E21               	movwf	Lcd_CGRAM_CreateChar@i_825^0,c
  3775   002E04                     l5218:
  3776                           
  3777                           ;lcd.c: 162:                 Lcd_Write_Char(chardata[i-40]);
  3778   002E04  5021               	movf	Lcd_CGRAM_CreateChar@i_825^0,w,c
  3779   002E06  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3780   002E08  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3781   002E0A  0E00               	movlw	0
  3782   002E0C  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3783   002E0E  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3784   002E10  0ED8               	movlw	216
  3785   002E12  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3786   002E14  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3787   002E16  0EFF               	movlw	255
  3788   002E18  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3789   002E1A  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3790   002E1C  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3791   002E20  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3792   002E24                     	if	0	;tblptru may be non-zero
  3793   002E24                     	endif
  3794   002E24                     	if	0	;tblptru may be non-zero
  3795   002E24                     	endif
  3796   002E24  0008               	tblrd		*
  3797   002E26  50F5               	movf	tablat,w,c
  3798   002E28  ECA4  F021         	call	_Lcd_Write_Char
  3799   002E2C  2A21               	incf	Lcd_CGRAM_CreateChar@i_825^0,f,c
  3800   002E2E  0E2F               	movlw	47
  3801   002E30  6421               	cpfsgt	Lcd_CGRAM_CreateChar@i_825^0,c
  3802   002E32  EF1D  F017         	goto	u5251
  3803   002E36  EF1F  F017         	goto	u5250
  3804   002E3A                     u5251:
  3805   002E3A  EF02  F017         	goto	l5218
  3806   002E3E                     u5250:
  3807   002E3E  EF90  F017         	goto	l302
  3808   002E42                     l5224:
  3809                           
  3810                           ;lcd.c: 165:             for(char i=48; i<=55; i++)
  3811   002E42  0E30               	movlw	48
  3812   002E44  6E22               	movwf	Lcd_CGRAM_CreateChar@i_826^0,c
  3813   002E46                     l5230:
  3814                           
  3815                           ;lcd.c: 166:                 Lcd_Write_Char(chardata[i-48]);
  3816   002E46  5022               	movf	Lcd_CGRAM_CreateChar@i_826^0,w,c
  3817   002E48  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3818   002E4A  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3819   002E4C  0E00               	movlw	0
  3820   002E4E  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3821   002E50  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3822   002E52  0ED0               	movlw	208
  3823   002E54  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3824   002E56  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3825   002E58  0EFF               	movlw	255
  3826   002E5A  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3827   002E5C  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3828   002E5E  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3829   002E62  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3830   002E66                     	if	0	;tblptru may be non-zero
  3831   002E66                     	endif
  3832   002E66                     	if	0	;tblptru may be non-zero
  3833   002E66                     	endif
  3834   002E66  0008               	tblrd		*
  3835   002E68  50F5               	movf	tablat,w,c
  3836   002E6A  ECA4  F021         	call	_Lcd_Write_Char
  3837   002E6E  2A22               	incf	Lcd_CGRAM_CreateChar@i_826^0,f,c
  3838   002E70  0E37               	movlw	55
  3839   002E72  6422               	cpfsgt	Lcd_CGRAM_CreateChar@i_826^0,c
  3840   002E74  EF3E  F017         	goto	u5261
  3841   002E78  EF40  F017         	goto	u5260
  3842   002E7C                     u5261:
  3843   002E7C  EF23  F017         	goto	l5230
  3844   002E80                     u5260:
  3845   002E80  EF90  F017         	goto	l302
  3846   002E84                     l5236:
  3847                           
  3848                           ;lcd.c: 169:             for(char i=56; i<=63; i++)
  3849   002E84  0E38               	movlw	56
  3850   002E86  6E23               	movwf	Lcd_CGRAM_CreateChar@i_827^0,c
  3851   002E88                     l5242:
  3852                           
  3853                           ;lcd.c: 170:                 Lcd_Write_Char(chardata[i-56]);
  3854   002E88  5023               	movf	Lcd_CGRAM_CreateChar@i_827^0,w,c
  3855   002E8A  2415               	addwf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  3856   002E8C  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3857   002E8E  0E00               	movlw	0
  3858   002E90  2016               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)^0,w,c
  3859   002E92  6E18               	movwf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3860   002E94  0EC8               	movlw	200
  3861   002E96  2417               	addwf	??_Lcd_CGRAM_CreateChar^0,w,c
  3862   002E98  6E19               	movwf	(??_Lcd_CGRAM_CreateChar+2)^0,c
  3863   002E9A  0EFF               	movlw	255
  3864   002E9C  2018               	addwfc	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3865   002E9E  6E1A               	movwf	(??_Lcd_CGRAM_CreateChar+3)^0,c
  3866   002EA0  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  3867   002EA4  C01A  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  3868   002EA8                     	if	0	;tblptru may be non-zero
  3869   002EA8                     	endif
  3870   002EA8                     	if	0	;tblptru may be non-zero
  3871   002EA8                     	endif
  3872   002EA8  0008               	tblrd		*
  3873   002EAA  50F5               	movf	tablat,w,c
  3874   002EAC  ECA4  F021         	call	_Lcd_Write_Char
  3875   002EB0  2A23               	incf	Lcd_CGRAM_CreateChar@i_827^0,f,c
  3876   002EB2  0E3F               	movlw	63
  3877   002EB4  6423               	cpfsgt	Lcd_CGRAM_CreateChar@i_827^0,c
  3878   002EB6  EF5F  F017         	goto	u5271
  3879   002EBA  EF61  F017         	goto	u5270
  3880   002EBE                     u5271:
  3881   002EBE  EF44  F017         	goto	l5242
  3882   002EC2                     u5270:
  3883   002EC2  EF90  F017         	goto	l302
  3884   002EC6                     l5250:
  3885   002EC6  501B               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  3886   002EC8  6E17               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  3887   002ECA  6A18               	clrf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  3888                           
  3889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3890                           ; Switch size 1, requested type "simple"
  3891                           ; Number of cases is 1, Range of values is 0 to 0
  3892                           ; switch strategies available:
  3893                           ; Name         Instructions Cycles
  3894                           ; simple_byte            4     3 (average)
  3895                           ;	Chosen strategy is simple_byte
  3896   002ECC  5018               	movf	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  3897   002ECE  0A00               	xorlw	0	; case 0
  3898   002ED0  B4D8               	btfsc	status,2,c
  3899   002ED2  EF6D  F017         	goto	l7958
  3900   002ED6  EF90  F017         	goto	l302
  3901   002EDA                     l7958:
  3902                           
  3903                           ; Switch size 1, requested type "simple"
  3904                           ; Number of cases is 8, Range of values is 0 to 7
  3905                           ; switch strategies available:
  3906                           ; Name         Instructions Cycles
  3907                           ; simple_byte           25    13 (average)
  3908                           ;	Chosen strategy is simple_byte
  3909   002EDA  5017               	movf	??_Lcd_CGRAM_CreateChar^0,w,c
  3910   002EDC  0A00               	xorlw	0	; case 0
  3911   002EDE  B4D8               	btfsc	status,2,c
  3912   002EE0  EF61  F016         	goto	l5152
  3913   002EE4  0A01               	xorlw	1	; case 1
  3914   002EE6  B4D8               	btfsc	status,2,c
  3915   002EE8  EF7C  F016         	goto	l5164
  3916   002EEC  0A03               	xorlw	3	; case 2
  3917   002EEE  B4D8               	btfsc	status,2,c
  3918   002EF0  EF9D  F016         	goto	l5176
  3919   002EF4  0A01               	xorlw	1	; case 3
  3920   002EF6  B4D8               	btfsc	status,2,c
  3921   002EF8  EFBE  F016         	goto	l5188
  3922   002EFC  0A07               	xorlw	7	; case 4
  3923   002EFE  B4D8               	btfsc	status,2,c
  3924   002F00  EFDF  F016         	goto	l5200
  3925   002F04  0A01               	xorlw	1	; case 5
  3926   002F06  B4D8               	btfsc	status,2,c
  3927   002F08  EF00  F017         	goto	l5212
  3928   002F0C  0A03               	xorlw	3	; case 6
  3929   002F0E  B4D8               	btfsc	status,2,c
  3930   002F10  EF21  F017         	goto	l5224
  3931   002F14  0A01               	xorlw	1	; case 7
  3932   002F16  B4D8               	btfsc	status,2,c
  3933   002F18  EF42  F017         	goto	l5236
  3934   002F1C  EF90  F017         	goto	l302
  3935   002F20                     l302:
  3936   002F20  0012               	return		;funcret
  3937   002F22                     __end_of_Lcd_CGRAM_CreateChar:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _Lcd_CGRAM_Close *****************
  3941 ;; Defined at:
  3942 ;;		line 181 in file "lcd.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; Hardware stack levels required when called: 4
  3963 ;; This function calls:
  3964 ;;		_Lcd_Cmd
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text9
  3971   004440                     __ptext9:
  3972                           	callstack 0
  3973   004440                     _Lcd_CGRAM_Close:
  3974                           	callstack 26
  3975   004440                     
  3976                           ;lcd.c: 183:     Lcd_Cmd(0x00);
  3977   004440  0E00               	movlw	0
  3978   004442  ECE9  F021         	call	_Lcd_Cmd
  3979                           
  3980                           ;lcd.c: 184:     Lcd_Cmd(0x02);
  3981   004446  0E02               	movlw	2
  3982   004448  ECE9  F021         	call	_Lcd_Cmd
  3983   00444C  0012               	return		;funcret
  3984   00444E                     __end_of_Lcd_CGRAM_Close:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _Keypad_Init *****************
  3988 ;; Defined at:
  3989 ;;		line 11 in file "kbd4x4.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		None
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 2
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text10
  4018   004406                     __ptext10:
  4019                           	callstack 0
  4020   004406                     _Keypad_Init:
  4021                           	callstack 28
  4022   004406                     
  4023                           ;kbd4x4.c: 13:     TRISDbits.TRISD7 = 0;
  4024   004406  9E95               	bcf	149,7,c	;volatile
  4025                           
  4026                           ;kbd4x4.c: 14:     TRISDbits.TRISD6 = 0;
  4027   004408  9C95               	bcf	149,6,c	;volatile
  4028                           
  4029                           ;kbd4x4.c: 15:     TRISDbits.TRISD5 = 0;
  4030   00440A  9A95               	bcf	149,5,c	;volatile
  4031                           
  4032                           ;kbd4x4.c: 16:     TRISDbits.TRISD4 = 0;
  4033   00440C  9895               	bcf	149,4,c	;volatile
  4034                           
  4035                           ;kbd4x4.c: 17:     TRISDbits.TRISD3 = 1;
  4036   00440E  8695               	bsf	149,3,c	;volatile
  4037                           
  4038                           ;kbd4x4.c: 18:     TRISDbits.TRISD2 = 1;
  4039   004410  8495               	bsf	149,2,c	;volatile
  4040                           
  4041                           ;kbd4x4.c: 19:     TRISDbits.TRISD1 = 1;
  4042   004412  8295               	bsf	149,1,c	;volatile
  4043   004414  0012               	return		;funcret
  4044   004416                     __end_of_Keypad_Init:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function _FILL *****************
  4048 ;; Defined at:
  4049 ;;		line 391 in file "Main_program.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4065 ;;      Temps:          0       0       2       0       0       0       0       0       0
  4066 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 10
  4070 ;; This function calls:
  4071 ;;		_Lcd_Clear
  4072 ;;		_Lcd_Set_Cursor
  4073 ;;		_Lcd_Write_Char
  4074 ;;		_Lcd_Write_String
  4075 ;;		_TMR0_COUNT
  4076 ;;		___fldiv
  4077 ;;		___flge
  4078 ;;		___flmul
  4079 ;;		___xxtofl
  4080 ;;		_sprintf
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text11
  4087   002784                     __ptext11:
  4088                           	callstack 0
  4089   002784                     _FILL:
  4090                           	callstack 20
  4091   002784                     
  4092                           ;Main_program.c: 394:     Lcd_Clear();
  4093   002784  EC2E  F022         	call	_Lcd_Clear	;wreg free
  4094   002788                     
  4095                           ;Main_program.c: 395:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  4096   002788  0E02               	movlw	2
  4097   00278A  0101               	movlb	1	; () banked
  4098   00278C  6F5E               	movwf	(??_FILL+1)& (0+255),b
  4099   00278E  0E04               	movlw	4
  4100   002790  6F5D               	movwf	??_FILL& (0+255),b
  4101   002792  0EBA               	movlw	186
  4102   002794                     u8477:
  4103   002794  2EE8               	decfsz	wreg,f,c
  4104   002796  D7FE               	bra	u8477
  4105   002798  2F5D               	decfsz	??_FILL& (0+255),f,b
  4106   00279A  D7FC               	bra	u8477
  4107   00279C  2F5E               	decfsz	(??_FILL+1)& (0+255),f,b
  4108   00279E  D7FA               	bra	u8477
  4109   0027A0  F000               	nop	
  4110   0027A2                     
  4111                           ;Main_program.c: 396:     Lcd_Set_Cursor(1, 1);
  4112   0027A2  0E01               	movlw	1
  4113   0027A4  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4114   0027A6  0E01               	movlw	1
  4115   0027A8  EC8B  F01D         	call	_Lcd_Set_Cursor
  4116   0027AC                     
  4117                           ;Main_program.c: 397:     Lcd_Write_String("Llenando      ml");
  4118   0027AC  0E8C               	movlw	low STR_28
  4119   0027AE  6E15               	movwf	Lcd_Write_String@a^0,c
  4120   0027B0  0E7C               	movlw	high STR_28
  4121   0027B2  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4122   0027B4  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  4123   0027B8                     
  4124                           ;Main_program.c: 398:     Lcd_Set_Cursor(2, 1);
  4125   0027B8  0E01               	movlw	1
  4126   0027BA  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4127   0027BC  0E02               	movlw	2
  4128   0027BE  EC8B  F01D         	call	_Lcd_Set_Cursor
  4129   0027C2                     
  4130                           ;Main_program.c: 399:     Lcd_Write_String("Salir ");
  4131   0027C2  0E21               	movlw	low STR_29
  4132   0027C4  6E15               	movwf	Lcd_Write_String@a^0,c
  4133   0027C6  0E7D               	movlw	high STR_29
  4134   0027C8  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4135   0027CA  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  4136   0027CE                     
  4137                           ;Main_program.c: 400:     Lcd_Set_Cursor(2, 7);
  4138   0027CE  0E07               	movlw	7
  4139   0027D0  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4140   0027D2  0E02               	movlw	2
  4141   0027D4  EC8B  F01D         	call	_Lcd_Set_Cursor
  4142   0027D8                     
  4143                           ;Main_program.c: 401:     sprintf(STRING_VAL_TYPED, "%u", PROFILE_NUM);
  4144   0027D8  0EE6               	movlw	low _STRING_VAL_TYPED
  4145   0027DA  0100               	movlb	0	; () banked
  4146   0027DC  6FC2               	movwf	sprintf@s& (0+255),b
  4147   0027DE  0E00               	movlw	high _STRING_VAL_TYPED
  4148   0027E0  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  4149   0027E2  0E3C               	movlw	low STR_30
  4150   0027E4  6FC4               	movwf	sprintf@fmt& (0+255),b
  4151   0027E6  0E7D               	movlw	high STR_30
  4152   0027E8  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  4153   0027EA  C046  F0C6         	movff	_PROFILE_NUM,?_sprintf+4
  4154   0027EE  C047  F0C7         	movff	_PROFILE_NUM+1,?_sprintf+5
  4155   0027F2  EC33  F020         	call	_sprintf	;wreg free
  4156   0027F6                     
  4157                           ;Main_program.c: 402:     Lcd_Set_Cursor(1, 10);
  4158   0027F6  0E0A               	movlw	10
  4159   0027F8  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4160   0027FA  0E01               	movlw	1
  4161   0027FC  EC8B  F01D         	call	_Lcd_Set_Cursor
  4162   002800                     
  4163                           ;Main_program.c: 403:     Lcd_Write_String(STRING_VAL_TYPED);
  4164   002800  0EE6               	movlw	low _STRING_VAL_TYPED
  4165   002802  6E15               	movwf	Lcd_Write_String@a^0,c
  4166   002804  0E00               	movlw	high _STRING_VAL_TYPED
  4167   002806  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4168   002808  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  4169   00280C                     
  4170                           ;Main_program.c: 405:     Lcd_Set_Cursor(2, 9);
  4171   00280C  0E09               	movlw	9
  4172   00280E  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4173   002810  0E02               	movlw	2
  4174   002812  EC8B  F01D         	call	_Lcd_Set_Cursor
  4175   002816                     
  4176                           ;Main_program.c: 406:     Lcd_Write_String("     ml ");
  4177   002816  0E08               	movlw	low STR_31
  4178   002818  6E15               	movwf	Lcd_Write_String@a^0,c
  4179   00281A  0E7D               	movlw	high STR_31
  4180   00281C  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4181   00281E  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  4182   002822                     
  4183                           ;Main_program.c: 407:     LATCbits.LATC0 = 1;
  4184   002822  808B               	bsf	139,0,c	;volatile
  4185   002824                     
  4186                           ;Main_program.c: 408:     _delay((unsigned long)((100)*(8000000L/4000.0)));
  4187   002824  0E02               	movlw	2
  4188   002826  0101               	movlb	1	; () banked
  4189   002828  6F5E               	movwf	(??_FILL+1)& (0+255),b
  4190   00282A  0E04               	movlw	4
  4191   00282C  6F5D               	movwf	??_FILL& (0+255),b
  4192   00282E  0EBA               	movlw	186
  4193   002830                     u8487:
  4194   002830  2EE8               	decfsz	wreg,f,c
  4195   002832  D7FE               	bra	u8487
  4196   002834  2F5D               	decfsz	??_FILL& (0+255),f,b
  4197   002836  D7FC               	bra	u8487
  4198   002838  2F5E               	decfsz	(??_FILL+1)& (0+255),f,b
  4199   00283A  D7FA               	bra	u8487
  4200   00283C  F000               	nop	
  4201   00283E                     
  4202                           ;Main_program.c: 409:     LATCbits.LATC0 = 0;
  4203   00283E  908B               	bcf	139,0,c	;volatile
  4204   002840                     
  4205                           ;Main_program.c: 410:     PULSES_TO_REACH = (PROFILE_NUM / CAL);
  4206   002840  C046  F011         	movff	_PROFILE_NUM,___xxtofl@val
  4207   002844  C047  F012         	movff	_PROFILE_NUM+1,___xxtofl@val+1
  4208   002848  0E00               	movlw	0
  4209   00284A  BE12               	btfsc	(___xxtofl@val+1)^0,7,c
  4210   00284C  0EFF               	movlw	-1
  4211   00284E  6E13               	movwf	(___xxtofl@val+2)^0,c
  4212   002850  6E14               	movwf	(___xxtofl@val+3)^0,c
  4213   002852  0E01               	movlw	1
  4214   002854  EC9B  F019         	call	___xxtofl
  4215   002858  C011  F01F         	movff	?___xxtofl,___fldiv@b
  4216   00285C  C012  F020         	movff	?___xxtofl+1,___fldiv@b+1
  4217   002860  C013  F021         	movff	?___xxtofl+2,___fldiv@b+2
  4218   002864  C014  F022         	movff	?___xxtofl+3,___fldiv@b+3
  4219   002868  0E8D               	movlw	141
  4220   00286A  6E23               	movwf	___fldiv@a^0,c
  4221   00286C  0EB0               	movlw	176
  4222   00286E  6E24               	movwf	(___fldiv@a+1)^0,c
  4223   002870  0E5C               	movlw	92
  4224   002872  6E25               	movwf	(___fldiv@a+2)^0,c
  4225   002874  0E40               	movlw	64
  4226   002876  6E26               	movwf	(___fldiv@a+3)^0,c
  4227   002878  EC63  F010         	call	___fldiv	;wreg free
  4228   00287C  C01F  F0D6         	movff	?___fldiv,_PULSES_TO_REACH
  4229   002880  C020  F0D7         	movff	?___fldiv+1,_PULSES_TO_REACH+1
  4230   002884  C021  F0D8         	movff	?___fldiv+2,_PULSES_TO_REACH+2
  4231   002888  C022  F0D9         	movff	?___fldiv+3,_PULSES_TO_REACH+3
  4232   00288C                     
  4233                           ;Main_program.c: 411:     PULSE = 0;
  4234   00288C  0E00               	movlw	0
  4235   00288E  6E3E               	movwf	_PULSE^0,c
  4236   002890  0E00               	movlw	0
  4237   002892  6E3F               	movwf	(_PULSE+1)^0,c
  4238   002894  0E00               	movlw	0
  4239   002896  6E40               	movwf	(_PULSE+2)^0,c
  4240   002898  0E00               	movlw	0
  4241   00289A  6E41               	movwf	(_PULSE+3)^0,c
  4242   00289C                     
  4243                           ;Main_program.c: 412:     VALUE_IN_ML = 0;
  4244   00289C  0E00               	movlw	0
  4245   00289E  0100               	movlb	0	; () banked
  4246   0028A0  6FD2               	movwf	_VALUE_IN_ML& (0+255),b
  4247   0028A2  0E00               	movlw	0
  4248   0028A4  6FD3               	movwf	(_VALUE_IN_ML+1)& (0+255),b
  4249   0028A6  0E00               	movlw	0
  4250   0028A8  6FD4               	movwf	(_VALUE_IN_ML+2)& (0+255),b
  4251   0028AA  0E00               	movlw	0
  4252   0028AC  6FD5               	movwf	(_VALUE_IN_ML+3)& (0+255),b
  4253   0028AE                     
  4254                           ; BSR set to: 0
  4255                           ;Main_program.c: 413:     TMR0_COUNT();
  4256   0028AE  EC27  F022         	call	_TMR0_COUNT	;wreg free
  4257   0028B2                     
  4258                           ;Main_program.c: 414:     LATBbits.LATB3 = 1;
  4259   0028B2  868A               	bsf	138,3,c	;volatile
  4260                           
  4261                           ;Main_program.c: 416:     while (PULSE <= PULSES_TO_REACH)
  4262   0028B4  EFC8  F014         	goto	l7566
  4263   0028B8                     l7542:
  4264                           
  4265                           ;Main_program.c: 417:     {;Main_program.c: 418:         VALUE_IN_ML = (PULSE * CAL);
  4266   0028B8  C03E  F011         	movff	_PULSE,___flmul@b
  4267   0028BC  C03F  F012         	movff	_PULSE+1,___flmul@b+1
  4268   0028C0  C040  F013         	movff	_PULSE+2,___flmul@b+2
  4269   0028C4  C041  F014         	movff	_PULSE+3,___flmul@b+3
  4270   0028C8  0E8D               	movlw	141
  4271   0028CA  6E15               	movwf	___flmul@a^0,c
  4272   0028CC  0EB0               	movlw	176
  4273   0028CE  6E16               	movwf	(___flmul@a+1)^0,c
  4274   0028D0  0E5C               	movlw	92
  4275   0028D2  6E17               	movwf	(___flmul@a+2)^0,c
  4276   0028D4  0E40               	movlw	64
  4277   0028D6  6E18               	movwf	(___flmul@a+3)^0,c
  4278   0028D8  EC4E  F00E         	call	___flmul	;wreg free
  4279   0028DC  C011  F0D2         	movff	?___flmul,_VALUE_IN_ML
  4280   0028E0  C012  F0D3         	movff	?___flmul+1,_VALUE_IN_ML+1
  4281   0028E4  C013  F0D4         	movff	?___flmul+2,_VALUE_IN_ML+2
  4282   0028E8  C014  F0D5         	movff	?___flmul+3,_VALUE_IN_ML+3
  4283   0028EC                     
  4284                           ;Main_program.c: 419:         sprintf(STRING_VALUE_IN_ML, "%0.1f", VALUE_IN_ML);
  4285   0028EC  0EE1               	movlw	low _STRING_VALUE_IN_ML
  4286   0028EE  0100               	movlb	0	; () banked
  4287   0028F0  6FC2               	movwf	sprintf@s& (0+255),b
  4288   0028F2  0E00               	movlw	high _STRING_VALUE_IN_ML
  4289   0028F4  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  4290   0028F6  0E28               	movlw	low STR_32
  4291   0028F8  6FC4               	movwf	sprintf@fmt& (0+255),b
  4292   0028FA  0E7D               	movlw	high STR_32
  4293   0028FC  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  4294   0028FE  C0D2  F0C6         	movff	_VALUE_IN_ML,?_sprintf+4
  4295   002902  C0D3  F0C7         	movff	_VALUE_IN_ML+1,?_sprintf+5
  4296   002906  C0D4  F0C8         	movff	_VALUE_IN_ML+2,?_sprintf+6
  4297   00290A  C0D5  F0C9         	movff	_VALUE_IN_ML+3,?_sprintf+7
  4298   00290E  EC33  F020         	call	_sprintf	;wreg free
  4299   002912                     
  4300                           ;Main_program.c: 420:         Lcd_Set_Cursor(2,9);
  4301   002912  0E09               	movlw	9
  4302   002914  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4303   002916  0E02               	movlw	2
  4304   002918  EC8B  F01D         	call	_Lcd_Set_Cursor
  4305   00291C                     
  4306                           ;Main_program.c: 421:         Lcd_Write_String(STRING_VALUE_IN_ML);
  4307   00291C  0EE1               	movlw	low _STRING_VALUE_IN_ML
  4308   00291E  6E15               	movwf	Lcd_Write_String@a^0,c
  4309   002920  0E00               	movlw	high _STRING_VALUE_IN_ML
  4310   002922  6E16               	movwf	(Lcd_Write_String@a+1)^0,c
  4311   002924  EC56  F01F         	call	_Lcd_Write_String	;wreg free
  4312   002928                     
  4313                           ;Main_program.c: 423:         if (PORTAbits.RA5 == 0)
  4314   002928  BA80               	btfsc	128,5,c	;volatile
  4315   00292A  EF99  F014         	goto	u7961
  4316   00292E  EF9B  F014         	goto	u7960
  4317   002932                     u7961:
  4318   002932  EFA3  F014         	goto	l7554
  4319   002936                     u7960:
  4320   002936                     
  4321                           ;Main_program.c: 424:         {;Main_program.c: 425:             Lcd_Set_Cursor(2,16);
  4322   002936  0E10               	movlw	16
  4323   002938  6E14               	movwf	Lcd_Set_Cursor@b^0,c
  4324   00293A  0E02               	movlw	2
  4325   00293C  EC8B  F01D         	call	_Lcd_Set_Cursor
  4326                           
  4327                           ;Main_program.c: 426:             Lcd_Write_Char(0);
  4328   002940  0E00               	movlw	0
  4329   002942  ECA4  F021         	call	_Lcd_Write_Char
  4330   002946                     l7554:
  4331                           
  4332                           ;Main_program.c: 429:         if (PORTBbits.RB0 == 0)
  4333   002946  B081               	btfsc	129,0,c	;volatile
  4334   002948  EFA8  F014         	goto	u7971
  4335   00294C  EFAA  F014         	goto	u7970
  4336   002950                     u7971:
  4337   002950  EFC8  F014         	goto	l7566
  4338   002954                     u7970:
  4339   002954                     
  4340                           ;Main_program.c: 430:         {;Main_program.c: 431:             LATBbits.LATB3 = 0;
  4341   002954  968A               	bcf	138,3,c	;volatile
  4342                           
  4343                           ;Main_program.c: 432:             LATCbits.LATC0 = 1;
  4344   002956  808B               	bsf	139,0,c	;volatile
  4345   002958                     
  4346                           ;Main_program.c: 433:             _delay((unsigned long)((600)*(8000000L/4000.0)));
  4347   002958  0E07               	movlw	7
  4348   00295A  0101               	movlb	1	; () banked
  4349   00295C  6F5E               	movwf	(??_FILL+1)& (0+255),b
  4350   00295E  0E17               	movlw	23
  4351   002960  6F5D               	movwf	??_FILL& (0+255),b
  4352   002962  0E6A               	movlw	106
  4353   002964                     u8497:
  4354   002964  2EE8               	decfsz	wreg,f,c
  4355   002966  D7FE               	bra	u8497
  4356   002968  2F5D               	decfsz	??_FILL& (0+255),f,b
  4357   00296A  D7FC               	bra	u8497
  4358   00296C  2F5E               	decfsz	(??_FILL+1)& (0+255),f,b
  4359   00296E  D7FA               	bra	u8497
  4360   002970  F000               	nop	
  4361   002972                     
  4362                           ;Main_program.c: 434:             LATCbits.LATC0 = 0;
  4363   002972  908B               	bcf	139,0,c	;volatile
  4364   002974                     
  4365                           ;Main_program.c: 435:             PULSE = 0;
  4366   002974  0E00               	movlw	0
  4367   002976  6E3E               	movwf	_PULSE^0,c
  4368   002978  0E00               	movlw	0
  4369   00297A  6E3F               	movwf	(_PULSE+1)^0,c
  4370   00297C  0E00               	movlw	0
  4371   00297E  6E40               	movwf	(_PULSE+2)^0,c
  4372   002980  0E00               	movlw	0
  4373   002982  6E41               	movwf	(_PULSE+3)^0,c
  4374   002984                     
  4375                           ;Main_program.c: 436:             CURRENT_OPTION = 0;
  4376   002984  0E00               	movlw	0
  4377   002986  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  4378   002988  0E00               	movlw	0
  4379   00298A  6E48               	movwf	_CURRENT_OPTION^0,c
  4380                           
  4381                           ;Main_program.c: 437:             break;
  4382   00298C  EFE1  F014         	goto	l7568
  4383   002990                     l7566:
  4384                           
  4385                           ;Main_program.c: 416:     while (PULSE <= PULSES_TO_REACH)
  4386   002990  C0D6  F02A         	movff	_PULSES_TO_REACH,___flge@ff1
  4387   002994  C0D7  F02B         	movff	_PULSES_TO_REACH+1,___flge@ff1+1
  4388   002998  C0D8  F02C         	movff	_PULSES_TO_REACH+2,___flge@ff1+2
  4389   00299C  C0D9  F02D         	movff	_PULSES_TO_REACH+3,___flge@ff1+3
  4390   0029A0  C03E  F02E         	movff	_PULSE,___flge@ff2
  4391   0029A4  C03F  F02F         	movff	_PULSE+1,___flge@ff2+1
  4392   0029A8  C040  F030         	movff	_PULSE+2,___flge@ff2+2
  4393   0029AC  C041  F031         	movff	_PULSE+3,___flge@ff2+3
  4394   0029B0  EC9D  F01B         	call	___flge	;wreg free
  4395   0029B4  B0D8               	btfsc	status,0,c
  4396   0029B6  EFDF  F014         	goto	u7981
  4397   0029BA  EFE1  F014         	goto	u7980
  4398   0029BE                     u7981:
  4399   0029BE  EF5C  F014         	goto	l7542
  4400   0029C2                     u7980:
  4401   0029C2                     l7568:
  4402                           
  4403                           ;Main_program.c: 440:     if (PULSE >= PULSES_TO_REACH)
  4404   0029C2  C03E  F02A         	movff	_PULSE,___flge@ff1
  4405   0029C6  C03F  F02B         	movff	_PULSE+1,___flge@ff1+1
  4406   0029CA  C040  F02C         	movff	_PULSE+2,___flge@ff1+2
  4407   0029CE  C041  F02D         	movff	_PULSE+3,___flge@ff1+3
  4408   0029D2  C0D6  F02E         	movff	_PULSES_TO_REACH,___flge@ff2
  4409   0029D6  C0D7  F02F         	movff	_PULSES_TO_REACH+1,___flge@ff2+1
  4410   0029DA  C0D8  F030         	movff	_PULSES_TO_REACH+2,___flge@ff2+2
  4411   0029DE  C0D9  F031         	movff	_PULSES_TO_REACH+3,___flge@ff2+3
  4412   0029E2  EC9D  F01B         	call	___flge	;wreg free
  4413   0029E6  A0D8               	btfss	status,0,c
  4414   0029E8  EFF8  F014         	goto	u7991
  4415   0029EC  EFFA  F014         	goto	u7990
  4416   0029F0                     u7991:
  4417   0029F0  EF23  F015         	goto	l204
  4418   0029F4                     u7990:
  4419   0029F4                     
  4420                           ;Main_program.c: 441:     {;Main_program.c: 442:         LATBbits.LATB3 = 0;
  4421   0029F4  968A               	bcf	138,3,c	;volatile
  4422   0029F6                     
  4423                           ;Main_program.c: 443:         PULSE = 0;
  4424   0029F6  0E00               	movlw	0
  4425   0029F8  6E3E               	movwf	_PULSE^0,c
  4426   0029FA  0E00               	movlw	0
  4427   0029FC  6E3F               	movwf	(_PULSE+1)^0,c
  4428   0029FE  0E00               	movlw	0
  4429   002A00  6E40               	movwf	(_PULSE+2)^0,c
  4430   002A02  0E00               	movlw	0
  4431   002A04  6E41               	movwf	(_PULSE+3)^0,c
  4432   002A06                     
  4433                           ;Main_program.c: 444:         LATCbits.LATC0 = 1;
  4434   002A06  808B               	bsf	139,0,c	;volatile
  4435   002A08                     
  4436                           ;Main_program.c: 445:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  4437   002A08  0E02               	movlw	2
  4438   002A0A  0101               	movlb	1	; () banked
  4439   002A0C  6F5E               	movwf	(??_FILL+1)& (0+255),b
  4440   002A0E  0E04               	movlw	4
  4441   002A10  6F5D               	movwf	??_FILL& (0+255),b
  4442   002A12  0EBA               	movlw	186
  4443   002A14                     u8507:
  4444   002A14  2EE8               	decfsz	wreg,f,c
  4445   002A16  D7FE               	bra	u8507
  4446   002A18  2F5D               	decfsz	??_FILL& (0+255),f,b
  4447   002A1A  D7FC               	bra	u8507
  4448   002A1C  2F5E               	decfsz	(??_FILL+1)& (0+255),f,b
  4449   002A1E  D7FA               	bra	u8507
  4450   002A20  F000               	nop	
  4451   002A22                     
  4452                           ;Main_program.c: 446:         LATCbits.LATC0 = 0;
  4453   002A22  908B               	bcf	139,0,c	;volatile
  4454   002A24                     
  4455                           ;Main_program.c: 447:         CURRENT_OPTION = 2;
  4456   002A24  0E00               	movlw	0
  4457   002A26  6E49               	movwf	(_CURRENT_OPTION+1)^0,c
  4458   002A28  0E02               	movlw	2
  4459   002A2A  6E48               	movwf	_CURRENT_OPTION^0,c
  4460                           
  4461                           ;Main_program.c: 448:         _delay((unsigned long)((1000)*(8000000L/4000.0)));
  4462   002A2C  0E0B               	movlw	11
  4463   002A2E  0101               	movlb	1	; () banked
  4464   002A30  6F5E               	movwf	(??_FILL+1)& (0+255),b
  4465   002A32  0E26               	movlw	38
  4466   002A34  6F5D               	movwf	??_FILL& (0+255),b
  4467   002A36  0E5D               	movlw	93
  4468   002A38                     u8517:
  4469   002A38  2EE8               	decfsz	wreg,f,c
  4470   002A3A  D7FE               	bra	u8517
  4471   002A3C  2F5D               	decfsz	??_FILL& (0+255),f,b
  4472   002A3E  D7FC               	bra	u8517
  4473   002A40  2F5E               	decfsz	(??_FILL+1)& (0+255),f,b
  4474   002A42  D7FA               	bra	u8517
  4475   002A44  D000               	nop2	
  4476   002A46                     l204:
  4477   002A46  0012               	return		;funcret
  4478   002A48                     __end_of_FILL:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _sprintf *****************
  4482 ;; Defined at:
  4483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  s               2   98[BANK0 ] PTR unsigned char 
  4486 ;;		 -> STRING_VALUE_IN_ML(5), STRING_VAL_TYPED(5), 
  4487 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  4488 ;;		 -> STR_32(6), STR_30(3), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  f              11    2[BANK1 ] struct _IO_FILE
  4491 ;;  ap              2    0[BANK1 ] PTR void [1]
  4492 ;;		 -> ?_sprintf(2), 
  4493 ;;  ret             2    0        int 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  2   98[BANK0 ] int 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4503 ;;      Params:         0       8       0       0       0       0       0       0       0
  4504 ;;      Locals:         0       0      13       0       0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4506 ;;      Totals:         0       8      13       0       0       0       0       0       0
  4507 ;;Total ram usage:       21 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 9
  4510 ;; This function calls:
  4511 ;;		_vfprintf
  4512 ;; This function is called by:
  4513 ;;		_FILL
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text12
  4518   004066                     __ptext12:
  4519                           	callstack 0
  4520   004066                     _sprintf:
  4521                           	callstack 20
  4522   004066  0EC6               	movlw	low (?_sprintf+4)
  4523   004068  0101               	movlb	1	; () banked
  4524   00406A  6F50               	movwf	sprintf@ap& (0+255),b
  4525   00406C  0E00               	movlw	high (?_sprintf+4)
  4526   00406E  6F51               	movwf	(sprintf@ap+1)& (0+255),b
  4527   004070  C0C2  F152         	movff	sprintf@s,sprintf@f
  4528   004074  C0C3  F153         	movff	sprintf@s+1,sprintf@f+1
  4529   004078                     
  4530                           ; BSR set to: 1
  4531   004078  0E00               	movlw	0
  4532   00407A  6F56               	movwf	(sprintf@f+4)& (0+255),b
  4533   00407C  0E00               	movlw	0
  4534   00407E  6F55               	movwf	(sprintf@f+3)& (0+255),b
  4535   004080                     
  4536                           ; BSR set to: 1
  4537   004080  0E00               	movlw	0
  4538   004082  6F5C               	movwf	(sprintf@f+10)& (0+255),b
  4539   004084  0E00               	movlw	0
  4540   004086  6F5B               	movwf	(sprintf@f+9)& (0+255),b
  4541   004088                     
  4542                           ; BSR set to: 1
  4543   004088  0E52               	movlw	low sprintf@f
  4544   00408A  0100               	movlb	0	; () banked
  4545   00408C  6FBA               	movwf	vfprintf@fp& (0+255),b
  4546   00408E  0E01               	movlw	high sprintf@f
  4547   004090  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  4548   004092  C0C4  F0BC         	movff	sprintf@fmt,vfprintf@fmt
  4549   004096  C0C5  F0BD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4550   00409A  0E50               	movlw	low sprintf@ap
  4551   00409C  6FBE               	movwf	vfprintf@ap& (0+255),b
  4552   00409E  0E01               	movlw	high sprintf@ap
  4553   0040A0  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  4554   0040A2  EC89  F020         	call	_vfprintf	;wreg free
  4555   0040A6  0101               	movlb	1	; () banked
  4556   0040A8  5155               	movf	(sprintf@f+3)& (0+255),w,b
  4557   0040AA  0100               	movlb	0	; () banked
  4558   0040AC  25C2               	addwf	sprintf@s& (0+255),w,b
  4559   0040AE  6ED9               	movwf	fsr2l,c
  4560   0040B0  0101               	movlb	1	; () banked
  4561   0040B2  5156               	movf	(sprintf@f+4)& (0+255),w,b
  4562   0040B4  0100               	movlb	0	; () banked
  4563   0040B6  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  4564   0040B8  6EDA               	movwf	fsr2h,c
  4565   0040BA  0E00               	movlw	0
  4566   0040BC  6EDF               	movwf	indf2,c
  4567   0040BE                     
  4568                           ; BSR set to: 0
  4569   0040BE  0012               	return		;funcret
  4570   0040C0                     __end_of_sprintf:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _vfprintf *****************
  4574 ;; Defined at:
  4575 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  4578 ;;		 -> sprintf@f(11), 
  4579 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  4580 ;;		 -> STR_32(6), STR_30(3), 
  4581 ;;  ap              2   94[BANK0 ] PTR PTR void 
  4582 ;;		 -> sprintf@ap(2), 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  cfmt            2   96[BANK0 ] PTR unsigned char 
  4585 ;;		 -> STR_32(6), STR_30(3), 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2   90[BANK0 ] int 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4595 ;;      Params:         0       6       0       0       0       0       0       0       0
  4596 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4598 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4599 ;;Total ram usage:        8 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 8
  4602 ;; This function calls:
  4603 ;;		_vfpfcnvrt
  4604 ;; This function is called by:
  4605 ;;		_sprintf
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text13
  4610   004112                     __ptext13:
  4611                           	callstack 0
  4612   004112                     _vfprintf:
  4613                           	callstack 20
  4614   004112                     
  4615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4616   004112  C0BC  F0C0         	movff	vfprintf@fmt,vfprintf@cfmt
  4617   004116  C0BD  F0C1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4620   00411A  EF9E  F020         	goto	l7296
  4621   00411E                     l7294:
  4622                           
  4623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4624   00411E  C0BA  F0A3         	movff	vfprintf@fp,vfpfcnvrt@fp
  4625   004122  C0BB  F0A4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4626   004126  0EC0               	movlw	low vfprintf@cfmt
  4627   004128  0100               	movlb	0	; () banked
  4628   00412A  6FA5               	movwf	vfpfcnvrt@fmt& (0+255),b
  4629   00412C  0E00               	movlw	high vfprintf@cfmt
  4630   00412E  6FA6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4631   004130  C0BE  F0A7         	movff	vfprintf@ap,vfpfcnvrt@ap
  4632   004134  C0BF  F0A8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4633   004138  ECFB  F009         	call	_vfpfcnvrt	;wreg free
  4634   00413C                     l7296:
  4635                           
  4636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4637   00413C  C0C0  FFF6         	movff	vfprintf@cfmt,tblptrl
  4638   004140  C0C1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4639   004144                     	if	0	;tblptru may be non-zero
  4640   004144                     	endif
  4641   004144                     	if	0	;tblptru may be non-zero
  4642   004144                     	endif
  4643   004144  0008               	tblrd		*
  4644   004146  50F5               	movf	tablat,w,c
  4645   004148  0900               	iorlw	0
  4646   00414A  A4D8               	btfss	status,2,c
  4647   00414C  EFAA  F020         	goto	u7831
  4648   004150  EFAC  F020         	goto	u7830
  4649   004154                     u7831:
  4650   004154  EF8F  F020         	goto	l7294
  4651   004158                     u7830:
  4652   004158                     
  4653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4654   004158  0E00               	movlw	0
  4655   00415A  0100               	movlb	0	; () banked
  4656   00415C  6FBB               	movwf	(?_vfprintf+1)& (0+255),b
  4657   00415E  0E00               	movlw	0
  4658   004160  6FBA               	movwf	?_vfprintf& (0+255),b
  4659   004162                     
  4660                           ; BSR set to: 0
  4661   004162  0012               	return		;funcret
  4662   004164                     __end_of_vfprintf:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _vfpfcnvrt *****************
  4666 ;; Defined at:
  4667 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  4670 ;;		 -> sprintf@f(11), 
  4671 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  4672 ;;		 -> vfprintf@cfmt(2), 
  4673 ;;  ap              2   71[BANK0 ] PTR PTR void 
  4674 ;;		 -> sprintf@ap(2), 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  convarg         8   79[BANK0 ] struct .
  4677 ;;  cp              2   88[BANK0 ] PTR unsigned char 
  4678 ;;		 -> STR_32(6), STR_30(3), 
  4679 ;;  done            2   77[BANK0 ] int 
  4680 ;;  i               2    0        int 
  4681 ;;  c               1   87[BANK0 ] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4691 ;;      Params:         0       6       0       0       0       0       0       0       0
  4692 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4694 ;;      Totals:         0      23       0       0       0       0       0       0       0
  4695 ;;Total ram usage:       23 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 7
  4698 ;; This function calls:
  4699 ;;		_atoi
  4700 ;;		_efgtoa
  4701 ;;		_fputc
  4702 ;;		_isdigit
  4703 ;;		_utoa
  4704 ;; This function is called by:
  4705 ;;		_vfprintf
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text14
  4710   0013F6                     __ptext14:
  4711                           	callstack 0
  4712   0013F6                     _vfpfcnvrt:
  4713                           	callstack 20
  4714   0013F6                     
  4715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4716   0013F6  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4717   0013FA  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4718   0013FE  CFDE FFF6          	movff	postinc2,tblptrl
  4719   001402  CFDD FFF7          	movff	postdec2,tblptrh
  4720   001406                     	if	0	;tblptru may be non-zero
  4721   001406                     	endif
  4722   001406                     	if	0	;tblptru may be non-zero
  4723   001406                     	endif
  4724   001406  0008               	tblrd		*
  4725   001408  50F5               	movf	tablat,w,c
  4726   00140A  0A25               	xorlw	37
  4727   00140C  A4D8               	btfss	status,2,c
  4728   00140E  EF0B  F00A         	goto	u7761
  4729   001412  EF0D  F00A         	goto	u7760
  4730   001416                     u7761:
  4731   001416  EF1D  F00C         	goto	l7256
  4732   00141A                     u7760:
  4733   00141A                     
  4734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4735   00141A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4736   00141E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4737   001422  2ADE               	incf	postinc2,f,c
  4738   001424  0E00               	movlw	0
  4739   001426  22DD               	addwfc	postdec2,f,c
  4740   001428                     
  4741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4742   001428  0E00               	movlw	0
  4743   00142A  0100               	movlb	0	; () banked
  4744   00142C  6FDB               	movwf	(_width+1)& (0+255),b
  4745   00142E  0E00               	movlw	0
  4746   001430  6FDA               	movwf	_width& (0+255),b
  4747   001432  C0DA  F0E0         	movff	_width,_flags
  4748   001436                     
  4749                           ; BSR set to: 0
  4750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4751   001436  69DC               	setf	_prec& (0+255),b
  4752   001438  69DD               	setf	(_prec+1)& (0+255),b
  4753   00143A                     
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4756   00143A  0E00               	movlw	0
  4757   00143C  6FAE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4758   00143E  0E00               	movlw	0
  4759   001440  6FAD               	movwf	vfpfcnvrt@done& (0+255),b
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4762   001442  EF4D  F00A         	goto	l7184
  4763   001446                     l7174:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  4767   001446  83E0               	bsf	_flags& (0+255),1,b
  4768   001448                     
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  4771   001448  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4772   00144C  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4773   001450  2ADE               	incf	postinc2,f,c
  4774   001452  0E00               	movlw	0
  4775   001454  22DD               	addwfc	postdec2,f,c
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  4778   001456  EF4D  F00A         	goto	l7184
  4779   00145A                     l7178:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  4783   00145A  0E00               	movlw	0
  4784   00145C  6FAE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4785   00145E  0E01               	movlw	1
  4786   001460  6FAD               	movwf	vfpfcnvrt@done& (0+255),b
  4787                           
  4788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  4789   001462  EF4D  F00A         	goto	l7184
  4790   001466                     l7182:
  4791                           
  4792                           ; BSR set to: 0
  4793   001466  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4794   00146A  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4795   00146E  CFDE FFF6          	movff	postinc2,tblptrl
  4796   001472  CFDD FFF7          	movff	postdec2,tblptrh
  4797   001476                     	if	0	;tblptru may be non-zero
  4798   001476                     	endif
  4799   001476                     	if	0	;tblptru may be non-zero
  4800   001476                     	endif
  4801   001476  0008               	tblrd		*
  4802   001478  50F5               	movf	tablat,w,c
  4803   00147A  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  4804   00147C  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4805                           
  4806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4807                           ; Switch size 1, requested type "simple"
  4808                           ; Number of cases is 1, Range of values is 0 to 0
  4809                           ; switch strategies available:
  4810                           ; Name         Instructions Cycles
  4811                           ; simple_byte            4     3 (average)
  4812                           ;	Chosen strategy is simple_byte
  4813   00147E  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4814   001480  0A00               	xorlw	0	; case 0
  4815   001482  B4D8               	btfsc	status,2,c
  4816   001484  EF46  F00A         	goto	l7960
  4817   001488  EF2D  F00A         	goto	l7178
  4818   00148C                     l7960:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ; Switch size 1, requested type "simple"
  4822                           ; Number of cases is 1, Range of values is 48 to 48
  4823                           ; switch strategies available:
  4824                           ; Name         Instructions Cycles
  4825                           ; simple_byte            4     3 (average)
  4826                           ;	Chosen strategy is simple_byte
  4827   00148C  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  4828   00148E  0A30               	xorlw	48	; case 48
  4829   001490  B4D8               	btfsc	status,2,c
  4830   001492  EF23  F00A         	goto	l7174
  4831   001496  EF2D  F00A         	goto	l7178
  4832   00149A                     l7184:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4836   00149A  51AD               	movf	vfpfcnvrt@done& (0+255),w,b
  4837   00149C  11AE               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4838   00149E  B4D8               	btfsc	status,2,c
  4839   0014A0  EF54  F00A         	goto	u7771
  4840   0014A4  EF56  F00A         	goto	u7770
  4841   0014A8                     u7771:
  4842   0014A8  EF33  F00A         	goto	l7182
  4843   0014AC                     u7770:
  4844   0014AC                     
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  4847   0014AC  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4848   0014B0  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4849   0014B4  CFDE FFF6          	movff	postinc2,tblptrl
  4850   0014B8  CFDD FFF7          	movff	postdec2,tblptrh
  4851   0014BC                     	if	0	;tblptru may be non-zero
  4852   0014BC                     	endif
  4853   0014BC                     	if	0	;tblptru may be non-zero
  4854   0014BC                     	endif
  4855   0014BC  0008               	tblrd		*
  4856   0014BE  50F5               	movf	tablat,w,c
  4857   0014C0  0A2E               	xorlw	46
  4858   0014C2  A4D8               	btfss	status,2,c
  4859   0014C4  EF66  F00A         	goto	u7781
  4860   0014C8  EF68  F00A         	goto	u7780
  4861   0014CC                     u7781:
  4862   0014CC  EFD6  F00A         	goto	l7204
  4863   0014D0                     u7780:
  4864   0014D0                     
  4865                           ; BSR set to: 0
  4866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  4867   0014D0  0E00               	movlw	0
  4868   0014D2  6FDD               	movwf	(_prec+1)& (0+255),b
  4869   0014D4  0E00               	movlw	0
  4870   0014D6  6FDC               	movwf	_prec& (0+255),b
  4871   0014D8                     
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  4874   0014D8  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4875   0014DC  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4876   0014E0  2ADE               	incf	postinc2,f,c
  4877   0014E2  0E00               	movlw	0
  4878   0014E4  22DD               	addwfc	postdec2,f,c
  4879   0014E6                     
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  4882   0014E6  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4883   0014EA  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4884   0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  4885   0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  4886   0014F6                     	if	0	;tblptru may be non-zero
  4887   0014F6                     	endif
  4888   0014F6                     	if	0	;tblptru may be non-zero
  4889   0014F6                     	endif
  4890   0014F6  0008               	tblrd		*
  4891   0014F8  50F5               	movf	tablat,w,c
  4892   0014FA  0A2A               	xorlw	42
  4893   0014FC  A4D8               	btfss	status,2,c
  4894   0014FE  EF83  F00A         	goto	u7791
  4895   001502  EF85  F00A         	goto	u7790
  4896   001506                     u7791:
  4897   001506  EFA2  F00A         	goto	l7196
  4898   00150A                     u7790:
  4899   00150A                     
  4900                           ; BSR set to: 0
  4901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  4902   00150A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4903   00150E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4904   001512  2ADE               	incf	postinc2,f,c
  4905   001514  0E00               	movlw	0
  4906   001516  22DD               	addwfc	postdec2,f,c
  4907                           
  4908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4909   001518  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4910   00151C  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4911   001520  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  4912   001524  0E02               	movlw	2
  4913   001526  26DE               	addwf	postinc2,f,c
  4914   001528  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  4915   00152C  0E00               	movlw	0
  4916   00152E  22DD               	addwfc	postdec2,f,c
  4917   001530  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4918   001534  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4919   001538  CFDE F0DC          	movff	postinc2,_prec
  4920   00153C  CFDD F0DD          	movff	postdec2,_prec+1
  4921                           
  4922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  4923   001540  EFD6  F00A         	goto	l7204
  4924   001544                     l7196:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  4928   001544  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4929   001548  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4930   00154C  CFDE F017          	movff	postinc2,atoi@s
  4931   001550  CFDD F018          	movff	postdec2,atoi@s+1
  4932   001554  EC75  F01A         	call	_atoi	;wreg free
  4933   001558  C017  F0DC         	movff	?_atoi,_prec
  4934   00155C  C018  F0DD         	movff	?_atoi+1,_prec+1
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4937   001560  EFB9  F00A         	goto	l7202
  4938   001564                     l7198:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  4942   001564  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4943   001568  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4944   00156C  2ADE               	incf	postinc2,f,c
  4945   00156E  0E00               	movlw	0
  4946   001570  22DD               	addwfc	postdec2,f,c
  4947   001572                     l7202:
  4948   001572  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4949   001576  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4950   00157A  CFDE FFF6          	movff	postinc2,tblptrl
  4951   00157E  CFDD FFF7          	movff	postdec2,tblptrh
  4952   001582                     	if	0	;tblptru may be non-zero
  4953   001582                     	endif
  4954   001582                     	if	0	;tblptru may be non-zero
  4955   001582                     	endif
  4956   001582  0008               	tblrd		*
  4957   001584  CFF5 F0A9          	movff	tablat,??_vfpfcnvrt
  4958   001588  0ED0               	movlw	208
  4959   00158A  0100               	movlb	0	; () banked
  4960   00158C  25A9               	addwf	??_vfpfcnvrt& (0+255),w,b
  4961   00158E  6FAA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4962   001590  6BAB               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  4963   001592  0EFF               	movlw	255
  4964   001594  23AB               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  4965   001596  51AB               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  4966   001598  E109               	bnz	u7800
  4967   00159A  0E0A               	movlw	10
  4968   00159C  5DAA               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  4969   00159E  A0D8               	btfss	status,0,c
  4970   0015A0  EFD4  F00A         	goto	u7801
  4971   0015A4  EFD6  F00A         	goto	u7800
  4972   0015A8                     u7801:
  4973   0015A8  EFB2  F00A         	goto	l7198
  4974   0015AC                     u7800:
  4975   0015AC                     l7204:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  4979   0015AC  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4980   0015B0  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4981   0015B4  CFDE F0B8          	movff	postinc2,vfpfcnvrt@cp
  4982   0015B8  CFDD F0B9          	movff	postdec2,vfpfcnvrt@cp+1
  4983   0015BC                     
  4984                           ; BSR set to: 0
  4985   0015BC  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4986   0015C0  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4987   0015C4                     	if	0	;tblptru may be non-zero
  4988   0015C4                     	endif
  4989   0015C4                     	if	0	;tblptru may be non-zero
  4990   0015C4                     	endif
  4991   0015C4  0008               	tblrd		*
  4992   0015C6  50F5               	movf	tablat,w,c
  4993   0015C8  0A75               	xorlw	117
  4994   0015CA  A4D8               	btfss	status,2,c
  4995   0015CC  EFEA  F00A         	goto	u7811
  4996   0015D0  EFEC  F00A         	goto	u7810
  4997   0015D4                     u7811:
  4998   0015D4  EF48  F00B         	goto	l7218
  4999   0015D8                     u7810:
  5000   0015D8                     
  5001                           ; BSR set to: 0
  5002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  5003   0015D8  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5004   0015DC  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5005   0015E0  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  5006   0015E4  0E02               	movlw	2
  5007   0015E6  26DE               	addwf	postinc2,f,c
  5008   0015E8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  5009   0015EC  0E00               	movlw	0
  5010   0015EE  22DD               	addwfc	postdec2,f,c
  5011   0015F0  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5012   0015F4  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5013   0015F8  CFDE F0AB          	movff	postinc2,??_vfpfcnvrt+2
  5014   0015FC  CFDD F0AC          	movff	postdec2,??_vfpfcnvrt+3
  5015   001600  C0AB  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  5016   001604  C0AC  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  5017   001608  6BB1               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  5018   00160A  6BB2               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  5019   00160C  6BB3               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  5020   00160E  6BB4               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  5021   001610  6BB5               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  5022   001612  6BB6               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  5025   001614  0E01               	movlw	1
  5026   001616  25B8               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5027   001618  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5028   00161A  0E00               	movlw	0
  5029   00161C  21B9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5030   00161E  6FAA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5031   001620  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5032   001624  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5033   001628  C0A9  FFDE         	movff	??_vfpfcnvrt,postinc2
  5034   00162C  C0AA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5035                           
  5036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  5037   001630  EF32  F00B         	goto	l7216
  5038   001634                     l7210:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  5042   001634  C0A3  F02C         	movff	vfpfcnvrt@fp,utoa@fp
  5043   001638  C0A4  F02D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5044   00163C  C0AF  F02E         	movff	vfpfcnvrt@convarg,utoa@d
  5045   001640  C0B0  F02F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  5046   001644  C0B1  F030         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  5047   001648  C0B2  F031         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  5048   00164C  C0B3  F032         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  5049   001650  C0B4  F033         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  5050   001654  C0B5  F034         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  5051   001658  C0B6  F035         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  5052   00165C  EC9C  F018         	call	_utoa	;wreg free
  5053   001660  EF31  F00C         	goto	l1184
  5054   001664                     l7216:
  5055                           
  5056                           ; BSR set to: 0
  5057   001664  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5058   001668  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5059   00166C                     	if	0	;tblptru may be non-zero
  5060   00166C                     	endif
  5061   00166C                     	if	0	;tblptru may be non-zero
  5062   00166C                     	endif
  5063   00166C  0008               	tblrd		*
  5064   00166E  50F5               	movf	tablat,w,c
  5065   001670  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5066   001672  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5067                           
  5068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5069                           ; Switch size 1, requested type "simple"
  5070                           ; Number of cases is 1, Range of values is 0 to 0
  5071                           ; switch strategies available:
  5072                           ; Name         Instructions Cycles
  5073                           ; simple_byte            4     3 (average)
  5074                           ;	Chosen strategy is simple_byte
  5075   001674  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5076   001676  0A00               	xorlw	0	; case 0
  5077   001678  B4D8               	btfsc	status,2,c
  5078   00167A  EF41  F00B         	goto	l7962
  5079   00167E  EF48  F00B         	goto	l7218
  5080   001682                     l7962:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ; Switch size 1, requested type "simple"
  5084                           ; Number of cases is 1, Range of values is 117 to 117
  5085                           ; switch strategies available:
  5086                           ; Name         Instructions Cycles
  5087                           ; simple_byte            4     3 (average)
  5088                           ;	Chosen strategy is simple_byte
  5089   001682  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5090   001684  0A75               	xorlw	117	; case 117
  5091   001686  B4D8               	btfsc	status,2,c
  5092   001688  EF1A  F00B         	goto	l7210
  5093   00168C  EF48  F00B         	goto	l7218
  5094   001690                     l7218:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  5098   001690  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5099   001694  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5100   001698  CFDE F0B8          	movff	postinc2,vfpfcnvrt@cp
  5101   00169C  CFDD F0B9          	movff	postdec2,vfpfcnvrt@cp+1
  5102   0016A0                     
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  5105   0016A0  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5106   0016A4  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5107   0016A8                     	if	0	;tblptru may be non-zero
  5108   0016A8                     	endif
  5109   0016A8                     	if	0	;tblptru may be non-zero
  5110   0016A8                     	endif
  5111   0016A8  0008               	tblrd		*
  5112   0016AA  CFF5 F0B7          	movff	tablat,vfpfcnvrt@c
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  5115   0016AE  EF65  F00B         	goto	l7230
  5116   0016B2                     l7222:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  5120   0016B2  4BB8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  5121   0016B4  2BB9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  5122                           
  5123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  5124   0016B6  EF7E  F00B         	goto	l7232
  5125   0016BA                     l7224:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  5129   0016BA  0E6C               	movlw	108
  5130   0016BC  6FB7               	movwf	vfpfcnvrt@c& (0+255),b
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  5133   0016BE  EF7E  F00B         	goto	l7232
  5134   0016C2                     l7226:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  5138   0016C2  0E00               	movlw	0
  5139   0016C4  6FB7               	movwf	vfpfcnvrt@c& (0+255),b
  5140                           
  5141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  5142   0016C6  EF7E  F00B         	goto	l7232
  5143   0016CA                     l7230:
  5144                           
  5145                           ; BSR set to: 0
  5146   0016CA  51B7               	movf	vfpfcnvrt@c& (0+255),w,b
  5147   0016CC  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5148   0016CE  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5149                           
  5150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5151                           ; Switch size 1, requested type "simple"
  5152                           ; Number of cases is 1, Range of values is 0 to 0
  5153                           ; switch strategies available:
  5154                           ; Name         Instructions Cycles
  5155                           ; simple_byte            4     3 (average)
  5156                           ;	Chosen strategy is simple_byte
  5157   0016D0  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5158   0016D2  0A00               	xorlw	0	; case 0
  5159   0016D4  B4D8               	btfsc	status,2,c
  5160   0016D6  EF6F  F00B         	goto	l7964
  5161   0016DA  EF61  F00B         	goto	l7226
  5162   0016DE                     l7964:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ; Switch size 1, requested type "simple"
  5166                           ; Number of cases is 3, Range of values is 76 to 108
  5167                           ; switch strategies available:
  5168                           ; Name         Instructions Cycles
  5169                           ; simple_byte           10     6 (average)
  5170                           ;	Chosen strategy is simple_byte
  5171   0016DE  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5172   0016E0  0A4C               	xorlw	76	; case 76
  5173   0016E2  B4D8               	btfsc	status,2,c
  5174   0016E4  EF59  F00B         	goto	l7222
  5175   0016E8  0A2A               	xorlw	42	; case 102
  5176   0016EA  B4D8               	btfsc	status,2,c
  5177   0016EC  EF5D  F00B         	goto	l7224
  5178   0016F0  0A0A               	xorlw	10	; case 108
  5179   0016F2  B4D8               	btfsc	status,2,c
  5180   0016F4  EF59  F00B         	goto	l7222
  5181   0016F8  EF61  F00B         	goto	l7226
  5182   0016FC                     l7232:
  5183                           
  5184                           ; BSR set to: 0
  5185   0016FC  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5186   001700  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5187   001704                     	if	0	;tblptru may be non-zero
  5188   001704                     	endif
  5189   001704                     	if	0	;tblptru may be non-zero
  5190   001704                     	endif
  5191   001704  0008               	tblrd		*
  5192   001706  50F5               	movf	tablat,w,c
  5193   001708  0A66               	xorlw	102
  5194   00170A  A4D8               	btfss	status,2,c
  5195   00170C  EF8A  F00B         	goto	u7821
  5196   001710  EF8C  F00B         	goto	u7820
  5197   001714                     u7821:
  5198   001714  EF14  F00C         	goto	l7252
  5199   001718                     u7820:
  5200   001718  EFC2  F00B         	goto	l7240
  5201   00171C                     l7234:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5205   00171C  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5206   001720  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5207   001724  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  5208   001728  0E04               	movlw	4
  5209   00172A  26DE               	addwf	postinc2,f,c
  5210   00172C  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  5211   001730  0E00               	movlw	0
  5212   001732  22DD               	addwfc	postdec2,f,c
  5213   001734  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5214   001738  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5215   00173C  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg
  5216   001740  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+1
  5217   001744  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+2
  5218   001748  CFDE F0B2          	movff	postinc2,vfpfcnvrt@convarg+3
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  5221   00174C  EFD7  F00B         	goto	l7242
  5222   001750                     l7236:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5226   001750  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5227   001754  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5228   001758  CFDF F0A9          	movff	indf2,??_vfpfcnvrt
  5229   00175C  0E04               	movlw	4
  5230   00175E  26DE               	addwf	postinc2,f,c
  5231   001760  CFDF F0AA          	movff	indf2,??_vfpfcnvrt+1
  5232   001764  0E00               	movlw	0
  5233   001766  22DD               	addwfc	postdec2,f,c
  5234   001768  C0A9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5235   00176C  C0AA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5236   001770  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg
  5237   001774  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+1
  5238   001778  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+2
  5239   00177C  CFDE F0B2          	movff	postinc2,vfpfcnvrt@convarg+3
  5240                           
  5241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  5242   001780  EFD7  F00B         	goto	l7242
  5243   001784                     l7240:
  5244                           
  5245                           ; BSR set to: 0
  5246   001784  51B7               	movf	vfpfcnvrt@c& (0+255),w,b
  5247   001786  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5248   001788  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5249                           
  5250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5251                           ; Switch size 1, requested type "simple"
  5252                           ; Number of cases is 1, Range of values is 0 to 0
  5253                           ; switch strategies available:
  5254                           ; Name         Instructions Cycles
  5255                           ; simple_byte            4     3 (average)
  5256                           ;	Chosen strategy is simple_byte
  5257   00178A  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5258   00178C  0A00               	xorlw	0	; case 0
  5259   00178E  B4D8               	btfsc	status,2,c
  5260   001790  EFCC  F00B         	goto	l7966
  5261   001794  EFD7  F00B         	goto	l7242
  5262   001798                     l7966:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ; Switch size 1, requested type "simple"
  5266                           ; Number of cases is 2, Range of values is 76 to 108
  5267                           ; switch strategies available:
  5268                           ; Name         Instructions Cycles
  5269                           ; simple_byte            7     4 (average)
  5270                           ;	Chosen strategy is simple_byte
  5271   001798  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5272   00179A  0A4C               	xorlw	76	; case 76
  5273   00179C  B4D8               	btfsc	status,2,c
  5274   00179E  EFA8  F00B         	goto	l7236
  5275   0017A2  0A20               	xorlw	32	; case 108
  5276   0017A4  B4D8               	btfsc	status,2,c
  5277   0017A6  EF8E  F00B         	goto	l7234
  5278   0017AA  EFD7  F00B         	goto	l7242
  5279   0017AE                     l7242:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  5283   0017AE  0E01               	movlw	1
  5284   0017B0  25B8               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5285   0017B2  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5286   0017B4  0E00               	movlw	0
  5287   0017B6  21B9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5288   0017B8  6FAA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5289   0017BA  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5290   0017BE  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5291   0017C2  C0A9  FFDE         	movff	??_vfpfcnvrt,postinc2
  5292   0017C6  C0AA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5293                           
  5294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  5295   0017CA  EFFE  F00B         	goto	l7250
  5296   0017CE                     l7244:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  5300   0017CE  C0A3  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  5301   0017D2  C0A4  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5302   0017D6  C0AF  F072         	movff	vfpfcnvrt@convarg,efgtoa@f
  5303   0017DA  C0B0  F073         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  5304   0017DE  C0B1  F074         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  5305   0017E2  C0B2  F075         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  5306   0017E6  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5307   0017EA  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5308   0017EE                     	if	0	;tblptru may be non-zero
  5309   0017EE                     	endif
  5310   0017EE                     	if	0	;tblptru may be non-zero
  5311   0017EE                     	endif
  5312   0017EE  0008               	tblrd		*
  5313   0017F0  CFF5 F076          	movff	tablat,efgtoa@c
  5314   0017F4  EC09  F000         	call	_efgtoa	;wreg free
  5315   0017F8  EF31  F00C         	goto	l1184
  5316   0017FC                     l7250:
  5317                           
  5318                           ; BSR set to: 0
  5319   0017FC  C0B8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5320   001800  C0B9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5321   001804                     	if	0	;tblptru may be non-zero
  5322   001804                     	endif
  5323   001804                     	if	0	;tblptru may be non-zero
  5324   001804                     	endif
  5325   001804  0008               	tblrd		*
  5326   001806  50F5               	movf	tablat,w,c
  5327   001808  6FA9               	movwf	??_vfpfcnvrt& (0+255),b
  5328   00180A  6BAA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5329                           
  5330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5331                           ; Switch size 1, requested type "simple"
  5332                           ; Number of cases is 1, Range of values is 0 to 0
  5333                           ; switch strategies available:
  5334                           ; Name         Instructions Cycles
  5335                           ; simple_byte            4     3 (average)
  5336                           ;	Chosen strategy is simple_byte
  5337   00180C  51AA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5338   00180E  0A00               	xorlw	0	; case 0
  5339   001810  B4D8               	btfsc	status,2,c
  5340   001812  EF0D  F00C         	goto	l7968
  5341   001816  EF14  F00C         	goto	l7252
  5342   00181A                     l7968:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ; Switch size 1, requested type "simple"
  5346                           ; Number of cases is 1, Range of values is 102 to 102
  5347                           ; switch strategies available:
  5348                           ; Name         Instructions Cycles
  5349                           ; simple_byte            4     3 (average)
  5350                           ;	Chosen strategy is simple_byte
  5351   00181A  51A9               	movf	??_vfpfcnvrt& (0+255),w,b
  5352   00181C  0A66               	xorlw	102	; case 102
  5353   00181E  B4D8               	btfsc	status,2,c
  5354   001820  EFE7  F00B         	goto	l7244
  5355   001824  EF14  F00C         	goto	l7252
  5356   001828                     l7252:
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  5359   001828  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5360   00182C  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5361   001830  2ADE               	incf	postinc2,f,c
  5362   001832  0E00               	movlw	0
  5363   001834  22DD               	addwfc	postdec2,f,c
  5364   001836  EF31  F00C         	goto	l1184
  5365   00183A                     l7256:
  5366                           
  5367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  5368   00183A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5369   00183E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5370   001842  CFDE FFF6          	movff	postinc2,tblptrl
  5371   001846  CFDD FFF7          	movff	postdec2,tblptrh
  5372   00184A                     	if	0	;tblptru may be non-zero
  5373   00184A                     	endif
  5374   00184A                     	if	0	;tblptru may be non-zero
  5375   00184A                     	endif
  5376   00184A  0008               	tblrd		*
  5377   00184C  50F5               	movf	tablat,w,c
  5378   00184E  6E11               	movwf	fputc@c^0,c
  5379   001850  6A12               	clrf	(fputc@c+1)^0,c
  5380   001852  C0A3  F013         	movff	vfpfcnvrt@fp,fputc@fp
  5381   001856  C0A4  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5382   00185A  EC5C  F01E         	call	_fputc	;wreg free
  5383   00185E  EF14  F00C         	goto	l7252
  5384   001862                     l1184:
  5385   001862  0012               	return		;funcret
  5386   001864                     __end_of_vfpfcnvrt:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _utoa *****************
  5390 ;; Defined at:
  5391 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  5394 ;;		 -> sprintf@f(11), 
  5395 ;;  d               8   45[COMRAM] unsigned long long 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  n               8    4[BANK0 ] unsigned long long 
  5398 ;;  i               2   12[BANK0 ] int 
  5399 ;;  w               2    2[BANK0 ] int 
  5400 ;;  p               2    0[BANK0 ] int 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5410 ;;      Params:        10       0       0       0       0       0       0       0       0
  5411 ;;      Locals:         0      14       0       0       0       0       0       0       0
  5412 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5413 ;;      Totals:        18      14       0       0       0       0       0       0       0
  5414 ;;Total ram usage:       32 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 6
  5417 ;; This function calls:
  5418 ;;		___lodiv
  5419 ;;		___lomod
  5420 ;;		_pad
  5421 ;; This function is called by:
  5422 ;;		_vfpfcnvrt
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text15
  5427   003138                     __ptext15:
  5428                           	callstack 0
  5429   003138                     _utoa:
  5430                           	callstack 20
  5431   003138                     
  5432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  5433   003138  0100               	movlb	0	; () banked
  5434   00313A  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  5435   00313C  EFA2  F018         	goto	u7651
  5436   003140  EFA4  F018         	goto	u7650
  5437   003144                     u7651:
  5438   003144  EFA5  F018         	goto	l7100
  5439   003148                     u7650:
  5440   003148                     
  5441                           ; BSR set to: 0
  5442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  5443   003148  93E0               	bcf	_flags& (0+255),1,b
  5444   00314A                     l7100:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  5448   00314A  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  5449   00314C  EFB2  F018         	goto	u7660
  5450   003150  51DD               	movf	(_prec+1)& (0+255),w,b
  5451   003152  E106               	bnz	u7661
  5452   003154  05DC               	decf	_prec& (0+255),w,b
  5453   003156  B0D8               	btfsc	status,0,c
  5454   003158  EFB0  F018         	goto	u7661
  5455   00315C  EFB2  F018         	goto	u7660
  5456   003160                     u7661:
  5457   003160  EFB8  F018         	goto	l1150
  5458   003164                     u7660:
  5459   003164                     
  5460                           ; BSR set to: 0
  5461   003164  0E00               	movlw	0
  5462   003166  6F61               	movwf	(utoa@p+1)& (0+255),b
  5463   003168  0E01               	movlw	1
  5464   00316A  6F60               	movwf	utoa@p& (0+255),b
  5465   00316C  EFBC  F018         	goto	l1152
  5466   003170                     l1150:
  5467                           
  5468                           ; BSR set to: 0
  5469   003170  C0DC  F060         	movff	_prec,utoa@p
  5470   003174  C0DD  F061         	movff	_prec+1,utoa@p+1
  5471   003178                     l1152:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  5475   003178  C0DA  F062         	movff	_width,utoa@w
  5476   00317C  C0DB  F063         	movff	_width+1,utoa@w+1
  5477                           
  5478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  5479   003180  C02E  F064         	movff	utoa@d,utoa@n
  5480   003184  C02F  F065         	movff	utoa@d+1,utoa@n+1
  5481   003188  C030  F066         	movff	utoa@d+2,utoa@n+2
  5482   00318C  C031  F067         	movff	utoa@d+3,utoa@n+3
  5483   003190  C032  F068         	movff	utoa@d+4,utoa@n+4
  5484   003194  C033  F069         	movff	utoa@d+5,utoa@n+5
  5485   003198  C034  F06A         	movff	utoa@d+6,utoa@n+6
  5486   00319C  C035  F06B         	movff	utoa@d+7,utoa@n+7
  5487   0031A0                     
  5488                           ; BSR set to: 0
  5489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  5490   0031A0  0E00               	movlw	0
  5491   0031A2  6F6D               	movwf	(utoa@i+1)& (0+255),b
  5492   0031A4  0E4F               	movlw	79
  5493   0031A6  6F6C               	movwf	utoa@i& (0+255),b
  5494   0031A8                     
  5495                           ; BSR set to: 0
  5496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  5497   0031A8  0E00               	movlw	0
  5498   0031AA  0101               	movlb	1	; () banked
  5499   0031AC  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5500                           
  5501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5502   0031AE  EF50  F019         	goto	l7118
  5503   0031B2                     l7108:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  5507   0031B2  076C               	decf	utoa@i& (0+255),f,b
  5508   0031B4  A0D8               	btfss	status,0,c
  5509   0031B6  076D               	decf	(utoa@i+1)& (0+255),f,b
  5510   0031B8                     
  5511                           ; BSR set to: 0
  5512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  5513   0031B8  0E00               	movlw	low _dbuf
  5514   0031BA  256C               	addwf	utoa@i& (0+255),w,b
  5515   0031BC  6ED9               	movwf	fsr2l,c
  5516   0031BE  0E01               	movlw	high _dbuf
  5517   0031C0  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5518   0031C2  6EDA               	movwf	fsr2h,c
  5519   0031C4  C064  F011         	movff	utoa@n,___lomod@dividend
  5520   0031C8  C065  F012         	movff	utoa@n+1,___lomod@dividend+1
  5521   0031CC  C066  F013         	movff	utoa@n+2,___lomod@dividend+2
  5522   0031D0  C067  F014         	movff	utoa@n+3,___lomod@dividend+3
  5523   0031D4  C068  F015         	movff	utoa@n+4,___lomod@dividend+4
  5524   0031D8  C069  F016         	movff	utoa@n+5,___lomod@dividend+5
  5525   0031DC  C06A  F017         	movff	utoa@n+6,___lomod@dividend+6
  5526   0031E0  C06B  F018         	movff	utoa@n+7,___lomod@dividend+7
  5527   0031E4  0E0A               	movlw	10
  5528   0031E6  6E19               	movwf	___lomod@divisor^0,c
  5529   0031E8  0E00               	movlw	0
  5530   0031EA  6E1A               	movwf	(___lomod@divisor+1)^0,c
  5531   0031EC  0E00               	movlw	0
  5532   0031EE  6E1B               	movwf	(___lomod@divisor+2)^0,c
  5533   0031F0  0E00               	movlw	0
  5534   0031F2  6E1C               	movwf	(___lomod@divisor+3)^0,c
  5535   0031F4  0E00               	movlw	0
  5536   0031F6  6E1D               	movwf	(___lomod@divisor+4)^0,c
  5537   0031F8  0E00               	movlw	0
  5538   0031FA  6E1E               	movwf	(___lomod@divisor+5)^0,c
  5539   0031FC  0E00               	movlw	0
  5540   0031FE  6E1F               	movwf	(___lomod@divisor+6)^0,c
  5541   003200  0E00               	movlw	0
  5542   003202  6E20               	movwf	(___lomod@divisor+7)^0,c
  5543   003204  ECF4  F01D         	call	___lomod	;wreg free
  5544   003208  C011  F036         	movff	?___lomod,??_utoa
  5545   00320C  C012  F037         	movff	?___lomod+1,??_utoa+1
  5546   003210  C013  F038         	movff	?___lomod+2,??_utoa+2
  5547   003214  C014  F039         	movff	?___lomod+3,??_utoa+3
  5548   003218  C015  F03A         	movff	?___lomod+4,??_utoa+4
  5549   00321C  C016  F03B         	movff	?___lomod+5,??_utoa+5
  5550   003220  C017  F03C         	movff	?___lomod+6,??_utoa+6
  5551   003224  C018  F03D         	movff	?___lomod+7,??_utoa+7
  5552   003228  5036               	movf	??_utoa^0,w,c
  5553   00322A  0F30               	addlw	48
  5554   00322C  6EDF               	movwf	indf2,c
  5555   00322E                     
  5556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  5557   00322E  0100               	movlb	0	; () banked
  5558   003230  0760               	decf	utoa@p& (0+255),f,b
  5559   003232  A0D8               	btfss	status,0,c
  5560   003234  0761               	decf	(utoa@p+1)& (0+255),f,b
  5561   003236                     
  5562                           ; BSR set to: 0
  5563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  5564   003236  0762               	decf	utoa@w& (0+255),f,b
  5565   003238  A0D8               	btfss	status,0,c
  5566   00323A  0763               	decf	(utoa@w+1)& (0+255),f,b
  5567   00323C                     
  5568                           ; BSR set to: 0
  5569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  5570   00323C  C064  F011         	movff	utoa@n,___lodiv@dividend
  5571   003240  C065  F012         	movff	utoa@n+1,___lodiv@dividend+1
  5572   003244  C066  F013         	movff	utoa@n+2,___lodiv@dividend+2
  5573   003248  C067  F014         	movff	utoa@n+3,___lodiv@dividend+3
  5574   00324C  C068  F015         	movff	utoa@n+4,___lodiv@dividend+4
  5575   003250  C069  F016         	movff	utoa@n+5,___lodiv@dividend+5
  5576   003254  C06A  F017         	movff	utoa@n+6,___lodiv@dividend+6
  5577   003258  C06B  F018         	movff	utoa@n+7,___lodiv@dividend+7
  5578   00325C  0E0A               	movlw	10
  5579   00325E  6E19               	movwf	___lodiv@divisor^0,c
  5580   003260  0E00               	movlw	0
  5581   003262  6E1A               	movwf	(___lodiv@divisor+1)^0,c
  5582   003264  0E00               	movlw	0
  5583   003266  6E1B               	movwf	(___lodiv@divisor+2)^0,c
  5584   003268  0E00               	movlw	0
  5585   00326A  6E1C               	movwf	(___lodiv@divisor+3)^0,c
  5586   00326C  0E00               	movlw	0
  5587   00326E  6E1D               	movwf	(___lodiv@divisor+4)^0,c
  5588   003270  0E00               	movlw	0
  5589   003272  6E1E               	movwf	(___lodiv@divisor+5)^0,c
  5590   003274  0E00               	movlw	0
  5591   003276  6E1F               	movwf	(___lodiv@divisor+6)^0,c
  5592   003278  0E00               	movlw	0
  5593   00327A  6E20               	movwf	(___lodiv@divisor+7)^0,c
  5594   00327C  EC9E  F01C         	call	___lodiv	;wreg free
  5595   003280  C011  F064         	movff	?___lodiv,utoa@n
  5596   003284  C012  F065         	movff	?___lodiv+1,utoa@n+1
  5597   003288  C013  F066         	movff	?___lodiv+2,utoa@n+2
  5598   00328C  C014  F067         	movff	?___lodiv+3,utoa@n+3
  5599   003290  C015  F068         	movff	?___lodiv+4,utoa@n+4
  5600   003294  C016  F069         	movff	?___lodiv+5,utoa@n+5
  5601   003298  C017  F06A         	movff	?___lodiv+6,utoa@n+6
  5602   00329C  C018  F06B         	movff	?___lodiv+7,utoa@n+7
  5603   0032A0                     l7118:
  5604                           
  5605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5606   0032A0  0100               	movlb	0	; () banked
  5607   0032A2  516C               	movf	utoa@i& (0+255),w,b
  5608   0032A4  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  5609   0032A6  B4D8               	btfsc	status,2,c
  5610   0032A8  EF58  F019         	goto	u7671
  5611   0032AC  EF5A  F019         	goto	u7670
  5612   0032B0                     u7671:
  5613   0032B0  EF8A  F019         	goto	l7128
  5614   0032B4                     u7670:
  5615   0032B4                     
  5616                           ; BSR set to: 0
  5617   0032B4  5164               	movf	utoa@n& (0+255),w,b
  5618   0032B6  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  5619   0032B8  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  5620   0032BA  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  5621   0032BC  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  5622   0032BE  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  5623   0032C0  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  5624   0032C2  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  5625   0032C4  A4D8               	btfss	status,2,c
  5626   0032C6  EF67  F019         	goto	u7681
  5627   0032CA  EF69  F019         	goto	u7680
  5628   0032CE                     u7681:
  5629   0032CE  EFD9  F018         	goto	l7108
  5630   0032D2                     u7680:
  5631   0032D2                     
  5632                           ; BSR set to: 0
  5633   0032D2  BF61               	btfsc	(utoa@p+1)& (0+255),7,b
  5634   0032D4  EF76  F019         	goto	u7690
  5635   0032D8  5161               	movf	(utoa@p+1)& (0+255),w,b
  5636   0032DA  E106               	bnz	u7691
  5637   0032DC  0560               	decf	utoa@p& (0+255),w,b
  5638   0032DE  B0D8               	btfsc	status,0,c
  5639   0032E0  EF74  F019         	goto	u7691
  5640   0032E4  EF76  F019         	goto	u7690
  5641   0032E8                     u7691:
  5642   0032E8  EFD9  F018         	goto	l7108
  5643   0032EC                     u7690:
  5644   0032EC                     
  5645                           ; BSR set to: 0
  5646   0032EC  BF63               	btfsc	(utoa@w+1)& (0+255),7,b
  5647   0032EE  EF81  F019         	goto	u7701
  5648   0032F2  5163               	movf	(utoa@w+1)& (0+255),w,b
  5649   0032F4  E108               	bnz	u7700
  5650   0032F6  0562               	decf	utoa@w& (0+255),w,b
  5651   0032F8  A0D8               	btfss	status,0,c
  5652   0032FA  EF81  F019         	goto	u7701
  5653   0032FE  EF83  F019         	goto	u7700
  5654   003302                     u7701:
  5655   003302  EF8A  F019         	goto	l7128
  5656   003306                     u7700:
  5657   003306                     
  5658                           ; BSR set to: 0
  5659   003306  B3E0               	btfsc	_flags& (0+255),1,b
  5660   003308  EF88  F019         	goto	u7711
  5661   00330C  EF8A  F019         	goto	u7710
  5662   003310                     u7711:
  5663   003310  EFD9  F018         	goto	l7108
  5664   003314                     u7710:
  5665   003314                     l7128:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5669   003314  C02C  F021         	movff	utoa@fp,pad@fp
  5670   003318  C02D  F022         	movff	utoa@fp+1,pad@fp+1
  5671   00331C  0E00               	movlw	low _dbuf
  5672   00331E  256C               	addwf	utoa@i& (0+255),w,b
  5673   003320  6E23               	movwf	pad@buf^0,c
  5674   003322  0E01               	movlw	high _dbuf
  5675   003324  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  5676   003326  6E24               	movwf	(pad@buf+1)^0,c
  5677   003328  C062  F025         	movff	utoa@w,pad@p
  5678   00332C  C063  F026         	movff	utoa@w+1,pad@p+1
  5679   003330  EC95  F01F         	call	_pad	;wreg free
  5680   003334  0012               	return		;funcret
  5681   003336                     __end_of_utoa:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function ___lomod *****************
  5685 ;; Defined at:
  5686 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  dividend        8   16[COMRAM] unsigned long long 
  5689 ;;  divisor         8   24[COMRAM] unsigned long long 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  counter         1   32[COMRAM] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  8   16[COMRAM] unsigned long long 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5701 ;;      Params:        16       0       0       0       0       0       0       0       0
  5702 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5704 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5705 ;;Total ram usage:       17 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 2
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_utoa
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text16
  5716   003BE8                     __ptext16:
  5717                           	callstack 0
  5718   003BE8                     ___lomod:
  5719                           	callstack 23
  5720   003BE8  5019               	movf	___lomod@divisor^0,w,c
  5721   003BEA  101A               	iorwf	(___lomod@divisor+1)^0,w,c
  5722   003BEC  101B               	iorwf	(___lomod@divisor+2)^0,w,c
  5723   003BEE  101C               	iorwf	(___lomod@divisor+3)^0,w,c
  5724   003BF0  101D               	iorwf	(___lomod@divisor+4)^0,w,c
  5725   003BF2  101E               	iorwf	(___lomod@divisor+5)^0,w,c
  5726   003BF4  101F               	iorwf	(___lomod@divisor+6)^0,w,c
  5727   003BF6  1020               	iorwf	(___lomod@divisor+7)^0,w,c
  5728   003BF8  B4D8               	btfsc	status,2,c
  5729   003BFA  EF01  F01E         	goto	u7011
  5730   003BFE  EF03  F01E         	goto	u7010
  5731   003C02                     u7011:
  5732   003C02  EF4B  F01E         	goto	l819
  5733   003C06                     u7010:
  5734   003C06  0E01               	movlw	1
  5735   003C08  6E21               	movwf	___lomod@counter^0,c
  5736   003C0A  EF11  F01E         	goto	l6752
  5737   003C0E                     l6750:
  5738   003C0E  90D8               	bcf	status,0,c
  5739   003C10  3619               	rlcf	___lomod@divisor^0,f,c
  5740   003C12  361A               	rlcf	(___lomod@divisor+1)^0,f,c
  5741   003C14  361B               	rlcf	(___lomod@divisor+2)^0,f,c
  5742   003C16  361C               	rlcf	(___lomod@divisor+3)^0,f,c
  5743   003C18  361D               	rlcf	(___lomod@divisor+4)^0,f,c
  5744   003C1A  361E               	rlcf	(___lomod@divisor+5)^0,f,c
  5745   003C1C  361F               	rlcf	(___lomod@divisor+6)^0,f,c
  5746   003C1E  3620               	rlcf	(___lomod@divisor+7)^0,f,c
  5747   003C20  2A21               	incf	___lomod@counter^0,f,c
  5748   003C22                     l6752:
  5749   003C22  AE20               	btfss	(___lomod@divisor+7)^0,7,c
  5750   003C24  EF16  F01E         	goto	u7021
  5751   003C28  EF18  F01E         	goto	u7020
  5752   003C2C                     u7021:
  5753   003C2C  EF07  F01E         	goto	l6750
  5754   003C30                     u7020:
  5755   003C30                     l6754:
  5756   003C30  5019               	movf	___lomod@divisor^0,w,c
  5757   003C32  5C11               	subwf	___lomod@dividend^0,w,c
  5758   003C34  501A               	movf	(___lomod@divisor+1)^0,w,c
  5759   003C36  5812               	subwfb	(___lomod@dividend+1)^0,w,c
  5760   003C38  501B               	movf	(___lomod@divisor+2)^0,w,c
  5761   003C3A  5813               	subwfb	(___lomod@dividend+2)^0,w,c
  5762   003C3C  501C               	movf	(___lomod@divisor+3)^0,w,c
  5763   003C3E  5814               	subwfb	(___lomod@dividend+3)^0,w,c
  5764   003C40  501D               	movf	(___lomod@divisor+4)^0,w,c
  5765   003C42  5815               	subwfb	(___lomod@dividend+4)^0,w,c
  5766   003C44  501E               	movf	(___lomod@divisor+5)^0,w,c
  5767   003C46  5816               	subwfb	(___lomod@dividend+5)^0,w,c
  5768   003C48  501F               	movf	(___lomod@divisor+6)^0,w,c
  5769   003C4A  5817               	subwfb	(___lomod@dividend+6)^0,w,c
  5770   003C4C  5020               	movf	(___lomod@divisor+7)^0,w,c
  5771   003C4E  5818               	subwfb	(___lomod@dividend+7)^0,w,c
  5772   003C50  A0D8               	btfss	status,0,c
  5773   003C52  EF2D  F01E         	goto	u7031
  5774   003C56  EF2F  F01E         	goto	u7030
  5775   003C5A                     u7031:
  5776   003C5A  EF3F  F01E         	goto	l6758
  5777   003C5E                     u7030:
  5778   003C5E  5019               	movf	___lomod@divisor^0,w,c
  5779   003C60  5E11               	subwf	___lomod@dividend^0,f,c
  5780   003C62  501A               	movf	(___lomod@divisor+1)^0,w,c
  5781   003C64  5A12               	subwfb	(___lomod@dividend+1)^0,f,c
  5782   003C66  501B               	movf	(___lomod@divisor+2)^0,w,c
  5783   003C68  5A13               	subwfb	(___lomod@dividend+2)^0,f,c
  5784   003C6A  501C               	movf	(___lomod@divisor+3)^0,w,c
  5785   003C6C  5A14               	subwfb	(___lomod@dividend+3)^0,f,c
  5786   003C6E  501D               	movf	(___lomod@divisor+4)^0,w,c
  5787   003C70  5A15               	subwfb	(___lomod@dividend+4)^0,f,c
  5788   003C72  501E               	movf	(___lomod@divisor+5)^0,w,c
  5789   003C74  5A16               	subwfb	(___lomod@dividend+5)^0,f,c
  5790   003C76  501F               	movf	(___lomod@divisor+6)^0,w,c
  5791   003C78  5A17               	subwfb	(___lomod@dividend+6)^0,f,c
  5792   003C7A  5020               	movf	(___lomod@divisor+7)^0,w,c
  5793   003C7C  5A18               	subwfb	(___lomod@dividend+7)^0,f,c
  5794   003C7E                     l6758:
  5795   003C7E  90D8               	bcf	status,0,c
  5796   003C80  3220               	rrcf	(___lomod@divisor+7)^0,f,c
  5797   003C82  321F               	rrcf	(___lomod@divisor+6)^0,f,c
  5798   003C84  321E               	rrcf	(___lomod@divisor+5)^0,f,c
  5799   003C86  321D               	rrcf	(___lomod@divisor+4)^0,f,c
  5800   003C88  321C               	rrcf	(___lomod@divisor+3)^0,f,c
  5801   003C8A  321B               	rrcf	(___lomod@divisor+2)^0,f,c
  5802   003C8C  321A               	rrcf	(___lomod@divisor+1)^0,f,c
  5803   003C8E  3219               	rrcf	___lomod@divisor^0,f,c
  5804   003C90  2E21               	decfsz	___lomod@counter^0,f,c
  5805   003C92  EF18  F01E         	goto	l6754
  5806   003C96                     l819:
  5807   003C96  C011  F011         	movff	___lomod@dividend,?___lomod
  5808   003C9A  C012  F012         	movff	___lomod@dividend+1,?___lomod+1
  5809   003C9E  C013  F013         	movff	___lomod@dividend+2,?___lomod+2
  5810   003CA2  C014  F014         	movff	___lomod@dividend+3,?___lomod+3
  5811   003CA6  C015  F015         	movff	___lomod@dividend+4,?___lomod+4
  5812   003CAA  C016  F016         	movff	___lomod@dividend+5,?___lomod+5
  5813   003CAE  C017  F017         	movff	___lomod@dividend+6,?___lomod+6
  5814   003CB2  C018  F018         	movff	___lomod@dividend+7,?___lomod+7
  5815   003CB6  0012               	return		;funcret
  5816   003CB8                     __end_of___lomod:
  5817                           	callstack 0
  5818                           
  5819 ;; *************** function ___lodiv *****************
  5820 ;; Defined at:
  5821 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  dividend        8   16[COMRAM] unsigned long long 
  5824 ;;  divisor         8   24[COMRAM] unsigned long long 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  quotient        8   32[COMRAM] unsigned long long 
  5827 ;;  counter         1   40[COMRAM] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  8   16[COMRAM] unsigned long long 
  5830 ;; Registers used:
  5831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5837 ;;      Params:        16       0       0       0       0       0       0       0       0
  5838 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5840 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5841 ;;Total ram usage:       25 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; Hardware stack levels required when called: 2
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_utoa
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text17
  5852   00393C                     __ptext17:
  5853                           	callstack 0
  5854   00393C                     ___lodiv:
  5855                           	callstack 23
  5856   00393C  EE20  F021         	lfsr	2,___lodiv@quotient
  5857   003940  0E07               	movlw	7
  5858   003942                     u6971:
  5859   003942  6ADE               	clrf	postinc2,c
  5860   003944  06E8               	decf	wreg,f,c
  5861   003946  E2FD               	bc	u6971
  5862   003948  5019               	movf	___lodiv@divisor^0,w,c
  5863   00394A  101A               	iorwf	(___lodiv@divisor+1)^0,w,c
  5864   00394C  101B               	iorwf	(___lodiv@divisor+2)^0,w,c
  5865   00394E  101C               	iorwf	(___lodiv@divisor+3)^0,w,c
  5866   003950  101D               	iorwf	(___lodiv@divisor+4)^0,w,c
  5867   003952  101E               	iorwf	(___lodiv@divisor+5)^0,w,c
  5868   003954  101F               	iorwf	(___lodiv@divisor+6)^0,w,c
  5869   003956  1020               	iorwf	(___lodiv@divisor+7)^0,w,c
  5870   003958  B4D8               	btfsc	status,2,c
  5871   00395A  EFB1  F01C         	goto	u6981
  5872   00395E  EFB3  F01C         	goto	u6980
  5873   003962                     u6981:
  5874   003962  EF05  F01D         	goto	l809
  5875   003966                     u6980:
  5876   003966  0E01               	movlw	1
  5877   003968  6E29               	movwf	___lodiv@counter^0,c
  5878   00396A  EFC1  F01C         	goto	l6732
  5879   00396E                     l6730:
  5880   00396E  90D8               	bcf	status,0,c
  5881   003970  3619               	rlcf	___lodiv@divisor^0,f,c
  5882   003972  361A               	rlcf	(___lodiv@divisor+1)^0,f,c
  5883   003974  361B               	rlcf	(___lodiv@divisor+2)^0,f,c
  5884   003976  361C               	rlcf	(___lodiv@divisor+3)^0,f,c
  5885   003978  361D               	rlcf	(___lodiv@divisor+4)^0,f,c
  5886   00397A  361E               	rlcf	(___lodiv@divisor+5)^0,f,c
  5887   00397C  361F               	rlcf	(___lodiv@divisor+6)^0,f,c
  5888   00397E  3620               	rlcf	(___lodiv@divisor+7)^0,f,c
  5889   003980  2A29               	incf	___lodiv@counter^0,f,c
  5890   003982                     l6732:
  5891   003982  AE20               	btfss	(___lodiv@divisor+7)^0,7,c
  5892   003984  EFC6  F01C         	goto	u6991
  5893   003988  EFC8  F01C         	goto	u6990
  5894   00398C                     u6991:
  5895   00398C  EFB7  F01C         	goto	l6730
  5896   003990                     u6990:
  5897   003990                     l6734:
  5898   003990  90D8               	bcf	status,0,c
  5899   003992  3621               	rlcf	___lodiv@quotient^0,f,c
  5900   003994  3622               	rlcf	(___lodiv@quotient+1)^0,f,c
  5901   003996  3623               	rlcf	(___lodiv@quotient+2)^0,f,c
  5902   003998  3624               	rlcf	(___lodiv@quotient+3)^0,f,c
  5903   00399A  3625               	rlcf	(___lodiv@quotient+4)^0,f,c
  5904   00399C  3626               	rlcf	(___lodiv@quotient+5)^0,f,c
  5905   00399E  3627               	rlcf	(___lodiv@quotient+6)^0,f,c
  5906   0039A0  3628               	rlcf	(___lodiv@quotient+7)^0,f,c
  5907   0039A2  5019               	movf	___lodiv@divisor^0,w,c
  5908   0039A4  5C11               	subwf	___lodiv@dividend^0,w,c
  5909   0039A6  501A               	movf	(___lodiv@divisor+1)^0,w,c
  5910   0039A8  5812               	subwfb	(___lodiv@dividend+1)^0,w,c
  5911   0039AA  501B               	movf	(___lodiv@divisor+2)^0,w,c
  5912   0039AC  5813               	subwfb	(___lodiv@dividend+2)^0,w,c
  5913   0039AE  501C               	movf	(___lodiv@divisor+3)^0,w,c
  5914   0039B0  5814               	subwfb	(___lodiv@dividend+3)^0,w,c
  5915   0039B2  501D               	movf	(___lodiv@divisor+4)^0,w,c
  5916   0039B4  5815               	subwfb	(___lodiv@dividend+4)^0,w,c
  5917   0039B6  501E               	movf	(___lodiv@divisor+5)^0,w,c
  5918   0039B8  5816               	subwfb	(___lodiv@dividend+5)^0,w,c
  5919   0039BA  501F               	movf	(___lodiv@divisor+6)^0,w,c
  5920   0039BC  5817               	subwfb	(___lodiv@dividend+6)^0,w,c
  5921   0039BE  5020               	movf	(___lodiv@divisor+7)^0,w,c
  5922   0039C0  5818               	subwfb	(___lodiv@dividend+7)^0,w,c
  5923   0039C2  A0D8               	btfss	status,0,c
  5924   0039C4  EFE6  F01C         	goto	u7001
  5925   0039C8  EFE8  F01C         	goto	u7000
  5926   0039CC                     u7001:
  5927   0039CC  EFF9  F01C         	goto	l6742
  5928   0039D0                     u7000:
  5929   0039D0  5019               	movf	___lodiv@divisor^0,w,c
  5930   0039D2  5E11               	subwf	___lodiv@dividend^0,f,c
  5931   0039D4  501A               	movf	(___lodiv@divisor+1)^0,w,c
  5932   0039D6  5A12               	subwfb	(___lodiv@dividend+1)^0,f,c
  5933   0039D8  501B               	movf	(___lodiv@divisor+2)^0,w,c
  5934   0039DA  5A13               	subwfb	(___lodiv@dividend+2)^0,f,c
  5935   0039DC  501C               	movf	(___lodiv@divisor+3)^0,w,c
  5936   0039DE  5A14               	subwfb	(___lodiv@dividend+3)^0,f,c
  5937   0039E0  501D               	movf	(___lodiv@divisor+4)^0,w,c
  5938   0039E2  5A15               	subwfb	(___lodiv@dividend+4)^0,f,c
  5939   0039E4  501E               	movf	(___lodiv@divisor+5)^0,w,c
  5940   0039E6  5A16               	subwfb	(___lodiv@dividend+5)^0,f,c
  5941   0039E8  501F               	movf	(___lodiv@divisor+6)^0,w,c
  5942   0039EA  5A17               	subwfb	(___lodiv@dividend+6)^0,f,c
  5943   0039EC  5020               	movf	(___lodiv@divisor+7)^0,w,c
  5944   0039EE  5A18               	subwfb	(___lodiv@dividend+7)^0,f,c
  5945   0039F0  8021               	bsf	___lodiv@quotient^0,0,c
  5946   0039F2                     l6742:
  5947   0039F2  90D8               	bcf	status,0,c
  5948   0039F4  3220               	rrcf	(___lodiv@divisor+7)^0,f,c
  5949   0039F6  321F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5950   0039F8  321E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5951   0039FA  321D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5952   0039FC  321C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5953   0039FE  321B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5954   003A00  321A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5955   003A02  3219               	rrcf	___lodiv@divisor^0,f,c
  5956   003A04  2E29               	decfsz	___lodiv@counter^0,f,c
  5957   003A06  EFC8  F01C         	goto	l6734
  5958   003A0A                     l809:
  5959   003A0A  C021  F011         	movff	___lodiv@quotient,?___lodiv
  5960   003A0E  C022  F012         	movff	___lodiv@quotient+1,?___lodiv+1
  5961   003A12  C023  F013         	movff	___lodiv@quotient+2,?___lodiv+2
  5962   003A16  C024  F014         	movff	___lodiv@quotient+3,?___lodiv+3
  5963   003A1A  C025  F015         	movff	___lodiv@quotient+4,?___lodiv+4
  5964   003A1E  C026  F016         	movff	___lodiv@quotient+5,?___lodiv+5
  5965   003A22  C027  F017         	movff	___lodiv@quotient+6,?___lodiv+6
  5966   003A26  C028  F018         	movff	___lodiv@quotient+7,?___lodiv+7
  5967   003A2A  0012               	return		;funcret
  5968   003A2C                     __end_of___lodiv:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _efgtoa *****************
  5972 ;; Defined at:
  5973 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5976 ;;		 -> sprintf@f(11), 
  5977 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  5978 ;;  c               1   22[BANK0 ] unsigned char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  u               4   63[BANK0 ] struct flui
  5981 ;;  g               4   57[BANK0 ] struct flui
  5982 ;;  l               4   50[BANK0 ] struct flui
  5983 ;;  h               4   46[BANK0 ] struct flui
  5984 ;;  ou              4   40[BANK0 ] struct flui
  5985 ;;  n               2   61[BANK0 ] int 
  5986 ;;  i               2   54[BANK0 ] int 
  5987 ;;  w               2   44[BANK0 ] int 
  5988 ;;  e               2   38[BANK0 ] int 
  5989 ;;  m               2   36[BANK0 ] int 
  5990 ;;  d               2   34[BANK0 ] int 
  5991 ;;  t               2   27[BANK0 ] int 
  5992 ;;  p               2   25[BANK0 ] int 
  5993 ;;  ne              2   23[BANK0 ] int 
  5994 ;;  sign            1   56[BANK0 ] unsigned char 
  5995 ;;  nmode           1   33[BANK0 ] unsigned char 
  5996 ;;  mode            1   32[BANK0 ] unsigned char 
  5997 ;;  pp              1   31[BANK0 ] unsigned char 
  5998 ;;  esign           1    0        unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6008 ;;      Params:         0       7       0       0       0       0       0       0       0
  6009 ;;      Locals:         0      44       0       0       0       0       0       0       0
  6010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6011 ;;      Totals:         2      51       0       0       0       0       0       0       0
  6012 ;;Total ram usage:       53 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 6
  6015 ;; This function calls:
  6016 ;;		___fladd
  6017 ;;		___fldiv
  6018 ;;		___fleq
  6019 ;;		___flge
  6020 ;;		___flmul
  6021 ;;		___flneg
  6022 ;;		___flsub
  6023 ;;		___fltol
  6024 ;;		___fpclassifyf
  6025 ;;		_floorf
  6026 ;;		_labs
  6027 ;;		_memcpy
  6028 ;;		_pad
  6029 ;;		_strcpy
  6030 ;; This function is called by:
  6031 ;;		_vfpfcnvrt
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text18
  6036   000012                     __ptext18:
  6037                           	callstack 0
  6038   000012                     _efgtoa:
  6039                           	callstack 20
  6040   000012                     
  6041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  6042   000012  0E00               	movlw	0
  6043   000014  0100               	movlb	0	; () banked
  6044   000016  6F98               	movwf	efgtoa@sign& (0+255),b
  6045   000018                     
  6046                           ; BSR set to: 0
  6047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  6048   000018  C072  F099         	movff	efgtoa@f,efgtoa@g
  6049   00001C  C073  F09A         	movff	efgtoa@f+1,efgtoa@g+1
  6050   000020  C074  F09B         	movff	efgtoa@f+2,efgtoa@g+2
  6051   000024  C075  F09C         	movff	efgtoa@f+3,efgtoa@g+3
  6052   000028                     
  6053                           ; BSR set to: 0
  6054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  6055   000028  BF9C               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6056   00002A  EF1B  F000         	goto	u7300
  6057   00002E  EF19  F000         	goto	u7301
  6058   000032                     u7301:
  6059   000032  EF2F  F000         	goto	l6872
  6060   000036                     u7300:
  6061   000036                     
  6062                           ; BSR set to: 0
  6063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  6064   000036  0E01               	movlw	1
  6065   000038  6F98               	movwf	efgtoa@sign& (0+255),b
  6066   00003A                     
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  6069   00003A  C099  F011         	movff	efgtoa@g,___flneg@f1
  6070   00003E  C09A  F012         	movff	efgtoa@g+1,___flneg@f1+1
  6071   000042  C09B  F013         	movff	efgtoa@g+2,___flneg@f1+2
  6072   000046  C09C  F014         	movff	efgtoa@g+3,___flneg@f1+3
  6073   00004A  EC88  F021         	call	___flneg	;wreg free
  6074   00004E  C011  F099         	movff	?___flneg,efgtoa@g
  6075   000052  C012  F09A         	movff	?___flneg+1,efgtoa@g+1
  6076   000056  C013  F09B         	movff	?___flneg+2,efgtoa@g+2
  6077   00005A  C014  F09C         	movff	?___flneg+3,efgtoa@g+3
  6078   00005E                     l6872:
  6079                           
  6080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  6081   00005E  0E00               	movlw	0
  6082   000060  0100               	movlb	0	; () banked
  6083   000062  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  6084   000064  0E00               	movlw	0
  6085   000066  6F9D               	movwf	efgtoa@n& (0+255),b
  6086   000068                     
  6087                           ; BSR set to: 0
  6088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  6089   000068  C0DA  F08C         	movff	_width,efgtoa@w
  6090   00006C  C0DB  F08D         	movff	_width+1,efgtoa@w+1
  6091   000070                     
  6092                           ; BSR set to: 0
  6093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  6094   000070  5198               	movf	efgtoa@sign& (0+255),w,b
  6095   000072  B4D8               	btfsc	status,2,c
  6096   000074  EF3E  F000         	goto	u7311
  6097   000078  EF40  F000         	goto	u7310
  6098   00007C                     u7311:
  6099   00007C  EF54  F000         	goto	l6886
  6100   000080                     u7310:
  6101   000080                     
  6102                           ; BSR set to: 0
  6103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  6104   000080  5198               	movf	efgtoa@sign& (0+255),w,b
  6105   000082  A4D8               	btfss	status,2,c
  6106   000084  EF46  F000         	goto	u7321
  6107   000088  EF48  F000         	goto	u7320
  6108   00008C                     u7321:
  6109   00008C  EF4E  F000         	goto	l6882
  6110   000090                     u7320:
  6111   000090                     
  6112                           ; BSR set to: 0
  6113   000090  0E00               	movlw	0
  6114   000092  6F7E               	movwf	(_efgtoa$1512+1)& (0+255),b
  6115   000094  0E2B               	movlw	43
  6116   000096  6F7D               	movwf	_efgtoa$1512& (0+255),b
  6117   000098  EF52  F000         	goto	l6884
  6118   00009C                     l6882:
  6119                           
  6120                           ; BSR set to: 0
  6121   00009C  0E00               	movlw	0
  6122   00009E  6F7E               	movwf	(_efgtoa$1512+1)& (0+255),b
  6123   0000A0  0E2D               	movlw	45
  6124   0000A2  6F7D               	movwf	_efgtoa$1512& (0+255),b
  6125   0000A4                     l6884:
  6126                           
  6127                           ; BSR set to: 0
  6128   0000A4  C07D  F098         	movff	_efgtoa$1512,efgtoa@sign
  6129   0000A8                     l6886:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6133   0000A8  C099  F011         	movff	efgtoa@g,___fpclassifyf@x
  6134   0000AC  C09A  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6135   0000B0  C09B  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6136   0000B4  C09C  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6137   0000B8  EC1F  F01C         	call	___fpclassifyf	;wreg free
  6138   0000BC  0411               	decf	?___fpclassifyf^0,w,c
  6139   0000BE  1012               	iorwf	(?___fpclassifyf+1)^0,w,c
  6140   0000C0  A4D8               	btfss	status,2,c
  6141   0000C2  EF65  F000         	goto	u7331
  6142   0000C6  EF67  F000         	goto	u7330
  6143   0000CA                     u7331:
  6144   0000CA  EF9A  F000         	goto	l6904
  6145   0000CE                     u7330:
  6146   0000CE                     
  6147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  6148   0000CE  0100               	movlb	0	; () banked
  6149   0000D0  5198               	movf	efgtoa@sign& (0+255),w,b
  6150   0000D2  B4D8               	btfsc	status,2,c
  6151   0000D4  EF6E  F000         	goto	u7341
  6152   0000D8  EF70  F000         	goto	u7340
  6153   0000DC                     u7341:
  6154   0000DC  EF79  F000         	goto	l6896
  6155   0000E0                     u7340:
  6156   0000E0                     
  6157                           ; BSR set to: 0
  6158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  6159   0000E0  C098  F100         	movff	efgtoa@sign,_dbuf
  6160   0000E4                     
  6161                           ; BSR set to: 0
  6162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  6163   0000E4  078C               	decf	efgtoa@w& (0+255),f,b
  6164   0000E6  A0D8               	btfss	status,0,c
  6165   0000E8  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6166   0000EA                     
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  6169   0000EA  0E00               	movlw	0
  6170   0000EC  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  6171   0000EE  0E01               	movlw	1
  6172   0000F0  6F9D               	movwf	efgtoa@n& (0+255),b
  6173   0000F2                     l6896:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  6177   0000F2  0E00               	movlw	low _dbuf
  6178   0000F4  259D               	addwf	efgtoa@n& (0+255),w,b
  6179   0000F6  6E11               	movwf	strcpy@dest^0,c
  6180   0000F8  0E01               	movlw	high _dbuf
  6181   0000FA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6182   0000FC  6E12               	movwf	(strcpy@dest+1)^0,c
  6183   0000FE  0E34               	movlw	low STR_33
  6184   000100  6E13               	movwf	strcpy@src^0,c
  6185   000102  0E7D               	movlw	high STR_33
  6186   000104  6E14               	movwf	(strcpy@src+1)^0,c
  6187   000106  EC68  F021         	call	_strcpy	;wreg free
  6188   00010A                     l6898:
  6189                           
  6190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6191   00010A  0100               	movlb	0	; () banked
  6192   00010C  0EFD               	movlw	253
  6193   00010E  278C               	addwf	efgtoa@w& (0+255),f,b
  6194   000110  0EFF               	movlw	255
  6195   000112  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6196   000114                     
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6199   000114  C070  F021         	movff	efgtoa@fp,pad@fp
  6200   000118  C071  F022         	movff	efgtoa@fp+1,pad@fp+1
  6201   00011C  0E00               	movlw	low _dbuf
  6202   00011E  6E23               	movwf	pad@buf^0,c
  6203   000120  0E01               	movlw	high _dbuf
  6204   000122  6E24               	movwf	(pad@buf+1)^0,c
  6205   000124  C08C  F025         	movff	efgtoa@w,pad@p
  6206   000128  C08D  F026         	movff	efgtoa@w+1,pad@p+1
  6207   00012C  EC95  F01F         	call	_pad	;wreg free
  6208   000130  EF3A  F005         	goto	l1098
  6209   000134                     l6904:
  6210                           
  6211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6212   000134  C099  F011         	movff	efgtoa@g,___fpclassifyf@x
  6213   000138  C09A  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6214   00013C  C09B  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6215   000140  C09C  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6216   000144  EC1F  F01C         	call	___fpclassifyf	;wreg free
  6217   000148  5011               	movf	?___fpclassifyf^0,w,c
  6218   00014A  1012               	iorwf	(?___fpclassifyf+1)^0,w,c
  6219   00014C  A4D8               	btfss	status,2,c
  6220   00014E  EFAB  F000         	goto	u7351
  6221   000152  EFAD  F000         	goto	u7350
  6222   000156                     u7351:
  6223   000156  EFCD  F000         	goto	l6922
  6224   00015A                     u7350:
  6225   00015A                     
  6226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  6227   00015A  0100               	movlb	0	; () banked
  6228   00015C  5198               	movf	efgtoa@sign& (0+255),w,b
  6229   00015E  B4D8               	btfsc	status,2,c
  6230   000160  EFB4  F000         	goto	u7361
  6231   000164  EFB6  F000         	goto	u7360
  6232   000168                     u7361:
  6233   000168  EFBF  F000         	goto	l6914
  6234   00016C                     u7360:
  6235   00016C                     
  6236                           ; BSR set to: 0
  6237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  6238   00016C  C098  F100         	movff	efgtoa@sign,_dbuf
  6239   000170                     
  6240                           ; BSR set to: 0
  6241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  6242   000170  078C               	decf	efgtoa@w& (0+255),f,b
  6243   000172  A0D8               	btfss	status,0,c
  6244   000174  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6245   000176                     
  6246                           ; BSR set to: 0
  6247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  6248   000176  0E00               	movlw	0
  6249   000178  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  6250   00017A  0E01               	movlw	1
  6251   00017C  6F9D               	movwf	efgtoa@n& (0+255),b
  6252   00017E                     l6914:
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  6256   00017E  0E00               	movlw	low _dbuf
  6257   000180  259D               	addwf	efgtoa@n& (0+255),w,b
  6258   000182  6E11               	movwf	strcpy@dest^0,c
  6259   000184  0E01               	movlw	high _dbuf
  6260   000186  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6261   000188  6E12               	movwf	(strcpy@dest+1)^0,c
  6262   00018A  0E38               	movlw	low STR_36
  6263   00018C  6E13               	movwf	strcpy@src^0,c
  6264   00018E  0E7D               	movlw	high STR_36
  6265   000190  6E14               	movwf	(strcpy@src+1)^0,c
  6266   000192  EC68  F021         	call	_strcpy	;wreg free
  6267   000196  EF85  F000         	goto	l6898
  6268   00019A                     l6922:
  6269                           
  6270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  6271   00019A  0E00               	movlw	0
  6272   00019C  0100               	movlb	0	; () banked
  6273   00019E  6F9F               	movwf	efgtoa@u& (0+255),b
  6274   0001A0  0E00               	movlw	0
  6275   0001A2  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6276   0001A4  0E80               	movlw	128
  6277   0001A6  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6278   0001A8  0E3F               	movlw	63
  6279   0001AA  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6280                           
  6281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  6282   0001AC  0E00               	movlw	0
  6283   0001AE  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  6284   0001B0  0E00               	movlw	0
  6285   0001B2  6F86               	movwf	efgtoa@e& (0+255),b
  6286   0001B4                     
  6287                           ; BSR set to: 0
  6288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  6289   0001B4  C099  F011         	movff	efgtoa@g,___fleq@ff1
  6290   0001B8  C09A  F012         	movff	efgtoa@g+1,___fleq@ff1+1
  6291   0001BC  C09B  F013         	movff	efgtoa@g+2,___fleq@ff1+2
  6292   0001C0  C09C  F014         	movff	efgtoa@g+3,___fleq@ff1+3
  6293   0001C4  0E00               	movlw	0
  6294   0001C6  6E15               	movwf	___fleq@ff2^0,c
  6295   0001C8  0E00               	movlw	0
  6296   0001CA  6E16               	movwf	(___fleq@ff2+1)^0,c
  6297   0001CC  0E00               	movlw	0
  6298   0001CE  6E17               	movwf	(___fleq@ff2+2)^0,c
  6299   0001D0  0E00               	movlw	0
  6300   0001D2  6E18               	movwf	(___fleq@ff2+3)^0,c
  6301   0001D4  ECC1  F01E         	call	___fleq	;wreg free
  6302   0001D8  B0D8               	btfsc	status,0,c
  6303   0001DA  EFF1  F000         	goto	u7371
  6304   0001DE  EFF3  F000         	goto	u7370
  6305   0001E2                     u7371:
  6306   0001E2  EFD2  F001         	goto	l1101
  6307   0001E6                     u7370:
  6308   0001E6  EF00  F001         	goto	l6930
  6309   0001EA                     l1103:
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  6312   0001EA  C088  F09F         	movff	efgtoa@ou,efgtoa@u
  6313   0001EE  C089  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  6314   0001F2  C08A  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  6315   0001F6  C08B  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  6316   0001FA                     
  6317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  6318   0001FA  0100               	movlb	0	; () banked
  6319   0001FC  4B86               	infsnz	efgtoa@e& (0+255),f,b
  6320   0001FE  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  6321   000200                     l6930:
  6322                           
  6323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6324   000200  C09F  F011         	movff	efgtoa@u,___flmul@b
  6325   000204  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  6326   000208  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  6327   00020C  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  6328   000210  0E00               	movlw	0
  6329   000212  6E15               	movwf	___flmul@a^0,c
  6330   000214  0E00               	movlw	0
  6331   000216  6E16               	movwf	(___flmul@a+1)^0,c
  6332   000218  0E20               	movlw	32
  6333   00021A  6E17               	movwf	(___flmul@a+2)^0,c
  6334   00021C  0E41               	movlw	65
  6335   00021E  6E18               	movwf	(___flmul@a+3)^0,c
  6336   000220  EC4E  F00E         	call	___flmul	;wreg free
  6337   000224  C011  F088         	movff	?___flmul,efgtoa@ou
  6338   000228  C012  F089         	movff	?___flmul+1,efgtoa@ou+1
  6339   00022C  C013  F08A         	movff	?___flmul+2,efgtoa@ou+2
  6340   000230  C014  F08B         	movff	?___flmul+3,efgtoa@ou+3
  6341   000234  0100               	movlb	0	; () banked
  6342   000236  5188               	movf	efgtoa@ou& (0+255),w,b
  6343   000238  5D99               	subwf	efgtoa@g& (0+255),w,b
  6344   00023A  6E11               	movwf	labs@a^0,c
  6345   00023C  5189               	movf	(efgtoa@ou+1)& (0+255),w,b
  6346   00023E  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6347   000240  6E12               	movwf	(labs@a+1)^0,c
  6348   000242  518A               	movf	(efgtoa@ou+2)& (0+255),w,b
  6349   000244  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6350   000246  6E13               	movwf	(labs@a+2)^0,c
  6351   000248  518B               	movf	(efgtoa@ou+3)& (0+255),w,b
  6352   00024A  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6353   00024C  6E14               	movwf	(labs@a+3)^0,c
  6354   00024E  ECD2  F01F         	call	_labs	;wreg free
  6355   000252  BE14               	btfsc	(?_labs+3)^0,7,c
  6356   000254  EF37  F001         	goto	u7381
  6357   000258  5014               	movf	(?_labs+3)^0,w,c
  6358   00025A  1013               	iorwf	(?_labs+2)^0,w,c
  6359   00025C  1012               	iorwf	(?_labs+1)^0,w,c
  6360   00025E  E109               	bnz	u7380
  6361   000260  0E02               	movlw	2
  6362   000262  5C11               	subwf	?_labs^0,w,c
  6363   000264  A0D8               	btfss	status,0,c
  6364   000266  EF37  F001         	goto	u7381
  6365   00026A  EF39  F001         	goto	u7380
  6366   00026E                     u7381:
  6367   00026E  EFF5  F000         	goto	l1103
  6368   000272                     u7380:
  6369   000272  C088  F02A         	movff	efgtoa@ou,___flge@ff1
  6370   000276  C089  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  6371   00027A  C08A  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  6372   00027E  C08B  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  6373   000282  C099  F02E         	movff	efgtoa@g,___flge@ff2
  6374   000286  C09A  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  6375   00028A  C09B  F030         	movff	efgtoa@g+2,___flge@ff2+2
  6376   00028E  C09C  F031         	movff	efgtoa@g+3,___flge@ff2+3
  6377   000292  EC9D  F01B         	call	___flge	;wreg free
  6378   000296  A0D8               	btfss	status,0,c
  6379   000298  EF50  F001         	goto	u7391
  6380   00029C  EF52  F001         	goto	u7390
  6381   0002A0                     u7391:
  6382   0002A0  EFF5  F000         	goto	l1103
  6383   0002A4                     u7390:
  6384   0002A4                     
  6385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  6386   0002A4  0100               	movlb	0	; () banked
  6387   0002A6  519F               	movf	efgtoa@u& (0+255),w,b
  6388   0002A8  5D99               	subwf	efgtoa@g& (0+255),w,b
  6389   0002AA  6E11               	movwf	labs@a^0,c
  6390   0002AC  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  6391   0002AE  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6392   0002B0  6E12               	movwf	(labs@a+1)^0,c
  6393   0002B2  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  6394   0002B4  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6395   0002B6  6E13               	movwf	(labs@a+2)^0,c
  6396   0002B8  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  6397   0002BA  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6398   0002BC  6E14               	movwf	(labs@a+3)^0,c
  6399   0002BE  ECD2  F01F         	call	_labs	;wreg free
  6400   0002C2  BE14               	btfsc	(?_labs+3)^0,7,c
  6401   0002C4  EF71  F001         	goto	u7400
  6402   0002C8  5014               	movf	(?_labs+3)^0,w,c
  6403   0002CA  1013               	iorwf	(?_labs+2)^0,w,c
  6404   0002CC  1012               	iorwf	(?_labs+1)^0,w,c
  6405   0002CE  E107               	bnz	u7401
  6406   0002D0  0E02               	movlw	2
  6407   0002D2  5C11               	subwf	?_labs^0,w,c
  6408   0002D4  B0D8               	btfsc	status,0,c
  6409   0002D6  EF6F  F001         	goto	u7401
  6410   0002DA  EF71  F001         	goto	u7400
  6411   0002DE                     u7401:
  6412   0002DE  EFB9  F001         	goto	l6948
  6413   0002E2                     u7400:
  6414   0002E2                     l6938:
  6415                           
  6416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  6417   0002E2  C09F  F099         	movff	efgtoa@u,efgtoa@g
  6418   0002E6  C0A0  F09A         	movff	efgtoa@u+1,efgtoa@g+1
  6419   0002EA  C0A1  F09B         	movff	efgtoa@u+2,efgtoa@g+2
  6420   0002EE  C0A2  F09C         	movff	efgtoa@u+3,efgtoa@g+3
  6421                           
  6422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  6423   0002F2  EFD2  F001         	goto	l1101
  6424   0002F6                     l6940:
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  6427   0002F6  C09F  F01F         	movff	efgtoa@u,___fldiv@b
  6428   0002FA  C0A0  F020         	movff	efgtoa@u+1,___fldiv@b+1
  6429   0002FE  C0A1  F021         	movff	efgtoa@u+2,___fldiv@b+2
  6430   000302  C0A2  F022         	movff	efgtoa@u+3,___fldiv@b+3
  6431   000306  0E00               	movlw	0
  6432   000308  6E23               	movwf	___fldiv@a^0,c
  6433   00030A  0E00               	movlw	0
  6434   00030C  6E24               	movwf	(___fldiv@a+1)^0,c
  6435   00030E  0E20               	movlw	32
  6436   000310  6E25               	movwf	(___fldiv@a+2)^0,c
  6437   000312  0E41               	movlw	65
  6438   000314  6E26               	movwf	(___fldiv@a+3)^0,c
  6439   000316  EC63  F010         	call	___fldiv	;wreg free
  6440   00031A  C01F  F09F         	movff	?___fldiv,efgtoa@u
  6441   00031E  C020  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  6442   000322  C021  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  6443   000326  C022  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  6444   00032A                     
  6445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  6446   00032A  0100               	movlb	0	; () banked
  6447   00032C  0786               	decf	efgtoa@e& (0+255),f,b
  6448   00032E  A0D8               	btfss	status,0,c
  6449   000330  0787               	decf	(efgtoa@e+1)& (0+255),f,b
  6450   000332                     
  6451                           ; BSR set to: 0
  6452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  6453   000332  519F               	movf	efgtoa@u& (0+255),w,b
  6454   000334  5D99               	subwf	efgtoa@g& (0+255),w,b
  6455   000336  6E11               	movwf	labs@a^0,c
  6456   000338  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  6457   00033A  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6458   00033C  6E12               	movwf	(labs@a+1)^0,c
  6459   00033E  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  6460   000340  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6461   000342  6E13               	movwf	(labs@a+2)^0,c
  6462   000344  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  6463   000346  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6464   000348  6E14               	movwf	(labs@a+3)^0,c
  6465   00034A  ECD2  F01F         	call	_labs	;wreg free
  6466   00034E  BE14               	btfsc	(?_labs+3)^0,7,c
  6467   000350  EFB7  F001         	goto	u7410
  6468   000354  5014               	movf	(?_labs+3)^0,w,c
  6469   000356  1013               	iorwf	(?_labs+2)^0,w,c
  6470   000358  1012               	iorwf	(?_labs+1)^0,w,c
  6471   00035A  E107               	bnz	u7411
  6472   00035C  0E02               	movlw	2
  6473   00035E  5C11               	subwf	?_labs^0,w,c
  6474   000360  B0D8               	btfsc	status,0,c
  6475   000362  EFB5  F001         	goto	u7411
  6476   000366  EFB7  F001         	goto	u7410
  6477   00036A                     u7411:
  6478   00036A  EFB9  F001         	goto	l6948
  6479   00036E                     u7410:
  6480   00036E  EF71  F001         	goto	l6938
  6481   000372                     l6948:
  6482                           
  6483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  6484   000372  C099  F02A         	movff	efgtoa@g,___flge@ff1
  6485   000376  C09A  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  6486   00037A  C09B  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  6487   00037E  C09C  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  6488   000382  C09F  F02E         	movff	efgtoa@u,___flge@ff2
  6489   000386  C0A0  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  6490   00038A  C0A1  F030         	movff	efgtoa@u+2,___flge@ff2+2
  6491   00038E  C0A2  F031         	movff	efgtoa@u+3,___flge@ff2+3
  6492   000392  EC9D  F01B         	call	___flge	;wreg free
  6493   000396  A0D8               	btfss	status,0,c
  6494   000398  EFD0  F001         	goto	u7421
  6495   00039C  EFD2  F001         	goto	u7420
  6496   0003A0                     u7421:
  6497   0003A0  EF7B  F001         	goto	l6940
  6498   0003A4                     u7420:
  6499   0003A4                     l1101:
  6500                           
  6501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  6502   0003A4  C076  F080         	movff	efgtoa@c,efgtoa@mode
  6503                           
  6504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  6505   0003A8  C080  F081         	movff	efgtoa@mode,efgtoa@nmode
  6506   0003AC                     
  6507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  6508   0003AC  0100               	movlb	0	; () banked
  6509   0003AE  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  6510   0003B0  EFDC  F001         	goto	u7431
  6511   0003B4  EFDE  F001         	goto	u7430
  6512   0003B8                     u7431:
  6513   0003B8  EFE4  F001         	goto	l6954
  6514   0003BC                     u7430:
  6515   0003BC                     
  6516                           ; BSR set to: 0
  6517   0003BC  C0DC  F079         	movff	_prec,efgtoa@p
  6518   0003C0  C0DD  F07A         	movff	_prec+1,efgtoa@p+1
  6519   0003C4  EFE8  F001         	goto	l6956
  6520   0003C8                     l6954:
  6521                           
  6522                           ; BSR set to: 0
  6523   0003C8  0E00               	movlw	0
  6524   0003CA  6F7A               	movwf	(efgtoa@p+1)& (0+255),b
  6525   0003CC  0E06               	movlw	6
  6526   0003CE  6F79               	movwf	efgtoa@p& (0+255),b
  6527   0003D0                     l6956:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  6531   0003D0  C079  F084         	movff	efgtoa@p,efgtoa@m
  6532   0003D4  C07A  F085         	movff	efgtoa@p+1,efgtoa@m+1
  6533   0003D8                     
  6534                           ; BSR set to: 0
  6535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  6536   0003D8  4B84               	infsnz	efgtoa@m& (0+255),f,b
  6537   0003DA  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  6538   0003DC                     
  6539                           ; BSR set to: 0
  6540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  6541   0003DC  0E66               	movlw	102
  6542   0003DE  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  6543   0003E0  A4D8               	btfss	status,2,c
  6544   0003E2  EFF5  F001         	goto	u7441
  6545   0003E6  EFF7  F001         	goto	u7440
  6546   0003EA                     u7441:
  6547   0003EA  EF17  F002         	goto	l6970
  6548   0003EE                     u7440:
  6549   0003EE                     
  6550                           ; BSR set to: 0
  6551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  6552   0003EE  BF87               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6553   0003F0  EFFE  F001         	goto	u7450
  6554   0003F4  EFFC  F001         	goto	u7451
  6555   0003F8                     u7451:
  6556   0003F8  EF0A  F002         	goto	l6966
  6557   0003FC                     u7450:
  6558   0003FC                     
  6559                           ; BSR set to: 0
  6560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  6561   0003FC  0E00               	movlw	0
  6562   0003FE  6F9F               	movwf	efgtoa@u& (0+255),b
  6563   000400  0E00               	movlw	0
  6564   000402  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6565   000404  0E80               	movlw	128
  6566   000406  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6567   000408  0E3F               	movlw	63
  6568   00040A  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6569                           
  6570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  6571   00040C  0E00               	movlw	0
  6572   00040E  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  6573   000410  0E00               	movlw	0
  6574   000412  6F86               	movwf	efgtoa@e& (0+255),b
  6575   000414                     l6966:
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  6579   000414  0E67               	movlw	103
  6580   000416  1980               	xorwf	efgtoa@mode& (0+255),w,b
  6581   000418  B4D8               	btfsc	status,2,c
  6582   00041A  EF11  F002         	goto	u7461
  6583   00041E  EF13  F002         	goto	u7460
  6584   000422                     u7461:
  6585   000422  EF17  F002         	goto	l6970
  6586   000426                     u7460:
  6587   000426                     
  6588                           ; BSR set to: 0
  6589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  6590   000426  5186               	movf	efgtoa@e& (0+255),w,b
  6591   000428  2784               	addwf	efgtoa@m& (0+255),f,b
  6592   00042A  5187               	movf	(efgtoa@e+1)& (0+255),w,b
  6593   00042C  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6594   00042E                     l6970:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  6598   00042E  0E00               	movlw	0
  6599   000430  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6600   000432  0E00               	movlw	0
  6601   000434  6F96               	movwf	efgtoa@i& (0+255),b
  6602   000436                     
  6603                           ; BSR set to: 0
  6604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  6605   000436  C099  F08E         	movff	efgtoa@g,efgtoa@h
  6606   00043A  C09A  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  6607   00043E  C09B  F090         	movff	efgtoa@g+2,efgtoa@h+2
  6608   000442  C09C  F091         	movff	efgtoa@g+3,efgtoa@h+3
  6609   000446                     
  6610                           ; BSR set to: 0
  6611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  6612   000446  C09F  F088         	movff	efgtoa@u,efgtoa@ou
  6613   00044A  C0A0  F089         	movff	efgtoa@u+1,efgtoa@ou+1
  6614   00044E  C0A1  F08A         	movff	efgtoa@u+2,efgtoa@ou+2
  6615   000452  C0A2  F08B         	movff	efgtoa@u+3,efgtoa@ou+3
  6616                           
  6617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  6618   000456  EFA8  F002         	goto	l6984
  6619   00045A                     l6976:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  6623   00045A  C08E  F01F         	movff	efgtoa@h,___fldiv@b
  6624   00045E  C08F  F020         	movff	efgtoa@h+1,___fldiv@b+1
  6625   000462  C090  F021         	movff	efgtoa@h+2,___fldiv@b+2
  6626   000466  C091  F022         	movff	efgtoa@h+3,___fldiv@b+3
  6627   00046A  C09F  F023         	movff	efgtoa@u,___fldiv@a
  6628   00046E  C0A0  F024         	movff	efgtoa@u+1,___fldiv@a+1
  6629   000472  C0A1  F025         	movff	efgtoa@u+2,___fldiv@a+2
  6630   000476  C0A2  F026         	movff	efgtoa@u+3,___fldiv@a+3
  6631   00047A  EC63  F010         	call	___fldiv	;wreg free
  6632   00047E  C01F  F038         	movff	?___fldiv,floorf@x
  6633   000482  C020  F039         	movff	?___fldiv+1,floorf@x+1
  6634   000486  C021  F03A         	movff	?___fldiv+2,floorf@x+2
  6635   00048A  C022  F03B         	movff	?___fldiv+3,floorf@x+3
  6636   00048E  EC91  F017         	call	_floorf	;wreg free
  6637   000492  C038  F092         	movff	?_floorf,efgtoa@l
  6638   000496  C039  F093         	movff	?_floorf+1,efgtoa@l+1
  6639   00049A  C03A  F094         	movff	?_floorf+2,efgtoa@l+2
  6640   00049E  C03B  F095         	movff	?_floorf+3,efgtoa@l+3
  6641                           
  6642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  6643   0004A2  C092  F011         	movff	efgtoa@l,___fltol@f1
  6644   0004A6  C093  F012         	movff	efgtoa@l+1,___fltol@f1+1
  6645   0004AA  C094  F013         	movff	efgtoa@l+2,___fltol@f1+2
  6646   0004AE  C095  F014         	movff	efgtoa@l+3,___fltol@f1+3
  6647   0004B2  EC1A  F01B         	call	___fltol	;wreg free
  6648   0004B6  C011  F082         	movff	?___fltol,efgtoa@d
  6649   0004BA  C012  F083         	movff	?___fltol+1,efgtoa@d+1
  6650   0004BE                     
  6651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  6652   0004BE  C08E  F02A         	movff	efgtoa@h,___flsub@b
  6653   0004C2  C08F  F02B         	movff	efgtoa@h+1,___flsub@b+1
  6654   0004C6  C090  F02C         	movff	efgtoa@h+2,___flsub@b+2
  6655   0004CA  C091  F02D         	movff	efgtoa@h+3,___flsub@b+3
  6656   0004CE  C092  F015         	movff	efgtoa@l,___flmul@a
  6657   0004D2  C093  F016         	movff	efgtoa@l+1,___flmul@a+1
  6658   0004D6  C094  F017         	movff	efgtoa@l+2,___flmul@a+2
  6659   0004DA  C095  F018         	movff	efgtoa@l+3,___flmul@a+3
  6660   0004DE  C09F  F011         	movff	efgtoa@u,___flmul@b
  6661   0004E2  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  6662   0004E6  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  6663   0004EA  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  6664   0004EE  EC4E  F00E         	call	___flmul	;wreg free
  6665   0004F2  C011  F02E         	movff	?___flmul,___flsub@a
  6666   0004F6  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  6667   0004FA  C013  F030         	movff	?___flmul+2,___flsub@a+2
  6668   0004FE  C014  F031         	movff	?___flmul+3,___flsub@a+3
  6669   000502  EC00  F021         	call	___flsub	;wreg free
  6670   000506  C02A  F08E         	movff	?___flsub,efgtoa@h
  6671   00050A  C02B  F08F         	movff	?___flsub+1,efgtoa@h+1
  6672   00050E  C02C  F090         	movff	?___flsub+2,efgtoa@h+2
  6673   000512  C02D  F091         	movff	?___flsub+3,efgtoa@h+3
  6674   000516                     
  6675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  6676   000516  C09F  F01F         	movff	efgtoa@u,___fldiv@b
  6677   00051A  C0A0  F020         	movff	efgtoa@u+1,___fldiv@b+1
  6678   00051E  C0A1  F021         	movff	efgtoa@u+2,___fldiv@b+2
  6679   000522  C0A2  F022         	movff	efgtoa@u+3,___fldiv@b+3
  6680   000526  0E00               	movlw	0
  6681   000528  6E23               	movwf	___fldiv@a^0,c
  6682   00052A  0E00               	movlw	0
  6683   00052C  6E24               	movwf	(___fldiv@a+1)^0,c
  6684   00052E  0E20               	movlw	32
  6685   000530  6E25               	movwf	(___fldiv@a+2)^0,c
  6686   000532  0E41               	movlw	65
  6687   000534  6E26               	movwf	(___fldiv@a+3)^0,c
  6688   000536  EC63  F010         	call	___fldiv	;wreg free
  6689   00053A  C01F  F09F         	movff	?___fldiv,efgtoa@u
  6690   00053E  C020  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  6691   000542  C021  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  6692   000546  C022  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  6693   00054A                     
  6694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  6695   00054A  0100               	movlb	0	; () banked
  6696   00054C  4B96               	infsnz	efgtoa@i& (0+255),f,b
  6697   00054E  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  6698   000550                     l6984:
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  6702   000550  5184               	movf	efgtoa@m& (0+255),w,b
  6703   000552  5D96               	subwf	efgtoa@i& (0+255),w,b
  6704   000554  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  6705   000556  0A80               	xorlw	128
  6706   000558  6E3C               	movwf	??_efgtoa^0,c
  6707   00055A  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  6708   00055C  0A80               	xorlw	128
  6709   00055E  583C               	subwfb	??_efgtoa^0,w,c
  6710   000560  A0D8               	btfss	status,0,c
  6711   000562  EFB5  F002         	goto	u7471
  6712   000566  EFB7  F002         	goto	u7470
  6713   00056A                     u7471:
  6714   00056A  EF2D  F002         	goto	l6976
  6715   00056E                     u7470:
  6716   00056E                     
  6717                           ; BSR set to: 0
  6718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  6719   00056E  C09F  F011         	movff	efgtoa@u,___flmul@b
  6720   000572  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  6721   000576  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  6722   00057A  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  6723   00057E  0E00               	movlw	0
  6724   000580  6E15               	movwf	___flmul@a^0,c
  6725   000582  0E00               	movlw	0
  6726   000584  6E16               	movwf	(___flmul@a+1)^0,c
  6727   000586  0EA0               	movlw	160
  6728   000588  6E17               	movwf	(___flmul@a+2)^0,c
  6729   00058A  0E40               	movlw	64
  6730   00058C  6E18               	movwf	(___flmul@a+3)^0,c
  6731   00058E  EC4E  F00E         	call	___flmul	;wreg free
  6732   000592  C011  F092         	movff	?___flmul,efgtoa@l
  6733   000596  C012  F093         	movff	?___flmul+1,efgtoa@l+1
  6734   00059A  C013  F094         	movff	?___flmul+2,efgtoa@l+2
  6735   00059E  C014  F095         	movff	?___flmul+3,efgtoa@l+3
  6736   0005A2                     
  6737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  6738   0005A2  C08E  F02A         	movff	efgtoa@h,___flge@ff1
  6739   0005A6  C08F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  6740   0005AA  C090  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  6741   0005AE  C091  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  6742   0005B2  C092  F02E         	movff	efgtoa@l,___flge@ff2
  6743   0005B6  C093  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  6744   0005BA  C094  F030         	movff	efgtoa@l+2,___flge@ff2+2
  6745   0005BE  C095  F031         	movff	efgtoa@l+3,___flge@ff2+3
  6746   0005C2  EC9D  F01B         	call	___flge	;wreg free
  6747   0005C6  B0D8               	btfsc	status,0,c
  6748   0005C8  EFE8  F002         	goto	u7481
  6749   0005CC  EFEA  F002         	goto	u7480
  6750   0005D0                     u7481:
  6751   0005D0  EFF5  F002         	goto	l6992
  6752   0005D4                     u7480:
  6753   0005D4                     
  6754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  6755   0005D4  0E00               	movlw	0
  6756   0005D6  0100               	movlb	0	; () banked
  6757   0005D8  6F92               	movwf	efgtoa@l& (0+255),b
  6758   0005DA  0E00               	movlw	0
  6759   0005DC  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6760   0005DE  0E00               	movlw	0
  6761   0005E0  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6762   0005E2  0E00               	movlw	0
  6763   0005E4  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6764                           
  6765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  6766   0005E6  EF1E  F003         	goto	l6998
  6767   0005EA                     l6992:
  6768                           
  6769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  6770   0005EA  C08E  F011         	movff	efgtoa@h,___fleq@ff1
  6771   0005EE  C08F  F012         	movff	efgtoa@h+1,___fleq@ff1+1
  6772   0005F2  C090  F013         	movff	efgtoa@h+2,___fleq@ff1+2
  6773   0005F6  C091  F014         	movff	efgtoa@h+3,___fleq@ff1+3
  6774   0005FA  C092  F015         	movff	efgtoa@l,___fleq@ff2
  6775   0005FE  C093  F016         	movff	efgtoa@l+1,___fleq@ff2+1
  6776   000602  C094  F017         	movff	efgtoa@l+2,___fleq@ff2+2
  6777   000606  C095  F018         	movff	efgtoa@l+3,___fleq@ff2+3
  6778   00060A  ECC1  F01E         	call	___fleq	;wreg free
  6779   00060E  A0D8               	btfss	status,0,c
  6780   000610  EF0C  F003         	goto	u7491
  6781   000614  EF0E  F003         	goto	u7490
  6782   000618                     u7491:
  6783   000618  EF1E  F003         	goto	l6998
  6784   00061C                     u7490:
  6785   00061C  0100               	movlb	0	; () banked
  6786   00061E  B182               	btfsc	efgtoa@d& (0+255),0,b
  6787   000620  EF14  F003         	goto	u7501
  6788   000624  EF16  F003         	goto	u7500
  6789   000628                     u7501:
  6790   000628  EF1E  F003         	goto	l6998
  6791   00062C                     u7500:
  6792   00062C                     
  6793                           ; BSR set to: 0
  6794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  6795   00062C  0E00               	movlw	0
  6796   00062E  6F92               	movwf	efgtoa@l& (0+255),b
  6797   000630  0E00               	movlw	0
  6798   000632  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6799   000634  0E00               	movlw	0
  6800   000636  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6801   000638  0E00               	movlw	0
  6802   00063A  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6803   00063C                     l6998:
  6804                           
  6805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  6806   00063C  C099  F011         	movff	efgtoa@g,___fladd@b
  6807   000640  C09A  F012         	movff	efgtoa@g+1,___fladd@b+1
  6808   000644  C09B  F013         	movff	efgtoa@g+2,___fladd@b+2
  6809   000648  C09C  F014         	movff	efgtoa@g+3,___fladd@b+3
  6810   00064C  C092  F015         	movff	efgtoa@l,___fladd@a
  6811   000650  C093  F016         	movff	efgtoa@l+1,___fladd@a+1
  6812   000654  C094  F017         	movff	efgtoa@l+2,___fladd@a+2
  6813   000658  C095  F018         	movff	efgtoa@l+3,___fladd@a+3
  6814   00065C  EC3B  F005         	call	___fladd	;wreg free
  6815   000660  C011  F08E         	movff	?___fladd,efgtoa@h
  6816   000664  C012  F08F         	movff	?___fladd+1,efgtoa@h+1
  6817   000668  C013  F090         	movff	?___fladd+2,efgtoa@h+2
  6818   00066C  C014  F091         	movff	?___fladd+3,efgtoa@h+3
  6819   000670                     
  6820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  6821   000670  C08E  F02A         	movff	efgtoa@h,___flge@ff1
  6822   000674  C08F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  6823   000678  C090  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  6824   00067C  C091  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  6825   000680  0E00               	movlw	0
  6826   000682  6E15               	movwf	___flmul@a^0,c
  6827   000684  0E00               	movlw	0
  6828   000686  6E16               	movwf	(___flmul@a+1)^0,c
  6829   000688  0E20               	movlw	32
  6830   00068A  6E17               	movwf	(___flmul@a+2)^0,c
  6831   00068C  0E41               	movlw	65
  6832   00068E  6E18               	movwf	(___flmul@a+3)^0,c
  6833   000690  C088  F011         	movff	efgtoa@ou,___flmul@b
  6834   000694  C089  F012         	movff	efgtoa@ou+1,___flmul@b+1
  6835   000698  C08A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  6836   00069C  C08B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  6837   0006A0  EC4E  F00E         	call	___flmul	;wreg free
  6838   0006A4  C011  F02E         	movff	?___flmul,___flge@ff2
  6839   0006A8  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  6840   0006AC  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  6841   0006B0  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  6842   0006B4  EC9D  F01B         	call	___flge	;wreg free
  6843   0006B8  A0D8               	btfss	status,0,c
  6844   0006BA  EF61  F003         	goto	u7511
  6845   0006BE  EF63  F003         	goto	u7510
  6846   0006C2                     u7511:
  6847   0006C2  EF8C  F003         	goto	l7010
  6848   0006C6                     u7510:
  6849   0006C6                     
  6850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  6851   0006C6  0100               	movlb	0	; () banked
  6852   0006C8  4B86               	infsnz	efgtoa@e& (0+255),f,b
  6853   0006CA  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  6854   0006CC                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  6857   0006CC  C088  F011         	movff	efgtoa@ou,___flmul@b
  6858   0006D0  C089  F012         	movff	efgtoa@ou+1,___flmul@b+1
  6859   0006D4  C08A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  6860   0006D8  C08B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  6861   0006DC  0E00               	movlw	0
  6862   0006DE  6E15               	movwf	___flmul@a^0,c
  6863   0006E0  0E00               	movlw	0
  6864   0006E2  6E16               	movwf	(___flmul@a+1)^0,c
  6865   0006E4  0E20               	movlw	32
  6866   0006E6  6E17               	movwf	(___flmul@a+2)^0,c
  6867   0006E8  0E41               	movlw	65
  6868   0006EA  6E18               	movwf	(___flmul@a+3)^0,c
  6869   0006EC  EC4E  F00E         	call	___flmul	;wreg free
  6870   0006F0  C011  F088         	movff	?___flmul,efgtoa@ou
  6871   0006F4  C012  F089         	movff	?___flmul+1,efgtoa@ou+1
  6872   0006F8  C013  F08A         	movff	?___flmul+2,efgtoa@ou+2
  6873   0006FC  C014  F08B         	movff	?___flmul+3,efgtoa@ou+3
  6874   000700                     
  6875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  6876   000700  0E66               	movlw	102
  6877   000702  0100               	movlb	0	; () banked
  6878   000704  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  6879   000706  A4D8               	btfss	status,2,c
  6880   000708  EF88  F003         	goto	u7521
  6881   00070C  EF8A  F003         	goto	u7520
  6882   000710                     u7521:
  6883   000710  EF8C  F003         	goto	l7010
  6884   000714                     u7520:
  6885   000714                     
  6886                           ; BSR set to: 0
  6887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  6888   000714  4B84               	infsnz	efgtoa@m& (0+255),f,b
  6889   000716  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  6890   000718                     l7010:
  6891                           
  6892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  6893   000718  C088  F09F         	movff	efgtoa@ou,efgtoa@u
  6894   00071C  C089  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  6895   000720  C08A  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  6896   000724  C08B  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  6897   000728                     
  6898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  6899   000728  C086  F077         	movff	efgtoa@e,efgtoa@ne
  6900   00072C  C087  F078         	movff	efgtoa@e+1,efgtoa@ne+1
  6901   000730                     
  6902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  6903   000730  0E00               	movlw	0
  6904   000732  0100               	movlb	0	; () banked
  6905   000734  6F7F               	movwf	efgtoa@pp& (0+255),b
  6906   000736                     
  6907                           ; BSR set to: 0
  6908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  6909   000736  0E00               	movlw	0
  6910   000738  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  6911   00073A  0E00               	movlw	0
  6912   00073C  6F7B               	movwf	efgtoa@t& (0+255),b
  6913   00073E                     
  6914                           ; BSR set to: 0
  6915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  6916   00073E  0E00               	movlw	0
  6917   000740  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6918   000742  0E00               	movlw	0
  6919   000744  6F96               	movwf	efgtoa@i& (0+255),b
  6920                           
  6921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6922   000746  EF8A  F004         	goto	l7060
  6923   00074A                     l7020:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  6927   00074A  C08E  F01F         	movff	efgtoa@h,___fldiv@b
  6928   00074E  C08F  F020         	movff	efgtoa@h+1,___fldiv@b+1
  6929   000752  C090  F021         	movff	efgtoa@h+2,___fldiv@b+2
  6930   000756  C091  F022         	movff	efgtoa@h+3,___fldiv@b+3
  6931   00075A  C09F  F023         	movff	efgtoa@u,___fldiv@a
  6932   00075E  C0A0  F024         	movff	efgtoa@u+1,___fldiv@a+1
  6933   000762  C0A1  F025         	movff	efgtoa@u+2,___fldiv@a+2
  6934   000766  C0A2  F026         	movff	efgtoa@u+3,___fldiv@a+3
  6935   00076A  EC63  F010         	call	___fldiv	;wreg free
  6936   00076E  C01F  F038         	movff	?___fldiv,floorf@x
  6937   000772  C020  F039         	movff	?___fldiv+1,floorf@x+1
  6938   000776  C021  F03A         	movff	?___fldiv+2,floorf@x+2
  6939   00077A  C022  F03B         	movff	?___fldiv+3,floorf@x+3
  6940   00077E  EC91  F017         	call	_floorf	;wreg free
  6941   000782  C038  F092         	movff	?_floorf,efgtoa@l
  6942   000786  C039  F093         	movff	?_floorf+1,efgtoa@l+1
  6943   00078A  C03A  F094         	movff	?_floorf+2,efgtoa@l+2
  6944   00078E  C03B  F095         	movff	?_floorf+3,efgtoa@l+3
  6945                           
  6946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6947   000792  C092  F011         	movff	efgtoa@l,___fltol@f1
  6948   000796  C093  F012         	movff	efgtoa@l+1,___fltol@f1+1
  6949   00079A  C094  F013         	movff	efgtoa@l+2,___fltol@f1+2
  6950   00079E  C095  F014         	movff	efgtoa@l+3,___fltol@f1+3
  6951   0007A2  EC1A  F01B         	call	___fltol	;wreg free
  6952   0007A6  BE12               	btfsc	(?___fltol+1)^0,7,c
  6953   0007A8  EFE1  F003         	goto	u7530
  6954   0007AC  5012               	movf	(?___fltol+1)^0,w,c
  6955   0007AE  E107               	bnz	u7531
  6956   0007B0  0E0A               	movlw	10
  6957   0007B2  5C11               	subwf	?___fltol^0,w,c
  6958   0007B4  B0D8               	btfsc	status,0,c
  6959   0007B6  EFDF  F003         	goto	u7531
  6960   0007BA  EFE1  F003         	goto	u7530
  6961   0007BE                     u7531:
  6962   0007BE  EFF1  F003         	goto	l7024
  6963   0007C2                     u7530:
  6964   0007C2  C092  F011         	movff	efgtoa@l,___fltol@f1
  6965   0007C6  C093  F012         	movff	efgtoa@l+1,___fltol@f1+1
  6966   0007CA  C094  F013         	movff	efgtoa@l+2,___fltol@f1+2
  6967   0007CE  C095  F014         	movff	efgtoa@l+3,___fltol@f1+3
  6968   0007D2  EC1A  F01B         	call	___fltol	;wreg free
  6969   0007D6  C011  F082         	movff	?___fltol,efgtoa@d
  6970   0007DA  C012  F083         	movff	?___fltol+1,efgtoa@d+1
  6971   0007DE  EFF6  F003         	goto	l1131
  6972   0007E2                     l7024:
  6973   0007E2  0E00               	movlw	0
  6974   0007E4  0100               	movlb	0	; () banked
  6975   0007E6  6F83               	movwf	(efgtoa@d+1)& (0+255),b
  6976   0007E8  0E09               	movlw	9
  6977   0007EA  6F82               	movwf	efgtoa@d& (0+255),b
  6978   0007EC                     l1131:
  6979                           
  6980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  6981   0007EC  0100               	movlb	0	; () banked
  6982   0007EE  517F               	movf	efgtoa@pp& (0+255),w,b
  6983   0007F0  A4D8               	btfss	status,2,c
  6984   0007F2  EFFD  F003         	goto	u7541
  6985   0007F6  EFFF  F003         	goto	u7540
  6986   0007FA                     u7541:
  6987   0007FA  EF27  F004         	goto	l7044
  6988   0007FE                     u7540:
  6989   0007FE                     
  6990                           ; BSR set to: 0
  6991   0007FE  BF78               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6992   000800  EF06  F004         	goto	u7550
  6993   000804  EF04  F004         	goto	u7551
  6994   000808                     u7551:
  6995   000808  EF27  F004         	goto	l7044
  6996   00080C                     u7550:
  6997   00080C                     
  6998                           ; BSR set to: 0
  6999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  7000   00080C  0E00               	movlw	low _dbuf
  7001   00080E  259D               	addwf	efgtoa@n& (0+255),w,b
  7002   000810  6ED9               	movwf	fsr2l,c
  7003   000812  0E01               	movlw	high _dbuf
  7004   000814  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7005   000816  6EDA               	movwf	fsr2h,c
  7006   000818  0E2E               	movlw	46
  7007   00081A  6EDF               	movwf	indf2,c
  7008   00081C                     
  7009                           ; BSR set to: 0
  7010   00081C  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  7011   00081E  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  7012   000820                     
  7013                           ; BSR set to: 0
  7014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  7015   000820  078C               	decf	efgtoa@w& (0+255),f,b
  7016   000822  A0D8               	btfss	status,0,c
  7017   000824  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  7018   000826                     
  7019                           ; BSR set to: 0
  7020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  7021   000826  0E01               	movlw	1
  7022   000828  6F7F               	movwf	efgtoa@pp& (0+255),b
  7023   00082A  EF27  F004         	goto	l7044
  7024   00082E                     l7036:
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  7028   00082E  0E00               	movlw	low _dbuf
  7029   000830  259D               	addwf	efgtoa@n& (0+255),w,b
  7030   000832  6ED9               	movwf	fsr2l,c
  7031   000834  0E01               	movlw	high _dbuf
  7032   000836  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7033   000838  6EDA               	movwf	fsr2h,c
  7034   00083A  0E30               	movlw	48
  7035   00083C  6EDF               	movwf	indf2,c
  7036   00083E                     
  7037                           ; BSR set to: 0
  7038   00083E  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  7039   000840  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  7040   000842                     
  7041                           ; BSR set to: 0
  7042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  7043   000842  078C               	decf	efgtoa@w& (0+255),f,b
  7044   000844  A0D8               	btfss	status,0,c
  7045   000846  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  7046   000848                     
  7047                           ; BSR set to: 0
  7048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  7049   000848  077B               	decf	efgtoa@t& (0+255),f,b
  7050   00084A  A0D8               	btfss	status,0,c
  7051   00084C  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  7052   00084E                     l7044:
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  7056   00084E  517B               	movf	efgtoa@t& (0+255),w,b
  7057   000850  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7058   000852  A4D8               	btfss	status,2,c
  7059   000854  EF2E  F004         	goto	u7561
  7060   000858  EF30  F004         	goto	u7560
  7061   00085C                     u7561:
  7062   00085C  EF17  F004         	goto	l7036
  7063   000860                     u7560:
  7064   000860                     
  7065                           ; BSR set to: 0
  7066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7067   000860  0E00               	movlw	low _dbuf
  7068   000862  259D               	addwf	efgtoa@n& (0+255),w,b
  7069   000864  6ED9               	movwf	fsr2l,c
  7070   000866  0E01               	movlw	high _dbuf
  7071   000868  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7072   00086A  6EDA               	movwf	fsr2h,c
  7073   00086C  5182               	movf	efgtoa@d& (0+255),w,b
  7074   00086E  0F30               	addlw	48
  7075   000870  6EDF               	movwf	indf2,c
  7076   000872                     
  7077                           ; BSR set to: 0
  7078   000872  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  7079   000874  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  7080   000876                     
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  7083   000876  078C               	decf	efgtoa@w& (0+255),f,b
  7084   000878  A0D8               	btfss	status,0,c
  7085   00087A  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  7086   00087C                     
  7087                           ; BSR set to: 0
  7088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  7089   00087C  C08E  F02A         	movff	efgtoa@h,___flsub@b
  7090   000880  C08F  F02B         	movff	efgtoa@h+1,___flsub@b+1
  7091   000884  C090  F02C         	movff	efgtoa@h+2,___flsub@b+2
  7092   000888  C091  F02D         	movff	efgtoa@h+3,___flsub@b+3
  7093   00088C  C092  F015         	movff	efgtoa@l,___flmul@a
  7094   000890  C093  F016         	movff	efgtoa@l+1,___flmul@a+1
  7095   000894  C094  F017         	movff	efgtoa@l+2,___flmul@a+2
  7096   000898  C095  F018         	movff	efgtoa@l+3,___flmul@a+3
  7097   00089C  C09F  F011         	movff	efgtoa@u,___flmul@b
  7098   0008A0  C0A0  F012         	movff	efgtoa@u+1,___flmul@b+1
  7099   0008A4  C0A1  F013         	movff	efgtoa@u+2,___flmul@b+2
  7100   0008A8  C0A2  F014         	movff	efgtoa@u+3,___flmul@b+3
  7101   0008AC  EC4E  F00E         	call	___flmul	;wreg free
  7102   0008B0  C011  F02E         	movff	?___flmul,___flsub@a
  7103   0008B4  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  7104   0008B8  C013  F030         	movff	?___flmul+2,___flsub@a+2
  7105   0008BC  C014  F031         	movff	?___flmul+3,___flsub@a+3
  7106   0008C0  EC00  F021         	call	___flsub	;wreg free
  7107   0008C4  C02A  F08E         	movff	?___flsub,efgtoa@h
  7108   0008C8  C02B  F08F         	movff	?___flsub+1,efgtoa@h+1
  7109   0008CC  C02C  F090         	movff	?___flsub+2,efgtoa@h+2
  7110   0008D0  C02D  F091         	movff	?___flsub+3,efgtoa@h+3
  7111   0008D4                     
  7112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  7113   0008D4  C09F  F01F         	movff	efgtoa@u,___fldiv@b
  7114   0008D8  C0A0  F020         	movff	efgtoa@u+1,___fldiv@b+1
  7115   0008DC  C0A1  F021         	movff	efgtoa@u+2,___fldiv@b+2
  7116   0008E0  C0A2  F022         	movff	efgtoa@u+3,___fldiv@b+3
  7117   0008E4  0E00               	movlw	0
  7118   0008E6  6E23               	movwf	___fldiv@a^0,c
  7119   0008E8  0E00               	movlw	0
  7120   0008EA  6E24               	movwf	(___fldiv@a+1)^0,c
  7121   0008EC  0E20               	movlw	32
  7122   0008EE  6E25               	movwf	(___fldiv@a+2)^0,c
  7123   0008F0  0E41               	movlw	65
  7124   0008F2  6E26               	movwf	(___fldiv@a+3)^0,c
  7125   0008F4  EC63  F010         	call	___fldiv	;wreg free
  7126   0008F8  C01F  F09F         	movff	?___fldiv,efgtoa@u
  7127   0008FC  C020  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  7128   000900  C021  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  7129   000904  C022  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  7130   000908                     
  7131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  7132   000908  0100               	movlb	0	; () banked
  7133   00090A  0777               	decf	efgtoa@ne& (0+255),f,b
  7134   00090C  A0D8               	btfss	status,0,c
  7135   00090E  0778               	decf	(efgtoa@ne+1)& (0+255),f,b
  7136   000910                     
  7137                           ; BSR set to: 0
  7138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  7139   000910  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7140   000912  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7141   000914                     l7060:
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7145   000914  5184               	movf	efgtoa@m& (0+255),w,b
  7146   000916  5D96               	subwf	efgtoa@i& (0+255),w,b
  7147   000918  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7148   00091A  0A80               	xorlw	128
  7149   00091C  6E3C               	movwf	??_efgtoa^0,c
  7150   00091E  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  7151   000920  0A80               	xorlw	128
  7152   000922  583C               	subwfb	??_efgtoa^0,w,c
  7153   000924  B0D8               	btfsc	status,0,c
  7154   000926  EF97  F004         	goto	u7571
  7155   00092A  EF99  F004         	goto	u7570
  7156   00092E                     u7571:
  7157   00092E  EFA7  F004         	goto	l7064
  7158   000932                     u7570:
  7159   000932                     
  7160                           ; BSR set to: 0
  7161   000932  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7162   000934  EFA5  F004         	goto	u7581
  7163   000938  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7164   00093A  E109               	bnz	u7580
  7165   00093C  0E4B               	movlw	75
  7166   00093E  5D9D               	subwf	efgtoa@n& (0+255),w,b
  7167   000940  A0D8               	btfss	status,0,c
  7168   000942  EFA5  F004         	goto	u7581
  7169   000946  EFA7  F004         	goto	u7580
  7170   00094A                     u7581:
  7171   00094A  EFA5  F003         	goto	l7020
  7172   00094E                     u7580:
  7173   00094E                     l7064:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  7177   00094E  0E00               	movlw	0
  7178   000950  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7179   000952  0E4F               	movlw	79
  7180   000954  6F96               	movwf	efgtoa@i& (0+255),b
  7181   000956                     
  7182                           ; BSR set to: 0
  7183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  7184   000956  0E00               	movlw	low _dbuf
  7185   000958  2596               	addwf	efgtoa@i& (0+255),w,b
  7186   00095A  6ED9               	movwf	fsr2l,c
  7187   00095C  0E01               	movlw	high _dbuf
  7188   00095E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7189   000960  6EDA               	movwf	fsr2h,c
  7190   000962  0E00               	movlw	0
  7191   000964  6EDF               	movwf	indf2,c
  7192   000966                     
  7193                           ; BSR set to: 0
  7194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7195   000966  0E00               	movlw	low _dbuf
  7196   000968  6E3C               	movwf	??_efgtoa^0,c
  7197   00096A  0E01               	movlw	high _dbuf
  7198   00096C  6E3D               	movwf	(??_efgtoa+1)^0,c
  7199   00096E  519D               	movf	efgtoa@n& (0+255),w,b
  7200   000970  5E3C               	subwf	??_efgtoa^0,f,c
  7201   000972  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7202   000974  5A3D               	subwfb	(??_efgtoa+1)^0,f,c
  7203   000976  5196               	movf	efgtoa@i& (0+255),w,b
  7204   000978  243C               	addwf	??_efgtoa^0,w,c
  7205   00097A  6E11               	movwf	memcpy@d1^0,c
  7206   00097C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7207   00097E  203D               	addwfc	(??_efgtoa+1)^0,w,c
  7208   000980  6E12               	movwf	(memcpy@d1+1)^0,c
  7209   000982  0E00               	movlw	low _dbuf
  7210   000984  6E13               	movwf	memcpy@s1^0,c
  7211   000986  0E01               	movlw	high _dbuf
  7212   000988  6E14               	movwf	(memcpy@s1+1)^0,c
  7213   00098A  C09D  F015         	movff	efgtoa@n,memcpy@n
  7214   00098E  C09E  F016         	movff	efgtoa@n+1,memcpy@n+1
  7215   000992  ECB2  F020         	call	_memcpy	;wreg free
  7216   000996                     
  7217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  7218   000996  0100               	movlb	0	; () banked
  7219   000998  519D               	movf	efgtoa@n& (0+255),w,b
  7220   00099A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7221   00099C  6F9D               	movwf	efgtoa@n& (0+255),b
  7222   00099E  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7223   0009A0  5997               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7224   0009A2  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  7225   0009A4                     
  7226                           ; BSR set to: 0
  7227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  7228   0009A4  5198               	movf	efgtoa@sign& (0+255),w,b
  7229   0009A6  A4D8               	btfss	status,2,c
  7230   0009A8  EFD8  F004         	goto	u7591
  7231   0009AC  EFDB  F004         	goto	u7590
  7232   0009B0                     u7591:
  7233   0009B0  0E01               	movlw	1
  7234   0009B2  EFDC  F004         	goto	u7600
  7235   0009B6                     u7590:
  7236   0009B6  0E00               	movlw	0
  7237   0009B8                     u7600:
  7238   0009B8  6F96               	movwf	efgtoa@i& (0+255),b
  7239   0009BA  6B97               	clrf	(efgtoa@i+1)& (0+255),b
  7240   0009BC                     
  7241                           ; BSR set to: 0
  7242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  7243   0009BC  A3E0               	btfss	_flags& (0+255),1,b
  7244   0009BE  EFE3  F004         	goto	u7611
  7245   0009C2  EFE5  F004         	goto	u7610
  7246   0009C6                     u7611:
  7247   0009C6  EF13  F005         	goto	l7086
  7248   0009CA                     u7610:
  7249   0009CA  EFF5  F004         	goto	l7082
  7250   0009CE                     l7078:
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  7254   0009CE  079D               	decf	efgtoa@n& (0+255),f,b
  7255   0009D0  A0D8               	btfss	status,0,c
  7256   0009D2  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  7257   0009D4  0E00               	movlw	low _dbuf
  7258   0009D6  259D               	addwf	efgtoa@n& (0+255),w,b
  7259   0009D8  6ED9               	movwf	fsr2l,c
  7260   0009DA  0E01               	movlw	high _dbuf
  7261   0009DC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7262   0009DE  6EDA               	movwf	fsr2h,c
  7263   0009E0  0E30               	movlw	48
  7264   0009E2  6EDF               	movwf	indf2,c
  7265   0009E4                     
  7266                           ; BSR set to: 0
  7267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  7268   0009E4  078C               	decf	efgtoa@w& (0+255),f,b
  7269   0009E6  A0D8               	btfss	status,0,c
  7270   0009E8  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  7271   0009EA                     l7082:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  7275   0009EA  518C               	movf	efgtoa@w& (0+255),w,b
  7276   0009EC  5D96               	subwf	efgtoa@i& (0+255),w,b
  7277   0009EE  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7278   0009F0  0A80               	xorlw	128
  7279   0009F2  6E3C               	movwf	??_efgtoa^0,c
  7280   0009F4  518D               	movf	(efgtoa@w+1)& (0+255),w,b
  7281   0009F6  0A80               	xorlw	128
  7282   0009F8  583C               	subwfb	??_efgtoa^0,w,c
  7283   0009FA  B0D8               	btfsc	status,0,c
  7284   0009FC  EF02  F005         	goto	u7621
  7285   000A00  EF04  F005         	goto	u7620
  7286   000A04                     u7621:
  7287   000A04  EF13  F005         	goto	l7086
  7288   000A08                     u7620:
  7289   000A08                     
  7290                           ; BSR set to: 0
  7291   000A08  519D               	movf	efgtoa@n& (0+255),w,b
  7292   000A0A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7293   000A0C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7294   000A0E  0A80               	xorlw	128
  7295   000A10  6E3C               	movwf	??_efgtoa^0,c
  7296   000A12  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  7297   000A14  0A80               	xorlw	128
  7298   000A16  583C               	subwfb	??_efgtoa^0,w,c
  7299   000A18  A0D8               	btfss	status,0,c
  7300   000A1A  EF11  F005         	goto	u7631
  7301   000A1E  EF13  F005         	goto	u7630
  7302   000A22                     u7631:
  7303   000A22  EFE7  F004         	goto	l7078
  7304   000A26                     u7630:
  7305   000A26                     l7086:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  7309   000A26  5198               	movf	efgtoa@sign& (0+255),w,b
  7310   000A28  B4D8               	btfsc	status,2,c
  7311   000A2A  EF19  F005         	goto	u7641
  7312   000A2E  EF1B  F005         	goto	u7640
  7313   000A32                     u7641:
  7314   000A32  EF26  F005         	goto	l7090
  7315   000A36                     u7640:
  7316   000A36                     
  7317                           ; BSR set to: 0
  7318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  7319   000A36  079D               	decf	efgtoa@n& (0+255),f,b
  7320   000A38  A0D8               	btfss	status,0,c
  7321   000A3A  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  7322   000A3C  0E00               	movlw	low _dbuf
  7323   000A3E  259D               	addwf	efgtoa@n& (0+255),w,b
  7324   000A40  6ED9               	movwf	fsr2l,c
  7325   000A42  0E01               	movlw	high _dbuf
  7326   000A44  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7327   000A46  6EDA               	movwf	fsr2h,c
  7328   000A48  C098  FFDF         	movff	efgtoa@sign,indf2
  7329   000A4C                     l7090:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  7333   000A4C  5196               	movf	efgtoa@i& (0+255),w,b
  7334   000A4E  5F8C               	subwf	efgtoa@w& (0+255),f,b
  7335   000A50  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7336   000A52  5B8D               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7337   000A54                     
  7338                           ; BSR set to: 0
  7339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7340   000A54  C070  F021         	movff	efgtoa@fp,pad@fp
  7341   000A58  C071  F022         	movff	efgtoa@fp+1,pad@fp+1
  7342   000A5C  0E00               	movlw	low _dbuf
  7343   000A5E  259D               	addwf	efgtoa@n& (0+255),w,b
  7344   000A60  6E23               	movwf	pad@buf^0,c
  7345   000A62  0E01               	movlw	high _dbuf
  7346   000A64  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7347   000A66  6E24               	movwf	(pad@buf+1)^0,c
  7348   000A68  C08C  F025         	movff	efgtoa@w,pad@p
  7349   000A6C  C08D  F026         	movff	efgtoa@w+1,pad@p+1
  7350   000A70  EC95  F01F         	call	_pad	;wreg free
  7351   000A74                     l1098:
  7352   000A74  0012               	return		;funcret
  7353   000A76                     __end_of_efgtoa:
  7354                           	callstack 0
  7355                           
  7356 ;; *************** function _strcpy *****************
  7357 ;; Defined at:
  7358 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  dest            2   16[COMRAM] PTR unsigned char 
  7361 ;;		 -> dbuf(80), 
  7362 ;;  src             2   18[COMRAM] PTR const unsigned char 
  7363 ;;		 -> STR_36(4), STR_33(4), 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  d               2   22[COMRAM] PTR unsigned char 
  7366 ;;		 -> dbuf(80), 
  7367 ;;  s               2   20[COMRAM] PTR const unsigned char 
  7368 ;;		 -> STR_36(4), STR_33(4), 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  2   16[COMRAM] PTR unsigned char 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7378 ;;      Params:         4       0       0       0       0       0       0       0       0
  7379 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7381 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7382 ;;Total ram usage:        8 bytes
  7383 ;; Hardware stack levels used: 1
  7384 ;; Hardware stack levels required when called: 2
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_efgtoa
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text19
  7393   0042D0                     __ptext19:
  7394                           	callstack 0
  7395   0042D0                     _strcpy:
  7396                           	callstack 23
  7397   0042D0  C013  F015         	movff	strcpy@src,strcpy@s
  7398   0042D4  C014  F016         	movff	strcpy@src+1,strcpy@s+1
  7399   0042D8  C011  F017         	movff	strcpy@dest,strcpy@d
  7400   0042DC  C012  F018         	movff	strcpy@dest+1,strcpy@d+1
  7401   0042E0                     l6800:
  7402   0042E0  C015  FFF6         	movff	strcpy@s,tblptrl
  7403   0042E4  C016  FFF7         	movff	strcpy@s+1,tblptrh
  7404   0042E8  4A15               	infsnz	strcpy@s^0,f,c
  7405   0042EA  2A16               	incf	(strcpy@s+1)^0,f,c
  7406   0042EC                     	if	0	;tblptru may be non-zero
  7407   0042EC                     	endif
  7408   0042EC                     	if	0	;tblptru may be non-zero
  7409   0042EC                     	endif
  7410   0042EC  C017  FFD9         	movff	strcpy@d,fsr2l
  7411   0042F0  C018  FFDA         	movff	strcpy@d+1,fsr2h
  7412   0042F4  4A17               	infsnz	strcpy@d^0,f,c
  7413   0042F6  2A18               	incf	(strcpy@d+1)^0,f,c
  7414   0042F8  0008               	tblrd		*
  7415   0042FA  CFF5 FFDF          	movff	tablat,indf2
  7416   0042FE  50DF               	movf	indf2,w,c
  7417   004300  A4D8               	btfss	status,2,c
  7418   004302  EF85  F021         	goto	u7131
  7419   004306  EF87  F021         	goto	u7130
  7420   00430A                     u7131:
  7421   00430A  EF70  F021         	goto	l6800
  7422   00430E                     u7130:
  7423   00430E  0012               	return		;funcret
  7424   004310                     __end_of_strcpy:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _pad *****************
  7428 ;; Defined at:
  7429 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7432 ;;		 -> sprintf@f(11), 
  7433 ;;  buf             2   34[COMRAM] PTR unsigned char 
  7434 ;;		 -> dbuf(80), 
  7435 ;;  p               2   36[COMRAM] int 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  w               2   41[COMRAM] int 
  7438 ;;  i               2   39[COMRAM] int 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7448 ;;      Params:         6       0       0       0       0       0       0       0       0
  7449 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7450 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7451 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7452 ;;Total ram usage:       11 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 5
  7455 ;; This function calls:
  7456 ;;		_fputc
  7457 ;;		_fputs
  7458 ;; This function is called by:
  7459 ;;		_efgtoa
  7460 ;;		_utoa
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text20
  7465   003F2A                     __ptext20:
  7466                           	callstack 0
  7467   003F2A                     _pad:
  7468                           	callstack 20
  7469   003F2A                     
  7470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7471   003F2A  BE26               	btfsc	(pad@p+1)^0,7,c
  7472   003F2C  EF9A  F01F         	goto	u7041
  7473   003F30  EF9C  F01F         	goto	u7040
  7474   003F34                     u7041:
  7475   003F34  EFA2  F01F         	goto	l6766
  7476   003F38                     u7040:
  7477   003F38  C025  F02A         	movff	pad@p,pad@w
  7478   003F3C  C026  F02B         	movff	pad@p+1,pad@w+1
  7479   003F40  EFA6  F01F         	goto	l1083
  7480   003F44                     l6766:
  7481   003F44  0E00               	movlw	0
  7482   003F46  6E2B               	movwf	(pad@w+1)^0,c
  7483   003F48  0E00               	movlw	0
  7484   003F4A  6E2A               	movwf	pad@w^0,c
  7485   003F4C                     l1083:
  7486                           
  7487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7488   003F4C  0E00               	movlw	0
  7489   003F4E  6E29               	movwf	(pad@i+1)^0,c
  7490   003F50  0E00               	movlw	0
  7491   003F52  6E28               	movwf	pad@i^0,c
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7494   003F54  EFB8  F01F         	goto	l6772
  7495   003F58                     l6768:
  7496                           
  7497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7498   003F58  0E00               	movlw	0
  7499   003F5A  6E12               	movwf	(fputc@c+1)^0,c
  7500   003F5C  0E20               	movlw	32
  7501   003F5E  6E11               	movwf	fputc@c^0,c
  7502   003F60  C021  F013         	movff	pad@fp,fputc@fp
  7503   003F64  C022  F014         	movff	pad@fp+1,fputc@fp+1
  7504   003F68  EC5C  F01E         	call	_fputc	;wreg free
  7505   003F6C                     
  7506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7507   003F6C  4A28               	infsnz	pad@i^0,f,c
  7508   003F6E  2A29               	incf	(pad@i+1)^0,f,c
  7509   003F70                     l6772:
  7510                           
  7511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7512   003F70  502A               	movf	pad@w^0,w,c
  7513   003F72  5C28               	subwf	pad@i^0,w,c
  7514   003F74  5029               	movf	(pad@i+1)^0,w,c
  7515   003F76  0A80               	xorlw	128
  7516   003F78  6E27               	movwf	??_pad^0,c
  7517   003F7A  502B               	movf	(pad@w+1)^0,w,c
  7518   003F7C  0A80               	xorlw	128
  7519   003F7E  5827               	subwfb	??_pad^0,w,c
  7520   003F80  A0D8               	btfss	status,0,c
  7521   003F82  EFC5  F01F         	goto	u7051
  7522   003F86  EFC7  F01F         	goto	u7050
  7523   003F8A                     u7051:
  7524   003F8A  EFAC  F01F         	goto	l6768
  7525   003F8E                     u7050:
  7526   003F8E                     
  7527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7528   003F8E  C023  F01A         	movff	pad@buf,fputs@s
  7529   003F92  C024  F01B         	movff	pad@buf+1,fputs@s+1
  7530   003F96  C021  F01C         	movff	pad@fp,fputs@fp
  7531   003F9A  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  7532   003F9E  EC46  F021         	call	_fputs	;wreg free
  7533   003FA2  0012               	return		;funcret
  7534   003FA4                     __end_of_pad:
  7535                           	callstack 0
  7536                           
  7537 ;; *************** function _fputs *****************
  7538 ;; Defined at:
  7539 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  s               2   25[COMRAM] PTR const unsigned char 
  7542 ;;		 -> dbuf(80), 
  7543 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7544 ;;		 -> sprintf@f(11), 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  i               2   30[COMRAM] int 
  7547 ;;  c               1   29[COMRAM] unsigned char 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  2   25[COMRAM] int 
  7550 ;; Registers used:
  7551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7557 ;;      Params:         4       0       0       0       0       0       0       0       0
  7558 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7560 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7561 ;;Total ram usage:        7 bytes
  7562 ;; Hardware stack levels used: 1
  7563 ;; Hardware stack levels required when called: 4
  7564 ;; This function calls:
  7565 ;;		_fputc
  7566 ;; This function is called by:
  7567 ;;		_pad
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text21
  7572   00428C                     __ptext21:
  7573                           	callstack 0
  7574   00428C                     _fputs:
  7575                           	callstack 20
  7576   00428C  0E00               	movlw	0
  7577   00428E  6E20               	movwf	(fputs@i+1)^0,c
  7578   004290  0E00               	movlw	0
  7579   004292  6E1F               	movwf	fputs@i^0,c
  7580   004294  EF57  F021         	goto	l6352
  7581   004298                     l6348:
  7582   004298  C01E  F011         	movff	fputs@c,fputc@c
  7583   00429C  6A12               	clrf	(fputc@c+1)^0,c
  7584   00429E  C01C  F013         	movff	fputs@fp,fputc@fp
  7585   0042A2  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  7586   0042A6  EC5C  F01E         	call	_fputc	;wreg free
  7587   0042AA  4A1F               	infsnz	fputs@i^0,f,c
  7588   0042AC  2A20               	incf	(fputs@i+1)^0,f,c
  7589   0042AE                     l6352:
  7590   0042AE  501F               	movf	fputs@i^0,w,c
  7591   0042B0  241A               	addwf	fputs@s^0,w,c
  7592   0042B2  6ED9               	movwf	fsr2l,c
  7593   0042B4  5020               	movf	(fputs@i+1)^0,w,c
  7594   0042B6  201B               	addwfc	(fputs@s+1)^0,w,c
  7595   0042B8  6EDA               	movwf	fsr2h,c
  7596   0042BA  50DF               	movf	indf2,w,c
  7597   0042BC  6E1E               	movwf	fputs@c^0,c
  7598   0042BE  501E               	movf	fputs@c^0,w,c
  7599   0042C0  A4D8               	btfss	status,2,c
  7600   0042C2  EF65  F021         	goto	u6381
  7601   0042C6  EF67  F021         	goto	u6380
  7602   0042CA                     u6381:
  7603   0042CA  EF4C  F021         	goto	l6348
  7604   0042CE                     u6380:
  7605   0042CE  0012               	return		;funcret
  7606   0042D0                     __end_of_fputs:
  7607                           	callstack 0
  7608                           
  7609 ;; *************** function _fputc *****************
  7610 ;; Defined at:
  7611 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  c               2   16[COMRAM] int 
  7614 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7615 ;;		 -> sprintf@f(11), 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2   16[COMRAM] int 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7627 ;;      Params:         4       0       0       0       0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7629 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7630 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7631 ;;Total ram usage:        9 bytes
  7632 ;; Hardware stack levels used: 1
  7633 ;; Hardware stack levels required when called: 3
  7634 ;; This function calls:
  7635 ;;		_putch
  7636 ;; This function is called by:
  7637 ;;		_pad
  7638 ;;		_vfpfcnvrt
  7639 ;;		_fputs
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text22
  7644   003CB8                     __ptext22:
  7645                           	callstack 0
  7646   003CB8                     _fputc:
  7647                           	callstack 20
  7648   003CB8  5013               	movf	fputc@fp^0,w,c
  7649   003CBA  1014               	iorwf	(fputc@fp+1)^0,w,c
  7650   003CBC  B4D8               	btfsc	status,2,c
  7651   003CBE  EF63  F01E         	goto	u5951
  7652   003CC2  EF65  F01E         	goto	u5950
  7653   003CC6                     u5951:
  7654   003CC6  EF6E  F01E         	goto	l6134
  7655   003CCA                     u5950:
  7656   003CCA  5013               	movf	fputc@fp^0,w,c
  7657   003CCC  1014               	iorwf	(fputc@fp+1)^0,w,c
  7658   003CCE  A4D8               	btfss	status,2,c
  7659   003CD0  EF6C  F01E         	goto	u5961
  7660   003CD4  EF6E  F01E         	goto	u5960
  7661   003CD8                     u5961:
  7662   003CD8  EF73  F01E         	goto	l6136
  7663   003CDC                     u5960:
  7664   003CDC                     l6134:
  7665   003CDC  5011               	movf	fputc@c^0,w,c
  7666   003CDE  EC35  F022         	call	_putch
  7667   003CE2  EFC0  F01E         	goto	l1295
  7668   003CE6                     l6136:
  7669   003CE6  EE20 F009          	lfsr	2,9
  7670   003CEA  5013               	movf	fputc@fp^0,w,c
  7671   003CEC  26D9               	addwf	fsr2l,f,c
  7672   003CEE  5014               	movf	(fputc@fp+1)^0,w,c
  7673   003CF0  22DA               	addwfc	fsr2h,f,c
  7674   003CF2  50DE               	movf	postinc2,w,c
  7675   003CF4  10DE               	iorwf	postinc2,w,c
  7676   003CF6  B4D8               	btfsc	status,2,c
  7677   003CF8  EF80  F01E         	goto	u5971
  7678   003CFC  EF82  F01E         	goto	u5970
  7679   003D00                     u5971:
  7680   003D00  EF9D  F01E         	goto	l6140
  7681   003D04                     u5970:
  7682   003D04  EE20 F009          	lfsr	2,9
  7683   003D08  5013               	movf	fputc@fp^0,w,c
  7684   003D0A  26D9               	addwf	fsr2l,f,c
  7685   003D0C  5014               	movf	(fputc@fp+1)^0,w,c
  7686   003D0E  22DA               	addwfc	fsr2h,f,c
  7687   003D10  EE10 F003          	lfsr	1,3
  7688   003D14  5013               	movf	fputc@fp^0,w,c
  7689   003D16  26E1               	addwf	fsr1l,f,c
  7690   003D18  5014               	movf	(fputc@fp+1)^0,w,c
  7691   003D1A  22E2               	addwfc	fsr1h,f,c
  7692   003D1C  50DE               	movf	postinc2,w,c
  7693   003D1E  5CE6               	subwf	postinc1,w,c
  7694   003D20  50E6               	movf	postinc1,w,c
  7695   003D22  0A80               	xorlw	128
  7696   003D24  6E19               	movwf	(??_fputc+4)^0,c
  7697   003D26  50DE               	movf	postinc2,w,c
  7698   003D28  0A80               	xorlw	128
  7699   003D2A  5819               	subwfb	(??_fputc+4)^0,w,c
  7700   003D2C  B0D8               	btfsc	status,0,c
  7701   003D2E  EF9B  F01E         	goto	u5981
  7702   003D32  EF9D  F01E         	goto	u5980
  7703   003D36                     u5981:
  7704   003D36  EFC0  F01E         	goto	l1295
  7705   003D3A                     u5980:
  7706   003D3A                     l6140:
  7707   003D3A  EE20 F003          	lfsr	2,3
  7708   003D3E  5013               	movf	fputc@fp^0,w,c
  7709   003D40  26D9               	addwf	fsr2l,f,c
  7710   003D42  5014               	movf	(fputc@fp+1)^0,w,c
  7711   003D44  22DA               	addwfc	fsr2h,f,c
  7712   003D46  CFDE F015          	movff	postinc2,??_fputc
  7713   003D4A  CFDD F016          	movff	postdec2,??_fputc+1
  7714   003D4E  C013  FFD9         	movff	fputc@fp,fsr2l
  7715   003D52  C014  FFDA         	movff	fputc@fp+1,fsr2h
  7716   003D56  CFDE F017          	movff	postinc2,??_fputc+2
  7717   003D5A  CFDD F018          	movff	postdec2,??_fputc+3
  7718   003D5E  5015               	movf	??_fputc^0,w,c
  7719   003D60  2417               	addwf	(??_fputc+2)^0,w,c
  7720   003D62  6ED9               	movwf	fsr2l,c
  7721   003D64  5016               	movf	(??_fputc+1)^0,w,c
  7722   003D66  2018               	addwfc	(??_fputc+3)^0,w,c
  7723   003D68  6EDA               	movwf	fsr2h,c
  7724   003D6A  C011  FFDF         	movff	fputc@c,indf2
  7725   003D6E  EE20 F003          	lfsr	2,3
  7726   003D72  5013               	movf	fputc@fp^0,w,c
  7727   003D74  26D9               	addwf	fsr2l,f,c
  7728   003D76  5014               	movf	(fputc@fp+1)^0,w,c
  7729   003D78  22DA               	addwfc	fsr2h,f,c
  7730   003D7A  2ADE               	incf	postinc2,f,c
  7731   003D7C  0E00               	movlw	0
  7732   003D7E  22DD               	addwfc	postdec2,f,c
  7733   003D80                     l1295:
  7734   003D80  0012               	return		;funcret
  7735   003D82                     __end_of_fputc:
  7736                           	callstack 0
  7737                           
  7738 ;; *************** function _putch *****************
  7739 ;; Defined at:
  7740 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  c               1    wreg     unsigned char 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  c               1    0[COMRAM] unsigned char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		wreg
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7754 ;;      Params:         0       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7757 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        0 bytes
  7759 ;; Hardware stack levels used: 1
  7760 ;; Hardware stack levels required when called: 2
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_fputc
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text23
  7769   00446A                     __ptext23:
  7770                           	callstack 0
  7771   00446A                     _putch:
  7772                           	callstack 20
  7773   00446A  0012               	return		;funcret
  7774   00446C                     __end_of_putch:
  7775                           	callstack 0
  7776                           
  7777 ;; *************** function _memcpy *****************
  7778 ;; Defined at:
  7779 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  d1              2   16[COMRAM] PTR void 
  7782 ;;		 -> dbuf(80), 
  7783 ;;  s1              2   18[COMRAM] PTR const void 
  7784 ;;		 -> dbuf(80), 
  7785 ;;  n               2   20[COMRAM] unsigned int 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  s               2   25[COMRAM] PTR const unsigned char 
  7788 ;;		 -> dbuf(80), 
  7789 ;;  d               2   23[COMRAM] PTR unsigned char 
  7790 ;;		 -> dbuf(80), 
  7791 ;;  tmp             1   22[COMRAM] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  2   16[COMRAM] PTR void 
  7794 ;; Registers used:
  7795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7801 ;;      Params:         6       0       0       0       0       0       0       0       0
  7802 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7804 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7805 ;;Total ram usage:       11 bytes
  7806 ;; Hardware stack levels used: 1
  7807 ;; Hardware stack levels required when called: 2
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_efgtoa
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text24
  7816   004164                     __ptext24:
  7817                           	callstack 0
  7818   004164                     _memcpy:
  7819                           	callstack 23
  7820   004164  C013  F01A         	movff	memcpy@s1,memcpy@s
  7821   004168  C014  F01B         	movff	memcpy@s1+1,memcpy@s+1
  7822   00416C  C011  F018         	movff	memcpy@d1,memcpy@d
  7823   004170  C012  F019         	movff	memcpy@d1+1,memcpy@d+1
  7824   004174  EFCC  F020         	goto	l6844
  7825   004178                     l6836:
  7826   004178  C01A  FFD9         	movff	memcpy@s,fsr2l
  7827   00417C  C01B  FFDA         	movff	memcpy@s+1,fsr2h
  7828   004180  50DF               	movf	indf2,w,c
  7829   004182  6E17               	movwf	memcpy@tmp^0,c
  7830   004184  4A1A               	infsnz	memcpy@s^0,f,c
  7831   004186  2A1B               	incf	(memcpy@s+1)^0,f,c
  7832   004188  C018  FFD9         	movff	memcpy@d,fsr2l
  7833   00418C  C019  FFDA         	movff	memcpy@d+1,fsr2h
  7834   004190  C017  FFDF         	movff	memcpy@tmp,indf2
  7835   004194  4A18               	infsnz	memcpy@d^0,f,c
  7836   004196  2A19               	incf	(memcpy@d+1)^0,f,c
  7837   004198                     l6844:
  7838   004198  0615               	decf	memcpy@n^0,f,c
  7839   00419A  A0D8               	btfss	status,0,c
  7840   00419C  0616               	decf	(memcpy@n+1)^0,f,c
  7841   00419E  2815               	incf	memcpy@n^0,w,c
  7842   0041A0  E106               	bnz	u7251
  7843   0041A2  2816               	incf	(memcpy@n+1)^0,w,c
  7844   0041A4  A4D8               	btfss	status,2,c
  7845   0041A6  EFD7  F020         	goto	u7251
  7846   0041AA  EFD9  F020         	goto	u7250
  7847   0041AE                     u7251:
  7848   0041AE  EFBC  F020         	goto	l6836
  7849   0041B2                     u7250:
  7850   0041B2  0012               	return		;funcret
  7851   0041B4                     __end_of_memcpy:
  7852                           	callstack 0
  7853                           
  7854 ;; *************** function _labs *****************
  7855 ;; Defined at:
  7856 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  a               4   16[COMRAM] long 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;		None
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  4   16[COMRAM] long 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7870 ;;      Params:         4       0       0       0       0       0       0       0       0
  7871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7872 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7873 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7874 ;;Total ram usage:        8 bytes
  7875 ;; Hardware stack levels used: 1
  7876 ;; Hardware stack levels required when called: 2
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_efgtoa
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text25
  7885   003FA4                     __ptext25:
  7886                           	callstack 0
  7887   003FA4                     _labs:
  7888                           	callstack 23
  7889   003FA4  BE14               	btfsc	(labs@a+3)^0,7,c
  7890   003FA6  EFE1  F01F         	goto	u7140
  7891   003FAA  5014               	movf	(labs@a+3)^0,w,c
  7892   003FAC  1013               	iorwf	(labs@a+2)^0,w,c
  7893   003FAE  1012               	iorwf	(labs@a+1)^0,w,c
  7894   003FB0  E106               	bnz	u7141
  7895   003FB2  0411               	decf	labs@a^0,w,c
  7896   003FB4  B0D8               	btfsc	status,0,c
  7897   003FB6  EFDF  F01F         	goto	u7141
  7898   003FBA  EFE1  F01F         	goto	u7140
  7899   003FBE                     u7141:
  7900   003FBE  EFFC  F01F         	goto	l1274
  7901   003FC2                     u7140:
  7902   003FC2  C011  F015         	movff	labs@a,??_labs
  7903   003FC6  C012  F016         	movff	labs@a+1,??_labs+1
  7904   003FCA  C013  F017         	movff	labs@a+2,??_labs+2
  7905   003FCE  C014  F018         	movff	labs@a+3,??_labs+3
  7906   003FD2  1E15               	comf	??_labs^0,f,c
  7907   003FD4  1E16               	comf	(??_labs+1)^0,f,c
  7908   003FD6  1E17               	comf	(??_labs+2)^0,f,c
  7909   003FD8  1E18               	comf	(??_labs+3)^0,f,c
  7910   003FDA  2A15               	incf	??_labs^0,f,c
  7911   003FDC  0E00               	movlw	0
  7912   003FDE  2216               	addwfc	(??_labs+1)^0,f,c
  7913   003FE0  2217               	addwfc	(??_labs+2)^0,f,c
  7914   003FE2  2218               	addwfc	(??_labs+3)^0,f,c
  7915   003FE4  C015  F011         	movff	??_labs,?_labs
  7916   003FE8  C016  F012         	movff	??_labs+1,?_labs+1
  7917   003FEC  C017  F013         	movff	??_labs+2,?_labs+2
  7918   003FF0  C018  F014         	movff	??_labs+3,?_labs+3
  7919   003FF4  EF04  F020         	goto	l1277
  7920   003FF8                     l1274:
  7921   003FF8  C011  F011         	movff	labs@a,?_labs
  7922   003FFC  C012  F012         	movff	labs@a+1,?_labs+1
  7923   004000  C013  F013         	movff	labs@a+2,?_labs+2
  7924   004004  C014  F014         	movff	labs@a+3,?_labs+3
  7925   004008                     l1277:
  7926   004008  0012               	return		;funcret
  7927   00400A                     __end_of_labs:
  7928                           	callstack 0
  7929                           
  7930 ;; *************** function _floorf *****************
  7931 ;; Defined at:
  7932 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  x               4   55[COMRAM] float 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;  u               4   12[BANK0 ] struct .
  7937 ;;  m               4    6[BANK0 ] unsigned long 
  7938 ;;  e               2   10[BANK0 ] int 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  4   55[COMRAM] float 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7948 ;;      Params:         4       0       0       0       0       0       0       0       0
  7949 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7950 ;;      Temps:          0       6       0       0       0       0       0       0       0
  7951 ;;      Totals:         4      16       0       0       0       0       0       0       0
  7952 ;;Total ram usage:       20 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; Hardware stack levels required when called: 2
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_efgtoa
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text26
  7963   002F22                     __ptext26:
  7964                           	callstack 0
  7965   002F22                     _floorf:
  7966                           	callstack 23
  7967   002F22  C0CA  F06C         	movff	floorf@F526,floorf@u
  7968   002F26  C0CB  F06D         	movff	floorf@F526+1,floorf@u+1
  7969   002F2A  C0CC  F06E         	movff	floorf@F526+2,floorf@u+2
  7970   002F2E  C0CD  F06F         	movff	floorf@F526+3,floorf@u+3
  7971   002F32  C038  F06C         	movff	floorf@x,floorf@u
  7972   002F36  C039  F06D         	movff	floorf@x+1,floorf@u+1
  7973   002F3A  C03A  F06E         	movff	floorf@x+2,floorf@u+2
  7974   002F3E  C03B  F06F         	movff	floorf@x+3,floorf@u+3
  7975   002F42  0E81               	movlw	129
  7976   002F44  0100               	movlb	0	; () banked
  7977   002F46  6F60               	movwf	??_floorf& (0+255),b
  7978   002F48  0EFF               	movlw	255
  7979   002F4A  6F61               	movwf	(??_floorf+1)& (0+255),b
  7980   002F4C  C06C  F062         	movff	floorf@u,??_floorf+2
  7981   002F50  C06D  F063         	movff	floorf@u+1,??_floorf+3
  7982   002F54  C06E  F064         	movff	floorf@u+2,??_floorf+4
  7983   002F58  C06F  F065         	movff	floorf@u+3,??_floorf+5
  7984   002F5C  0E18               	movlw	24
  7985   002F5E  EFB6  F017         	goto	u7150
  7986   002F62                     u7155:
  7987   002F62  90D8               	bcf	status,0,c
  7988   002F64  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  7989   002F66  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  7990   002F68  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  7991   002F6A  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  7992   002F6C                     u7150:
  7993   002F6C  2EE8               	decfsz	wreg,f,c
  7994   002F6E  EFB1  F017         	goto	u7155
  7995   002F72  5162               	movf	(??_floorf+2)& (0+255),w,b
  7996   002F74  2560               	addwf	??_floorf& (0+255),w,b
  7997   002F76  6F6A               	movwf	floorf@e& (0+255),b
  7998   002F78  0E00               	movlw	0
  7999   002F7A  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  8000   002F7C  6F6B               	movwf	(floorf@e+1)& (0+255),b
  8001   002F7E  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  8002   002F80  EFCB  F017         	goto	u7161
  8003   002F84  516B               	movf	(floorf@e+1)& (0+255),w,b
  8004   002F86  E109               	bnz	u7160
  8005   002F88  0E17               	movlw	23
  8006   002F8A  5D6A               	subwf	floorf@e& (0+255),w,b
  8007   002F8C  A0D8               	btfss	status,0,c
  8008   002F8E  EFCB  F017         	goto	u7161
  8009   002F92  EFCD  F017         	goto	u7160
  8010   002F96                     u7161:
  8011   002F96  EFD7  F017         	goto	l6812
  8012   002F9A                     u7160:
  8013   002F9A                     l6810:
  8014                           
  8015                           ; BSR set to: 0
  8016   002F9A  C038  F038         	movff	floorf@x,?_floorf
  8017   002F9E  C039  F039         	movff	floorf@x+1,?_floorf+1
  8018   002FA2  C03A  F03A         	movff	floorf@x+2,?_floorf+2
  8019   002FA6  C03B  F03B         	movff	floorf@x+3,?_floorf+3
  8020   002FAA  EF9B  F018         	goto	l1249
  8021   002FAE                     l6812:
  8022                           
  8023                           ; BSR set to: 0
  8024   002FAE  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  8025   002FB0  EFDC  F017         	goto	u7171
  8026   002FB4  EFDE  F017         	goto	u7170
  8027   002FB8                     u7171:
  8028   002FB8  EF4F  F018         	goto	l6822
  8029   002FBC                     u7170:
  8030   002FBC                     
  8031                           ; BSR set to: 0
  8032   002FBC  C06A  F060         	movff	floorf@e,??_floorf
  8033   002FC0  0EFF               	movlw	255
  8034   002FC2  6F61               	movwf	(??_floorf+1)& (0+255),b
  8035   002FC4  0EFF               	movlw	255
  8036   002FC6  6F62               	movwf	(??_floorf+2)& (0+255),b
  8037   002FC8  0E7F               	movlw	127
  8038   002FCA  6F63               	movwf	(??_floorf+3)& (0+255),b
  8039   002FCC  0E00               	movlw	0
  8040   002FCE  6F64               	movwf	(??_floorf+4)& (0+255),b
  8041   002FD0                     u7185:
  8042   002FD0  6760               	tstfsz	??_floorf& (0+255),b
  8043   002FD2  EFED  F017         	goto	u7186
  8044   002FD6  EFF5  F017         	goto	u7187
  8045   002FDA                     u7186:
  8046   002FDA  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  8047   002FDC  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  8048   002FDE  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  8049   002FE0  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  8050   002FE2  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  8051   002FE4  2F60               	decfsz	??_floorf& (0+255),f,b
  8052   002FE6  EFE8  F017         	goto	u7185
  8053   002FEA                     u7187:
  8054   002FEA  C061  F066         	movff	??_floorf+1,floorf@m
  8055   002FEE  C062  F067         	movff	??_floorf+2,floorf@m+1
  8056   002FF2  C063  F068         	movff	??_floorf+3,floorf@m+2
  8057   002FF6  C064  F069         	movff	??_floorf+4,floorf@m+3
  8058   002FFA  0100               	movlb	0	; () banked
  8059   002FFC  5166               	movf	floorf@m& (0+255),w,b
  8060   002FFE  156C               	andwf	floorf@u& (0+255),w,b
  8061   003000  6F60               	movwf	??_floorf& (0+255),b
  8062   003002  5167               	movf	(floorf@m+1)& (0+255),w,b
  8063   003004  156D               	andwf	(floorf@u+1)& (0+255),w,b
  8064   003006  6F61               	movwf	(??_floorf+1)& (0+255),b
  8065   003008  5168               	movf	(floorf@m+2)& (0+255),w,b
  8066   00300A  156E               	andwf	(floorf@u+2)& (0+255),w,b
  8067   00300C  6F62               	movwf	(??_floorf+2)& (0+255),b
  8068   00300E  5169               	movf	(floorf@m+3)& (0+255),w,b
  8069   003010  156F               	andwf	(floorf@u+3)& (0+255),w,b
  8070   003012  6F63               	movwf	(??_floorf+3)& (0+255),b
  8071   003014  5160               	movf	??_floorf& (0+255),w,b
  8072   003016  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8073   003018  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8074   00301A  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8075   00301C  A4D8               	btfss	status,2,c
  8076   00301E  EF13  F018         	goto	u7191
  8077   003022  EF15  F018         	goto	u7190
  8078   003026                     u7191:
  8079   003026  EF17  F018         	goto	l6818
  8080   00302A                     u7190:
  8081   00302A  EFCD  F017         	goto	l6810
  8082   00302E                     l6818:
  8083                           
  8084                           ; BSR set to: 0
  8085   00302E  C06C  F060         	movff	floorf@u,??_floorf
  8086   003032  C06D  F061         	movff	floorf@u+1,??_floorf+1
  8087   003036  C06E  F062         	movff	floorf@u+2,??_floorf+2
  8088   00303A  C06F  F063         	movff	floorf@u+3,??_floorf+3
  8089   00303E  0E20               	movlw	32
  8090   003040  EF27  F018         	goto	u7200
  8091   003044                     u7205:
  8092   003044  90D8               	bcf	status,0,c
  8093   003046  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  8094   003048  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  8095   00304A  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  8096   00304C  3360               	rrcf	??_floorf& (0+255),f,b
  8097   00304E                     u7200:
  8098   00304E  2EE8               	decfsz	wreg,f,c
  8099   003050  EF22  F018         	goto	u7205
  8100   003054  5160               	movf	??_floorf& (0+255),w,b
  8101   003056  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8102   003058  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8103   00305A  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8104   00305C  B4D8               	btfsc	status,2,c
  8105   00305E  EF33  F018         	goto	u7211
  8106   003062  EF35  F018         	goto	u7210
  8107   003066                     u7211:
  8108   003066  EF3D  F018         	goto	l1252
  8109   00306A                     u7210:
  8110   00306A                     
  8111                           ; BSR set to: 0
  8112   00306A  5166               	movf	floorf@m& (0+255),w,b
  8113   00306C  276C               	addwf	floorf@u& (0+255),f,b
  8114   00306E  5167               	movf	(floorf@m+1)& (0+255),w,b
  8115   003070  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  8116   003072  5168               	movf	(floorf@m+2)& (0+255),w,b
  8117   003074  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  8118   003076  5169               	movf	(floorf@m+3)& (0+255),w,b
  8119   003078  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  8120   00307A                     l1252:
  8121                           
  8122                           ; BSR set to: 0
  8123   00307A  1D66               	comf	floorf@m& (0+255),w,b
  8124   00307C  6F60               	movwf	??_floorf& (0+255),b
  8125   00307E  1D67               	comf	(floorf@m+1)& (0+255),w,b
  8126   003080  6F61               	movwf	(??_floorf+1)& (0+255),b
  8127   003082  1D68               	comf	(floorf@m+2)& (0+255),w,b
  8128   003084  6F62               	movwf	(??_floorf+2)& (0+255),b
  8129   003086  1D69               	comf	(floorf@m+3)& (0+255),w,b
  8130   003088  6F63               	movwf	(??_floorf+3)& (0+255),b
  8131   00308A  5160               	movf	??_floorf& (0+255),w,b
  8132   00308C  176C               	andwf	floorf@u& (0+255),f,b
  8133   00308E  5161               	movf	(??_floorf+1)& (0+255),w,b
  8134   003090  176D               	andwf	(floorf@u+1)& (0+255),f,b
  8135   003092  5162               	movf	(??_floorf+2)& (0+255),w,b
  8136   003094  176E               	andwf	(floorf@u+2)& (0+255),f,b
  8137   003096  5163               	movf	(??_floorf+3)& (0+255),w,b
  8138   003098  176F               	andwf	(floorf@u+3)& (0+255),f,b
  8139   00309A  EF93  F018         	goto	l6830
  8140   00309E                     l6822:
  8141                           
  8142                           ; BSR set to: 0
  8143   00309E  C06C  F060         	movff	floorf@u,??_floorf
  8144   0030A2  C06D  F061         	movff	floorf@u+1,??_floorf+1
  8145   0030A6  C06E  F062         	movff	floorf@u+2,??_floorf+2
  8146   0030AA  C06F  F063         	movff	floorf@u+3,??_floorf+3
  8147   0030AE  0E20               	movlw	32
  8148   0030B0  EF5F  F018         	goto	u7220
  8149   0030B4                     u7225:
  8150   0030B4  90D8               	bcf	status,0,c
  8151   0030B6  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  8152   0030B8  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  8153   0030BA  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  8154   0030BC  3360               	rrcf	??_floorf& (0+255),f,b
  8155   0030BE                     u7220:
  8156   0030BE  2EE8               	decfsz	wreg,f,c
  8157   0030C0  EF5A  F018         	goto	u7225
  8158   0030C4  5160               	movf	??_floorf& (0+255),w,b
  8159   0030C6  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8160   0030C8  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8161   0030CA  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8162   0030CC  A4D8               	btfss	status,2,c
  8163   0030CE  EF6B  F018         	goto	u7231
  8164   0030D2  EF6D  F018         	goto	u7230
  8165   0030D6                     u7231:
  8166   0030D6  EF77  F018         	goto	l6826
  8167   0030DA                     u7230:
  8168   0030DA                     
  8169                           ; BSR set to: 0
  8170   0030DA  0E00               	movlw	0
  8171   0030DC  6F6C               	movwf	floorf@u& (0+255),b
  8172   0030DE  0E00               	movlw	0
  8173   0030E0  6F6D               	movwf	(floorf@u+1)& (0+255),b
  8174   0030E2  0E00               	movlw	0
  8175   0030E4  6F6E               	movwf	(floorf@u+2)& (0+255),b
  8176   0030E6  0E00               	movlw	0
  8177   0030E8  6F6F               	movwf	(floorf@u+3)& (0+255),b
  8178   0030EA  EF93  F018         	goto	l6830
  8179   0030EE                     l6826:
  8180                           
  8181                           ; BSR set to: 0
  8182   0030EE  90D8               	bcf	status,0,c
  8183   0030F0  356C               	rlcf	floorf@u& (0+255),w,b
  8184   0030F2  6F60               	movwf	??_floorf& (0+255),b
  8185   0030F4  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  8186   0030F6  6F61               	movwf	(??_floorf+1)& (0+255),b
  8187   0030F8  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  8188   0030FA  6F62               	movwf	(??_floorf+2)& (0+255),b
  8189   0030FC  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  8190   0030FE  6F63               	movwf	(??_floorf+3)& (0+255),b
  8191   003100  5160               	movf	??_floorf& (0+255),w,b
  8192   003102  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  8193   003104  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  8194   003106  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  8195   003108  B4D8               	btfsc	status,2,c
  8196   00310A  EF89  F018         	goto	u7241
  8197   00310E  EF8B  F018         	goto	u7240
  8198   003112                     u7241:
  8199   003112  EF93  F018         	goto	l6830
  8200   003116                     u7240:
  8201   003116                     
  8202                           ; BSR set to: 0
  8203   003116  0E00               	movlw	0
  8204   003118  6F6C               	movwf	floorf@u& (0+255),b
  8205   00311A  0E00               	movlw	0
  8206   00311C  6F6D               	movwf	(floorf@u+1)& (0+255),b
  8207   00311E  0E80               	movlw	128
  8208   003120  6F6E               	movwf	(floorf@u+2)& (0+255),b
  8209   003122  0EBF               	movlw	191
  8210   003124  6F6F               	movwf	(floorf@u+3)& (0+255),b
  8211   003126                     l6830:
  8212                           
  8213                           ; BSR set to: 0
  8214   003126  C06C  F038         	movff	floorf@u,?_floorf
  8215   00312A  C06D  F039         	movff	floorf@u+1,?_floorf+1
  8216   00312E  C06E  F03A         	movff	floorf@u+2,?_floorf+2
  8217   003132  C06F  F03B         	movff	floorf@u+3,?_floorf+3
  8218   003136                     l1249:
  8219                           
  8220                           ; BSR set to: 0
  8221   003136  0012               	return		;funcret
  8222   003138                     __end_of_floorf:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function ___fpclassifyf *****************
  8226 ;; Defined at:
  8227 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  x               4   16[COMRAM] float 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  u               4   26[COMRAM] struct .
  8232 ;;  e               2   24[COMRAM] int 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  2   16[COMRAM] int 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8242 ;;      Params:         4       0       0       0       0       0       0       0       0
  8243 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8244 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8245 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8246 ;;Total ram usage:       14 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 2
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_efgtoa
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text27
  8257   00383E                     __ptext27:
  8258                           	callstack 0
  8259   00383E                     ___fpclassifyf:
  8260                           	callstack 23
  8261   00383E  C0CE  F01B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8262   003842  C0CF  F01C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8263   003846  C0D0  F01D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8264   00384A  C0D1  F01E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8265   00384E  C011  F01B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8266   003852  C012  F01C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8267   003856  C013  F01D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8268   00385A  C014  F01E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8269   00385E  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  8270   003862  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8271   003866  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8272   00386A  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8273   00386E  0E18               	movlw	24
  8274   003870  EF3F  F01C         	goto	u7060
  8275   003874                     u7065:
  8276   003874  90D8               	bcf	status,0,c
  8277   003876  3218               	rrcf	(??___fpclassifyf+3)^0,f,c
  8278   003878  3217               	rrcf	(??___fpclassifyf+2)^0,f,c
  8279   00387A  3216               	rrcf	(??___fpclassifyf+1)^0,f,c
  8280   00387C  3215               	rrcf	??___fpclassifyf^0,f,c
  8281   00387E                     u7060:
  8282   00387E  2EE8               	decfsz	wreg,f,c
  8283   003880  EF3A  F01C         	goto	u7065
  8284   003884  5015               	movf	??___fpclassifyf^0,w,c
  8285   003886  6E19               	movwf	___fpclassifyf@e^0,c
  8286   003888  6A1A               	clrf	(___fpclassifyf@e+1)^0,c
  8287   00388A  5019               	movf	___fpclassifyf@e^0,w,c
  8288   00388C  101A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8289   00388E  A4D8               	btfss	status,2,c
  8290   003890  EF4C  F01C         	goto	u7071
  8291   003894  EF4E  F01C         	goto	u7070
  8292   003898                     u7071:
  8293   003898  EF6E  F01C         	goto	l6788
  8294   00389C                     u7070:
  8295   00389C  90D8               	bcf	status,0,c
  8296   00389E  341B               	rlcf	___fpclassifyf@u^0,w,c
  8297   0038A0  6E15               	movwf	??___fpclassifyf^0,c
  8298   0038A2  341C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8299   0038A4  6E16               	movwf	(??___fpclassifyf+1)^0,c
  8300   0038A6  341D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8301   0038A8  6E17               	movwf	(??___fpclassifyf+2)^0,c
  8302   0038AA  341E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8303   0038AC  6E18               	movwf	(??___fpclassifyf+3)^0,c
  8304   0038AE  5015               	movf	??___fpclassifyf^0,w,c
  8305   0038B0  1016               	iorwf	(??___fpclassifyf+1)^0,w,c
  8306   0038B2  1017               	iorwf	(??___fpclassifyf+2)^0,w,c
  8307   0038B4  1018               	iorwf	(??___fpclassifyf+3)^0,w,c
  8308   0038B6  A4D8               	btfss	status,2,c
  8309   0038B8  EF60  F01C         	goto	u7081
  8310   0038BC  EF62  F01C         	goto	u7080
  8311   0038C0                     u7081:
  8312   0038C0  EF68  F01C         	goto	l6784
  8313   0038C4                     u7080:
  8314   0038C4  0E00               	movlw	0
  8315   0038C6  6E12               	movwf	(?___fpclassifyf+1)^0,c
  8316   0038C8  0E02               	movlw	2
  8317   0038CA  6E11               	movwf	?___fpclassifyf^0,c
  8318   0038CC  EF9D  F01C         	goto	l1217
  8319   0038D0                     l6784:
  8320   0038D0  0E00               	movlw	0
  8321   0038D2  6E12               	movwf	(?___fpclassifyf+1)^0,c
  8322   0038D4  0E03               	movlw	3
  8323   0038D6  6E11               	movwf	?___fpclassifyf^0,c
  8324   0038D8  EF9D  F01C         	goto	l1217
  8325   0038DC                     l6788:
  8326   0038DC  2819               	incf	___fpclassifyf@e^0,w,c
  8327   0038DE  101A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8328   0038E0  A4D8               	btfss	status,2,c
  8329   0038E2  EF75  F01C         	goto	u7091
  8330   0038E6  EF77  F01C         	goto	u7090
  8331   0038EA                     u7091:
  8332   0038EA  EF99  F01C         	goto	l6794
  8333   0038EE                     u7090:
  8334   0038EE  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  8335   0038F2  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8336   0038F6  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8337   0038FA  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8338   0038FE  0E09               	movlw	9
  8339   003900                     u7105:
  8340   003900  90D8               	bcf	status,0,c
  8341   003902  3615               	rlcf	??___fpclassifyf^0,f,c
  8342   003904  3616               	rlcf	(??___fpclassifyf+1)^0,f,c
  8343   003906  3617               	rlcf	(??___fpclassifyf+2)^0,f,c
  8344   003908  3618               	rlcf	(??___fpclassifyf+3)^0,f,c
  8345   00390A  2EE8               	decfsz	wreg,f,c
  8346   00390C  EF80  F01C         	goto	u7105
  8347   003910  5015               	movf	??___fpclassifyf^0,w,c
  8348   003912  1016               	iorwf	(??___fpclassifyf+1)^0,w,c
  8349   003914  1017               	iorwf	(??___fpclassifyf+2)^0,w,c
  8350   003916  1018               	iorwf	(??___fpclassifyf+3)^0,w,c
  8351   003918  B4D8               	btfsc	status,2,c
  8352   00391A  EF91  F01C         	goto	u7111
  8353   00391E  EF94  F01C         	goto	u7110
  8354   003922                     u7111:
  8355   003922  0E01               	movlw	1
  8356   003924  EF95  F01C         	goto	u7120
  8357   003928                     u7110:
  8358   003928  0E00               	movlw	0
  8359   00392A                     u7120:
  8360   00392A  6E11               	movwf	?___fpclassifyf^0,c
  8361   00392C  6A12               	clrf	(?___fpclassifyf+1)^0,c
  8362   00392E  EF9D  F01C         	goto	l1217
  8363   003932                     l6794:
  8364   003932  0E00               	movlw	0
  8365   003934  6E12               	movwf	(?___fpclassifyf+1)^0,c
  8366   003936  0E04               	movlw	4
  8367   003938  6E11               	movwf	?___fpclassifyf^0,c
  8368   00393A                     l1217:
  8369   00393A  0012               	return		;funcret
  8370   00393C                     __end_of___fpclassifyf:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function ___fltol *****************
  8374 ;; Defined at:
  8375 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  f1              4   16[COMRAM] int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  exp1            1   25[COMRAM] unsigned char 
  8380 ;;  sign1           1   24[COMRAM] unsigned char 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  4   16[COMRAM] long 
  8383 ;; Registers used:
  8384 ;;		wreg, status,2, status,0
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8390 ;;      Params:         4       0       0       0       0       0       0       0       0
  8391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8392 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8393 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8394 ;;Total ram usage:       10 bytes
  8395 ;; Hardware stack levels used: 1
  8396 ;; Hardware stack levels required when called: 2
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_efgtoa
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text28
  8405   003634                     __ptext28:
  8406                           	callstack 0
  8407   003634                     ___fltol:
  8408                           	callstack 23
  8409   003634  3413               	rlcf	(___fltol@f1+2)^0,w,c
  8410   003636  3414               	rlcf	(___fltol@f1+3)^0,w,c
  8411   003638  6E1A               	movwf	___fltol@exp1^0,c
  8412   00363A  501A               	movf	___fltol@exp1^0,w,c
  8413   00363C  A4D8               	btfss	status,2,c
  8414   00363E  EF23  F01B         	goto	u6901
  8415   003642  EF25  F01B         	goto	u6900
  8416   003646                     u6901:
  8417   003646  EF2F  F01B         	goto	l6686
  8418   00364A                     u6900:
  8419   00364A                     l6682:
  8420   00364A  0E00               	movlw	0
  8421   00364C  6E11               	movwf	?___fltol^0,c
  8422   00364E  0E00               	movlw	0
  8423   003650  6E12               	movwf	(?___fltol+1)^0,c
  8424   003652  0E00               	movlw	0
  8425   003654  6E13               	movwf	(?___fltol+2)^0,c
  8426   003656  0E00               	movlw	0
  8427   003658  6E14               	movwf	(?___fltol+3)^0,c
  8428   00365A  EF9C  F01B         	goto	l668
  8429   00365E                     l6686:
  8430   00365E  C011  F015         	movff	___fltol@f1,??___fltol
  8431   003662  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  8432   003666  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  8433   00366A  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  8434   00366E  0E20               	movlw	32
  8435   003670  EF3F  F01B         	goto	u6910
  8436   003674                     u6915:
  8437   003674  90D8               	bcf	status,0,c
  8438   003676  3218               	rrcf	(??___fltol+3)^0,f,c
  8439   003678  3217               	rrcf	(??___fltol+2)^0,f,c
  8440   00367A  3216               	rrcf	(??___fltol+1)^0,f,c
  8441   00367C  3215               	rrcf	??___fltol^0,f,c
  8442   00367E                     u6910:
  8443   00367E  2EE8               	decfsz	wreg,f,c
  8444   003680  EF3A  F01B         	goto	u6915
  8445   003684  5015               	movf	??___fltol^0,w,c
  8446   003686  6E19               	movwf	___fltol@sign1^0,c
  8447   003688  8E13               	bsf	(___fltol@f1+2)^0,7,c
  8448   00368A  0EFF               	movlw	255
  8449   00368C  1611               	andwf	___fltol@f1^0,f,c
  8450   00368E  0EFF               	movlw	255
  8451   003690  1612               	andwf	(___fltol@f1+1)^0,f,c
  8452   003692  0EFF               	movlw	255
  8453   003694  1613               	andwf	(___fltol@f1+2)^0,f,c
  8454   003696  0E00               	movlw	0
  8455   003698  1614               	andwf	(___fltol@f1+3)^0,f,c
  8456   00369A  0E96               	movlw	150
  8457   00369C  5E1A               	subwf	___fltol@exp1^0,f,c
  8458   00369E  BE1A               	btfsc	___fltol@exp1^0,7,c
  8459   0036A0  EF56  F01B         	goto	u6920
  8460   0036A4  EF54  F01B         	goto	u6921
  8461   0036A8                     u6921:
  8462   0036A8  EF6C  F01B         	goto	l6706
  8463   0036AC                     u6920:
  8464   0036AC  501A               	movf	___fltol@exp1^0,w,c
  8465   0036AE  0A80               	xorlw	128
  8466   0036B0  0F97               	addlw	151
  8467   0036B2  B0D8               	btfsc	status,0,c
  8468   0036B4  EF5E  F01B         	goto	u6931
  8469   0036B8  EF60  F01B         	goto	u6930
  8470   0036BC                     u6931:
  8471   0036BC  EF62  F01B         	goto	l6702
  8472   0036C0                     u6930:
  8473   0036C0  EF25  F01B         	goto	l6682
  8474   0036C4                     l6702:
  8475   0036C4  90D8               	bcf	status,0,c
  8476   0036C6  3214               	rrcf	(___fltol@f1+3)^0,f,c
  8477   0036C8  3213               	rrcf	(___fltol@f1+2)^0,f,c
  8478   0036CA  3212               	rrcf	(___fltol@f1+1)^0,f,c
  8479   0036CC  3211               	rrcf	___fltol@f1^0,f,c
  8480   0036CE  3E1A               	incfsz	___fltol@exp1^0,f,c
  8481   0036D0  EF62  F01B         	goto	l6702
  8482   0036D4  EF84  F01B         	goto	l6716
  8483   0036D8                     l6706:
  8484   0036D8  0E1F               	movlw	31
  8485   0036DA  641A               	cpfsgt	___fltol@exp1^0,c
  8486   0036DC  EF72  F01B         	goto	u6941
  8487   0036E0  EF74  F01B         	goto	u6940
  8488   0036E4                     u6941:
  8489   0036E4  EF7C  F01B         	goto	l6714
  8490   0036E8                     u6940:
  8491   0036E8  EF25  F01B         	goto	l6682
  8492   0036EC                     l6712:
  8493   0036EC  90D8               	bcf	status,0,c
  8494   0036EE  3611               	rlcf	___fltol@f1^0,f,c
  8495   0036F0  3612               	rlcf	(___fltol@f1+1)^0,f,c
  8496   0036F2  3613               	rlcf	(___fltol@f1+2)^0,f,c
  8497   0036F4  3614               	rlcf	(___fltol@f1+3)^0,f,c
  8498   0036F6  061A               	decf	___fltol@exp1^0,f,c
  8499   0036F8                     l6714:
  8500   0036F8  501A               	movf	___fltol@exp1^0,w,c
  8501   0036FA  A4D8               	btfss	status,2,c
  8502   0036FC  EF82  F01B         	goto	u6951
  8503   003700  EF84  F01B         	goto	u6950
  8504   003704                     u6951:
  8505   003704  EF76  F01B         	goto	l6712
  8506   003708                     u6950:
  8507   003708                     l6716:
  8508   003708  5019               	movf	___fltol@sign1^0,w,c
  8509   00370A  B4D8               	btfsc	status,2,c
  8510   00370C  EF8A  F01B         	goto	u6961
  8511   003710  EF8C  F01B         	goto	u6960
  8512   003714                     u6961:
  8513   003714  EF94  F01B         	goto	l6720
  8514   003718                     u6960:
  8515   003718  1E14               	comf	(___fltol@f1+3)^0,f,c
  8516   00371A  1E13               	comf	(___fltol@f1+2)^0,f,c
  8517   00371C  1E12               	comf	(___fltol@f1+1)^0,f,c
  8518   00371E  6C11               	negf	___fltol@f1^0,c
  8519   003720  0E00               	movlw	0
  8520   003722  2212               	addwfc	(___fltol@f1+1)^0,f,c
  8521   003724  2213               	addwfc	(___fltol@f1+2)^0,f,c
  8522   003726  2214               	addwfc	(___fltol@f1+3)^0,f,c
  8523   003728                     l6720:
  8524   003728  C011  F011         	movff	___fltol@f1,?___fltol
  8525   00372C  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  8526   003730  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  8527   003734  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  8528   003738                     l668:
  8529   003738  0012               	return		;funcret
  8530   00373A                     __end_of___fltol:
  8531                           	callstack 0
  8532                           
  8533 ;; *************** function ___flsub *****************
  8534 ;; Defined at:
  8535 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  b               4   41[COMRAM] long 
  8538 ;;  a               4   45[COMRAM] long 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  4   41[COMRAM] long 
  8543 ;; Registers used:
  8544 ;;		wreg, status,2, status,0, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8550 ;;      Params:         8       0       0       0       0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8553 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8554 ;;Total ram usage:        8 bytes
  8555 ;; Hardware stack levels used: 1
  8556 ;; Hardware stack levels required when called: 3
  8557 ;; This function calls:
  8558 ;;		___fladd
  8559 ;; This function is called by:
  8560 ;;		_efgtoa
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text29
  8565   004200                     __ptext29:
  8566                           	callstack 0
  8567   004200                     ___flsub:
  8568                           	callstack 22
  8569   004200  0E00               	movlw	0
  8570   004202  1A2E               	xorwf	___flsub@a^0,f,c
  8571   004204  0E00               	movlw	0
  8572   004206  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  8573   004208  0E00               	movlw	0
  8574   00420A  1A30               	xorwf	(___flsub@a+2)^0,f,c
  8575   00420C  0E80               	movlw	128
  8576   00420E  1A31               	xorwf	(___flsub@a+3)^0,f,c
  8577   004210  C02A  F011         	movff	___flsub@b,___fladd@b
  8578   004214  C02B  F012         	movff	___flsub@b+1,___fladd@b+1
  8579   004218  C02C  F013         	movff	___flsub@b+2,___fladd@b+2
  8580   00421C  C02D  F014         	movff	___flsub@b+3,___fladd@b+3
  8581   004220  C02E  F015         	movff	___flsub@a,___fladd@a
  8582   004224  C02F  F016         	movff	___flsub@a+1,___fladd@a+1
  8583   004228  C030  F017         	movff	___flsub@a+2,___fladd@a+2
  8584   00422C  C031  F018         	movff	___flsub@a+3,___fladd@a+3
  8585   004230  EC3B  F005         	call	___fladd	;wreg free
  8586   004234  C011  F02A         	movff	?___fladd,?___flsub
  8587   004238  C012  F02B         	movff	?___fladd+1,?___flsub+1
  8588   00423C  C013  F02C         	movff	?___fladd+2,?___flsub+2
  8589   004240  C014  F02D         	movff	?___fladd+3,?___flsub+3
  8590   004244  0012               	return		;funcret
  8591   004246                     __end_of___flsub:
  8592                           	callstack 0
  8593                           
  8594 ;; *************** function ___fladd *****************
  8595 ;; Defined at:
  8596 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  b               4   16[COMRAM] long 
  8599 ;;  a               4   20[COMRAM] long 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  grs             1   31[COMRAM] unsigned char 
  8602 ;;  bexp            1   30[COMRAM] unsigned char 
  8603 ;;  aexp            1   29[COMRAM] unsigned char 
  8604 ;;  signs           1   28[COMRAM] unsigned char 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  4   16[COMRAM] unsigned char 
  8607 ;; Registers used:
  8608 ;;		wreg, status,2, status,0
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8614 ;;      Params:         8       0       0       0       0       0       0       0       0
  8615 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8616 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8617 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8618 ;;Total ram usage:       16 bytes
  8619 ;; Hardware stack levels used: 1
  8620 ;; Hardware stack levels required when called: 2
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		___flsub
  8625 ;;		_efgtoa
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text30
  8630   000A76                     __ptext30:
  8631                           	callstack 0
  8632   000A76                     ___fladd:
  8633                           	callstack 22
  8634   000A76  5014               	movf	(___fladd@b+3)^0,w,c
  8635   000A78  0B80               	andlw	128
  8636   000A7A  6E1D               	movwf	___fladd@signs^0,c
  8637   000A7C  5014               	movf	(___fladd@b+3)^0,w,c
  8638   000A7E  2414               	addwf	(___fladd@b+3)^0,w,c
  8639   000A80  6E1F               	movwf	___fladd@bexp^0,c
  8640   000A82  AE13               	btfss	(___fladd@b+2)^0,7,c
  8641   000A84  EF46  F005         	goto	u5991
  8642   000A88  EF48  F005         	goto	u5990
  8643   000A8C                     u5991:
  8644   000A8C  EF49  F005         	goto	l6150
  8645   000A90                     u5990:
  8646   000A90  801F               	bsf	___fladd@bexp^0,0,c
  8647   000A92                     l6150:
  8648   000A92  501F               	movf	___fladd@bexp^0,w,c
  8649   000A94  B4D8               	btfsc	status,2,c
  8650   000A96  EF4F  F005         	goto	u6001
  8651   000A9A  EF51  F005         	goto	u6000
  8652   000A9E                     u6001:
  8653   000A9E  EF66  F005         	goto	l6160
  8654   000AA2                     u6000:
  8655   000AA2  281F               	incf	___fladd@bexp^0,w,c
  8656   000AA4  A4D8               	btfss	status,2,c
  8657   000AA6  EF57  F005         	goto	u6011
  8658   000AAA  EF59  F005         	goto	u6010
  8659   000AAE                     u6011:
  8660   000AAE  EF61  F005         	goto	l6156
  8661   000AB2                     u6010:
  8662   000AB2  0E00               	movlw	0
  8663   000AB4  6E11               	movwf	___fladd@b^0,c
  8664   000AB6  0E00               	movlw	0
  8665   000AB8  6E12               	movwf	(___fladd@b+1)^0,c
  8666   000ABA  0E00               	movlw	0
  8667   000ABC  6E13               	movwf	(___fladd@b+2)^0,c
  8668   000ABE  0E00               	movlw	0
  8669   000AC0  6E14               	movwf	(___fladd@b+3)^0,c
  8670   000AC2                     l6156:
  8671   000AC2  8E13               	bsf	(___fladd@b+2)^0,7,c
  8672   000AC4  0E00               	movlw	0
  8673   000AC6  6E14               	movwf	(___fladd@b+3)^0,c
  8674   000AC8  EF6E  F005         	goto	l6162
  8675   000ACC                     l6160:
  8676   000ACC  0E00               	movlw	0
  8677   000ACE  6E11               	movwf	___fladd@b^0,c
  8678   000AD0  0E00               	movlw	0
  8679   000AD2  6E12               	movwf	(___fladd@b+1)^0,c
  8680   000AD4  0E00               	movlw	0
  8681   000AD6  6E13               	movwf	(___fladd@b+2)^0,c
  8682   000AD8  0E00               	movlw	0
  8683   000ADA  6E14               	movwf	(___fladd@b+3)^0,c
  8684   000ADC                     l6162:
  8685   000ADC  5018               	movf	(___fladd@a+3)^0,w,c
  8686   000ADE  0B80               	andlw	128
  8687   000AE0  6E1E               	movwf	___fladd@aexp^0,c
  8688   000AE2  501D               	movf	___fladd@signs^0,w,c
  8689   000AE4  181E               	xorwf	___fladd@aexp^0,w,c
  8690   000AE6  B4D8               	btfsc	status,2,c
  8691   000AE8  EF78  F005         	goto	u6021
  8692   000AEC  EF7A  F005         	goto	u6020
  8693   000AF0                     u6021:
  8694   000AF0  EF7B  F005         	goto	l6168
  8695   000AF4                     u6020:
  8696   000AF4  8C1D               	bsf	___fladd@signs^0,6,c
  8697   000AF6                     l6168:
  8698   000AF6  5018               	movf	(___fladd@a+3)^0,w,c
  8699   000AF8  2418               	addwf	(___fladd@a+3)^0,w,c
  8700   000AFA  6E1E               	movwf	___fladd@aexp^0,c
  8701   000AFC  AE17               	btfss	(___fladd@a+2)^0,7,c
  8702   000AFE  EF83  F005         	goto	u6031
  8703   000B02  EF85  F005         	goto	u6030
  8704   000B06                     u6031:
  8705   000B06  EF86  F005         	goto	l6174
  8706   000B0A                     u6030:
  8707   000B0A  801E               	bsf	___fladd@aexp^0,0,c
  8708   000B0C                     l6174:
  8709   000B0C  501E               	movf	___fladd@aexp^0,w,c
  8710   000B0E  B4D8               	btfsc	status,2,c
  8711   000B10  EF8C  F005         	goto	u6041
  8712   000B14  EF8E  F005         	goto	u6040
  8713   000B18                     u6041:
  8714   000B18  EFA3  F005         	goto	l6184
  8715   000B1C                     u6040:
  8716   000B1C  281E               	incf	___fladd@aexp^0,w,c
  8717   000B1E  A4D8               	btfss	status,2,c
  8718   000B20  EF94  F005         	goto	u6051
  8719   000B24  EF96  F005         	goto	u6050
  8720   000B28                     u6051:
  8721   000B28  EF9E  F005         	goto	l6180
  8722   000B2C                     u6050:
  8723   000B2C  0E00               	movlw	0
  8724   000B2E  6E15               	movwf	___fladd@a^0,c
  8725   000B30  0E00               	movlw	0
  8726   000B32  6E16               	movwf	(___fladd@a+1)^0,c
  8727   000B34  0E00               	movlw	0
  8728   000B36  6E17               	movwf	(___fladd@a+2)^0,c
  8729   000B38  0E00               	movlw	0
  8730   000B3A  6E18               	movwf	(___fladd@a+3)^0,c
  8731   000B3C                     l6180:
  8732   000B3C  8E17               	bsf	(___fladd@a+2)^0,7,c
  8733   000B3E  0E00               	movlw	0
  8734   000B40  6E18               	movwf	(___fladd@a+3)^0,c
  8735   000B42  EFAB  F005         	goto	l6186
  8736   000B46                     l6184:
  8737   000B46  0E00               	movlw	0
  8738   000B48  6E15               	movwf	___fladd@a^0,c
  8739   000B4A  0E00               	movlw	0
  8740   000B4C  6E16               	movwf	(___fladd@a+1)^0,c
  8741   000B4E  0E00               	movlw	0
  8742   000B50  6E17               	movwf	(___fladd@a+2)^0,c
  8743   000B52  0E00               	movlw	0
  8744   000B54  6E18               	movwf	(___fladd@a+3)^0,c
  8745   000B56                     l6186:
  8746   000B56  501F               	movf	___fladd@bexp^0,w,c
  8747   000B58  5C1E               	subwf	___fladd@aexp^0,w,c
  8748   000B5A  B0D8               	btfsc	status,0,c
  8749   000B5C  EFB2  F005         	goto	u6061
  8750   000B60  EFB4  F005         	goto	u6060
  8751   000B64                     u6061:
  8752   000B64  EFDB  F005         	goto	l6222
  8753   000B68                     u6060:
  8754   000B68  AC1D               	btfss	___fladd@signs^0,6,c
  8755   000B6A  EFB9  F005         	goto	u6071
  8756   000B6E  EFBB  F005         	goto	u6070
  8757   000B72                     u6071:
  8758   000B72  EFBD  F005         	goto	l6192
  8759   000B76                     u6070:
  8760   000B76  0E80               	movlw	128
  8761   000B78  1A1D               	xorwf	___fladd@signs^0,f,c
  8762   000B7A                     l6192:
  8763   000B7A  C01F  F020         	movff	___fladd@bexp,___fladd@grs
  8764   000B7E  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  8765   000B82  C020  F01E         	movff	___fladd@grs,___fladd@aexp
  8766   000B86  C011  F020         	movff	___fladd@b,___fladd@grs
  8767   000B8A  C015  F011         	movff	___fladd@a,___fladd@b
  8768   000B8E  C020  F015         	movff	___fladd@grs,___fladd@a
  8769   000B92  C012  F020         	movff	___fladd@b+1,___fladd@grs
  8770   000B96  C016  F012         	movff	___fladd@a+1,___fladd@b+1
  8771   000B9A  C020  F016         	movff	___fladd@grs,___fladd@a+1
  8772   000B9E  C013  F020         	movff	___fladd@b+2,___fladd@grs
  8773   000BA2  C017  F013         	movff	___fladd@a+2,___fladd@b+2
  8774   000BA6  C020  F017         	movff	___fladd@grs,___fladd@a+2
  8775   000BAA  C014  F020         	movff	___fladd@b+3,___fladd@grs
  8776   000BAE  C018  F014         	movff	___fladd@a+3,___fladd@b+3
  8777   000BB2  C020  F018         	movff	___fladd@grs,___fladd@a+3
  8778   000BB6                     l6222:
  8779   000BB6  0E00               	movlw	0
  8780   000BB8  6E20               	movwf	___fladd@grs^0,c
  8781   000BBA  501F               	movf	___fladd@bexp^0,w,c
  8782   000BBC  C01E  F019         	movff	___fladd@aexp,??___fladd
  8783   000BC0  6A1A               	clrf	(??___fladd+1)^0,c
  8784   000BC2  5E19               	subwf	??___fladd^0,f,c
  8785   000BC4  0E00               	movlw	0
  8786   000BC6  5A1A               	subwfb	(??___fladd+1)^0,f,c
  8787   000BC8  BE1A               	btfsc	(??___fladd+1)^0,7,c
  8788   000BCA  EFF0  F005         	goto	u6081
  8789   000BCE  501A               	movf	(??___fladd+1)^0,w,c
  8790   000BD0  E109               	bnz	u6080
  8791   000BD2  0E1A               	movlw	26
  8792   000BD4  5C19               	subwf	??___fladd^0,w,c
  8793   000BD6  A0D8               	btfss	status,0,c
  8794   000BD8  EFF0  F005         	goto	u6081
  8795   000BDC  EFF2  F005         	goto	u6080
  8796   000BE0                     u6081:
  8797   000BE0  EF29  F006         	goto	l900
  8798   000BE4                     u6080:
  8799   000BE4  5011               	movf	___fladd@b^0,w,c
  8800   000BE6  1012               	iorwf	(___fladd@b+1)^0,w,c
  8801   000BE8  1013               	iorwf	(___fladd@b+2)^0,w,c
  8802   000BEA  1014               	iorwf	(___fladd@b+3)^0,w,c
  8803   000BEC  A4D8               	btfss	status,2,c
  8804   000BEE  EFFB  F005         	goto	u6091
  8805   000BF2  EFFE  F005         	goto	u6090
  8806   000BF6                     u6091:
  8807   000BF6  0E01               	movlw	1
  8808   000BF8  EFFF  F005         	goto	u6100
  8809   000BFC                     u6090:
  8810   000BFC  0E00               	movlw	0
  8811   000BFE                     u6100:
  8812   000BFE  6E20               	movwf	___fladd@grs^0,c
  8813   000C00  0E00               	movlw	0
  8814   000C02  6E11               	movwf	___fladd@b^0,c
  8815   000C04  0E00               	movlw	0
  8816   000C06  6E12               	movwf	(___fladd@b+1)^0,c
  8817   000C08  0E00               	movlw	0
  8818   000C0A  6E13               	movwf	(___fladd@b+2)^0,c
  8819   000C0C  0E00               	movlw	0
  8820   000C0E  6E14               	movwf	(___fladd@b+3)^0,c
  8821   000C10  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  8822   000C14  EF32  F006         	goto	l899
  8823   000C18                     l901:
  8824   000C18  A020               	btfss	___fladd@grs^0,0,c
  8825   000C1A  EF11  F006         	goto	u6111
  8826   000C1E  EF13  F006         	goto	u6110
  8827   000C22                     u6111:
  8828   000C22  EF19  F006         	goto	l6234
  8829   000C26                     u6110:
  8830   000C26  90D8               	bcf	status,0,c
  8831   000C28  3020               	rrcf	___fladd@grs^0,w,c
  8832   000C2A  0901               	iorlw	1
  8833   000C2C  6E20               	movwf	___fladd@grs^0,c
  8834   000C2E  EF1B  F006         	goto	l6236
  8835   000C32                     l6234:
  8836   000C32  90D8               	bcf	status,0,c
  8837   000C34  3220               	rrcf	___fladd@grs^0,f,c
  8838   000C36                     l6236:
  8839   000C36  A011               	btfss	___fladd@b^0,0,c
  8840   000C38  EF20  F006         	goto	u6121
  8841   000C3C  EF22  F006         	goto	u6120
  8842   000C40                     u6121:
  8843   000C40  EF23  F006         	goto	l6240
  8844   000C44                     u6120:
  8845   000C44  8E20               	bsf	___fladd@grs^0,7,c
  8846   000C46                     l6240:
  8847   000C46  3414               	rlcf	(___fladd@b+3)^0,w,c
  8848   000C48  3214               	rrcf	(___fladd@b+3)^0,f,c
  8849   000C4A  3213               	rrcf	(___fladd@b+2)^0,f,c
  8850   000C4C  3212               	rrcf	(___fladd@b+1)^0,f,c
  8851   000C4E  3211               	rrcf	___fladd@b^0,f,c
  8852   000C50  2A1F               	incf	___fladd@bexp^0,f,c
  8853   000C52                     l900:
  8854   000C52  501E               	movf	___fladd@aexp^0,w,c
  8855   000C54  5C1F               	subwf	___fladd@bexp^0,w,c
  8856   000C56  A0D8               	btfss	status,0,c
  8857   000C58  EF30  F006         	goto	u6131
  8858   000C5C  EF32  F006         	goto	u6130
  8859   000C60                     u6131:
  8860   000C60  EF0C  F006         	goto	l901
  8861   000C64                     u6130:
  8862   000C64                     l899:
  8863   000C64  BC1D               	btfsc	___fladd@signs^0,6,c
  8864   000C66  EF37  F006         	goto	u6141
  8865   000C6A  EF39  F006         	goto	u6140
  8866   000C6E                     u6141:
  8867   000C6E  EF79  F006         	goto	l6268
  8868   000C72                     u6140:
  8869   000C72  501F               	movf	___fladd@bexp^0,w,c
  8870   000C74  A4D8               	btfss	status,2,c
  8871   000C76  EF3F  F006         	goto	u6151
  8872   000C7A  EF41  F006         	goto	u6150
  8873   000C7E                     u6151:
  8874   000C7E  EF4B  F006         	goto	l6250
  8875   000C82                     u6150:
  8876   000C82  0E00               	movlw	0
  8877   000C84  6E11               	movwf	?___fladd^0,c
  8878   000C86  0E00               	movlw	0
  8879   000C88  6E12               	movwf	(?___fladd+1)^0,c
  8880   000C8A  0E00               	movlw	0
  8881   000C8C  6E13               	movwf	(?___fladd+2)^0,c
  8882   000C8E  0E00               	movlw	0
  8883   000C90  6E14               	movwf	(?___fladd+3)^0,c
  8884   000C92  EF9A  F007         	goto	l908
  8885   000C96                     l6250:
  8886   000C96  5015               	movf	___fladd@a^0,w,c
  8887   000C98  2611               	addwf	___fladd@b^0,f,c
  8888   000C9A  5016               	movf	(___fladd@a+1)^0,w,c
  8889   000C9C  2212               	addwfc	(___fladd@b+1)^0,f,c
  8890   000C9E  5017               	movf	(___fladd@a+2)^0,w,c
  8891   000CA0  2213               	addwfc	(___fladd@b+2)^0,f,c
  8892   000CA2  5018               	movf	(___fladd@a+3)^0,w,c
  8893   000CA4  2214               	addwfc	(___fladd@b+3)^0,f,c
  8894   000CA6  A014               	btfss	(___fladd@b+3)^0,0,c
  8895   000CA8  EF58  F006         	goto	u6161
  8896   000CAC  EF5A  F006         	goto	u6160
  8897   000CB0                     u6161:
  8898   000CB0  EF06  F007         	goto	l6304
  8899   000CB4                     u6160:
  8900   000CB4  A020               	btfss	___fladd@grs^0,0,c
  8901   000CB6  EF5F  F006         	goto	u6171
  8902   000CBA  EF61  F006         	goto	u6170
  8903   000CBE                     u6171:
  8904   000CBE  EF67  F006         	goto	l6258
  8905   000CC2                     u6170:
  8906   000CC2  90D8               	bcf	status,0,c
  8907   000CC4  3020               	rrcf	___fladd@grs^0,w,c
  8908   000CC6  0901               	iorlw	1
  8909   000CC8  6E20               	movwf	___fladd@grs^0,c
  8910   000CCA  EF69  F006         	goto	l6260
  8911   000CCE                     l6258:
  8912   000CCE  90D8               	bcf	status,0,c
  8913   000CD0  3220               	rrcf	___fladd@grs^0,f,c
  8914   000CD2                     l6260:
  8915   000CD2  A011               	btfss	___fladd@b^0,0,c
  8916   000CD4  EF6E  F006         	goto	u6181
  8917   000CD8  EF70  F006         	goto	u6180
  8918   000CDC                     u6181:
  8919   000CDC  EF71  F006         	goto	l6264
  8920   000CE0                     u6180:
  8921   000CE0  8E20               	bsf	___fladd@grs^0,7,c
  8922   000CE2                     l6264:
  8923   000CE2  3414               	rlcf	(___fladd@b+3)^0,w,c
  8924   000CE4  3214               	rrcf	(___fladd@b+3)^0,f,c
  8925   000CE6  3213               	rrcf	(___fladd@b+2)^0,f,c
  8926   000CE8  3212               	rrcf	(___fladd@b+1)^0,f,c
  8927   000CEA  3211               	rrcf	___fladd@b^0,f,c
  8928   000CEC  2A1F               	incf	___fladd@bexp^0,f,c
  8929   000CEE  EF06  F007         	goto	l6304
  8930   000CF2                     l6268:
  8931   000CF2  5015               	movf	___fladd@a^0,w,c
  8932   000CF4  5C11               	subwf	___fladd@b^0,w,c
  8933   000CF6  5016               	movf	(___fladd@a+1)^0,w,c
  8934   000CF8  5812               	subwfb	(___fladd@b+1)^0,w,c
  8935   000CFA  5017               	movf	(___fladd@a+2)^0,w,c
  8936   000CFC  5813               	subwfb	(___fladd@b+2)^0,w,c
  8937   000CFE  5014               	movf	(___fladd@b+3)^0,w,c
  8938   000D00  0A80               	xorlw	128
  8939   000D02  6E19               	movwf	??___fladd^0,c
  8940   000D04  5018               	movf	(___fladd@a+3)^0,w,c
  8941   000D06  0A80               	xorlw	128
  8942   000D08  5819               	subwfb	??___fladd^0,w,c
  8943   000D0A  B0D8               	btfsc	status,0,c
  8944   000D0C  EF8A  F006         	goto	u6191
  8945   000D10  EF8C  F006         	goto	u6190
  8946   000D14                     u6191:
  8947   000D14  EFB7  F006         	goto	l6278
  8948   000D18                     u6190:
  8949   000D18  5011               	movf	___fladd@b^0,w,c
  8950   000D1A  5C15               	subwf	___fladd@a^0,w,c
  8951   000D1C  6E19               	movwf	??___fladd^0,c
  8952   000D1E  5012               	movf	(___fladd@b+1)^0,w,c
  8953   000D20  5816               	subwfb	(___fladd@a+1)^0,w,c
  8954   000D22  6E1A               	movwf	(??___fladd+1)^0,c
  8955   000D24  5013               	movf	(___fladd@b+2)^0,w,c
  8956   000D26  5817               	subwfb	(___fladd@a+2)^0,w,c
  8957   000D28  6E1B               	movwf	(??___fladd+2)^0,c
  8958   000D2A  5014               	movf	(___fladd@b+3)^0,w,c
  8959   000D2C  5818               	subwfb	(___fladd@a+3)^0,w,c
  8960   000D2E  6E1C               	movwf	(??___fladd+3)^0,c
  8961   000D30  0EFF               	movlw	255
  8962   000D32  2419               	addwf	??___fladd^0,w,c
  8963   000D34  6E11               	movwf	___fladd@b^0,c
  8964   000D36  0EFF               	movlw	255
  8965   000D38  201A               	addwfc	(??___fladd+1)^0,w,c
  8966   000D3A  6E12               	movwf	(___fladd@b+1)^0,c
  8967   000D3C  0EFF               	movlw	255
  8968   000D3E  201B               	addwfc	(??___fladd+2)^0,w,c
  8969   000D40  6E13               	movwf	(___fladd@b+2)^0,c
  8970   000D42  0EFF               	movlw	255
  8971   000D44  201C               	addwfc	(??___fladd+3)^0,w,c
  8972   000D46  6E14               	movwf	(___fladd@b+3)^0,c
  8973   000D48  0E80               	movlw	128
  8974   000D4A  1A1D               	xorwf	___fladd@signs^0,f,c
  8975   000D4C  6C20               	negf	___fladd@grs^0,c
  8976   000D4E  5020               	movf	___fladd@grs^0,w,c
  8977   000D50  A4D8               	btfss	status,2,c
  8978   000D52  EFAD  F006         	goto	u6201
  8979   000D56  EFAF  F006         	goto	u6200
  8980   000D5A                     u6201:
  8981   000D5A  EFBF  F006         	goto	l916
  8982   000D5E                     u6200:
  8983   000D5E  0E01               	movlw	1
  8984   000D60  2611               	addwf	___fladd@b^0,f,c
  8985   000D62  0E00               	movlw	0
  8986   000D64  2212               	addwfc	(___fladd@b+1)^0,f,c
  8987   000D66  2213               	addwfc	(___fladd@b+2)^0,f,c
  8988   000D68  2214               	addwfc	(___fladd@b+3)^0,f,c
  8989   000D6A  EFBF  F006         	goto	l916
  8990   000D6E                     l6278:
  8991   000D6E  5015               	movf	___fladd@a^0,w,c
  8992   000D70  5E11               	subwf	___fladd@b^0,f,c
  8993   000D72  5016               	movf	(___fladd@a+1)^0,w,c
  8994   000D74  5A12               	subwfb	(___fladd@b+1)^0,f,c
  8995   000D76  5017               	movf	(___fladd@a+2)^0,w,c
  8996   000D78  5A13               	subwfb	(___fladd@b+2)^0,f,c
  8997   000D7A  5018               	movf	(___fladd@a+3)^0,w,c
  8998   000D7C  5A14               	subwfb	(___fladd@b+3)^0,f,c
  8999   000D7E                     l916:
  9000   000D7E  5011               	movf	___fladd@b^0,w,c
  9001   000D80  1012               	iorwf	(___fladd@b+1)^0,w,c
  9002   000D82  1013               	iorwf	(___fladd@b+2)^0,w,c
  9003   000D84  1014               	iorwf	(___fladd@b+3)^0,w,c
  9004   000D86  A4D8               	btfss	status,2,c
  9005   000D88  EFC8  F006         	goto	u6211
  9006   000D8C  EFCA  F006         	goto	u6210
  9007   000D90                     u6211:
  9008   000D90  EFFF  F006         	goto	l6302
  9009   000D94                     u6210:
  9010   000D94  5020               	movf	___fladd@grs^0,w,c
  9011   000D96  A4D8               	btfss	status,2,c
  9012   000D98  EFD0  F006         	goto	u6221
  9013   000D9C  EFD2  F006         	goto	u6220
  9014   000DA0                     u6221:
  9015   000DA0  EFFF  F006         	goto	l6302
  9016   000DA4                     u6220:
  9017   000DA4  0E00               	movlw	0
  9018   000DA6  6E11               	movwf	?___fladd^0,c
  9019   000DA8  0E00               	movlw	0
  9020   000DAA  6E12               	movwf	(?___fladd+1)^0,c
  9021   000DAC  0E00               	movlw	0
  9022   000DAE  6E13               	movwf	(?___fladd+2)^0,c
  9023   000DB0  0E00               	movlw	0
  9024   000DB2  6E14               	movwf	(?___fladd+3)^0,c
  9025   000DB4  EF9A  F007         	goto	l908
  9026   000DB8                     l6286:
  9027   000DB8  90D8               	bcf	status,0,c
  9028   000DBA  3611               	rlcf	___fladd@b^0,f,c
  9029   000DBC  3612               	rlcf	(___fladd@b+1)^0,f,c
  9030   000DBE  3613               	rlcf	(___fladd@b+2)^0,f,c
  9031   000DC0  3614               	rlcf	(___fladd@b+3)^0,f,c
  9032   000DC2  AE20               	btfss	___fladd@grs^0,7,c
  9033   000DC4  EFE6  F006         	goto	u6231
  9034   000DC8  EFE8  F006         	goto	u6230
  9035   000DCC                     u6231:
  9036   000DCC  EFE9  F006         	goto	l6292
  9037   000DD0                     u6230:
  9038   000DD0  8011               	bsf	___fladd@b^0,0,c
  9039   000DD2                     l6292:
  9040   000DD2  A020               	btfss	___fladd@grs^0,0,c
  9041   000DD4  EFEE  F006         	goto	u6241
  9042   000DD8  EFF0  F006         	goto	u6240
  9043   000DDC                     u6241:
  9044   000DDC  EFF4  F006         	goto	l6296
  9045   000DE0                     u6240:
  9046   000DE0  80D8               	bsf	status,0,c
  9047   000DE2  3620               	rlcf	___fladd@grs^0,f,c
  9048   000DE4  EFF6  F006         	goto	l6298
  9049   000DE8                     l6296:
  9050   000DE8  90D8               	bcf	status,0,c
  9051   000DEA  3620               	rlcf	___fladd@grs^0,f,c
  9052   000DEC                     l6298:
  9053   000DEC  501F               	movf	___fladd@bexp^0,w,c
  9054   000DEE  B4D8               	btfsc	status,2,c
  9055   000DF0  EFFC  F006         	goto	u6251
  9056   000DF4  EFFE  F006         	goto	u6250
  9057   000DF8                     u6251:
  9058   000DF8  EFFF  F006         	goto	l6302
  9059   000DFC                     u6250:
  9060   000DFC  061F               	decf	___fladd@bexp^0,f,c
  9061   000DFE                     l6302:
  9062   000DFE  AE13               	btfss	(___fladd@b+2)^0,7,c
  9063   000E00  EF04  F007         	goto	u6261
  9064   000E04  EF06  F007         	goto	u6260
  9065   000E08                     u6261:
  9066   000E08  EFDC  F006         	goto	l6286
  9067   000E0C                     u6260:
  9068   000E0C                     l6304:
  9069   000E0C  0E00               	movlw	0
  9070   000E0E  6E1E               	movwf	___fladd@aexp^0,c
  9071   000E10  AE20               	btfss	___fladd@grs^0,7,c
  9072   000E12  EF0D  F007         	goto	u6271
  9073   000E16  EF0F  F007         	goto	u6270
  9074   000E1A                     u6271:
  9075   000E1A  EF27  F007         	goto	l925
  9076   000E1E                     u6270:
  9077   000E1E  C020  F019         	movff	___fladd@grs,??___fladd
  9078   000E22  0E7F               	movlw	127
  9079   000E24  1619               	andwf	??___fladd^0,f,c
  9080   000E26  B4D8               	btfsc	status,2,c
  9081   000E28  EF18  F007         	goto	u6281
  9082   000E2C  EF1A  F007         	goto	u6280
  9083   000E30                     u6281:
  9084   000E30  EF1E  F007         	goto	l926
  9085   000E34                     u6280:
  9086   000E34                     l6310:
  9087   000E34  0E01               	movlw	1
  9088   000E36  6E1E               	movwf	___fladd@aexp^0,c
  9089   000E38  EF27  F007         	goto	l925
  9090   000E3C                     l926:
  9091   000E3C  A011               	btfss	___fladd@b^0,0,c
  9092   000E3E  EF23  F007         	goto	u6291
  9093   000E42  EF25  F007         	goto	u6290
  9094   000E46                     u6291:
  9095   000E46  EF27  F007         	goto	l925
  9096   000E4A                     u6290:
  9097   000E4A  EF1A  F007         	goto	l6310
  9098   000E4E                     l925:
  9099   000E4E  501E               	movf	___fladd@aexp^0,w,c
  9100   000E50  B4D8               	btfsc	status,2,c
  9101   000E52  EF2D  F007         	goto	u6301
  9102   000E56  EF2F  F007         	goto	u6300
  9103   000E5A                     u6301:
  9104   000E5A  EF5A  F007         	goto	l6322
  9105   000E5E                     u6300:
  9106   000E5E  0E01               	movlw	1
  9107   000E60  2611               	addwf	___fladd@b^0,f,c
  9108   000E62  0E00               	movlw	0
  9109   000E64  2212               	addwfc	(___fladd@b+1)^0,f,c
  9110   000E66  2213               	addwfc	(___fladd@b+2)^0,f,c
  9111   000E68  2214               	addwfc	(___fladd@b+3)^0,f,c
  9112   000E6A  A014               	btfss	(___fladd@b+3)^0,0,c
  9113   000E6C  EF3A  F007         	goto	u6311
  9114   000E70  EF3C  F007         	goto	u6310
  9115   000E74                     u6311:
  9116   000E74  EF5A  F007         	goto	l6322
  9117   000E78                     u6310:
  9118   000E78  C011  F019         	movff	___fladd@b,??___fladd
  9119   000E7C  C012  F01A         	movff	___fladd@b+1,??___fladd+1
  9120   000E80  C013  F01B         	movff	___fladd@b+2,??___fladd+2
  9121   000E84  C014  F01C         	movff	___fladd@b+3,??___fladd+3
  9122   000E88  341C               	rlcf	(??___fladd+3)^0,w,c
  9123   000E8A  321C               	rrcf	(??___fladd+3)^0,f,c
  9124   000E8C  321B               	rrcf	(??___fladd+2)^0,f,c
  9125   000E8E  321A               	rrcf	(??___fladd+1)^0,f,c
  9126   000E90  3219               	rrcf	??___fladd^0,f,c
  9127   000E92  C019  F011         	movff	??___fladd,___fladd@b
  9128   000E96  C01A  F012         	movff	??___fladd+1,___fladd@b+1
  9129   000E9A  C01B  F013         	movff	??___fladd+2,___fladd@b+2
  9130   000E9E  C01C  F014         	movff	??___fladd+3,___fladd@b+3
  9131   000EA2  281F               	incf	___fladd@bexp^0,w,c
  9132   000EA4  B4D8               	btfsc	status,2,c
  9133   000EA6  EF57  F007         	goto	u6321
  9134   000EAA  EF59  F007         	goto	u6320
  9135   000EAE                     u6321:
  9136   000EAE  EF5A  F007         	goto	l6322
  9137   000EB2                     u6320:
  9138   000EB2  2A1F               	incf	___fladd@bexp^0,f,c
  9139   000EB4                     l6322:
  9140   000EB4  281F               	incf	___fladd@bexp^0,w,c
  9141   000EB6  B4D8               	btfsc	status,2,c
  9142   000EB8  EF60  F007         	goto	u6331
  9143   000EBC  EF62  F007         	goto	u6330
  9144   000EC0                     u6331:
  9145   000EC0  EF6A  F007         	goto	l6326
  9146   000EC4                     u6330:
  9147   000EC4  501F               	movf	___fladd@bexp^0,w,c
  9148   000EC6  A4D8               	btfss	status,2,c
  9149   000EC8  EF68  F007         	goto	u6341
  9150   000ECC  EF6A  F007         	goto	u6340
  9151   000ED0                     u6341:
  9152   000ED0  EF7C  F007         	goto	l6330
  9153   000ED4                     u6340:
  9154   000ED4                     l6326:
  9155   000ED4  0E00               	movlw	0
  9156   000ED6  6E11               	movwf	___fladd@b^0,c
  9157   000ED8  0E00               	movlw	0
  9158   000EDA  6E12               	movwf	(___fladd@b+1)^0,c
  9159   000EDC  0E00               	movlw	0
  9160   000EDE  6E13               	movwf	(___fladd@b+2)^0,c
  9161   000EE0  0E00               	movlw	0
  9162   000EE2  6E14               	movwf	(___fladd@b+3)^0,c
  9163   000EE4  501F               	movf	___fladd@bexp^0,w,c
  9164   000EE6  A4D8               	btfss	status,2,c
  9165   000EE8  EF78  F007         	goto	u6351
  9166   000EEC  EF7A  F007         	goto	u6350
  9167   000EF0                     u6351:
  9168   000EF0  EF7C  F007         	goto	l6330
  9169   000EF4                     u6350:
  9170   000EF4  0E00               	movlw	0
  9171   000EF6  6E1D               	movwf	___fladd@signs^0,c
  9172   000EF8                     l6330:
  9173   000EF8  A01F               	btfss	___fladd@bexp^0,0,c
  9174   000EFA  EF81  F007         	goto	u6361
  9175   000EFE  EF83  F007         	goto	u6360
  9176   000F02                     u6361:
  9177   000F02  EF86  F007         	goto	l6334
  9178   000F06                     u6360:
  9179   000F06  8E13               	bsf	(___fladd@b+2)^0,7,c
  9180   000F08  EF87  F007         	goto	l6336
  9181   000F0C                     l6334:
  9182   000F0C  9E13               	bcf	(___fladd@b+2)^0,7,c
  9183   000F0E                     l6336:
  9184   000F0E  90D8               	bcf	status,0,c
  9185   000F10  301F               	rrcf	___fladd@bexp^0,w,c
  9186   000F12  6E14               	movwf	(___fladd@b+3)^0,c
  9187   000F14  AE1D               	btfss	___fladd@signs^0,7,c
  9188   000F16  EF8F  F007         	goto	u6371
  9189   000F1A  EF91  F007         	goto	u6370
  9190   000F1E                     u6371:
  9191   000F1E  EF92  F007         	goto	l6342
  9192   000F22                     u6370:
  9193   000F22  8E14               	bsf	(___fladd@b+3)^0,7,c
  9194   000F24                     l6342:
  9195   000F24  C011  F011         	movff	___fladd@b,?___fladd
  9196   000F28  C012  F012         	movff	___fladd@b+1,?___fladd+1
  9197   000F2C  C013  F013         	movff	___fladd@b+2,?___fladd+2
  9198   000F30  C014  F014         	movff	___fladd@b+3,?___fladd+3
  9199   000F34                     l908:
  9200   000F34  0012               	return		;funcret
  9201   000F36                     __end_of___fladd:
  9202                           	callstack 0
  9203                           
  9204 ;; *************** function ___flneg *****************
  9205 ;; Defined at:
  9206 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  f1              4   16[COMRAM] unsigned char 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  4   16[COMRAM] unsigned char 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9220 ;;      Params:         4       0       0       0       0       0       0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9223 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9224 ;;Total ram usage:        4 bytes
  9225 ;; Hardware stack levels used: 1
  9226 ;; Hardware stack levels required when called: 2
  9227 ;; This function calls:
  9228 ;;		Nothing
  9229 ;; This function is called by:
  9230 ;;		_efgtoa
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text31
  9235   004310                     __ptext31:
  9236                           	callstack 0
  9237   004310                     ___flneg:
  9238                           	callstack 23
  9239   004310  5011               	movf	___flneg@f1^0,w,c
  9240   004312  1012               	iorwf	(___flneg@f1+1)^0,w,c
  9241   004314  1013               	iorwf	(___flneg@f1+2)^0,w,c
  9242   004316  1014               	iorwf	(___flneg@f1+3)^0,w,c
  9243   004318  B4D8               	btfsc	status,2,c
  9244   00431A  EF91  F021         	goto	u6891
  9245   00431E  EF93  F021         	goto	u6890
  9246   004322                     u6891:
  9247   004322  EF9B  F021         	goto	l6676
  9248   004326                     u6890:
  9249   004326  0E00               	movlw	0
  9250   004328  1A11               	xorwf	___flneg@f1^0,f,c
  9251   00432A  0E00               	movlw	0
  9252   00432C  1A12               	xorwf	(___flneg@f1+1)^0,f,c
  9253   00432E  0E00               	movlw	0
  9254   004330  1A13               	xorwf	(___flneg@f1+2)^0,f,c
  9255   004332  0E80               	movlw	128
  9256   004334  1A14               	xorwf	(___flneg@f1+3)^0,f,c
  9257   004336                     l6676:
  9258   004336  C011  F011         	movff	___flneg@f1,?___flneg
  9259   00433A  C012  F012         	movff	___flneg@f1+1,?___flneg+1
  9260   00433E  C013  F013         	movff	___flneg@f1+2,?___flneg+2
  9261   004342  C014  F014         	movff	___flneg@f1+3,?___flneg+3
  9262   004346  0012               	return		;funcret
  9263   004348                     __end_of___flneg:
  9264                           	callstack 0
  9265                           
  9266 ;; *************** function ___flmul *****************
  9267 ;; Defined at:
  9268 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  b               4   16[COMRAM] unsigned char 
  9271 ;;  a               4   20[COMRAM] unsigned char 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  prod            4   35[COMRAM] struct .
  9274 ;;  grs             4   30[COMRAM] unsigned long 
  9275 ;;  temp            2   39[COMRAM] struct .
  9276 ;;  bexp            1   34[COMRAM] unsigned char 
  9277 ;;  aexp            1   29[COMRAM] unsigned char 
  9278 ;;  sign            1   28[COMRAM] unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  4   16[COMRAM] unsigned char 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0, prodl, prodh
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9288 ;;      Params:         8       0       0       0       0       0       0       0       0
  9289 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9290 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9291 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9292 ;;Total ram usage:       25 bytes
  9293 ;; Hardware stack levels used: 1
  9294 ;; Hardware stack levels required when called: 2
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		_FILL
  9299 ;;		_efgtoa
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text32
  9304   001C9C                     __ptext32:
  9305                           	callstack 0
  9306   001C9C                     ___flmul:
  9307                           	callstack 23
  9308   001C9C  5014               	movf	(___flmul@b+3)^0,w,c
  9309   001C9E  0B80               	andlw	128
  9310   001CA0  6E1D               	movwf	___flmul@sign^0,c
  9311   001CA2  5014               	movf	(___flmul@b+3)^0,w,c
  9312   001CA4  2414               	addwf	(___flmul@b+3)^0,w,c
  9313   001CA6  6E23               	movwf	___flmul@bexp^0,c
  9314   001CA8  AE13               	btfss	(___flmul@b+2)^0,7,c
  9315   001CAA  EF59  F00E         	goto	u6621
  9316   001CAE  EF5B  F00E         	goto	u6620
  9317   001CB2                     u6621:
  9318   001CB2  EF5C  F00E         	goto	l6504
  9319   001CB6                     u6620:
  9320   001CB6  8023               	bsf	___flmul@bexp^0,0,c
  9321   001CB8                     l6504:
  9322   001CB8  5023               	movf	___flmul@bexp^0,w,c
  9323   001CBA  B4D8               	btfsc	status,2,c
  9324   001CBC  EF62  F00E         	goto	u6631
  9325   001CC0  EF64  F00E         	goto	u6630
  9326   001CC4                     u6631:
  9327   001CC4  EF77  F00E         	goto	l6512
  9328   001CC8                     u6630:
  9329   001CC8  2823               	incf	___flmul@bexp^0,w,c
  9330   001CCA  A4D8               	btfss	status,2,c
  9331   001CCC  EF6A  F00E         	goto	u6641
  9332   001CD0  EF6C  F00E         	goto	u6640
  9333   001CD4                     u6641:
  9334   001CD4  EF74  F00E         	goto	l6510
  9335   001CD8                     u6640:
  9336   001CD8  0E00               	movlw	0
  9337   001CDA  6E11               	movwf	___flmul@b^0,c
  9338   001CDC  0E00               	movlw	0
  9339   001CDE  6E12               	movwf	(___flmul@b+1)^0,c
  9340   001CE0  0E00               	movlw	0
  9341   001CE2  6E13               	movwf	(___flmul@b+2)^0,c
  9342   001CE4  0E00               	movlw	0
  9343   001CE6  6E14               	movwf	(___flmul@b+3)^0,c
  9344   001CE8                     l6510:
  9345   001CE8  8E13               	bsf	(___flmul@b+2)^0,7,c
  9346   001CEA  EF7F  F00E         	goto	l6514
  9347   001CEE                     l6512:
  9348   001CEE  0E00               	movlw	0
  9349   001CF0  6E11               	movwf	___flmul@b^0,c
  9350   001CF2  0E00               	movlw	0
  9351   001CF4  6E12               	movwf	(___flmul@b+1)^0,c
  9352   001CF6  0E00               	movlw	0
  9353   001CF8  6E13               	movwf	(___flmul@b+2)^0,c
  9354   001CFA  0E00               	movlw	0
  9355   001CFC  6E14               	movwf	(___flmul@b+3)^0,c
  9356   001CFE                     l6514:
  9357   001CFE  5018               	movf	(___flmul@a+3)^0,w,c
  9358   001D00  0B80               	andlw	128
  9359   001D02  1A1D               	xorwf	___flmul@sign^0,f,c
  9360   001D04  5018               	movf	(___flmul@a+3)^0,w,c
  9361   001D06  2418               	addwf	(___flmul@a+3)^0,w,c
  9362   001D08  6E1E               	movwf	___flmul@aexp^0,c
  9363   001D0A  AE17               	btfss	(___flmul@a+2)^0,7,c
  9364   001D0C  EF8A  F00E         	goto	u6651
  9365   001D10  EF8C  F00E         	goto	u6650
  9366   001D14                     u6651:
  9367   001D14  EF8D  F00E         	goto	l6522
  9368   001D18                     u6650:
  9369   001D18  801E               	bsf	___flmul@aexp^0,0,c
  9370   001D1A                     l6522:
  9371   001D1A  501E               	movf	___flmul@aexp^0,w,c
  9372   001D1C  B4D8               	btfsc	status,2,c
  9373   001D1E  EF93  F00E         	goto	u6661
  9374   001D22  EF95  F00E         	goto	u6660
  9375   001D26                     u6661:
  9376   001D26  EFA8  F00E         	goto	l6530
  9377   001D2A                     u6660:
  9378   001D2A  281E               	incf	___flmul@aexp^0,w,c
  9379   001D2C  A4D8               	btfss	status,2,c
  9380   001D2E  EF9B  F00E         	goto	u6671
  9381   001D32  EF9D  F00E         	goto	u6670
  9382   001D36                     u6671:
  9383   001D36  EFA5  F00E         	goto	l6528
  9384   001D3A                     u6670:
  9385   001D3A  0E00               	movlw	0
  9386   001D3C  6E15               	movwf	___flmul@a^0,c
  9387   001D3E  0E00               	movlw	0
  9388   001D40  6E16               	movwf	(___flmul@a+1)^0,c
  9389   001D42  0E00               	movlw	0
  9390   001D44  6E17               	movwf	(___flmul@a+2)^0,c
  9391   001D46  0E00               	movlw	0
  9392   001D48  6E18               	movwf	(___flmul@a+3)^0,c
  9393   001D4A                     l6528:
  9394   001D4A  8E17               	bsf	(___flmul@a+2)^0,7,c
  9395   001D4C  EFB0  F00E         	goto	l985
  9396   001D50                     l6530:
  9397   001D50  0E00               	movlw	0
  9398   001D52  6E15               	movwf	___flmul@a^0,c
  9399   001D54  0E00               	movlw	0
  9400   001D56  6E16               	movwf	(___flmul@a+1)^0,c
  9401   001D58  0E00               	movlw	0
  9402   001D5A  6E17               	movwf	(___flmul@a+2)^0,c
  9403   001D5C  0E00               	movlw	0
  9404   001D5E  6E18               	movwf	(___flmul@a+3)^0,c
  9405   001D60                     l985:
  9406   001D60  501E               	movf	___flmul@aexp^0,w,c
  9407   001D62  B4D8               	btfsc	status,2,c
  9408   001D64  EFB6  F00E         	goto	u6681
  9409   001D68  EFB8  F00E         	goto	u6680
  9410   001D6C                     u6681:
  9411   001D6C  EFC0  F00E         	goto	l6534
  9412   001D70                     u6680:
  9413   001D70  5023               	movf	___flmul@bexp^0,w,c
  9414   001D72  A4D8               	btfss	status,2,c
  9415   001D74  EFBE  F00E         	goto	u6691
  9416   001D78  EFC0  F00E         	goto	u6690
  9417   001D7C                     u6691:
  9418   001D7C  EFCA  F00E         	goto	l6538
  9419   001D80                     u6690:
  9420   001D80                     l6534:
  9421   001D80  0E00               	movlw	0
  9422   001D82  6E11               	movwf	?___flmul^0,c
  9423   001D84  0E00               	movlw	0
  9424   001D86  6E12               	movwf	(?___flmul+1)^0,c
  9425   001D88  0E00               	movlw	0
  9426   001D8A  6E13               	movwf	(?___flmul+2)^0,c
  9427   001D8C  0E00               	movlw	0
  9428   001D8E  6E14               	movwf	(?___flmul+3)^0,c
  9429   001D90  EF62  F010         	goto	l989
  9430   001D94                     l6538:
  9431   001D94  5017               	movf	(___flmul@a+2)^0,w,c
  9432   001D96  0211               	mulwf	___flmul@b^0,c
  9433   001D98  CFF3 F028          	movff	prodl,___flmul@temp
  9434   001D9C  CFF4 F029          	movff	prodh,___flmul@temp+1
  9435   001DA0  5028               	movf	___flmul@temp^0,w,c
  9436   001DA2  6E1F               	movwf	___flmul@grs^0,c
  9437   001DA4  6A20               	clrf	(___flmul@grs+1)^0,c
  9438   001DA6  6A21               	clrf	(___flmul@grs+2)^0,c
  9439   001DA8  6A22               	clrf	(___flmul@grs+3)^0,c
  9440   001DAA  5029               	movf	(___flmul@temp+1)^0,w,c
  9441   001DAC  6E24               	movwf	___flmul@prod^0,c
  9442   001DAE  6A25               	clrf	(___flmul@prod+1)^0,c
  9443   001DB0  6A26               	clrf	(___flmul@prod+2)^0,c
  9444   001DB2  6A27               	clrf	(___flmul@prod+3)^0,c
  9445   001DB4  5016               	movf	(___flmul@a+1)^0,w,c
  9446   001DB6  0212               	mulwf	(___flmul@b+1)^0,c
  9447   001DB8  CFF3 F028          	movff	prodl,___flmul@temp
  9448   001DBC  CFF4 F029          	movff	prodh,___flmul@temp+1
  9449   001DC0  5028               	movf	___flmul@temp^0,w,c
  9450   001DC2  261F               	addwf	___flmul@grs^0,f,c
  9451   001DC4  0E00               	movlw	0
  9452   001DC6  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9453   001DC8  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9454   001DCA  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9455   001DCC  5029               	movf	(___flmul@temp+1)^0,w,c
  9456   001DCE  2624               	addwf	___flmul@prod^0,f,c
  9457   001DD0  0E00               	movlw	0
  9458   001DD2  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9459   001DD4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9460   001DD6  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9461   001DD8  5015               	movf	___flmul@a^0,w,c
  9462   001DDA  0213               	mulwf	(___flmul@b+2)^0,c
  9463   001DDC  CFF3 F028          	movff	prodl,___flmul@temp
  9464   001DE0  CFF4 F029          	movff	prodh,___flmul@temp+1
  9465   001DE4  5028               	movf	___flmul@temp^0,w,c
  9466   001DE6  261F               	addwf	___flmul@grs^0,f,c
  9467   001DE8  0E00               	movlw	0
  9468   001DEA  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9469   001DEC  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9470   001DEE  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9471   001DF0  5029               	movf	(___flmul@temp+1)^0,w,c
  9472   001DF2  2624               	addwf	___flmul@prod^0,f,c
  9473   001DF4  0E00               	movlw	0
  9474   001DF6  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9475   001DF8  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9476   001DFA  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9477   001DFC  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9478   001E00  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9479   001E04  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9480   001E08  6A1F               	clrf	___flmul@grs^0,c
  9481   001E0A  5015               	movf	___flmul@a^0,w,c
  9482   001E0C  0212               	mulwf	(___flmul@b+1)^0,c
  9483   001E0E  CFF3 F028          	movff	prodl,___flmul@temp
  9484   001E12  CFF4 F029          	movff	prodh,___flmul@temp+1
  9485   001E16  5028               	movf	___flmul@temp^0,w,c
  9486   001E18  261F               	addwf	___flmul@grs^0,f,c
  9487   001E1A  5029               	movf	(___flmul@temp+1)^0,w,c
  9488   001E1C  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9489   001E1E  0E00               	movlw	0
  9490   001E20  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9491   001E22  0E00               	movlw	0
  9492   001E24  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9493   001E26  5016               	movf	(___flmul@a+1)^0,w,c
  9494   001E28  0211               	mulwf	___flmul@b^0,c
  9495   001E2A  CFF3 F028          	movff	prodl,___flmul@temp
  9496   001E2E  CFF4 F029          	movff	prodh,___flmul@temp+1
  9497   001E32  5028               	movf	___flmul@temp^0,w,c
  9498   001E34  261F               	addwf	___flmul@grs^0,f,c
  9499   001E36  5029               	movf	(___flmul@temp+1)^0,w,c
  9500   001E38  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9501   001E3A  0E00               	movlw	0
  9502   001E3C  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9503   001E3E  0E00               	movlw	0
  9504   001E40  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9505   001E42  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9506   001E46  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9507   001E4A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9508   001E4E  6A1F               	clrf	___flmul@grs^0,c
  9509   001E50  5015               	movf	___flmul@a^0,w,c
  9510   001E52  0211               	mulwf	___flmul@b^0,c
  9511   001E54  CFF3 F028          	movff	prodl,___flmul@temp
  9512   001E58  CFF4 F029          	movff	prodh,___flmul@temp+1
  9513   001E5C  5028               	movf	___flmul@temp^0,w,c
  9514   001E5E  261F               	addwf	___flmul@grs^0,f,c
  9515   001E60  5029               	movf	(___flmul@temp+1)^0,w,c
  9516   001E62  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9517   001E64  0E00               	movlw	0
  9518   001E66  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9519   001E68  0E00               	movlw	0
  9520   001E6A  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9521   001E6C  5017               	movf	(___flmul@a+2)^0,w,c
  9522   001E6E  0212               	mulwf	(___flmul@b+1)^0,c
  9523   001E70  CFF3 F028          	movff	prodl,___flmul@temp
  9524   001E74  CFF4 F029          	movff	prodh,___flmul@temp+1
  9525   001E78  5028               	movf	___flmul@temp^0,w,c
  9526   001E7A  2624               	addwf	___flmul@prod^0,f,c
  9527   001E7C  5029               	movf	(___flmul@temp+1)^0,w,c
  9528   001E7E  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9529   001E80  0E00               	movlw	0
  9530   001E82  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9531   001E84  0E00               	movlw	0
  9532   001E86  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9533   001E88  5016               	movf	(___flmul@a+1)^0,w,c
  9534   001E8A  0213               	mulwf	(___flmul@b+2)^0,c
  9535   001E8C  CFF3 F028          	movff	prodl,___flmul@temp
  9536   001E90  CFF4 F029          	movff	prodh,___flmul@temp+1
  9537   001E94  5028               	movf	___flmul@temp^0,w,c
  9538   001E96  2624               	addwf	___flmul@prod^0,f,c
  9539   001E98  5029               	movf	(___flmul@temp+1)^0,w,c
  9540   001E9A  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9541   001E9C  0E00               	movlw	0
  9542   001E9E  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9543   001EA0  0E00               	movlw	0
  9544   001EA2  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9545   001EA4  5017               	movf	(___flmul@a+2)^0,w,c
  9546   001EA6  0213               	mulwf	(___flmul@b+2)^0,c
  9547   001EA8  CFF3 F028          	movff	prodl,___flmul@temp
  9548   001EAC  CFF4 F029          	movff	prodh,___flmul@temp+1
  9549   001EB0  5028               	movf	___flmul@temp^0,w,c
  9550   001EB2  6E19               	movwf	??___flmul^0,c
  9551   001EB4  5029               	movf	(___flmul@temp+1)^0,w,c
  9552   001EB6  6E1A               	movwf	(??___flmul+1)^0,c
  9553   001EB8  6A1B               	clrf	(??___flmul+2)^0,c
  9554   001EBA  6A1C               	clrf	(??___flmul+3)^0,c
  9555   001EBC  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  9556   001EC0  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  9557   001EC4  C019  F01A         	movff	??___flmul,??___flmul+1
  9558   001EC8  6A19               	clrf	??___flmul^0,c
  9559   001ECA  5019               	movf	??___flmul^0,w,c
  9560   001ECC  2624               	addwf	___flmul@prod^0,f,c
  9561   001ECE  501A               	movf	(??___flmul+1)^0,w,c
  9562   001ED0  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9563   001ED2  501B               	movf	(??___flmul+2)^0,w,c
  9564   001ED4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9565   001ED6  501C               	movf	(??___flmul+3)^0,w,c
  9566   001ED8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9567   001EDA  C01F  F019         	movff	___flmul@grs,??___flmul
  9568   001EDE  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
  9569   001EE2  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
  9570   001EE6  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
  9571   001EEA  0E19               	movlw	25
  9572   001EEC  EF7D  F00F         	goto	u6700
  9573   001EF0                     u6705:
  9574   001EF0  90D8               	bcf	status,0,c
  9575   001EF2  321C               	rrcf	(??___flmul+3)^0,f,c
  9576   001EF4  321B               	rrcf	(??___flmul+2)^0,f,c
  9577   001EF6  321A               	rrcf	(??___flmul+1)^0,f,c
  9578   001EF8  3219               	rrcf	??___flmul^0,f,c
  9579   001EFA                     u6700:
  9580   001EFA  2EE8               	decfsz	wreg,f,c
  9581   001EFC  EF78  F00F         	goto	u6705
  9582   001F00  5019               	movf	??___flmul^0,w,c
  9583   001F02  2624               	addwf	___flmul@prod^0,f,c
  9584   001F04  501A               	movf	(??___flmul+1)^0,w,c
  9585   001F06  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9586   001F08  501B               	movf	(??___flmul+2)^0,w,c
  9587   001F0A  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9588   001F0C  501C               	movf	(??___flmul+3)^0,w,c
  9589   001F0E  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9590   001F10  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9591   001F14  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9592   001F18  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9593   001F1C  6A1F               	clrf	___flmul@grs^0,c
  9594   001F1E  501E               	movf	___flmul@aexp^0,w,c
  9595   001F20  C023  F019         	movff	___flmul@bexp,??___flmul
  9596   001F24  6A1A               	clrf	(??___flmul+1)^0,c
  9597   001F26  2619               	addwf	??___flmul^0,f,c
  9598   001F28  0E00               	movlw	0
  9599   001F2A  221A               	addwfc	(??___flmul+1)^0,f,c
  9600   001F2C  0E82               	movlw	130
  9601   001F2E  2419               	addwf	??___flmul^0,w,c
  9602   001F30  6E28               	movwf	___flmul@temp^0,c
  9603   001F32  0EFF               	movlw	255
  9604   001F34  201A               	addwfc	(??___flmul+1)^0,w,c
  9605   001F36  6E29               	movwf	(___flmul@temp+1)^0,c
  9606   001F38  EFB3  F00F         	goto	l6586
  9607   001F3C                     l6580:
  9608   001F3C  90D8               	bcf	status,0,c
  9609   001F3E  3624               	rlcf	___flmul@prod^0,f,c
  9610   001F40  3625               	rlcf	(___flmul@prod+1)^0,f,c
  9611   001F42  3626               	rlcf	(___flmul@prod+2)^0,f,c
  9612   001F44  3627               	rlcf	(___flmul@prod+3)^0,f,c
  9613   001F46  AE22               	btfss	(___flmul@grs+3)^0,7,c
  9614   001F48  EFA8  F00F         	goto	u6711
  9615   001F4C  EFAA  F00F         	goto	u6710
  9616   001F50                     u6711:
  9617   001F50  EFAB  F00F         	goto	l992
  9618   001F54                     u6710:
  9619   001F54  8024               	bsf	___flmul@prod^0,0,c
  9620   001F56                     l992:
  9621   001F56  90D8               	bcf	status,0,c
  9622   001F58  361F               	rlcf	___flmul@grs^0,f,c
  9623   001F5A  3620               	rlcf	(___flmul@grs+1)^0,f,c
  9624   001F5C  3621               	rlcf	(___flmul@grs+2)^0,f,c
  9625   001F5E  3622               	rlcf	(___flmul@grs+3)^0,f,c
  9626   001F60  0628               	decf	___flmul@temp^0,f,c
  9627   001F62  A0D8               	btfss	status,0,c
  9628   001F64  0629               	decf	(___flmul@temp+1)^0,f,c
  9629   001F66                     l6586:
  9630   001F66  AE26               	btfss	(___flmul@prod+2)^0,7,c
  9631   001F68  EFB8  F00F         	goto	u6721
  9632   001F6C  EFBA  F00F         	goto	u6720
  9633   001F70                     u6721:
  9634   001F70  EF9E  F00F         	goto	l6580
  9635   001F74                     u6720:
  9636   001F74  0E00               	movlw	0
  9637   001F76  6E1E               	movwf	___flmul@aexp^0,c
  9638   001F78  AE22               	btfss	(___flmul@grs+3)^0,7,c
  9639   001F7A  EFC1  F00F         	goto	u6731
  9640   001F7E  EFC3  F00F         	goto	u6730
  9641   001F82                     u6731:
  9642   001F82  EFE7  F00F         	goto	l994
  9643   001F86                     u6730:
  9644   001F86  0EFF               	movlw	255
  9645   001F88  141F               	andwf	___flmul@grs^0,w,c
  9646   001F8A  6E19               	movwf	??___flmul^0,c
  9647   001F8C  0EFF               	movlw	255
  9648   001F8E  1420               	andwf	(___flmul@grs+1)^0,w,c
  9649   001F90  6E1A               	movwf	(??___flmul+1)^0,c
  9650   001F92  0EFF               	movlw	255
  9651   001F94  1421               	andwf	(___flmul@grs+2)^0,w,c
  9652   001F96  6E1B               	movwf	(??___flmul+2)^0,c
  9653   001F98  0E7F               	movlw	127
  9654   001F9A  1422               	andwf	(___flmul@grs+3)^0,w,c
  9655   001F9C  6E1C               	movwf	(??___flmul+3)^0,c
  9656   001F9E  5019               	movf	??___flmul^0,w,c
  9657   001FA0  101A               	iorwf	(??___flmul+1)^0,w,c
  9658   001FA2  101B               	iorwf	(??___flmul+2)^0,w,c
  9659   001FA4  101C               	iorwf	(??___flmul+3)^0,w,c
  9660   001FA6  B4D8               	btfsc	status,2,c
  9661   001FA8  EFD8  F00F         	goto	u6741
  9662   001FAC  EFDA  F00F         	goto	u6740
  9663   001FB0                     u6741:
  9664   001FB0  EFDE  F00F         	goto	l995
  9665   001FB4                     u6740:
  9666   001FB4                     l6594:
  9667   001FB4  0E01               	movlw	1
  9668   001FB6  6E1E               	movwf	___flmul@aexp^0,c
  9669   001FB8  EFE7  F00F         	goto	l994
  9670   001FBC                     l995:
  9671   001FBC  A024               	btfss	___flmul@prod^0,0,c
  9672   001FBE  EFE3  F00F         	goto	u6751
  9673   001FC2  EFE5  F00F         	goto	u6750
  9674   001FC6                     u6751:
  9675   001FC6  EFE7  F00F         	goto	l994
  9676   001FCA                     u6750:
  9677   001FCA  EFDA  F00F         	goto	l6594
  9678   001FCE                     l994:
  9679   001FCE  501E               	movf	___flmul@aexp^0,w,c
  9680   001FD0  B4D8               	btfsc	status,2,c
  9681   001FD2  EFED  F00F         	goto	u6761
  9682   001FD6  EFEF  F00F         	goto	u6760
  9683   001FDA                     u6761:
  9684   001FDA  EF13  F010         	goto	l6606
  9685   001FDE                     u6760:
  9686   001FDE  0E01               	movlw	1
  9687   001FE0  2624               	addwf	___flmul@prod^0,f,c
  9688   001FE2  0E00               	movlw	0
  9689   001FE4  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9690   001FE6  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9691   001FE8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9692   001FEA  A027               	btfss	(___flmul@prod+3)^0,0,c
  9693   001FEC  EFFA  F00F         	goto	u6771
  9694   001FF0  EFFC  F00F         	goto	u6770
  9695   001FF4                     u6771:
  9696   001FF4  EF13  F010         	goto	l6606
  9697   001FF8                     u6770:
  9698   001FF8  C024  F019         	movff	___flmul@prod,??___flmul
  9699   001FFC  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  9700   002000  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  9701   002004  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  9702   002008  341C               	rlcf	(??___flmul+3)^0,w,c
  9703   00200A  321C               	rrcf	(??___flmul+3)^0,f,c
  9704   00200C  321B               	rrcf	(??___flmul+2)^0,f,c
  9705   00200E  321A               	rrcf	(??___flmul+1)^0,f,c
  9706   002010  3219               	rrcf	??___flmul^0,f,c
  9707   002012  C019  F024         	movff	??___flmul,___flmul@prod
  9708   002016  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  9709   00201A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  9710   00201E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  9711   002022  4A28               	infsnz	___flmul@temp^0,f,c
  9712   002024  2A29               	incf	(___flmul@temp+1)^0,f,c
  9713   002026                     l6606:
  9714   002026  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  9715   002028  EF1E  F010         	goto	u6781
  9716   00202C  5029               	movf	(___flmul@temp+1)^0,w,c
  9717   00202E  E108               	bnz	u6780
  9718   002030  2828               	incf	___flmul@temp^0,w,c
  9719   002032  A0D8               	btfss	status,0,c
  9720   002034  EF1E  F010         	goto	u6781
  9721   002038  EF20  F010         	goto	u6780
  9722   00203C                     u6781:
  9723   00203C  EF2A  F010         	goto	l6610
  9724   002040                     u6780:
  9725   002040  0E00               	movlw	0
  9726   002042  6E24               	movwf	___flmul@prod^0,c
  9727   002044  0E00               	movlw	0
  9728   002046  6E25               	movwf	(___flmul@prod+1)^0,c
  9729   002048  0E80               	movlw	128
  9730   00204A  6E26               	movwf	(___flmul@prod+2)^0,c
  9731   00204C  0E7F               	movlw	127
  9732   00204E  6E27               	movwf	(___flmul@prod+3)^0,c
  9733   002050  EF58  F010         	goto	l6622
  9734   002054                     l6610:
  9735   002054  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  9736   002056  EF37  F010         	goto	u6790
  9737   00205A  5029               	movf	(___flmul@temp+1)^0,w,c
  9738   00205C  E106               	bnz	u6791
  9739   00205E  0428               	decf	___flmul@temp^0,w,c
  9740   002060  B0D8               	btfsc	status,0,c
  9741   002062  EF35  F010         	goto	u6791
  9742   002066  EF37  F010         	goto	u6790
  9743   00206A                     u6791:
  9744   00206A  EF43  F010         	goto	l1002
  9745   00206E                     u6790:
  9746   00206E  0E00               	movlw	0
  9747   002070  6E24               	movwf	___flmul@prod^0,c
  9748   002072  0E00               	movlw	0
  9749   002074  6E25               	movwf	(___flmul@prod+1)^0,c
  9750   002076  0E00               	movlw	0
  9751   002078  6E26               	movwf	(___flmul@prod+2)^0,c
  9752   00207A  0E00               	movlw	0
  9753   00207C  6E27               	movwf	(___flmul@prod+3)^0,c
  9754   00207E  0E00               	movlw	0
  9755   002080  6E1D               	movwf	___flmul@sign^0,c
  9756   002082  EF58  F010         	goto	l6622
  9757   002086                     l1002:
  9758   002086  C028  F023         	movff	___flmul@temp,___flmul@bexp
  9759   00208A  0EFF               	movlw	255
  9760   00208C  1624               	andwf	___flmul@prod^0,f,c
  9761   00208E  0EFF               	movlw	255
  9762   002090  1625               	andwf	(___flmul@prod+1)^0,f,c
  9763   002092  0E7F               	movlw	127
  9764   002094  1626               	andwf	(___flmul@prod+2)^0,f,c
  9765   002096  0E00               	movlw	0
  9766   002098  1627               	andwf	(___flmul@prod+3)^0,f,c
  9767   00209A  A023               	btfss	___flmul@bexp^0,0,c
  9768   00209C  EF52  F010         	goto	u6801
  9769   0020A0  EF54  F010         	goto	u6800
  9770   0020A4                     u6801:
  9771   0020A4  EF55  F010         	goto	l6620
  9772   0020A8                     u6800:
  9773   0020A8  8E26               	bsf	(___flmul@prod+2)^0,7,c
  9774   0020AA                     l6620:
  9775   0020AA  90D8               	bcf	status,0,c
  9776   0020AC  3023               	rrcf	___flmul@bexp^0,w,c
  9777   0020AE  6E27               	movwf	(___flmul@prod+3)^0,c
  9778   0020B0                     l6622:
  9779   0020B0  501D               	movf	___flmul@sign^0,w,c
  9780   0020B2  1227               	iorwf	(___flmul@prod+3)^0,f,c
  9781   0020B4  C024  F011         	movff	___flmul@prod,?___flmul
  9782   0020B8  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  9783   0020BC  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  9784   0020C0  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  9785   0020C4                     l989:
  9786   0020C4  0012               	return		;funcret
  9787   0020C6                     __end_of___flmul:
  9788                           	callstack 0
  9789                           
  9790 ;; *************** function ___flge *****************
  9791 ;; Defined at:
  9792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  ff1             4   41[COMRAM] unsigned char 
  9795 ;;  ff2             4   45[COMRAM] unsigned char 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;		None               void
  9800 ;; Registers used:
  9801 ;;		wreg, status,2, status,0
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9807 ;;      Params:         8       0       0       0       0       0       0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9809 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9810 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9811 ;;Total ram usage:       12 bytes
  9812 ;; Hardware stack levels used: 1
  9813 ;; Hardware stack levels required when called: 2
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_FILL
  9818 ;;		_efgtoa
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text33
  9823   00373A                     __ptext33:
  9824                           	callstack 0
  9825   00373A                     ___flge:
  9826                           	callstack 23
  9827   00373A  0E00               	movlw	0
  9828   00373C  142A               	andwf	___flge@ff1^0,w,c
  9829   00373E  6E32               	movwf	??___flge^0,c
  9830   003740  0E00               	movlw	0
  9831   003742  142B               	andwf	(___flge@ff1+1)^0,w,c
  9832   003744  6E33               	movwf	(??___flge+1)^0,c
  9833   003746  0E80               	movlw	128
  9834   003748  142C               	andwf	(___flge@ff1+2)^0,w,c
  9835   00374A  6E34               	movwf	(??___flge+2)^0,c
  9836   00374C  0E7F               	movlw	127
  9837   00374E  142D               	andwf	(___flge@ff1+3)^0,w,c
  9838   003750  6E35               	movwf	(??___flge+3)^0,c
  9839   003752  5032               	movf	??___flge^0,w,c
  9840   003754  1033               	iorwf	(??___flge+1)^0,w,c
  9841   003756  1034               	iorwf	(??___flge+2)^0,w,c
  9842   003758  1035               	iorwf	(??___flge+3)^0,w,c
  9843   00375A  A4D8               	btfss	status,2,c
  9844   00375C  EFB2  F01B         	goto	u6841
  9845   003760  EFB4  F01B         	goto	u6840
  9846   003764                     u6841:
  9847   003764  EFBC  F01B         	goto	l6654
  9848   003768                     u6840:
  9849   003768  0E00               	movlw	0
  9850   00376A  6E2A               	movwf	___flge@ff1^0,c
  9851   00376C  0E00               	movlw	0
  9852   00376E  6E2B               	movwf	(___flge@ff1+1)^0,c
  9853   003770  0E00               	movlw	0
  9854   003772  6E2C               	movwf	(___flge@ff1+2)^0,c
  9855   003774  0E00               	movlw	0
  9856   003776  6E2D               	movwf	(___flge@ff1+3)^0,c
  9857   003778                     l6654:
  9858   003778  0E00               	movlw	0
  9859   00377A  142E               	andwf	___flge@ff2^0,w,c
  9860   00377C  6E32               	movwf	??___flge^0,c
  9861   00377E  0E00               	movlw	0
  9862   003780  142F               	andwf	(___flge@ff2+1)^0,w,c
  9863   003782  6E33               	movwf	(??___flge+1)^0,c
  9864   003784  0E80               	movlw	128
  9865   003786  1430               	andwf	(___flge@ff2+2)^0,w,c
  9866   003788  6E34               	movwf	(??___flge+2)^0,c
  9867   00378A  0E7F               	movlw	127
  9868   00378C  1431               	andwf	(___flge@ff2+3)^0,w,c
  9869   00378E  6E35               	movwf	(??___flge+3)^0,c
  9870   003790  5032               	movf	??___flge^0,w,c
  9871   003792  1033               	iorwf	(??___flge+1)^0,w,c
  9872   003794  1034               	iorwf	(??___flge+2)^0,w,c
  9873   003796  1035               	iorwf	(??___flge+3)^0,w,c
  9874   003798  A4D8               	btfss	status,2,c
  9875   00379A  EFD1  F01B         	goto	u6851
  9876   00379E  EFD3  F01B         	goto	u6850
  9877   0037A2                     u6851:
  9878   0037A2  EFDB  F01B         	goto	l6658
  9879   0037A6                     u6850:
  9880   0037A6  0E00               	movlw	0
  9881   0037A8  6E2E               	movwf	___flge@ff2^0,c
  9882   0037AA  0E00               	movlw	0
  9883   0037AC  6E2F               	movwf	(___flge@ff2+1)^0,c
  9884   0037AE  0E00               	movlw	0
  9885   0037B0  6E30               	movwf	(___flge@ff2+2)^0,c
  9886   0037B2  0E00               	movlw	0
  9887   0037B4  6E31               	movwf	(___flge@ff2+3)^0,c
  9888   0037B6                     l6658:
  9889   0037B6  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  9890   0037B8  EFE0  F01B         	goto	u6861
  9891   0037BC  EFE2  F01B         	goto	u6860
  9892   0037C0                     u6861:
  9893   0037C0  EFEB  F01B         	goto	l6662
  9894   0037C4                     u6860:
  9895   0037C4  6C2A               	negf	___flge@ff1^0,c
  9896   0037C6  1E2B               	comf	(___flge@ff1+1)^0,f,c
  9897   0037C8  B0D8               	btfsc	status,0,c
  9898   0037CA  2A2B               	incf	(___flge@ff1+1)^0,f,c
  9899   0037CC  1E2C               	comf	(___flge@ff1+2)^0,f,c
  9900   0037CE  B0D8               	btfsc	status,0,c
  9901   0037D0  2A2C               	incf	(___flge@ff1+2)^0,f,c
  9902   0037D2  0E80               	movlw	128
  9903   0037D4  562D               	subfwb	(___flge@ff1+3)^0,f,c
  9904   0037D6                     l6662:
  9905   0037D6  AE31               	btfss	(___flge@ff2+3)^0,7,c
  9906   0037D8  EFF0  F01B         	goto	u6871
  9907   0037DC  EFF2  F01B         	goto	u6870
  9908   0037E0                     u6871:
  9909   0037E0  EFFB  F01B         	goto	l636
  9910   0037E4                     u6870:
  9911   0037E4  6C2E               	negf	___flge@ff2^0,c
  9912   0037E6  1E2F               	comf	(___flge@ff2+1)^0,f,c
  9913   0037E8  B0D8               	btfsc	status,0,c
  9914   0037EA  2A2F               	incf	(___flge@ff2+1)^0,f,c
  9915   0037EC  1E30               	comf	(___flge@ff2+2)^0,f,c
  9916   0037EE  B0D8               	btfsc	status,0,c
  9917   0037F0  2A30               	incf	(___flge@ff2+2)^0,f,c
  9918   0037F2  0E80               	movlw	128
  9919   0037F4  5631               	subfwb	(___flge@ff2+3)^0,f,c
  9920   0037F6                     l636:
  9921   0037F6  0E00               	movlw	0
  9922   0037F8  1A2A               	xorwf	___flge@ff1^0,f,c
  9923   0037FA  0E00               	movlw	0
  9924   0037FC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  9925   0037FE  0E00               	movlw	0
  9926   003800  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  9927   003802  0E80               	movlw	128
  9928   003804  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  9929   003806  0E00               	movlw	0
  9930   003808  1A2E               	xorwf	___flge@ff2^0,f,c
  9931   00380A  0E00               	movlw	0
  9932   00380C  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  9933   00380E  0E00               	movlw	0
  9934   003810  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  9935   003812  0E80               	movlw	128
  9936   003814  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  9937   003816  502E               	movf	___flge@ff2^0,w,c
  9938   003818  5C2A               	subwf	___flge@ff1^0,w,c
  9939   00381A  502F               	movf	(___flge@ff2+1)^0,w,c
  9940   00381C  582B               	subwfb	(___flge@ff1+1)^0,w,c
  9941   00381E  5030               	movf	(___flge@ff2+2)^0,w,c
  9942   003820  582C               	subwfb	(___flge@ff1+2)^0,w,c
  9943   003822  5031               	movf	(___flge@ff2+3)^0,w,c
  9944   003824  582D               	subwfb	(___flge@ff1+3)^0,w,c
  9945   003826  B0D8               	btfsc	status,0,c
  9946   003828  EF18  F01C         	goto	u6881
  9947   00382C  EF1A  F01C         	goto	u6880
  9948   003830                     u6881:
  9949   003830  EF1D  F01C         	goto	l6668
  9950   003834                     u6880:
  9951   003834  90D8               	bcf	status,0,c
  9952   003836  EF1E  F01C         	goto	l641
  9953   00383A                     l6668:
  9954   00383A  80D8               	bsf	status,0,c
  9955   00383C                     l641:
  9956   00383C  0012               	return		;funcret
  9957   00383E                     __end_of___flge:
  9958                           	callstack 0
  9959                           
  9960 ;; *************** function ___fleq *****************
  9961 ;; Defined at:
  9962 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  ff1             4   16[COMRAM] unsigned char 
  9965 ;;  ff2             4   20[COMRAM] unsigned char 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;		None               void
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9977 ;;      Params:         8       0       0       0       0       0       0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9979 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9980 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9981 ;;Total ram usage:       12 bytes
  9982 ;; Hardware stack levels used: 1
  9983 ;; Hardware stack levels required when called: 2
  9984 ;; This function calls:
  9985 ;;		Nothing
  9986 ;; This function is called by:
  9987 ;;		_efgtoa
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text34
  9992   003D82                     __ptext34:
  9993                           	callstack 0
  9994   003D82                     ___fleq:
  9995                           	callstack 23
  9996   003D82  0E00               	movlw	0
  9997   003D84  1411               	andwf	___fleq@ff1^0,w,c
  9998   003D86  6E19               	movwf	??___fleq^0,c
  9999   003D88  0E00               	movlw	0
 10000   003D8A  1412               	andwf	(___fleq@ff1+1)^0,w,c
 10001   003D8C  6E1A               	movwf	(??___fleq+1)^0,c
 10002   003D8E  0E80               	movlw	128
 10003   003D90  1413               	andwf	(___fleq@ff1+2)^0,w,c
 10004   003D92  6E1B               	movwf	(??___fleq+2)^0,c
 10005   003D94  0E7F               	movlw	127
 10006   003D96  1414               	andwf	(___fleq@ff1+3)^0,w,c
 10007   003D98  6E1C               	movwf	(??___fleq+3)^0,c
 10008   003D9A  5019               	movf	??___fleq^0,w,c
 10009   003D9C  101A               	iorwf	(??___fleq+1)^0,w,c
 10010   003D9E  101B               	iorwf	(??___fleq+2)^0,w,c
 10011   003DA0  101C               	iorwf	(??___fleq+3)^0,w,c
 10012   003DA2  A4D8               	btfss	status,2,c
 10013   003DA4  EFD6  F01E         	goto	u6811
 10014   003DA8  EFD8  F01E         	goto	u6810
 10015   003DAC                     u6811:
 10016   003DAC  EFE0  F01E         	goto	l6638
 10017   003DB0                     u6810:
 10018   003DB0  0E00               	movlw	0
 10019   003DB2  6E11               	movwf	___fleq@ff1^0,c
 10020   003DB4  0E00               	movlw	0
 10021   003DB6  6E12               	movwf	(___fleq@ff1+1)^0,c
 10022   003DB8  0E00               	movlw	0
 10023   003DBA  6E13               	movwf	(___fleq@ff1+2)^0,c
 10024   003DBC  0E00               	movlw	0
 10025   003DBE  6E14               	movwf	(___fleq@ff1+3)^0,c
 10026   003DC0                     l6638:
 10027   003DC0  0E00               	movlw	0
 10028   003DC2  1415               	andwf	___fleq@ff2^0,w,c
 10029   003DC4  6E19               	movwf	??___fleq^0,c
 10030   003DC6  0E00               	movlw	0
 10031   003DC8  1416               	andwf	(___fleq@ff2+1)^0,w,c
 10032   003DCA  6E1A               	movwf	(??___fleq+1)^0,c
 10033   003DCC  0E80               	movlw	128
 10034   003DCE  1417               	andwf	(___fleq@ff2+2)^0,w,c
 10035   003DD0  6E1B               	movwf	(??___fleq+2)^0,c
 10036   003DD2  0E7F               	movlw	127
 10037   003DD4  1418               	andwf	(___fleq@ff2+3)^0,w,c
 10038   003DD6  6E1C               	movwf	(??___fleq+3)^0,c
 10039   003DD8  5019               	movf	??___fleq^0,w,c
 10040   003DDA  101A               	iorwf	(??___fleq+1)^0,w,c
 10041   003DDC  101B               	iorwf	(??___fleq+2)^0,w,c
 10042   003DDE  101C               	iorwf	(??___fleq+3)^0,w,c
 10043   003DE0  A4D8               	btfss	status,2,c
 10044   003DE2  EFF5  F01E         	goto	u6821
 10045   003DE6  EFF7  F01E         	goto	u6820
 10046   003DEA                     u6821:
 10047   003DEA  EFFF  F01E         	goto	l6642
 10048   003DEE                     u6820:
 10049   003DEE  0E00               	movlw	0
 10050   003DF0  6E15               	movwf	___fleq@ff2^0,c
 10051   003DF2  0E00               	movlw	0
 10052   003DF4  6E16               	movwf	(___fleq@ff2+1)^0,c
 10053   003DF6  0E00               	movlw	0
 10054   003DF8  6E17               	movwf	(___fleq@ff2+2)^0,c
 10055   003DFA  0E00               	movlw	0
 10056   003DFC  6E18               	movwf	(___fleq@ff2+3)^0,c
 10057   003DFE                     l6642:
 10058   003DFE  5015               	movf	___fleq@ff2^0,w,c
 10059   003E00  1811               	xorwf	___fleq@ff1^0,w,c
 10060   003E02  E10F               	bnz	u6830
 10061   003E04  5016               	movf	(___fleq@ff2+1)^0,w,c
 10062   003E06  1812               	xorwf	(___fleq@ff1+1)^0,w,c
 10063   003E08  E10C               	bnz	u6830
 10064   003E0A  5017               	movf	(___fleq@ff2+2)^0,w,c
 10065   003E0C  1813               	xorwf	(___fleq@ff1+2)^0,w,c
 10066   003E0E  E109               	bnz	u6830
 10067   003E10  5018               	movf	(___fleq@ff2+3)^0,w,c
 10068   003E12  1814               	xorwf	(___fleq@ff1+3)^0,w,c
 10069   003E14  B4D8               	btfsc	status,2,c
 10070   003E16  EF0F  F01F         	goto	u6831
 10071   003E1A  EF11  F01F         	goto	u6830
 10072   003E1E                     u6831:
 10073   003E1E  EF14  F01F         	goto	l6646
 10074   003E22                     u6830:
 10075   003E22  90D8               	bcf	status,0,c
 10076   003E24  EF15  F01F         	goto	l630
 10077   003E28                     l6646:
 10078   003E28  80D8               	bsf	status,0,c
 10079   003E2A                     l630:
 10080   003E2A  0012               	return		;funcret
 10081   003E2C                     __end_of___fleq:
 10082                           	callstack 0
 10083                           
 10084 ;; *************** function ___fldiv *****************
 10085 ;; Defined at:
 10086 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  b               4   30[COMRAM] unsigned char 
 10089 ;;  a               4   34[COMRAM] unsigned char 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;  grs             4   49[COMRAM] unsigned long 
 10092 ;;  rem             4   42[COMRAM] unsigned long 
 10093 ;;  new_exp         2   47[COMRAM] short 
 10094 ;;  aexp            1   54[COMRAM] unsigned char 
 10095 ;;  bexp            1   53[COMRAM] unsigned char 
 10096 ;;  sign            1   46[COMRAM] unsigned char 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  4   30[COMRAM] unsigned char 
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10106 ;;      Params:         8       0       0       0       0       0       0       0       0
 10107 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10108 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10109 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10110 ;;Total ram usage:       25 bytes
 10111 ;; Hardware stack levels used: 1
 10112 ;; Hardware stack levels required when called: 2
 10113 ;; This function calls:
 10114 ;;		Nothing
 10115 ;; This function is called by:
 10116 ;;		_FILL
 10117 ;;		_efgtoa
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text35
 10122   0020C6                     __ptext35:
 10123                           	callstack 0
 10124   0020C6                     ___fldiv:
 10125                           	callstack 23
 10126   0020C6  5022               	movf	(___fldiv@b+3)^0,w,c
 10127   0020C8  0B80               	andlw	128
 10128   0020CA  6E2F               	movwf	___fldiv@sign^0,c
 10129   0020CC  5022               	movf	(___fldiv@b+3)^0,w,c
 10130   0020CE  2422               	addwf	(___fldiv@b+3)^0,w,c
 10131   0020D0  6E36               	movwf	___fldiv@bexp^0,c
 10132   0020D2  AE21               	btfss	(___fldiv@b+2)^0,7,c
 10133   0020D4  EF6E  F010         	goto	u6391
 10134   0020D8  EF70  F010         	goto	u6390
 10135   0020DC                     u6391:
 10136   0020DC  EF71  F010         	goto	l6366
 10137   0020E0                     u6390:
 10138   0020E0  8036               	bsf	___fldiv@bexp^0,0,c
 10139   0020E2                     l6366:
 10140   0020E2  5036               	movf	___fldiv@bexp^0,w,c
 10141   0020E4  B4D8               	btfsc	status,2,c
 10142   0020E6  EF77  F010         	goto	u6401
 10143   0020EA  EF79  F010         	goto	u6400
 10144   0020EE                     u6401:
 10145   0020EE  EF8E  F010         	goto	l6376
 10146   0020F2                     u6400:
 10147   0020F2  2836               	incf	___fldiv@bexp^0,w,c
 10148   0020F4  A4D8               	btfss	status,2,c
 10149   0020F6  EF7F  F010         	goto	u6411
 10150   0020FA  EF81  F010         	goto	u6410
 10151   0020FE                     u6411:
 10152   0020FE  EF89  F010         	goto	l6372
 10153   002102                     u6410:
 10154   002102  0E00               	movlw	0
 10155   002104  6E1F               	movwf	___fldiv@b^0,c
 10156   002106  0E00               	movlw	0
 10157   002108  6E20               	movwf	(___fldiv@b+1)^0,c
 10158   00210A  0E00               	movlw	0
 10159   00210C  6E21               	movwf	(___fldiv@b+2)^0,c
 10160   00210E  0E00               	movlw	0
 10161   002110  6E22               	movwf	(___fldiv@b+3)^0,c
 10162   002112                     l6372:
 10163   002112  8E21               	bsf	(___fldiv@b+2)^0,7,c
 10164   002114  0E00               	movlw	0
 10165   002116  6E22               	movwf	(___fldiv@b+3)^0,c
 10166   002118  EF96  F010         	goto	l6378
 10167   00211C                     l6376:
 10168   00211C  0E00               	movlw	0
 10169   00211E  6E1F               	movwf	___fldiv@b^0,c
 10170   002120  0E00               	movlw	0
 10171   002122  6E20               	movwf	(___fldiv@b+1)^0,c
 10172   002124  0E00               	movlw	0
 10173   002126  6E21               	movwf	(___fldiv@b+2)^0,c
 10174   002128  0E00               	movlw	0
 10175   00212A  6E22               	movwf	(___fldiv@b+3)^0,c
 10176   00212C                     l6378:
 10177   00212C  5026               	movf	(___fldiv@a+3)^0,w,c
 10178   00212E  0B80               	andlw	128
 10179   002130  1A2F               	xorwf	___fldiv@sign^0,f,c
 10180   002132  5026               	movf	(___fldiv@a+3)^0,w,c
 10181   002134  2426               	addwf	(___fldiv@a+3)^0,w,c
 10182   002136  6E37               	movwf	___fldiv@aexp^0,c
 10183   002138  AE25               	btfss	(___fldiv@a+2)^0,7,c
 10184   00213A  EFA1  F010         	goto	u6421
 10185   00213E  EFA3  F010         	goto	u6420
 10186   002142                     u6421:
 10187   002142  EFA4  F010         	goto	l6386
 10188   002146                     u6420:
 10189   002146  8037               	bsf	___fldiv@aexp^0,0,c
 10190   002148                     l6386:
 10191   002148  5037               	movf	___fldiv@aexp^0,w,c
 10192   00214A  B4D8               	btfsc	status,2,c
 10193   00214C  EFAA  F010         	goto	u6431
 10194   002150  EFAC  F010         	goto	u6430
 10195   002154                     u6431:
 10196   002154  EFC1  F010         	goto	l6396
 10197   002158                     u6430:
 10198   002158  2837               	incf	___fldiv@aexp^0,w,c
 10199   00215A  A4D8               	btfss	status,2,c
 10200   00215C  EFB2  F010         	goto	u6441
 10201   002160  EFB4  F010         	goto	u6440
 10202   002164                     u6441:
 10203   002164  EFBC  F010         	goto	l6392
 10204   002168                     u6440:
 10205   002168  0E00               	movlw	0
 10206   00216A  6E23               	movwf	___fldiv@a^0,c
 10207   00216C  0E00               	movlw	0
 10208   00216E  6E24               	movwf	(___fldiv@a+1)^0,c
 10209   002170  0E00               	movlw	0
 10210   002172  6E25               	movwf	(___fldiv@a+2)^0,c
 10211   002174  0E00               	movlw	0
 10212   002176  6E26               	movwf	(___fldiv@a+3)^0,c
 10213   002178                     l6392:
 10214   002178  8E25               	bsf	(___fldiv@a+2)^0,7,c
 10215   00217A  0E00               	movlw	0
 10216   00217C  6E26               	movwf	(___fldiv@a+3)^0,c
 10217   00217E  EFC9  F010         	goto	l6398
 10218   002182                     l6396:
 10219   002182  0E00               	movlw	0
 10220   002184  6E23               	movwf	___fldiv@a^0,c
 10221   002186  0E00               	movlw	0
 10222   002188  6E24               	movwf	(___fldiv@a+1)^0,c
 10223   00218A  0E00               	movlw	0
 10224   00218C  6E25               	movwf	(___fldiv@a+2)^0,c
 10225   00218E  0E00               	movlw	0
 10226   002190  6E26               	movwf	(___fldiv@a+3)^0,c
 10227   002192                     l6398:
 10228   002192  5023               	movf	___fldiv@a^0,w,c
 10229   002194  1024               	iorwf	(___fldiv@a+1)^0,w,c
 10230   002196  1025               	iorwf	(___fldiv@a+2)^0,w,c
 10231   002198  1026               	iorwf	(___fldiv@a+3)^0,w,c
 10232   00219A  A4D8               	btfss	status,2,c
 10233   00219C  EFD2  F010         	goto	u6451
 10234   0021A0  EFD4  F010         	goto	u6450
 10235   0021A4                     u6451:
 10236   0021A4  EFEC  F010         	goto	l6410
 10237   0021A8                     u6450:
 10238   0021A8  0E00               	movlw	0
 10239   0021AA  6E1F               	movwf	___fldiv@b^0,c
 10240   0021AC  0E00               	movlw	0
 10241   0021AE  6E20               	movwf	(___fldiv@b+1)^0,c
 10242   0021B0  0E00               	movlw	0
 10243   0021B2  6E21               	movwf	(___fldiv@b+2)^0,c
 10244   0021B4  0E00               	movlw	0
 10245   0021B6  6E22               	movwf	(___fldiv@b+3)^0,c
 10246   0021B8  0E80               	movlw	128
 10247   0021BA  1221               	iorwf	(___fldiv@b+2)^0,f,c
 10248   0021BC  0E7F               	movlw	127
 10249   0021BE  1222               	iorwf	(___fldiv@b+3)^0,f,c
 10250   0021C0                     l6404:
 10251   0021C0  502F               	movf	___fldiv@sign^0,w,c
 10252   0021C2  1222               	iorwf	(___fldiv@b+3)^0,f,c
 10253   0021C4  C01F  F01F         	movff	___fldiv@b,?___fldiv
 10254   0021C8  C020  F020         	movff	___fldiv@b+1,?___fldiv+1
 10255   0021CC  C021  F021         	movff	___fldiv@b+2,?___fldiv+2
 10256   0021D0  C022  F022         	movff	___fldiv@b+3,?___fldiv+3
 10257   0021D4  EF2F  F012         	goto	l953
 10258   0021D8                     l6410:
 10259   0021D8  5036               	movf	___fldiv@bexp^0,w,c
 10260   0021DA  A4D8               	btfss	status,2,c
 10261   0021DC  EFF2  F010         	goto	u6461
 10262   0021E0  EFF4  F010         	goto	u6460
 10263   0021E4                     u6461:
 10264   0021E4  EFFE  F010         	goto	l6418
 10265   0021E8                     u6460:
 10266   0021E8  0E00               	movlw	0
 10267   0021EA  6E1F               	movwf	?___fldiv^0,c
 10268   0021EC  0E00               	movlw	0
 10269   0021EE  6E20               	movwf	(?___fldiv+1)^0,c
 10270   0021F0  0E00               	movlw	0
 10271   0021F2  6E21               	movwf	(?___fldiv+2)^0,c
 10272   0021F4  0E00               	movlw	0
 10273   0021F6  6E22               	movwf	(?___fldiv+3)^0,c
 10274   0021F8  EF2F  F012         	goto	l953
 10275   0021FC                     l6418:
 10276   0021FC  5037               	movf	___fldiv@aexp^0,w,c
 10277   0021FE  C036  F027         	movff	___fldiv@bexp,??___fldiv
 10278   002202  6A28               	clrf	(??___fldiv+1)^0,c
 10279   002204  5E27               	subwf	??___fldiv^0,f,c
 10280   002206  0E00               	movlw	0
 10281   002208  5A28               	subwfb	(??___fldiv+1)^0,f,c
 10282   00220A  0E7F               	movlw	127
 10283   00220C  2427               	addwf	??___fldiv^0,w,c
 10284   00220E  6E30               	movwf	___fldiv@new_exp^0,c
 10285   002210  0E00               	movlw	0
 10286   002212  2028               	addwfc	(??___fldiv+1)^0,w,c
 10287   002214  6E31               	movwf	(___fldiv@new_exp+1)^0,c
 10288   002216  C01F  F02B         	movff	___fldiv@b,___fldiv@rem
 10289   00221A  C020  F02C         	movff	___fldiv@b+1,___fldiv@rem+1
 10290   00221E  C021  F02D         	movff	___fldiv@b+2,___fldiv@rem+2
 10291   002222  C022  F02E         	movff	___fldiv@b+3,___fldiv@rem+3
 10292   002226  0E00               	movlw	0
 10293   002228  6E1F               	movwf	___fldiv@b^0,c
 10294   00222A  0E00               	movlw	0
 10295   00222C  6E20               	movwf	(___fldiv@b+1)^0,c
 10296   00222E  0E00               	movlw	0
 10297   002230  6E21               	movwf	(___fldiv@b+2)^0,c
 10298   002232  0E00               	movlw	0
 10299   002234  6E22               	movwf	(___fldiv@b+3)^0,c
 10300   002236  0E00               	movlw	0
 10301   002238  6E32               	movwf	___fldiv@grs^0,c
 10302   00223A  0E00               	movlw	0
 10303   00223C  6E33               	movwf	(___fldiv@grs+1)^0,c
 10304   00223E  0E00               	movlw	0
 10305   002240  6E34               	movwf	(___fldiv@grs+2)^0,c
 10306   002242  0E00               	movlw	0
 10307   002244  6E35               	movwf	(___fldiv@grs+3)^0,c
 10308   002246  0E00               	movlw	0
 10309   002248  6E37               	movwf	___fldiv@aexp^0,c
 10310   00224A  EF5F  F011         	goto	l955
 10311   00224E                     l6428:
 10312   00224E  5037               	movf	___fldiv@aexp^0,w,c
 10313   002250  B4D8               	btfsc	status,2,c
 10314   002252  EF2D  F011         	goto	u6471
 10315   002256  EF2F  F011         	goto	u6470
 10316   00225A                     u6471:
 10317   00225A  EF46  F011         	goto	l6436
 10318   00225E                     u6470:
 10319   00225E  90D8               	bcf	status,0,c
 10320   002260  362B               	rlcf	___fldiv@rem^0,f,c
 10321   002262  362C               	rlcf	(___fldiv@rem+1)^0,f,c
 10322   002264  362D               	rlcf	(___fldiv@rem+2)^0,f,c
 10323   002266  362E               	rlcf	(___fldiv@rem+3)^0,f,c
 10324   002268  90D8               	bcf	status,0,c
 10325   00226A  361F               	rlcf	___fldiv@b^0,f,c
 10326   00226C  3620               	rlcf	(___fldiv@b+1)^0,f,c
 10327   00226E  3621               	rlcf	(___fldiv@b+2)^0,f,c
 10328   002270  3622               	rlcf	(___fldiv@b+3)^0,f,c
 10329   002272  AE35               	btfss	(___fldiv@grs+3)^0,7,c
 10330   002274  EF3E  F011         	goto	u6481
 10331   002278  EF40  F011         	goto	u6480
 10332   00227C                     u6481:
 10333   00227C  EF41  F011         	goto	l958
 10334   002280                     u6480:
 10335   002280  801F               	bsf	___fldiv@b^0,0,c
 10336   002282                     l958:
 10337   002282  90D8               	bcf	status,0,c
 10338   002284  3632               	rlcf	___fldiv@grs^0,f,c
 10339   002286  3633               	rlcf	(___fldiv@grs+1)^0,f,c
 10340   002288  3634               	rlcf	(___fldiv@grs+2)^0,f,c
 10341   00228A  3635               	rlcf	(___fldiv@grs+3)^0,f,c
 10342   00228C                     l6436:
 10343   00228C  5023               	movf	___fldiv@a^0,w,c
 10344   00228E  5C2B               	subwf	___fldiv@rem^0,w,c
 10345   002290  5024               	movf	(___fldiv@a+1)^0,w,c
 10346   002292  582C               	subwfb	(___fldiv@rem+1)^0,w,c
 10347   002294  5025               	movf	(___fldiv@a+2)^0,w,c
 10348   002296  582D               	subwfb	(___fldiv@rem+2)^0,w,c
 10349   002298  5026               	movf	(___fldiv@a+3)^0,w,c
 10350   00229A  582E               	subwfb	(___fldiv@rem+3)^0,w,c
 10351   00229C  A0D8               	btfss	status,0,c
 10352   00229E  EF53  F011         	goto	u6491
 10353   0022A2  EF55  F011         	goto	u6490
 10354   0022A6                     u6491:
 10355   0022A6  EF5E  F011         	goto	l6442
 10356   0022AA                     u6490:
 10357   0022AA  8C35               	bsf	(___fldiv@grs+3)^0,6,c
 10358   0022AC  5023               	movf	___fldiv@a^0,w,c
 10359   0022AE  5E2B               	subwf	___fldiv@rem^0,f,c
 10360   0022B0  5024               	movf	(___fldiv@a+1)^0,w,c
 10361   0022B2  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
 10362   0022B4  5025               	movf	(___fldiv@a+2)^0,w,c
 10363   0022B6  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
 10364   0022B8  5026               	movf	(___fldiv@a+3)^0,w,c
 10365   0022BA  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
 10366   0022BC                     l6442:
 10367   0022BC  2A37               	incf	___fldiv@aexp^0,f,c
 10368   0022BE                     l955:
 10369   0022BE  0E19               	movlw	25
 10370   0022C0  6437               	cpfsgt	___fldiv@aexp^0,c
 10371   0022C2  EF65  F011         	goto	u6501
 10372   0022C6  EF67  F011         	goto	u6500
 10373   0022CA                     u6501:
 10374   0022CA  EF27  F011         	goto	l6428
 10375   0022CE                     u6500:
 10376   0022CE  502B               	movf	___fldiv@rem^0,w,c
 10377   0022D0  102C               	iorwf	(___fldiv@rem+1)^0,w,c
 10378   0022D2  102D               	iorwf	(___fldiv@rem+2)^0,w,c
 10379   0022D4  102E               	iorwf	(___fldiv@rem+3)^0,w,c
 10380   0022D6  B4D8               	btfsc	status,2,c
 10381   0022D8  EF70  F011         	goto	u6511
 10382   0022DC  EF72  F011         	goto	u6510
 10383   0022E0                     u6511:
 10384   0022E0  EF8A  F011         	goto	l6454
 10385   0022E4                     u6510:
 10386   0022E4  8032               	bsf	___fldiv@grs^0,0,c
 10387   0022E6  EF8A  F011         	goto	l6454
 10388   0022EA                     l6448:
 10389   0022EA  90D8               	bcf	status,0,c
 10390   0022EC  361F               	rlcf	___fldiv@b^0,f,c
 10391   0022EE  3620               	rlcf	(___fldiv@b+1)^0,f,c
 10392   0022F0  3621               	rlcf	(___fldiv@b+2)^0,f,c
 10393   0022F2  3622               	rlcf	(___fldiv@b+3)^0,f,c
 10394   0022F4  AE35               	btfss	(___fldiv@grs+3)^0,7,c
 10395   0022F6  EF7F  F011         	goto	u6521
 10396   0022FA  EF81  F011         	goto	u6520
 10397   0022FE                     u6521:
 10398   0022FE  EF82  F011         	goto	l964
 10399   002302                     u6520:
 10400   002302  801F               	bsf	___fldiv@b^0,0,c
 10401   002304                     l964:
 10402   002304  90D8               	bcf	status,0,c
 10403   002306  3632               	rlcf	___fldiv@grs^0,f,c
 10404   002308  3633               	rlcf	(___fldiv@grs+1)^0,f,c
 10405   00230A  3634               	rlcf	(___fldiv@grs+2)^0,f,c
 10406   00230C  3635               	rlcf	(___fldiv@grs+3)^0,f,c
 10407   00230E  0630               	decf	___fldiv@new_exp^0,f,c
 10408   002310  A0D8               	btfss	status,0,c
 10409   002312  0631               	decf	(___fldiv@new_exp+1)^0,f,c
 10410   002314                     l6454:
 10411   002314  AE21               	btfss	(___fldiv@b+2)^0,7,c
 10412   002316  EF8F  F011         	goto	u6531
 10413   00231A  EF91  F011         	goto	u6530
 10414   00231E                     u6531:
 10415   00231E  EF75  F011         	goto	l6448
 10416   002322                     u6530:
 10417   002322  0E00               	movlw	0
 10418   002324  6E37               	movwf	___fldiv@aexp^0,c
 10419   002326  AE35               	btfss	(___fldiv@grs+3)^0,7,c
 10420   002328  EF98  F011         	goto	u6541
 10421   00232C  EF9A  F011         	goto	u6540
 10422   002330                     u6541:
 10423   002330  EFBE  F011         	goto	l966
 10424   002334                     u6540:
 10425   002334  0EFF               	movlw	255
 10426   002336  1432               	andwf	___fldiv@grs^0,w,c
 10427   002338  6E27               	movwf	??___fldiv^0,c
 10428   00233A  0EFF               	movlw	255
 10429   00233C  1433               	andwf	(___fldiv@grs+1)^0,w,c
 10430   00233E  6E28               	movwf	(??___fldiv+1)^0,c
 10431   002340  0EFF               	movlw	255
 10432   002342  1434               	andwf	(___fldiv@grs+2)^0,w,c
 10433   002344  6E29               	movwf	(??___fldiv+2)^0,c
 10434   002346  0E7F               	movlw	127
 10435   002348  1435               	andwf	(___fldiv@grs+3)^0,w,c
 10436   00234A  6E2A               	movwf	(??___fldiv+3)^0,c
 10437   00234C  5027               	movf	??___fldiv^0,w,c
 10438   00234E  1028               	iorwf	(??___fldiv+1)^0,w,c
 10439   002350  1029               	iorwf	(??___fldiv+2)^0,w,c
 10440   002352  102A               	iorwf	(??___fldiv+3)^0,w,c
 10441   002354  B4D8               	btfsc	status,2,c
 10442   002356  EFAF  F011         	goto	u6551
 10443   00235A  EFB1  F011         	goto	u6550
 10444   00235E                     u6551:
 10445   00235E  EFB5  F011         	goto	l967
 10446   002362                     u6550:
 10447   002362                     l6462:
 10448   002362  0E01               	movlw	1
 10449   002364  6E37               	movwf	___fldiv@aexp^0,c
 10450   002366  EFBE  F011         	goto	l966
 10451   00236A                     l967:
 10452   00236A  A01F               	btfss	___fldiv@b^0,0,c
 10453   00236C  EFBA  F011         	goto	u6561
 10454   002370  EFBC  F011         	goto	u6560
 10455   002374                     u6561:
 10456   002374  EFBE  F011         	goto	l966
 10457   002378                     u6560:
 10458   002378  EFB1  F011         	goto	l6462
 10459   00237C                     l966:
 10460   00237C  5037               	movf	___fldiv@aexp^0,w,c
 10461   00237E  B4D8               	btfsc	status,2,c
 10462   002380  EFC4  F011         	goto	u6571
 10463   002384  EFC6  F011         	goto	u6570
 10464   002388                     u6571:
 10465   002388  EFEA  F011         	goto	l6474
 10466   00238C                     u6570:
 10467   00238C  0E01               	movlw	1
 10468   00238E  261F               	addwf	___fldiv@b^0,f,c
 10469   002390  0E00               	movlw	0
 10470   002392  2220               	addwfc	(___fldiv@b+1)^0,f,c
 10471   002394  2221               	addwfc	(___fldiv@b+2)^0,f,c
 10472   002396  2222               	addwfc	(___fldiv@b+3)^0,f,c
 10473   002398  A022               	btfss	(___fldiv@b+3)^0,0,c
 10474   00239A  EFD1  F011         	goto	u6581
 10475   00239E  EFD3  F011         	goto	u6580
 10476   0023A2                     u6581:
 10477   0023A2  EFEA  F011         	goto	l6474
 10478   0023A6                     u6580:
 10479   0023A6  C01F  F027         	movff	___fldiv@b,??___fldiv
 10480   0023AA  C020  F028         	movff	___fldiv@b+1,??___fldiv+1
 10481   0023AE  C021  F029         	movff	___fldiv@b+2,??___fldiv+2
 10482   0023B2  C022  F02A         	movff	___fldiv@b+3,??___fldiv+3
 10483   0023B6  342A               	rlcf	(??___fldiv+3)^0,w,c
 10484   0023B8  322A               	rrcf	(??___fldiv+3)^0,f,c
 10485   0023BA  3229               	rrcf	(??___fldiv+2)^0,f,c
 10486   0023BC  3228               	rrcf	(??___fldiv+1)^0,f,c
 10487   0023BE  3227               	rrcf	??___fldiv^0,f,c
 10488   0023C0  C027  F01F         	movff	??___fldiv,___fldiv@b
 10489   0023C4  C028  F020         	movff	??___fldiv+1,___fldiv@b+1
 10490   0023C8  C029  F021         	movff	??___fldiv+2,___fldiv@b+2
 10491   0023CC  C02A  F022         	movff	??___fldiv+3,___fldiv@b+3
 10492   0023D0  4A30               	infsnz	___fldiv@new_exp^0,f,c
 10493   0023D2  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
 10494   0023D4                     l6474:
 10495   0023D4  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10496   0023D6  EFF5  F011         	goto	u6591
 10497   0023DA  5031               	movf	(___fldiv@new_exp+1)^0,w,c
 10498   0023DC  E108               	bnz	u6590
 10499   0023DE  2830               	incf	___fldiv@new_exp^0,w,c
 10500   0023E0  A0D8               	btfss	status,0,c
 10501   0023E2  EFF5  F011         	goto	u6591
 10502   0023E6  EFF7  F011         	goto	u6590
 10503   0023EA                     u6591:
 10504   0023EA  EF02  F012         	goto	l6478
 10505   0023EE                     u6590:
 10506   0023EE  0E00               	movlw	0
 10507   0023F0  6E31               	movwf	(___fldiv@new_exp+1)^0,c
 10508   0023F2  6830               	setf	___fldiv@new_exp^0,c
 10509   0023F4  0E00               	movlw	0
 10510   0023F6  6E1F               	movwf	___fldiv@b^0,c
 10511   0023F8  0E00               	movlw	0
 10512   0023FA  6E20               	movwf	(___fldiv@b+1)^0,c
 10513   0023FC  0E00               	movlw	0
 10514   0023FE  6E21               	movwf	(___fldiv@b+2)^0,c
 10515   002400  0E00               	movlw	0
 10516   002402  6E22               	movwf	(___fldiv@b+3)^0,c
 10517   002404                     l6478:
 10518   002404  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10519   002406  EF0F  F012         	goto	u6600
 10520   00240A  5031               	movf	(___fldiv@new_exp+1)^0,w,c
 10521   00240C  E106               	bnz	u6601
 10522   00240E  0430               	decf	___fldiv@new_exp^0,w,c
 10523   002410  B0D8               	btfsc	status,0,c
 10524   002412  EF0D  F012         	goto	u6601
 10525   002416  EF0F  F012         	goto	u6600
 10526   00241A                     u6601:
 10527   00241A  EF1D  F012         	goto	l6482
 10528   00241E                     u6600:
 10529   00241E  0E00               	movlw	0
 10530   002420  6E31               	movwf	(___fldiv@new_exp+1)^0,c
 10531   002422  0E00               	movlw	0
 10532   002424  6E30               	movwf	___fldiv@new_exp^0,c
 10533   002426  0E00               	movlw	0
 10534   002428  6E1F               	movwf	___fldiv@b^0,c
 10535   00242A  0E00               	movlw	0
 10536   00242C  6E20               	movwf	(___fldiv@b+1)^0,c
 10537   00242E  0E00               	movlw	0
 10538   002430  6E21               	movwf	(___fldiv@b+2)^0,c
 10539   002432  0E00               	movlw	0
 10540   002434  6E22               	movwf	(___fldiv@b+3)^0,c
 10541   002436  0E00               	movlw	0
 10542   002438  6E2F               	movwf	___fldiv@sign^0,c
 10543   00243A                     l6482:
 10544   00243A  C030  F036         	movff	___fldiv@new_exp,___fldiv@bexp
 10545   00243E  A036               	btfss	___fldiv@bexp^0,0,c
 10546   002440  EF24  F012         	goto	u6611
 10547   002444  EF26  F012         	goto	u6610
 10548   002448                     u6611:
 10549   002448  EF29  F012         	goto	l6488
 10550   00244C                     u6610:
 10551   00244C  8E21               	bsf	(___fldiv@b+2)^0,7,c
 10552   00244E  EF2A  F012         	goto	l6490
 10553   002452                     l6488:
 10554   002452  9E21               	bcf	(___fldiv@b+2)^0,7,c
 10555   002454                     l6490:
 10556   002454  90D8               	bcf	status,0,c
 10557   002456  3036               	rrcf	___fldiv@bexp^0,w,c
 10558   002458  6E22               	movwf	(___fldiv@b+3)^0,c
 10559   00245A  EFE0  F010         	goto	l6404
 10560   00245E                     l953:
 10561   00245E  0012               	return		;funcret
 10562   002460                     __end_of___fldiv:
 10563                           	callstack 0
 10564                           
 10565 ;; *************** function _atoi *****************
 10566 ;; Defined at:
 10567 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  s               2   22[COMRAM] PTR const unsigned char 
 10570 ;;		 -> STR_32(6), STR_30(3), 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  n               2   29[COMRAM] int 
 10573 ;;  neg             2   27[COMRAM] int 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  2   22[COMRAM] int 
 10576 ;; Registers used:
 10577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10583 ;;      Params:         2       0       0       0       0       0       0       0       0
 10584 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10585 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10586 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10587 ;;Total ram usage:        9 bytes
 10588 ;; Hardware stack levels used: 1
 10589 ;; Hardware stack levels required when called: 3
 10590 ;; This function calls:
 10591 ;;		___wmul
 10592 ;;		_isdigit
 10593 ;;		_isspace
 10594 ;; This function is called by:
 10595 ;;		_vfpfcnvrt
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text36
 10600   0034EA                     __ptext36:
 10601                           	callstack 0
 10602   0034EA                     _atoi:
 10603                           	callstack 23
 10604   0034EA  0E00               	movlw	0
 10605   0034EC  6E1F               	movwf	(atoi@n+1)^0,c
 10606   0034EE  0E00               	movlw	0
 10607   0034F0  6E1E               	movwf	atoi@n^0,c
 10608   0034F2  0E00               	movlw	0
 10609   0034F4  6E1D               	movwf	(atoi@neg+1)^0,c
 10610   0034F6  0E00               	movlw	0
 10611   0034F8  6E1C               	movwf	atoi@neg^0,c
 10612   0034FA  EF81  F01A         	goto	l7138
 10613   0034FE                     l7134:
 10614   0034FE  4A17               	infsnz	atoi@s^0,f,c
 10615   003500  2A18               	incf	(atoi@s+1)^0,f,c
 10616   003502                     l7138:
 10617   003502  C017  FFF6         	movff	atoi@s,tblptrl
 10618   003506  C018  FFF7         	movff	atoi@s+1,tblptrh
 10619   00350A                     	if	0	;tblptru may be non-zero
 10620   00350A                     	endif
 10621   00350A                     	if	0	;tblptru may be non-zero
 10622   00350A                     	endif
 10623   00350A  0008               	tblrd		*
 10624   00350C  50F5               	movf	tablat,w,c
 10625   00350E  0A20               	xorlw	32
 10626   003510  B4D8               	btfsc	status,2,c
 10627   003512  EF8D  F01A         	goto	u7721
 10628   003516  EF8F  F01A         	goto	u7720
 10629   00351A                     u7721:
 10630   00351A  EF7F  F01A         	goto	l7134
 10631   00351E                     u7720:
 10632   00351E  C017  FFF6         	movff	atoi@s,tblptrl
 10633   003522  C018  FFF7         	movff	atoi@s+1,tblptrh
 10634   003526                     	if	0	;tblptru may be non-zero
 10635   003526                     	endif
 10636   003526                     	if	0	;tblptru may be non-zero
 10637   003526                     	endif
 10638   003526  0008               	tblrd		*
 10639   003528  CFF5 F019          	movff	tablat,??_atoi
 10640   00352C  0EF7               	movlw	247
 10641   00352E  2419               	addwf	??_atoi^0,w,c
 10642   003530  6E1A               	movwf	(??_atoi+1)^0,c
 10643   003532  6A1B               	clrf	(??_atoi+2)^0,c
 10644   003534  0EFF               	movlw	255
 10645   003536  221B               	addwfc	(??_atoi+2)^0,f,c
 10646   003538  501B               	movf	(??_atoi+2)^0,w,c
 10647   00353A  E109               	bnz	u7730
 10648   00353C  0E05               	movlw	5
 10649   00353E  5C1A               	subwf	(??_atoi+1)^0,w,c
 10650   003540  A0D8               	btfss	status,0,c
 10651   003542  EFA5  F01A         	goto	u7731
 10652   003546  EFA7  F01A         	goto	u7730
 10653   00354A                     u7731:
 10654   00354A  EF7F  F01A         	goto	l7134
 10655   00354E                     u7730:
 10656   00354E  EFB1  F01A         	goto	l7146
 10657   003552                     l7142:
 10658   003552  0E00               	movlw	0
 10659   003554  6E1D               	movwf	(atoi@neg+1)^0,c
 10660   003556  0E01               	movlw	1
 10661   003558  6E1C               	movwf	atoi@neg^0,c
 10662   00355A                     l7144:
 10663   00355A  4A17               	infsnz	atoi@s^0,f,c
 10664   00355C  2A18               	incf	(atoi@s+1)^0,f,c
 10665   00355E  EFE6  F01A         	goto	l7154
 10666   003562                     l7146:
 10667   003562  C017  FFF6         	movff	atoi@s,tblptrl
 10668   003566  C018  FFF7         	movff	atoi@s+1,tblptrh
 10669   00356A                     	if	0	;tblptru may be non-zero
 10670   00356A                     	endif
 10671   00356A                     	if	0	;tblptru may be non-zero
 10672   00356A                     	endif
 10673   00356A  0008               	tblrd		*
 10674   00356C  50F5               	movf	tablat,w,c
 10675   00356E  6E19               	movwf	??_atoi^0,c
 10676   003570  6A1A               	clrf	(??_atoi+1)^0,c
 10677                           
 10678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10679                           ; Switch size 1, requested type "simple"
 10680                           ; Number of cases is 1, Range of values is 0 to 0
 10681                           ; switch strategies available:
 10682                           ; Name         Instructions Cycles
 10683                           ; simple_byte            4     3 (average)
 10684                           ;	Chosen strategy is simple_byte
 10685   003572  501A               	movf	(??_atoi+1)^0,w,c
 10686   003574  0A00               	xorlw	0	; case 0
 10687   003576  B4D8               	btfsc	status,2,c
 10688   003578  EFC0  F01A         	goto	l7970
 10689   00357C  EFE6  F01A         	goto	l7154
 10690   003580                     l7970:
 10691                           
 10692                           ; Switch size 1, requested type "simple"
 10693                           ; Number of cases is 2, Range of values is 43 to 45
 10694                           ; switch strategies available:
 10695                           ; Name         Instructions Cycles
 10696                           ; simple_byte            7     4 (average)
 10697                           ;	Chosen strategy is simple_byte
 10698   003580  5019               	movf	??_atoi^0,w,c
 10699   003582  0A2B               	xorlw	43	; case 43
 10700   003584  B4D8               	btfsc	status,2,c
 10701   003586  EFAD  F01A         	goto	l7144
 10702   00358A  0A06               	xorlw	6	; case 45
 10703   00358C  B4D8               	btfsc	status,2,c
 10704   00358E  EFA9  F01A         	goto	l7142
 10705   003592  EFE6  F01A         	goto	l7154
 10706   003596                     l7148:
 10707   003596  C01E  F011         	movff	atoi@n,___wmul@multiplier
 10708   00359A  C01F  F012         	movff	atoi@n+1,___wmul@multiplier+1
 10709   00359E  0E00               	movlw	0
 10710   0035A0  6E14               	movwf	(___wmul@multiplicand+1)^0,c
 10711   0035A2  0E0A               	movlw	10
 10712   0035A4  6E13               	movwf	___wmul@multiplicand^0,c
 10713   0035A6  ECD6  F021         	call	___wmul	;wreg free
 10714   0035AA  C017  FFF6         	movff	atoi@s,tblptrl
 10715   0035AE  C018  FFF7         	movff	atoi@s+1,tblptrh
 10716   0035B2                     	if	0	;tblptru may be non-zero
 10717   0035B2                     	endif
 10718   0035B2                     	if	0	;tblptru may be non-zero
 10719   0035B2                     	endif
 10720   0035B2  0008               	tblrd		*
 10721   0035B4  50F5               	movf	tablat,w,c
 10722   0035B6  5E11               	subwf	?___wmul^0,f,c
 10723   0035B8  0E00               	movlw	0
 10724   0035BA  5A12               	subwfb	(?___wmul+1)^0,f,c
 10725   0035BC  0E30               	movlw	48
 10726   0035BE  2411               	addwf	?___wmul^0,w,c
 10727   0035C0  6E1E               	movwf	atoi@n^0,c
 10728   0035C2  0E00               	movlw	0
 10729   0035C4  2012               	addwfc	(?___wmul+1)^0,w,c
 10730   0035C6  6E1F               	movwf	(atoi@n+1)^0,c
 10731   0035C8  EFAD  F01A         	goto	l7144
 10732   0035CC                     l7154:
 10733   0035CC  C017  FFF6         	movff	atoi@s,tblptrl
 10734   0035D0  C018  FFF7         	movff	atoi@s+1,tblptrh
 10735   0035D4                     	if	0	;tblptru may be non-zero
 10736   0035D4                     	endif
 10737   0035D4                     	if	0	;tblptru may be non-zero
 10738   0035D4                     	endif
 10739   0035D4  0008               	tblrd		*
 10740   0035D6  CFF5 F019          	movff	tablat,??_atoi
 10741   0035DA  0ED0               	movlw	208
 10742   0035DC  2419               	addwf	??_atoi^0,w,c
 10743   0035DE  6E1A               	movwf	(??_atoi+1)^0,c
 10744   0035E0  6A1B               	clrf	(??_atoi+2)^0,c
 10745   0035E2  0EFF               	movlw	255
 10746   0035E4  221B               	addwfc	(??_atoi+2)^0,f,c
 10747   0035E6  501B               	movf	(??_atoi+2)^0,w,c
 10748   0035E8  E109               	bnz	u7740
 10749   0035EA  0E0A               	movlw	10
 10750   0035EC  5C1A               	subwf	(??_atoi+1)^0,w,c
 10751   0035EE  A0D8               	btfss	status,0,c
 10752   0035F0  EFFC  F01A         	goto	u7741
 10753   0035F4  EFFE  F01A         	goto	u7740
 10754   0035F8                     u7741:
 10755   0035F8  EFCB  F01A         	goto	l7148
 10756   0035FC                     u7740:
 10757   0035FC  501C               	movf	atoi@neg^0,w,c
 10758   0035FE  101D               	iorwf	(atoi@neg+1)^0,w,c
 10759   003600  A4D8               	btfss	status,2,c
 10760   003602  EF05  F01B         	goto	u7751
 10761   003606  EF07  F01B         	goto	u7750
 10762   00360A                     u7751:
 10763   00360A  EF15  F01B         	goto	l1240
 10764   00360E                     u7750:
 10765   00360E  C01E  F019         	movff	atoi@n,??_atoi
 10766   003612  C01F  F01A         	movff	atoi@n+1,??_atoi+1
 10767   003616  1E19               	comf	??_atoi^0,f,c
 10768   003618  1E1A               	comf	(??_atoi+1)^0,f,c
 10769   00361A  4A19               	infsnz	??_atoi^0,f,c
 10770   00361C  2A1A               	incf	(??_atoi+1)^0,f,c
 10771   00361E  C019  F017         	movff	??_atoi,?_atoi
 10772   003622  C01A  F018         	movff	??_atoi+1,?_atoi+1
 10773   003626  EF19  F01B         	goto	l1243
 10774   00362A                     l1240:
 10775   00362A  C01E  F017         	movff	atoi@n,?_atoi
 10776   00362E  C01F  F018         	movff	atoi@n+1,?_atoi+1
 10777   003632                     l1243:
 10778   003632  0012               	return		;funcret
 10779   003634                     __end_of_atoi:
 10780                           	callstack 0
 10781                           
 10782 ;; *************** function _isspace *****************
 10783 ;; Defined at:
 10784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  c               2   16[COMRAM] int 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  2   16[COMRAM] int 
 10791 ;; Registers used:
 10792 ;;		wreg, status,2, status,0
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10798 ;;      Params:         2       0       0       0       0       0       0       0       0
 10799 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10800 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10801 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10802 ;;Total ram usage:        5 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 2
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_atoi
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text37
 10813   004246                     __ptext37:
 10814                           	callstack 0
 10815   004246                     _isspace:
 10816                           	callstack 23
 10817   004246  0E01               	movlw	1
 10818   004248  6E15               	movwf	_isspace$1598^0,c
 10819   00424A  0E20               	movlw	32
 10820   00424C  1811               	xorwf	isspace@c^0,w,c
 10821   00424E  1012               	iorwf	(isspace@c+1)^0,w,c
 10822   004250  B4D8               	btfsc	status,2,c
 10823   004252  EF2D  F021         	goto	u7281
 10824   004256  EF2F  F021         	goto	u7280
 10825   00425A                     u7281:
 10826   00425A  EF42  F021         	goto	l6858
 10827   00425E                     u7280:
 10828   00425E  0EF7               	movlw	247
 10829   004260  2411               	addwf	isspace@c^0,w,c
 10830   004262  6E13               	movwf	??_isspace^0,c
 10831   004264  0EFF               	movlw	255
 10832   004266  2012               	addwfc	(isspace@c+1)^0,w,c
 10833   004268  6E14               	movwf	(??_isspace+1)^0,c
 10834   00426A  5014               	movf	(??_isspace+1)^0,w,c
 10835   00426C  E109               	bnz	u7290
 10836   00426E  0E05               	movlw	5
 10837   004270  5C13               	subwf	??_isspace^0,w,c
 10838   004272  A0D8               	btfss	status,0,c
 10839   004274  EF3E  F021         	goto	u7291
 10840   004278  EF40  F021         	goto	u7290
 10841   00427C                     u7291:
 10842   00427C  EF42  F021         	goto	l6858
 10843   004280                     u7290:
 10844   004280  0E00               	movlw	0
 10845   004282  6E15               	movwf	_isspace$1598^0,c
 10846   004284                     l6858:
 10847   004284  C015  F011         	movff	_isspace$1598,?_isspace
 10848   004288  6A12               	clrf	(?_isspace+1)^0,c
 10849   00428A  0012               	return		;funcret
 10850   00428C                     __end_of_isspace:
 10851                           	callstack 0
 10852                           
 10853 ;; *************** function _isdigit *****************
 10854 ;; Defined at:
 10855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  c               2   16[COMRAM] int 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;		None
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  2   16[COMRAM] int 
 10862 ;; Registers used:
 10863 ;;		wreg, status,2, status,0
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10869 ;;      Params:         2       0       0       0       0       0       0       0       0
 10870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10871 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10872 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10873 ;;Total ram usage:        4 bytes
 10874 ;; Hardware stack levels used: 1
 10875 ;; Hardware stack levels required when called: 2
 10876 ;; This function calls:
 10877 ;;		Nothing
 10878 ;; This function is called by:
 10879 ;;		_vfpfcnvrt
 10880 ;;		_atoi
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text38
 10885   004380                     __ptext38:
 10886                           	callstack 0
 10887   004380                     _isdigit:
 10888                           	callstack 24
 10889   004380  0ED0               	movlw	208
 10890   004382  2411               	addwf	isdigit@c^0,w,c
 10891   004384  6E13               	movwf	??_isdigit^0,c
 10892   004386  0EFF               	movlw	255
 10893   004388  2012               	addwfc	(isdigit@c+1)^0,w,c
 10894   00438A  6E14               	movwf	(??_isdigit+1)^0,c
 10895   00438C  5014               	movf	(??_isdigit+1)^0,w,c
 10896   00438E  E10A               	bnz	u7260
 10897   004390  0E0A               	movlw	10
 10898   004392  5C13               	subwf	??_isdigit^0,w,c
 10899   004394  A0D8               	btfss	status,0,c
 10900   004396  EFCF  F021         	goto	u7261
 10901   00439A  EFD2  F021         	goto	u7260
 10902   00439E                     u7261:
 10903   00439E  0E01               	movlw	1
 10904   0043A0  EFD3  F021         	goto	u7270
 10905   0043A4                     u7260:
 10906   0043A4  0E00               	movlw	0
 10907   0043A6                     u7270:
 10908   0043A6  6E11               	movwf	?_isdigit^0,c
 10909   0043A8  6A12               	clrf	(?_isdigit+1)^0,c
 10910   0043AA  0012               	return		;funcret
 10911   0043AC                     __end_of_isdigit:
 10912                           	callstack 0
 10913                           
 10914 ;; *************** function ___wmul *****************
 10915 ;; Defined at:
 10916 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;  multiplier      2   16[COMRAM] unsigned int 
 10919 ;;  multiplicand    2   18[COMRAM] unsigned int 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;  product         2   20[COMRAM] unsigned int 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  2   16[COMRAM] unsigned int 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0, prodl, prodh
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10931 ;;      Params:         4       0       0       0       0       0       0       0       0
 10932 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10934 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10935 ;;Total ram usage:        6 bytes
 10936 ;; Hardware stack levels used: 1
 10937 ;; Hardware stack levels required when called: 2
 10938 ;; This function calls:
 10939 ;;		Nothing
 10940 ;; This function is called by:
 10941 ;;		_USER_VALUE
 10942 ;;		_atoi
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text39
 10947   0043AC                     __ptext39:
 10948                           	callstack 0
 10949   0043AC                     ___wmul:
 10950                           	callstack 27
 10951   0043AC  5011               	movf	___wmul@multiplier^0,w,c
 10952   0043AE  0213               	mulwf	___wmul@multiplicand^0,c
 10953   0043B0  CFF3 F015          	movff	prodl,___wmul@product
 10954   0043B4  CFF4 F016          	movff	prodh,___wmul@product+1
 10955   0043B8  5011               	movf	___wmul@multiplier^0,w,c
 10956   0043BA  0214               	mulwf	(___wmul@multiplicand+1)^0,c
 10957   0043BC  50F3               	movf	243,w,c
 10958   0043BE  2616               	addwf	(___wmul@product+1)^0,f,c
 10959   0043C0  5012               	movf	(___wmul@multiplier+1)^0,w,c
 10960   0043C2  0213               	mulwf	___wmul@multiplicand^0,c
 10961   0043C4  50F3               	movf	243,w,c
 10962   0043C6  2616               	addwf	(___wmul@product+1)^0,f,c
 10963   0043C8  C015  F011         	movff	___wmul@product,?___wmul
 10964   0043CC  C016  F012         	movff	___wmul@product+1,?___wmul+1
 10965   0043D0  0012               	return		;funcret
 10966   0043D2                     __end_of___wmul:
 10967                           	callstack 0
 10968                           
 10969 ;; *************** function ___xxtofl *****************
 10970 ;; Defined at:
 10971 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  sign            1    wreg     unsigned char 
 10974 ;;  val             4   16[COMRAM] long 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;  sign            1   24[COMRAM] unsigned char 
 10977 ;;  arg             4   26[COMRAM] unsigned long 
 10978 ;;  exp             1   25[COMRAM] unsigned char 
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  4   16[COMRAM] unsigned char 
 10981 ;; Registers used:
 10982 ;;		wreg, status,2, status,0
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10988 ;;      Params:         4       0       0       0       0       0       0       0       0
 10989 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10990 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10991 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10992 ;;Total ram usage:       14 bytes
 10993 ;; Hardware stack levels used: 1
 10994 ;; Hardware stack levels required when called: 2
 10995 ;; This function calls:
 10996 ;;		Nothing
 10997 ;; This function is called by:
 10998 ;;		_FILL
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text40
 11003   003336                     __ptext40:
 11004                           	callstack 0
 11005   003336                     ___xxtofl:
 11006                           	callstack 27
 11007                           
 11008                           ;incstack = 0
 11009                           ;___xxtofl@sign stored from wreg
 11010   003336  6E19               	movwf	___xxtofl@sign^0,c
 11011   003338  5019               	movf	___xxtofl@sign^0,w,c
 11012   00333A  B4D8               	btfsc	status,2,c
 11013   00333C  EFA2  F019         	goto	u5101
 11014   003340  EFA4  F019         	goto	u5100
 11015   003344                     u5101:
 11016   003344  EFC6  F019         	goto	l1026
 11017   003348                     u5100:
 11018   003348  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
 11019   00334A  EFAB  F019         	goto	u5110
 11020   00334E  EFA9  F019         	goto	u5111
 11021   003352                     u5111:
 11022   003352  EFC6  F019         	goto	l1026
 11023   003356                     u5110:
 11024   003356  C011  F015         	movff	___xxtofl@val,??___xxtofl
 11025   00335A  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
 11026   00335E  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
 11027   003362  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
 11028   003366  1E15               	comf	??___xxtofl^0,f,c
 11029   003368  1E16               	comf	(??___xxtofl+1)^0,f,c
 11030   00336A  1E17               	comf	(??___xxtofl+2)^0,f,c
 11031   00336C  1E18               	comf	(??___xxtofl+3)^0,f,c
 11032   00336E  2A15               	incf	??___xxtofl^0,f,c
 11033   003370  0E00               	movlw	0
 11034   003372  2216               	addwfc	(??___xxtofl+1)^0,f,c
 11035   003374  2217               	addwfc	(??___xxtofl+2)^0,f,c
 11036   003376  2218               	addwfc	(??___xxtofl+3)^0,f,c
 11037   003378  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
 11038   00337C  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11039   003380  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11040   003384  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11041   003388  EFCE  F019         	goto	l5076
 11042   00338C                     l1026:
 11043   00338C  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
 11044   003390  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11045   003394  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11046   003398  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11047   00339C                     l5076:
 11048   00339C  5011               	movf	___xxtofl@val^0,w,c
 11049   00339E  1012               	iorwf	(___xxtofl@val+1)^0,w,c
 11050   0033A0  1013               	iorwf	(___xxtofl@val+2)^0,w,c
 11051   0033A2  1014               	iorwf	(___xxtofl@val+3)^0,w,c
 11052   0033A4  A4D8               	btfss	status,2,c
 11053   0033A6  EFD7  F019         	goto	u5121
 11054   0033AA  EFD9  F019         	goto	u5120
 11055   0033AE                     u5121:
 11056   0033AE  EFE3  F019         	goto	l5082
 11057   0033B2                     u5120:
 11058   0033B2  0E00               	movlw	0
 11059   0033B4  6E11               	movwf	?___xxtofl^0,c
 11060   0033B6  0E00               	movlw	0
 11061   0033B8  6E12               	movwf	(?___xxtofl+1)^0,c
 11062   0033BA  0E00               	movlw	0
 11063   0033BC  6E13               	movwf	(?___xxtofl+2)^0,c
 11064   0033BE  0E00               	movlw	0
 11065   0033C0  6E14               	movwf	(?___xxtofl+3)^0,c
 11066   0033C2  EF74  F01A         	goto	l1029
 11067   0033C6                     l5082:
 11068   0033C6  0E96               	movlw	150
 11069   0033C8  6E1A               	movwf	___xxtofl@exp^0,c
 11070   0033CA  EFED  F019         	goto	l5086
 11071   0033CE                     l5084:
 11072   0033CE  2A1A               	incf	___xxtofl@exp^0,f,c
 11073   0033D0  90D8               	bcf	status,0,c
 11074   0033D2  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11075   0033D4  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11076   0033D6  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11077   0033D8  321B               	rrcf	___xxtofl@arg^0,f,c
 11078   0033DA                     l5086:
 11079   0033DA  0E00               	movlw	0
 11080   0033DC  141B               	andwf	___xxtofl@arg^0,w,c
 11081   0033DE  6E15               	movwf	??___xxtofl^0,c
 11082   0033E0  0E00               	movlw	0
 11083   0033E2  141C               	andwf	(___xxtofl@arg+1)^0,w,c
 11084   0033E4  6E16               	movwf	(??___xxtofl+1)^0,c
 11085   0033E6  0E00               	movlw	0
 11086   0033E8  141D               	andwf	(___xxtofl@arg+2)^0,w,c
 11087   0033EA  6E17               	movwf	(??___xxtofl+2)^0,c
 11088   0033EC  0EFE               	movlw	254
 11089   0033EE  141E               	andwf	(___xxtofl@arg+3)^0,w,c
 11090   0033F0  6E18               	movwf	(??___xxtofl+3)^0,c
 11091   0033F2  5015               	movf	??___xxtofl^0,w,c
 11092   0033F4  1016               	iorwf	(??___xxtofl+1)^0,w,c
 11093   0033F6  1017               	iorwf	(??___xxtofl+2)^0,w,c
 11094   0033F8  1018               	iorwf	(??___xxtofl+3)^0,w,c
 11095   0033FA  A4D8               	btfss	status,2,c
 11096   0033FC  EF02  F01A         	goto	u5131
 11097   003400  EF04  F01A         	goto	u5130
 11098   003404                     u5131:
 11099   003404  EFE7  F019         	goto	l5084
 11100   003408                     u5130:
 11101   003408  EF12  F01A         	goto	l1033
 11102   00340C                     l5088:
 11103   00340C  2A1A               	incf	___xxtofl@exp^0,f,c
 11104   00340E  0E01               	movlw	1
 11105   003410  261B               	addwf	___xxtofl@arg^0,f,c
 11106   003412  0E00               	movlw	0
 11107   003414  221C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11108   003416  221D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11109   003418  221E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11110   00341A  90D8               	bcf	status,0,c
 11111   00341C  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11112   00341E  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11113   003420  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11114   003422  321B               	rrcf	___xxtofl@arg^0,f,c
 11115   003424                     l1033:
 11116   003424  0E00               	movlw	0
 11117   003426  141B               	andwf	___xxtofl@arg^0,w,c
 11118   003428  6E15               	movwf	??___xxtofl^0,c
 11119   00342A  0E00               	movlw	0
 11120   00342C  141C               	andwf	(___xxtofl@arg+1)^0,w,c
 11121   00342E  6E16               	movwf	(??___xxtofl+1)^0,c
 11122   003430  0E00               	movlw	0
 11123   003432  141D               	andwf	(___xxtofl@arg+2)^0,w,c
 11124   003434  6E17               	movwf	(??___xxtofl+2)^0,c
 11125   003436  0EFF               	movlw	255
 11126   003438  141E               	andwf	(___xxtofl@arg+3)^0,w,c
 11127   00343A  6E18               	movwf	(??___xxtofl+3)^0,c
 11128   00343C  5015               	movf	??___xxtofl^0,w,c
 11129   00343E  1016               	iorwf	(??___xxtofl+1)^0,w,c
 11130   003440  1017               	iorwf	(??___xxtofl+2)^0,w,c
 11131   003442  1018               	iorwf	(??___xxtofl+3)^0,w,c
 11132   003444  A4D8               	btfss	status,2,c
 11133   003446  EF27  F01A         	goto	u5141
 11134   00344A  EF29  F01A         	goto	u5140
 11135   00344E                     u5141:
 11136   00344E  EF06  F01A         	goto	l5088
 11137   003452                     u5140:
 11138   003452  EF31  F01A         	goto	l5096
 11139   003456                     l5094:
 11140   003456  061A               	decf	___xxtofl@exp^0,f,c
 11141   003458  90D8               	bcf	status,0,c
 11142   00345A  361B               	rlcf	___xxtofl@arg^0,f,c
 11143   00345C  361C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11144   00345E  361D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11145   003460  361E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11146   003462                     l5096:
 11147   003462  BE1D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11148   003464  EF36  F01A         	goto	u5151
 11149   003468  EF38  F01A         	goto	u5150
 11150   00346C                     u5151:
 11151   00346C  EF40  F01A         	goto	l1040
 11152   003470                     u5150:
 11153   003470  0E02               	movlw	2
 11154   003472  601A               	cpfslt	___xxtofl@exp^0,c
 11155   003474  EF3E  F01A         	goto	u5161
 11156   003478  EF40  F01A         	goto	u5160
 11157   00347C                     u5161:
 11158   00347C  EF2B  F01A         	goto	l5094
 11159   003480                     u5160:
 11160   003480                     l1040:
 11161   003480  B01A               	btfsc	___xxtofl@exp^0,0,c
 11162   003482  EF45  F01A         	goto	u5171
 11163   003486  EF47  F01A         	goto	u5170
 11164   00348A                     u5171:
 11165   00348A  EF48  F01A         	goto	l5102
 11166   00348E                     u5170:
 11167   00348E  9E1D               	bcf	(___xxtofl@arg+2)^0,7,c
 11168   003490                     l5102:
 11169   003490  90D8               	bcf	status,0,c
 11170   003492  321A               	rrcf	___xxtofl@exp^0,f,c
 11171   003494  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
 11172   003498  6A16               	clrf	(??___xxtofl+1)^0,c
 11173   00349A  6A17               	clrf	(??___xxtofl+2)^0,c
 11174   00349C  6A18               	clrf	(??___xxtofl+3)^0,c
 11175   00349E  C015  F018         	movff	??___xxtofl,??___xxtofl+3
 11176   0034A2  6A17               	clrf	(??___xxtofl+2)^0,c
 11177   0034A4  6A16               	clrf	(??___xxtofl+1)^0,c
 11178   0034A6  6A15               	clrf	??___xxtofl^0,c
 11179   0034A8  5015               	movf	??___xxtofl^0,w,c
 11180   0034AA  121B               	iorwf	___xxtofl@arg^0,f,c
 11181   0034AC  5016               	movf	(??___xxtofl+1)^0,w,c
 11182   0034AE  121C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11183   0034B0  5017               	movf	(??___xxtofl+2)^0,w,c
 11184   0034B2  121D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11185   0034B4  5018               	movf	(??___xxtofl+3)^0,w,c
 11186   0034B6  121E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11187   0034B8  5019               	movf	___xxtofl@sign^0,w,c
 11188   0034BA  B4D8               	btfsc	status,2,c
 11189   0034BC  EF62  F01A         	goto	u5181
 11190   0034C0  EF64  F01A         	goto	u5180
 11191   0034C4                     u5181:
 11192   0034C4  EF6C  F01A         	goto	l5112
 11193   0034C8                     u5180:
 11194   0034C8  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
 11195   0034CA  EF6B  F01A         	goto	u5190
 11196   0034CE  EF69  F01A         	goto	u5191
 11197   0034D2                     u5191:
 11198   0034D2  EF6C  F01A         	goto	l5112
 11199   0034D6                     u5190:
 11200   0034D6  8E1E               	bsf	(___xxtofl@arg+3)^0,7,c
 11201   0034D8                     l5112:
 11202   0034D8  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
 11203   0034DC  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
 11204   0034E0  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
 11205   0034E4  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
 11206   0034E8                     l1029:
 11207   0034E8  0012               	return		;funcret
 11208   0034EA                     __end_of___xxtofl:
 11209                           	callstack 0
 11210                           
 11211 ;; *************** function _TMR0_COUNT *****************
 11212 ;; Defined at:
 11213 ;;		line 212 in file "Main_program.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;		None
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;		None
 11218 ;; Return value:  Size  Location     Type
 11219 ;;                  1    wreg      void 
 11220 ;; Registers used:
 11221 ;;		None
 11222 ;; Tracked objects:
 11223 ;;		On entry : 0/0
 11224 ;;		On exit  : 0/0
 11225 ;;		Unchanged: 0/0
 11226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11227 ;;      Params:         0       0       0       0       0       0       0       0       0
 11228 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11230 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11231 ;;Total ram usage:        0 bytes
 11232 ;; Hardware stack levels used: 1
 11233 ;; Hardware stack levels required when called: 2
 11234 ;; This function calls:
 11235 ;;		Nothing
 11236 ;; This function is called by:
 11237 ;;		_FILL
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text41
 11242   00444E                     __ptext41:
 11243                           	callstack 0
 11244   00444E                     _TMR0_COUNT:
 11245                           	callstack 27
 11246   00444E                     
 11247                           ;Main_program.c: 215:     T0CONbits.T08BIT = 1;
 11248   00444E  8CD5               	bsf	213,6,c	;volatile
 11249                           
 11250                           ;Main_program.c: 216:     T0CONbits.T0CS = 1;
 11251   004450  8AD5               	bsf	213,5,c	;volatile
 11252                           
 11253                           ;Main_program.c: 217:     T0CONbits.PSA = 1;
 11254   004452  86D5               	bsf	213,3,c	;volatile
 11255                           
 11256                           ;Main_program.c: 218:     T0CONbits.T0SE = 1;
 11257   004454  88D5               	bsf	213,4,c	;volatile
 11258                           
 11259                           ;Main_program.c: 219:     TMR0L = 255;
 11260   004456  68D6               	setf	214,c	;volatile
 11261                           
 11262                           ;Main_program.c: 220:     T0CONbits.TMR0ON = 1;
 11263   004458  8ED5               	bsf	213,7,c	;volatile
 11264   00445A  0012               	return		;funcret
 11265   00445C                     __end_of_TMR0_COUNT:
 11266                           	callstack 0
 11267                           
 11268 ;; *************** function _Lcd_Write_String *****************
 11269 ;; Defined at:
 11270 ;;		line 104 in file "lcd.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  a               2   20[COMRAM] PTR const unsigned char 
 11273 ;;		 -> STRING_VALUE_IN_ML(5), STR_31(9), STRING_VAL_TYPED(5), STR_29(7), 
 11274 ;;		 -> STR_28(17), STR_27(8), STR_26(17), STR_25(8), 
 11275 ;;		 -> STR_24(8), STR_23(17), STR_22(8), STR_21(8), 
 11276 ;;		 -> STR_20(16), STR_19(8), STR_18(8), STR_17(16), 
 11277 ;;		 -> STR_16(8), STR_15(8), STR_14(17), STR_13(8), 
 11278 ;;		 -> STR_12(8), STR_11(17), STR_10(12), STR_9(17), 
 11279 ;;		 -> STR_8(12), STR_7(17), STR_6(6), STR_5(17), 
 11280 ;;		 -> STR_4(2), STR_3(6), STR_2(17), STR_1(2), 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;  i               2   24[COMRAM] int 
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  1    wreg      void 
 11285 ;; Registers used:
 11286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11287 ;; Tracked objects:
 11288 ;;		On entry : 0/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11292 ;;      Params:         2       0       0       0       0       0       0       0       0
 11293 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11294 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11295 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11296 ;;Total ram usage:        6 bytes
 11297 ;; Hardware stack levels used: 1
 11298 ;; Hardware stack levels required when called: 4
 11299 ;; This function calls:
 11300 ;;		_Lcd_Write_Char
 11301 ;; This function is called by:
 11302 ;;		_main
 11303 ;;		_USER_VALUE
 11304 ;;		_FILL
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           
 11308                           	psect	text42
 11309   003EAC                     __ptext42:
 11310                           	callstack 0
 11311   003EAC                     _Lcd_Write_String:
 11312                           	callstack 25
 11313   003EAC                     
 11314                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 11315   003EAC  0E00               	movlw	0
 11316   003EAE  6E1A               	movwf	(Lcd_Write_String@i+1)^0,c
 11317   003EB0  0E00               	movlw	0
 11318   003EB2  6E19               	movwf	Lcd_Write_String@i^0,c
 11319   003EB4  EF76  F01F         	goto	l5050
 11320   003EB8                     l5046:
 11321                           
 11322                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 11323   003EB8  5019               	movf	Lcd_Write_String@i^0,w,c
 11324   003EBA  2415               	addwf	Lcd_Write_String@a^0,w,c
 11325   003EBC  6E17               	movwf	??_Lcd_Write_String^0,c
 11326   003EBE  501A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11327   003EC0  2016               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11328   003EC2  6E18               	movwf	(??_Lcd_Write_String+1)^0,c
 11329   003EC4  C017  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11330   003EC8  C018  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11331   003ECC  6AF8               	clrf	tblptru,c
 11332   003ECE  0E07               	movlw	(high __ramtop+-1)
 11333   003ED0  64F7               	cpfsgt	tblptrh,c
 11334   003ED2  D003               	bra	u5077
 11335   003ED4  0008               	tblrd		*
 11336   003ED6  50F5               	movf	tablat,w,c
 11337   003ED8  D005               	bra	u5070
 11338   003EDA                     u5077:
 11339   003EDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11340   003EDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11341   003EE2  50E7               	movf	indf1,w,c
 11342   003EE4                     u5070:
 11343   003EE4  ECA4  F021         	call	_Lcd_Write_Char
 11344   003EE8  4A19               	infsnz	Lcd_Write_String@i^0,f,c
 11345   003EEA  2A1A               	incf	(Lcd_Write_String@i+1)^0,f,c
 11346   003EEC                     l5050:
 11347   003EEC  5019               	movf	Lcd_Write_String@i^0,w,c
 11348   003EEE  2415               	addwf	Lcd_Write_String@a^0,w,c
 11349   003EF0  6E17               	movwf	??_Lcd_Write_String^0,c
 11350   003EF2  501A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11351   003EF4  2016               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11352   003EF6  6E18               	movwf	(??_Lcd_Write_String+1)^0,c
 11353   003EF8  C017  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11354   003EFC  C018  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11355   003F00  6AF8               	clrf	tblptru,c
 11356   003F02  0E07               	movlw	(high __ramtop+-1)
 11357   003F04  64F7               	cpfsgt	tblptrh,c
 11358   003F06  D003               	bra	u5087
 11359   003F08  0008               	tblrd		*
 11360   003F0A  50F5               	movf	tablat,w,c
 11361   003F0C  D005               	bra	u5080
 11362   003F0E                     u5087:
 11363   003F0E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11364   003F12  CFF7 FFE2          	movff	tblptrh,fsr1h
 11365   003F16  50E7               	movf	indf1,w,c
 11366   003F18                     u5080:
 11367   003F18  0900               	iorlw	0
 11368   003F1A  A4D8               	btfss	status,2,c
 11369   003F1C  EF92  F01F         	goto	u5091
 11370   003F20  EF94  F01F         	goto	u5090
 11371   003F24                     u5091:
 11372   003F24  EF5C  F01F         	goto	l5046
 11373   003F28                     u5090:
 11374   003F28  0012               	return		;funcret
 11375   003F2A                     __end_of_Lcd_Write_String:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function _Lcd_Write_Char *****************
 11379 ;; Defined at:
 11380 ;;		line 88 in file "lcd.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  a               1    wreg     unsigned char 
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;  a               1   19[COMRAM] unsigned char 
 11385 ;;  y               1   18[COMRAM] unsigned char 
 11386 ;;  temp            1   17[COMRAM] unsigned char 
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1    wreg      void 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11396 ;;      Params:         0       0       0       0       0       0       0       0       0
 11397 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11399 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11400 ;;Total ram usage:        3 bytes
 11401 ;; Hardware stack levels used: 1
 11402 ;; Hardware stack levels required when called: 3
 11403 ;; This function calls:
 11404 ;;		_Lcd_Port
 11405 ;; This function is called by:
 11406 ;;		_main
 11407 ;;		_WELCOME
 11408 ;;		_USER_VALUE
 11409 ;;		_FILL
 11410 ;;		_Lcd_Write_String
 11411 ;;		_Lcd_CGRAM_CreateChar
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text43
 11416   004348                     __ptext43:
 11417                           	callstack 0
 11418   004348                     _Lcd_Write_Char:
 11419                           	callstack 26
 11420                           
 11421                           ;incstack = 0
 11422                           ;Lcd_Write_Char@a stored from wreg
 11423   004348  6E14               	movwf	Lcd_Write_Char@a^0,c
 11424   00434A                     
 11425                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 11426   00434A  5014               	movf	Lcd_Write_Char@a^0,w,c
 11427   00434C  0B0F               	andlw	15
 11428   00434E  6E12               	movwf	Lcd_Write_Char@temp^0,c
 11429                           
 11430                           ;lcd.c: 92:     y = a&0xF0;
 11431   004350  5014               	movf	Lcd_Write_Char@a^0,w,c
 11432   004352  0BF0               	andlw	240
 11433   004354  6E13               	movwf	Lcd_Write_Char@y^0,c
 11434   004356                     
 11435                           ;lcd.c: 93:     LATAbits.LA0 = 1;
 11436   004356  8089               	bsf	137,0,c	;volatile
 11437   004358                     
 11438                           ;lcd.c: 94:     Lcd_Port(y>>4);
 11439   004358  3813               	swapf	Lcd_Write_Char@y^0,w,c
 11440   00435A  0B0F               	andlw	15
 11441   00435C  EC05  F020         	call	_Lcd_Port
 11442   004360                     
 11443                           ;lcd.c: 95:     LATAbits.LA1 = 1;
 11444   004360  8289               	bsf	137,1,c	;volatile
 11445   004362                     
 11446                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000L/4000000.0)));
 11447   004362  0E1A               	movlw	26
 11448   004364                     u8527:
 11449   004364  2EE8               	decfsz	wreg,f,c
 11450   004366  D7FE               	bra	u8527
 11451   004368  D000               	nop2	
 11452   00436A                     
 11453                           ;lcd.c: 97:     LATAbits.LA1 = 0;
 11454   00436A  9289               	bcf	137,1,c	;volatile
 11455   00436C                     
 11456                           ;lcd.c: 98:     Lcd_Port(temp);
 11457   00436C  5012               	movf	Lcd_Write_Char@temp^0,w,c
 11458   00436E  EC05  F020         	call	_Lcd_Port
 11459   004372                     
 11460                           ;lcd.c: 99:     LATAbits.LA1 = 1;
 11461   004372  8289               	bsf	137,1,c	;volatile
 11462   004374                     
 11463                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000L/4000000.0)));
 11464   004374  0E1A               	movlw	26
 11465   004376                     u8537:
 11466   004376  2EE8               	decfsz	wreg,f,c
 11467   004378  D7FE               	bra	u8537
 11468   00437A  D000               	nop2	
 11469   00437C                     
 11470                           ;lcd.c: 101:     LATAbits.LA1 = 0;
 11471   00437C  9289               	bcf	137,1,c	;volatile
 11472   00437E  0012               	return		;funcret
 11473   004380                     __end_of_Lcd_Write_Char:
 11474                           	callstack 0
 11475                           
 11476 ;; *************** function _Lcd_Set_Cursor *****************
 11477 ;; Defined at:
 11478 ;;		line 26 in file "lcd.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;  a               1    wreg     unsigned char 
 11481 ;;  b               1   19[COMRAM] unsigned char 
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  a               1   20[COMRAM] unsigned char 
 11484 ;;  temp            1   23[COMRAM] unsigned char 
 11485 ;;  y               1   22[COMRAM] unsigned char 
 11486 ;;  z               1   21[COMRAM] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, status,0, cstack
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11496 ;;      Params:         1       0       0       0       0       0       0       0       0
 11497 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11499 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11500 ;;Total ram usage:        5 bytes
 11501 ;; Hardware stack levels used: 1
 11502 ;; Hardware stack levels required when called: 4
 11503 ;; This function calls:
 11504 ;;		_Lcd_Cmd
 11505 ;; This function is called by:
 11506 ;;		_main
 11507 ;;		_WELCOME
 11508 ;;		_USER_VALUE
 11509 ;;		_FILL
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text44
 11514   003B16                     __ptext44:
 11515                           	callstack 0
 11516   003B16                     _Lcd_Set_Cursor:
 11517                           	callstack 25
 11518                           
 11519                           ;incstack = 0
 11520                           ;Lcd_Set_Cursor@a stored from wreg
 11521   003B16  6E15               	movwf	Lcd_Set_Cursor@a^0,c
 11522   003B18                     
 11523                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 11524   003B18  0415               	decf	Lcd_Set_Cursor@a^0,w,c
 11525   003B1A  A4D8               	btfss	status,2,c
 11526   003B1C  EF92  F01D         	goto	u5031
 11527   003B20  EF94  F01D         	goto	u5030
 11528   003B24                     u5031:
 11529   003B24  EFA5  F01D         	goto	l5020
 11530   003B28                     u5030:
 11531   003B28                     
 11532                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 11533   003B28  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11534   003B2A  0F7F               	addlw	127
 11535   003B2C  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11536                           
 11537                           ;lcd.c: 32:         z = temp>>4;
 11538   003B2E  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11539   003B30  0B0F               	andlw	15
 11540   003B32  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11541                           
 11542                           ;lcd.c: 33:         y = temp & 0x0F;
 11543   003B34  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11544   003B36  0B0F               	andlw	15
 11545   003B38  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11546   003B3A                     
 11547                           ;lcd.c: 34:         Lcd_Cmd(z);
 11548   003B3A  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11549   003B3C  ECE9  F021         	call	_Lcd_Cmd
 11550   003B40                     
 11551                           ;lcd.c: 35:         Lcd_Cmd(y);
 11552   003B40  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11553   003B42  ECE9  F021         	call	_Lcd_Cmd
 11554                           
 11555                           ;lcd.c: 36:     }
 11556   003B46  EFF3  F01D         	goto	l249
 11557   003B4A                     l5020:
 11558   003B4A  0E02               	movlw	2
 11559   003B4C  1815               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11560   003B4E  A4D8               	btfss	status,2,c
 11561   003B50  EFAC  F01D         	goto	u5041
 11562   003B54  EFAE  F01D         	goto	u5040
 11563   003B58                     u5041:
 11564   003B58  EFBF  F01D         	goto	l5028
 11565   003B5C                     u5040:
 11566   003B5C                     
 11567                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 11568   003B5C  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11569   003B5E  0FBF               	addlw	191
 11570   003B60  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11571                           
 11572                           ;lcd.c: 40:         z = temp>>4;
 11573   003B62  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11574   003B64  0B0F               	andlw	15
 11575   003B66  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11576                           
 11577                           ;lcd.c: 41:         y = temp & 0x0F;
 11578   003B68  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11579   003B6A  0B0F               	andlw	15
 11580   003B6C  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11581   003B6E                     
 11582                           ;lcd.c: 42:         Lcd_Cmd(z);
 11583   003B6E  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11584   003B70  ECE9  F021         	call	_Lcd_Cmd
 11585   003B74                     
 11586                           ;lcd.c: 43:         Lcd_Cmd(y);
 11587   003B74  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11588   003B76  ECE9  F021         	call	_Lcd_Cmd
 11589                           
 11590                           ;lcd.c: 44:     }
 11591   003B7A  EFF3  F01D         	goto	l249
 11592   003B7E                     l5028:
 11593   003B7E  0E03               	movlw	3
 11594   003B80  1815               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11595   003B82  A4D8               	btfss	status,2,c
 11596   003B84  EFC6  F01D         	goto	u5051
 11597   003B88  EFC8  F01D         	goto	u5050
 11598   003B8C                     u5051:
 11599   003B8C  EFD9  F01D         	goto	l5036
 11600   003B90                     u5050:
 11601   003B90                     
 11602                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 11603   003B90  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11604   003B92  0F93               	addlw	147
 11605   003B94  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11606                           
 11607                           ;lcd.c: 48:         z = temp>>4;
 11608   003B96  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11609   003B98  0B0F               	andlw	15
 11610   003B9A  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11611                           
 11612                           ;lcd.c: 49:         y = temp & 0x0F;
 11613   003B9C  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11614   003B9E  0B0F               	andlw	15
 11615   003BA0  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11616   003BA2                     
 11617                           ;lcd.c: 50:         Lcd_Cmd(z);
 11618   003BA2  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11619   003BA4  ECE9  F021         	call	_Lcd_Cmd
 11620   003BA8                     
 11621                           ;lcd.c: 51:         Lcd_Cmd(y);
 11622   003BA8  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11623   003BAA  ECE9  F021         	call	_Lcd_Cmd
 11624                           
 11625                           ;lcd.c: 52:     }
 11626   003BAE  EFF3  F01D         	goto	l249
 11627   003BB2                     l5036:
 11628   003BB2  0E04               	movlw	4
 11629   003BB4  1815               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11630   003BB6  A4D8               	btfss	status,2,c
 11631   003BB8  EFE0  F01D         	goto	u5061
 11632   003BBC  EFE2  F01D         	goto	u5060
 11633   003BC0                     u5061:
 11634   003BC0  EFF3  F01D         	goto	l245
 11635   003BC4                     u5060:
 11636   003BC4                     
 11637                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 11638   003BC4  5014               	movf	Lcd_Set_Cursor@b^0,w,c
 11639   003BC6  0FD3               	addlw	211
 11640   003BC8  6E18               	movwf	Lcd_Set_Cursor@temp^0,c
 11641                           
 11642                           ;lcd.c: 56:         z = temp>>4;
 11643   003BCA  3818               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11644   003BCC  0B0F               	andlw	15
 11645   003BCE  6E16               	movwf	Lcd_Set_Cursor@z^0,c
 11646                           
 11647                           ;lcd.c: 57:         y = temp & 0x0F;
 11648   003BD0  5018               	movf	Lcd_Set_Cursor@temp^0,w,c
 11649   003BD2  0B0F               	andlw	15
 11650   003BD4  6E17               	movwf	Lcd_Set_Cursor@y^0,c
 11651   003BD6                     
 11652                           ;lcd.c: 58:         Lcd_Cmd(z);
 11653   003BD6  5016               	movf	Lcd_Set_Cursor@z^0,w,c
 11654   003BD8  ECE9  F021         	call	_Lcd_Cmd
 11655   003BDC                     
 11656                           ;lcd.c: 59:         Lcd_Cmd(y);
 11657   003BDC  5017               	movf	Lcd_Set_Cursor@y^0,w,c
 11658   003BDE  ECE9  F021         	call	_Lcd_Cmd
 11659   003BE2  EFF3  F01D         	goto	l249
 11660   003BE6                     l245:
 11661   003BE6                     l249:
 11662   003BE6  0012               	return		;funcret
 11663   003BE8                     __end_of_Lcd_Set_Cursor:
 11664                           	callstack 0
 11665                           
 11666 ;; *************** function _Lcd_Clear *****************
 11667 ;; Defined at:
 11668 ;;		line 20 in file "lcd.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;		None
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		wreg, status,2, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0
 11683 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11685 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11686 ;;Total ram usage:        0 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 4
 11689 ;; This function calls:
 11690 ;;		_Lcd_Cmd
 11691 ;; This function is called by:
 11692 ;;		_main
 11693 ;;		_WELCOME
 11694 ;;		_USER_VALUE
 11695 ;;		_FILL
 11696 ;;		_Lcd_Init
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text45
 11701   00445C                     __ptext45:
 11702                           	callstack 0
 11703   00445C                     _Lcd_Clear:
 11704                           	callstack 25
 11705   00445C                     
 11706                           ;lcd.c: 22:     Lcd_Cmd(0);
 11707   00445C  0E00               	movlw	0
 11708   00445E  ECE9  F021         	call	_Lcd_Cmd
 11709                           
 11710                           ;lcd.c: 23:     Lcd_Cmd(1);
 11711   004462  0E01               	movlw	1
 11712   004464  ECE9  F021         	call	_Lcd_Cmd
 11713   004468  0012               	return		;funcret
 11714   00446A                     __end_of_Lcd_Clear:
 11715                           	callstack 0
 11716                           
 11717 ;; *************** function _Lcd_Cmd *****************
 11718 ;; Defined at:
 11719 ;;		line 11 in file "lcd.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  a               1    wreg     unsigned char 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;  a               1   18[COMRAM] unsigned char 
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  1    wreg      void 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2, cstack
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11733 ;;      Params:         0       0       0       0       0       0       0       0       0
 11734 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11735 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11736 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11737 ;;Total ram usage:        2 bytes
 11738 ;; Hardware stack levels used: 1
 11739 ;; Hardware stack levels required when called: 3
 11740 ;; This function calls:
 11741 ;;		_Lcd_Port
 11742 ;; This function is called by:
 11743 ;;		_Lcd_Clear
 11744 ;;		_Lcd_Set_Cursor
 11745 ;;		_Lcd_Init
 11746 ;;		_Lcd_Blink
 11747 ;;		_Lcd_NoBlink
 11748 ;;		_Lcd_CGRAM_Init
 11749 ;;		_Lcd_CGRAM_Close
 11750 ;;		_Lcd_Shift_Right
 11751 ;;		_Lcd_Shift_Left
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text46
 11756   0043D2                     __ptext46:
 11757                           	callstack 0
 11758   0043D2                     _Lcd_Cmd:
 11759                           	callstack 25
 11760                           
 11761                           ;incstack = 0
 11762                           ;Lcd_Cmd@a stored from wreg
 11763   0043D2  6E13               	movwf	Lcd_Cmd@a^0,c
 11764   0043D4                     
 11765                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA0 = 0;
 11766   0043D4  9089               	bcf	137,0,c	;volatile
 11767   0043D6                     
 11768                           ;lcd.c: 14:     Lcd_Port(a);
 11769   0043D6  5013               	movf	Lcd_Cmd@a^0,w,c
 11770   0043D8  EC05  F020         	call	_Lcd_Port
 11771   0043DC                     
 11772                           ;lcd.c: 15:     LATAbits.LA1 = 1;
 11773   0043DC  8289               	bsf	137,1,c	;volatile
 11774   0043DE                     
 11775                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000L/4000.0)));
 11776   0043DE  0E0B               	movlw	11
 11777   0043E0  6E12               	movwf	??_Lcd_Cmd^0,c
 11778   0043E2  0E62               	movlw	98
 11779   0043E4                     u8547:
 11780   0043E4  2EE8               	decfsz	wreg,f,c
 11781   0043E6  D7FE               	bra	u8547
 11782   0043E8  2E12               	decfsz	??_Lcd_Cmd^0,f,c
 11783   0043EA  D7FC               	bra	u8547
 11784   0043EC  D000               	nop2	
 11785   0043EE                     
 11786                           ;lcd.c: 17:     LATAbits.LA1 = 0;
 11787   0043EE  9289               	bcf	137,1,c	;volatile
 11788   0043F0  0012               	return		;funcret
 11789   0043F2                     __end_of_Lcd_Cmd:
 11790                           	callstack 0
 11791                           
 11792 ;; *************** function _Lcd_Port *****************
 11793 ;; Defined at:
 11794 ;;		line 3 in file "lcd.c"
 11795 ;; Parameters:    Size  Location     Type
 11796 ;;  a               1    wreg     unsigned char 
 11797 ;; Auto vars:     Size  Location     Type
 11798 ;;  a               1   16[COMRAM] unsigned char 
 11799 ;; Return value:  Size  Location     Type
 11800 ;;                  1    wreg      void 
 11801 ;; Registers used:
 11802 ;;		wreg
 11803 ;; Tracked objects:
 11804 ;;		On entry : 0/0
 11805 ;;		On exit  : 0/0
 11806 ;;		Unchanged: 0/0
 11807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11808 ;;      Params:         0       0       0       0       0       0       0       0       0
 11809 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11810 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11811 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11812 ;;Total ram usage:        1 bytes
 11813 ;; Hardware stack levels used: 1
 11814 ;; Hardware stack levels required when called: 2
 11815 ;; This function calls:
 11816 ;;		Nothing
 11817 ;; This function is called by:
 11818 ;;		_Lcd_Cmd
 11819 ;;		_Lcd_Init
 11820 ;;		_Lcd_Write_Char
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text47
 11825   00400A                     __ptext47:
 11826                           	callstack 0
 11827   00400A                     _Lcd_Port:
 11828                           	callstack 26
 11829                           
 11830                           ;incstack = 0
 11831                           ;Lcd_Port@a stored from wreg
 11832   00400A  6E11               	movwf	Lcd_Port@a^0,c
 11833   00400C                     
 11834                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATBbits.LB4 = 1) 
      +                          : (LATBbits.LB4 = 0);
 11835   00400C  A011               	btfss	Lcd_Port@a^0,0,c
 11836   00400E  EF0B  F020         	goto	u4911
 11837   004012  EF0D  F020         	goto	u4910
 11838   004016                     u4911:
 11839   004016  EF10  F020         	goto	l218
 11840   00401A                     u4910:
 11841   00401A  888A               	bsf	138,4,c	;volatile
 11842   00401C  EF11  F020         	goto	l4830
 11843   004020                     l218:
 11844   004020  988A               	bcf	138,4,c	;volatile
 11845   004022                     l4830:
 11846                           
 11847                           ;lcd.c: 6:     (a & 2) ? (LATBbits.LB5 = 1) : (LATBbits.LB5 = 0);
 11848   004022  A211               	btfss	Lcd_Port@a^0,1,c
 11849   004024  EF16  F020         	goto	u4921
 11850   004028  EF18  F020         	goto	u4920
 11851   00402C                     u4921:
 11852   00402C  EF1B  F020         	goto	l222
 11853   004030                     u4920:
 11854   004030  8A8A               	bsf	138,5,c	;volatile
 11855   004032  EF1C  F020         	goto	l4834
 11856   004036                     l222:
 11857   004036  9A8A               	bcf	138,5,c	;volatile
 11858   004038                     l4834:
 11859                           
 11860                           ;lcd.c: 7:     (a & 4) ? (LATBbits.LB6 = 1) : (LATBbits.LB6 = 0);
 11861   004038  A411               	btfss	Lcd_Port@a^0,2,c
 11862   00403A  EF21  F020         	goto	u4931
 11863   00403E  EF23  F020         	goto	u4930
 11864   004042                     u4931:
 11865   004042  EF26  F020         	goto	l226
 11866   004046                     u4930:
 11867   004046  8C8A               	bsf	138,6,c	;volatile
 11868   004048  EF27  F020         	goto	l4838
 11869   00404C                     l226:
 11870   00404C  9C8A               	bcf	138,6,c	;volatile
 11871   00404E                     l4838:
 11872                           
 11873                           ;lcd.c: 8:     (a & 8) ? (LATBbits.LB7 = 1) : (LATBbits.LB7 = 0);
 11874   00404E  A611               	btfss	Lcd_Port@a^0,3,c
 11875   004050  EF2C  F020         	goto	u4941
 11876   004054  EF2E  F020         	goto	u4940
 11877   004058                     u4941:
 11878   004058  EF31  F020         	goto	l230
 11879   00405C                     u4940:
 11880   00405C  8E8A               	bsf	138,7,c	;volatile
 11881   00405E  EF32  F020         	goto	l233
 11882   004062                     l230:
 11883   004062  9E8A               	bcf	138,7,c	;volatile
 11884   004064                     l233:
 11885   004064  0012               	return		;funcret
 11886   004066                     __end_of_Lcd_Port:
 11887                           	callstack 0
 11888                           
 11889 ;; *************** function _ISR_TIMER0 *****************
 11890 ;; Defined at:
 11891 ;;		line 50 in file "Main_program.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;		None
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, status,2, status,0, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11905 ;;      Params:         0       0       0       0       0       0       0       0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11908 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11909 ;;Total ram usage:        0 bytes
 11910 ;; Hardware stack levels used: 1
 11911 ;; Hardware stack levels required when called: 1
 11912 ;; This function calls:
 11913 ;;		i2___fladd
 11914 ;; This function is called by:
 11915 ;;		Interrupt level 2
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	intcode
 11920   000008                     __pintcode:
 11921                           	callstack 0
 11922   000008                     _ISR_TIMER0:
 11923                           	callstack 20
 11924                           
 11925                           ;incstack = 0
 11926   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11927   00000A  EDDA  F020         	call	int_func,f	;refresh shadow registers
 11928                           
 11929                           	psect	intcode_body
 11930   0041B4                     __pintcode_body:
 11931                           	callstack 20
 11932   0041B4                     int_func:
 11933                           	callstack 20
 11934   0041B4  0006               	pop		; remove dummy address from shadow register refresh
 11935   0041B6                     
 11936                           ;Main_program.c: 53:     if (INTCONbits.TMR0IF == 1)
 11937   0041B6  A4F2               	btfss	242,2,c	;volatile
 11938   0041B8  EFE0  F020         	goto	i2u585_41
 11939   0041BC  EFE2  F020         	goto	i2u585_40
 11940   0041C0                     i2u585_41:
 11941   0041C0  EFFE  F020         	goto	i2l124
 11942   0041C4                     i2u585_40:
 11943   0041C4                     
 11944                           ;Main_program.c: 54:     {;Main_program.c: 55:         PULSE++;
 11945   0041C4  C03E  F001         	movff	_PULSE,i2___fladd@b
 11946   0041C8  C03F  F002         	movff	_PULSE+1,i2___fladd@b+1
 11947   0041CC  C040  F003         	movff	_PULSE+2,i2___fladd@b+2
 11948   0041D0  C041  F004         	movff	_PULSE+3,i2___fladd@b+3
 11949   0041D4  0E00               	movlw	0
 11950   0041D6  6E05               	movwf	i2___fladd@a^0,c
 11951   0041D8  0E00               	movlw	0
 11952   0041DA  6E06               	movwf	(i2___fladd@a+1)^0,c
 11953   0041DC  0E80               	movlw	128
 11954   0041DE  6E07               	movwf	(i2___fladd@a+2)^0,c
 11955   0041E0  0E3F               	movlw	63
 11956   0041E2  6E08               	movwf	(i2___fladd@a+3)^0,c
 11957   0041E4  EC9B  F007         	call	i2___fladd	;wreg free
 11958   0041E8  C001  F03E         	movff	?i2___fladd,_PULSE
 11959   0041EC  C002  F03F         	movff	?i2___fladd+1,_PULSE+1
 11960   0041F0  C003  F040         	movff	?i2___fladd+2,_PULSE+2
 11961   0041F4  C004  F041         	movff	?i2___fladd+3,_PULSE+3
 11962   0041F8                     
 11963                           ;Main_program.c: 56:         TMR0L = 255;
 11964   0041F8  68D6               	setf	214,c	;volatile
 11965   0041FA                     
 11966                           ;Main_program.c: 57:         INTCONbits.TMR0IF = 0;
 11967   0041FA  94F2               	bcf	242,2,c	;volatile
 11968   0041FC                     i2l124:
 11969   0041FC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11970   0041FE  0011               	retfie		f
 11971   004200                     __end_of_ISR_TIMER0:
 11972                           	callstack 0
 11973                           
 11974 ;; *************** function i2___fladd *****************
 11975 ;; Defined at:
 11976 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 11977 ;; Parameters:    Size  Location     Type
 11978 ;;  b               4    0[COMRAM] void 
 11979 ;;  a               4    4[COMRAM] void 
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;  grs             1   15[COMRAM] unsigned char 
 11982 ;;  bexp            1   14[COMRAM] unsigned char 
 11983 ;;  aexp            1   13[COMRAM] unsigned char 
 11984 ;;  signs           1   12[COMRAM] unsigned char 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  4    0[COMRAM] unsigned char 
 11987 ;; Registers used:
 11988 ;;		wreg, status,2, status,0
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11994 ;;      Params:         8       0       0       0       0       0       0       0       0
 11995 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11996 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11997 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11998 ;;Total ram usage:       16 bytes
 11999 ;; Hardware stack levels used: 1
 12000 ;; This function calls:
 12001 ;;		Nothing
 12002 ;; This function is called by:
 12003 ;;		_ISR_TIMER0
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           	psect	text49
 12008   000F36                     __ptext49:
 12009                           	callstack 0
 12010   000F36                     i2___fladd:
 12011                           	callstack 20
 12012   000F36  5004               	movf	(i2___fladd@b+3)^0,w,c
 12013   000F38  0B80               	andlw	128
 12014   000F3A  6E0D               	movwf	i2___fladd@signs^0,c
 12015   000F3C  5004               	movf	(i2___fladd@b+3)^0,w,c
 12016   000F3E  2404               	addwf	(i2___fladd@b+3)^0,w,c
 12017   000F40  6E0F               	movwf	i2___fladd@bexp^0,c
 12018   000F42  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 12019   000F44  EFA6  F007         	goto	i2u546_41
 12020   000F48  EFA8  F007         	goto	i2u546_40
 12021   000F4C                     i2u546_41:
 12022   000F4C  EFA9  F007         	goto	i2l5574
 12023   000F50                     i2u546_40:
 12024   000F50  800F               	bsf	i2___fladd@bexp^0,0,c
 12025   000F52                     i2l5574:
 12026   000F52  500F               	movf	i2___fladd@bexp^0,w,c
 12027   000F54  B4D8               	btfsc	status,2,c
 12028   000F56  EFAF  F007         	goto	i2u547_41
 12029   000F5A  EFB1  F007         	goto	i2u547_40
 12030   000F5E                     i2u547_41:
 12031   000F5E  EFC6  F007         	goto	i2l5584
 12032   000F62                     i2u547_40:
 12033   000F62  280F               	incf	i2___fladd@bexp^0,w,c
 12034   000F64  A4D8               	btfss	status,2,c
 12035   000F66  EFB7  F007         	goto	i2u548_41
 12036   000F6A  EFB9  F007         	goto	i2u548_40
 12037   000F6E                     i2u548_41:
 12038   000F6E  EFC1  F007         	goto	i2l5580
 12039   000F72                     i2u548_40:
 12040   000F72  0E00               	movlw	0
 12041   000F74  6E01               	movwf	i2___fladd@b^0,c
 12042   000F76  0E00               	movlw	0
 12043   000F78  6E02               	movwf	(i2___fladd@b+1)^0,c
 12044   000F7A  0E00               	movlw	0
 12045   000F7C  6E03               	movwf	(i2___fladd@b+2)^0,c
 12046   000F7E  0E00               	movlw	0
 12047   000F80  6E04               	movwf	(i2___fladd@b+3)^0,c
 12048   000F82                     i2l5580:
 12049   000F82  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 12050   000F84  0E00               	movlw	0
 12051   000F86  6E04               	movwf	(i2___fladd@b+3)^0,c
 12052   000F88  EFCE  F007         	goto	i2l5586
 12053   000F8C                     i2l5584:
 12054   000F8C  0E00               	movlw	0
 12055   000F8E  6E01               	movwf	i2___fladd@b^0,c
 12056   000F90  0E00               	movlw	0
 12057   000F92  6E02               	movwf	(i2___fladd@b+1)^0,c
 12058   000F94  0E00               	movlw	0
 12059   000F96  6E03               	movwf	(i2___fladd@b+2)^0,c
 12060   000F98  0E00               	movlw	0
 12061   000F9A  6E04               	movwf	(i2___fladd@b+3)^0,c
 12062   000F9C                     i2l5586:
 12063   000F9C  5008               	movf	(i2___fladd@a+3)^0,w,c
 12064   000F9E  0B80               	andlw	128
 12065   000FA0  6E0E               	movwf	i2___fladd@aexp^0,c
 12066   000FA2  500D               	movf	i2___fladd@signs^0,w,c
 12067   000FA4  180E               	xorwf	i2___fladd@aexp^0,w,c
 12068   000FA6  B4D8               	btfsc	status,2,c
 12069   000FA8  EFD8  F007         	goto	i2u549_41
 12070   000FAC  EFDA  F007         	goto	i2u549_40
 12071   000FB0                     i2u549_41:
 12072   000FB0  EFDB  F007         	goto	i2l5592
 12073   000FB4                     i2u549_40:
 12074   000FB4  8C0D               	bsf	i2___fladd@signs^0,6,c
 12075   000FB6                     i2l5592:
 12076   000FB6  5008               	movf	(i2___fladd@a+3)^0,w,c
 12077   000FB8  2408               	addwf	(i2___fladd@a+3)^0,w,c
 12078   000FBA  6E0E               	movwf	i2___fladd@aexp^0,c
 12079   000FBC  AE07               	btfss	(i2___fladd@a+2)^0,7,c
 12080   000FBE  EFE3  F007         	goto	i2u550_41
 12081   000FC2  EFE5  F007         	goto	i2u550_40
 12082   000FC6                     i2u550_41:
 12083   000FC6  EFE6  F007         	goto	i2l5598
 12084   000FCA                     i2u550_40:
 12085   000FCA  800E               	bsf	i2___fladd@aexp^0,0,c
 12086   000FCC                     i2l5598:
 12087   000FCC  500E               	movf	i2___fladd@aexp^0,w,c
 12088   000FCE  B4D8               	btfsc	status,2,c
 12089   000FD0  EFEC  F007         	goto	i2u551_41
 12090   000FD4  EFEE  F007         	goto	i2u551_40
 12091   000FD8                     i2u551_41:
 12092   000FD8  EF03  F008         	goto	i2l5608
 12093   000FDC                     i2u551_40:
 12094   000FDC  280E               	incf	i2___fladd@aexp^0,w,c
 12095   000FDE  A4D8               	btfss	status,2,c
 12096   000FE0  EFF4  F007         	goto	i2u552_41
 12097   000FE4  EFF6  F007         	goto	i2u552_40
 12098   000FE8                     i2u552_41:
 12099   000FE8  EFFE  F007         	goto	i2l5604
 12100   000FEC                     i2u552_40:
 12101   000FEC  0E00               	movlw	0
 12102   000FEE  6E05               	movwf	i2___fladd@a^0,c
 12103   000FF0  0E00               	movlw	0
 12104   000FF2  6E06               	movwf	(i2___fladd@a+1)^0,c
 12105   000FF4  0E00               	movlw	0
 12106   000FF6  6E07               	movwf	(i2___fladd@a+2)^0,c
 12107   000FF8  0E00               	movlw	0
 12108   000FFA  6E08               	movwf	(i2___fladd@a+3)^0,c
 12109   000FFC                     i2l5604:
 12110   000FFC  8E07               	bsf	(i2___fladd@a+2)^0,7,c
 12111   000FFE  0E00               	movlw	0
 12112   001000  6E08               	movwf	(i2___fladd@a+3)^0,c
 12113   001002  EF0B  F008         	goto	i2l5610
 12114   001006                     i2l5608:
 12115   001006  0E00               	movlw	0
 12116   001008  6E05               	movwf	i2___fladd@a^0,c
 12117   00100A  0E00               	movlw	0
 12118   00100C  6E06               	movwf	(i2___fladd@a+1)^0,c
 12119   00100E  0E00               	movlw	0
 12120   001010  6E07               	movwf	(i2___fladd@a+2)^0,c
 12121   001012  0E00               	movlw	0
 12122   001014  6E08               	movwf	(i2___fladd@a+3)^0,c
 12123   001016                     i2l5610:
 12124   001016  500F               	movf	i2___fladd@bexp^0,w,c
 12125   001018  5C0E               	subwf	i2___fladd@aexp^0,w,c
 12126   00101A  B0D8               	btfsc	status,0,c
 12127   00101C  EF12  F008         	goto	i2u553_41
 12128   001020  EF14  F008         	goto	i2u553_40
 12129   001024                     i2u553_41:
 12130   001024  EF3B  F008         	goto	i2l5646
 12131   001028                     i2u553_40:
 12132   001028  AC0D               	btfss	i2___fladd@signs^0,6,c
 12133   00102A  EF19  F008         	goto	i2u554_41
 12134   00102E  EF1B  F008         	goto	i2u554_40
 12135   001032                     i2u554_41:
 12136   001032  EF1D  F008         	goto	i2l5616
 12137   001036                     i2u554_40:
 12138   001036  0E80               	movlw	128
 12139   001038  1A0D               	xorwf	i2___fladd@signs^0,f,c
 12140   00103A                     i2l5616:
 12141   00103A  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 12142   00103E  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 12143   001042  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 12144   001046  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 12145   00104A  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 12146   00104E  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 12147   001052  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 12148   001056  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 12149   00105A  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 12150   00105E  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 12151   001062  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 12152   001066  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 12153   00106A  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 12154   00106E  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 12155   001072  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 12156   001076                     i2l5646:
 12157   001076  0E00               	movlw	0
 12158   001078  6E10               	movwf	i2___fladd@grs^0,c
 12159   00107A  500F               	movf	i2___fladd@bexp^0,w,c
 12160   00107C  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 12161   001080  6A0A               	clrf	(??i2___fladd+1)^0,c
 12162   001082  5E09               	subwf	??i2___fladd^0,f,c
 12163   001084  0E00               	movlw	0
 12164   001086  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
 12165   001088  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
 12166   00108A  EF50  F008         	goto	i2u555_41
 12167   00108E  500A               	movf	(??i2___fladd+1)^0,w,c
 12168   001090  E109               	bnz	i2u555_40
 12169   001092  0E1A               	movlw	26
 12170   001094  5C09               	subwf	??i2___fladd^0,w,c
 12171   001096  A0D8               	btfss	status,0,c
 12172   001098  EF50  F008         	goto	i2u555_41
 12173   00109C  EF52  F008         	goto	i2u555_40
 12174   0010A0                     i2u555_41:
 12175   0010A0  EF89  F008         	goto	i2l900
 12176   0010A4                     i2u555_40:
 12177   0010A4  5001               	movf	i2___fladd@b^0,w,c
 12178   0010A6  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 12179   0010A8  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 12180   0010AA  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 12181   0010AC  A4D8               	btfss	status,2,c
 12182   0010AE  EF5B  F008         	goto	i2u556_41
 12183   0010B2  EF5E  F008         	goto	i2u556_40
 12184   0010B6                     i2u556_41:
 12185   0010B6  0E01               	movlw	1
 12186   0010B8  EF5F  F008         	goto	i2u557_40
 12187   0010BC                     i2u556_40:
 12188   0010BC  0E00               	movlw	0
 12189   0010BE                     i2u557_40:
 12190   0010BE  6E10               	movwf	i2___fladd@grs^0,c
 12191   0010C0  0E00               	movlw	0
 12192   0010C2  6E01               	movwf	i2___fladd@b^0,c
 12193   0010C4  0E00               	movlw	0
 12194   0010C6  6E02               	movwf	(i2___fladd@b+1)^0,c
 12195   0010C8  0E00               	movlw	0
 12196   0010CA  6E03               	movwf	(i2___fladd@b+2)^0,c
 12197   0010CC  0E00               	movlw	0
 12198   0010CE  6E04               	movwf	(i2___fladd@b+3)^0,c
 12199   0010D0  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 12200   0010D4  EF92  F008         	goto	i2l899
 12201   0010D8                     i2l901:
 12202   0010D8  A010               	btfss	i2___fladd@grs^0,0,c
 12203   0010DA  EF71  F008         	goto	i2u558_41
 12204   0010DE  EF73  F008         	goto	i2u558_40
 12205   0010E2                     i2u558_41:
 12206   0010E2  EF79  F008         	goto	i2l5658
 12207   0010E6                     i2u558_40:
 12208   0010E6  90D8               	bcf	status,0,c
 12209   0010E8  3010               	rrcf	i2___fladd@grs^0,w,c
 12210   0010EA  0901               	iorlw	1
 12211   0010EC  6E10               	movwf	i2___fladd@grs^0,c
 12212   0010EE  EF7B  F008         	goto	i2l5660
 12213   0010F2                     i2l5658:
 12214   0010F2  90D8               	bcf	status,0,c
 12215   0010F4  3210               	rrcf	i2___fladd@grs^0,f,c
 12216   0010F6                     i2l5660:
 12217   0010F6  A001               	btfss	i2___fladd@b^0,0,c
 12218   0010F8  EF80  F008         	goto	i2u559_41
 12219   0010FC  EF82  F008         	goto	i2u559_40
 12220   001100                     i2u559_41:
 12221   001100  EF83  F008         	goto	i2l5664
 12222   001104                     i2u559_40:
 12223   001104  8E10               	bsf	i2___fladd@grs^0,7,c
 12224   001106                     i2l5664:
 12225   001106  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 12226   001108  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 12227   00110A  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 12228   00110C  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 12229   00110E  3201               	rrcf	i2___fladd@b^0,f,c
 12230   001110  2A0F               	incf	i2___fladd@bexp^0,f,c
 12231   001112                     i2l900:
 12232   001112  500E               	movf	i2___fladd@aexp^0,w,c
 12233   001114  5C0F               	subwf	i2___fladd@bexp^0,w,c
 12234   001116  A0D8               	btfss	status,0,c
 12235   001118  EF90  F008         	goto	i2u560_41
 12236   00111C  EF92  F008         	goto	i2u560_40
 12237   001120                     i2u560_41:
 12238   001120  EF6C  F008         	goto	i2l901
 12239   001124                     i2u560_40:
 12240   001124                     i2l899:
 12241   001124  BC0D               	btfsc	i2___fladd@signs^0,6,c
 12242   001126  EF97  F008         	goto	i2u561_41
 12243   00112A  EF99  F008         	goto	i2u561_40
 12244   00112E                     i2u561_41:
 12245   00112E  EFD9  F008         	goto	i2l5692
 12246   001132                     i2u561_40:
 12247   001132  500F               	movf	i2___fladd@bexp^0,w,c
 12248   001134  A4D8               	btfss	status,2,c
 12249   001136  EF9F  F008         	goto	i2u562_41
 12250   00113A  EFA1  F008         	goto	i2u562_40
 12251   00113E                     i2u562_41:
 12252   00113E  EFAB  F008         	goto	i2l5674
 12253   001142                     i2u562_40:
 12254   001142  0E00               	movlw	0
 12255   001144  6E01               	movwf	?i2___fladd^0,c
 12256   001146  0E00               	movlw	0
 12257   001148  6E02               	movwf	(?i2___fladd+1)^0,c
 12258   00114A  0E00               	movlw	0
 12259   00114C  6E03               	movwf	(?i2___fladd+2)^0,c
 12260   00114E  0E00               	movlw	0
 12261   001150  6E04               	movwf	(?i2___fladd+3)^0,c
 12262   001152  EFFA  F009         	goto	i2l908
 12263   001156                     i2l5674:
 12264   001156  5005               	movf	i2___fladd@a^0,w,c
 12265   001158  2601               	addwf	i2___fladd@b^0,f,c
 12266   00115A  5006               	movf	(i2___fladd@a+1)^0,w,c
 12267   00115C  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 12268   00115E  5007               	movf	(i2___fladd@a+2)^0,w,c
 12269   001160  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 12270   001162  5008               	movf	(i2___fladd@a+3)^0,w,c
 12271   001164  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 12272   001166  A004               	btfss	(i2___fladd@b+3)^0,0,c
 12273   001168  EFB8  F008         	goto	i2u563_41
 12274   00116C  EFBA  F008         	goto	i2u563_40
 12275   001170                     i2u563_41:
 12276   001170  EF66  F009         	goto	i2l5728
 12277   001174                     i2u563_40:
 12278   001174  A010               	btfss	i2___fladd@grs^0,0,c
 12279   001176  EFBF  F008         	goto	i2u564_41
 12280   00117A  EFC1  F008         	goto	i2u564_40
 12281   00117E                     i2u564_41:
 12282   00117E  EFC7  F008         	goto	i2l5682
 12283   001182                     i2u564_40:
 12284   001182  90D8               	bcf	status,0,c
 12285   001184  3010               	rrcf	i2___fladd@grs^0,w,c
 12286   001186  0901               	iorlw	1
 12287   001188  6E10               	movwf	i2___fladd@grs^0,c
 12288   00118A  EFC9  F008         	goto	i2l5684
 12289   00118E                     i2l5682:
 12290   00118E  90D8               	bcf	status,0,c
 12291   001190  3210               	rrcf	i2___fladd@grs^0,f,c
 12292   001192                     i2l5684:
 12293   001192  A001               	btfss	i2___fladd@b^0,0,c
 12294   001194  EFCE  F008         	goto	i2u565_41
 12295   001198  EFD0  F008         	goto	i2u565_40
 12296   00119C                     i2u565_41:
 12297   00119C  EFD1  F008         	goto	i2l5688
 12298   0011A0                     i2u565_40:
 12299   0011A0  8E10               	bsf	i2___fladd@grs^0,7,c
 12300   0011A2                     i2l5688:
 12301   0011A2  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 12302   0011A4  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 12303   0011A6  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 12304   0011A8  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 12305   0011AA  3201               	rrcf	i2___fladd@b^0,f,c
 12306   0011AC  2A0F               	incf	i2___fladd@bexp^0,f,c
 12307   0011AE  EF66  F009         	goto	i2l5728
 12308   0011B2                     i2l5692:
 12309   0011B2  5005               	movf	i2___fladd@a^0,w,c
 12310   0011B4  5C01               	subwf	i2___fladd@b^0,w,c
 12311   0011B6  5006               	movf	(i2___fladd@a+1)^0,w,c
 12312   0011B8  5802               	subwfb	(i2___fladd@b+1)^0,w,c
 12313   0011BA  5007               	movf	(i2___fladd@a+2)^0,w,c
 12314   0011BC  5803               	subwfb	(i2___fladd@b+2)^0,w,c
 12315   0011BE  5004               	movf	(i2___fladd@b+3)^0,w,c
 12316   0011C0  0A80               	xorlw	128
 12317   0011C2  6E09               	movwf	??i2___fladd^0,c
 12318   0011C4  5008               	movf	(i2___fladd@a+3)^0,w,c
 12319   0011C6  0A80               	xorlw	128
 12320   0011C8  5809               	subwfb	??i2___fladd^0,w,c
 12321   0011CA  B0D8               	btfsc	status,0,c
 12322   0011CC  EFEA  F008         	goto	i2u566_41
 12323   0011D0  EFEC  F008         	goto	i2u566_40
 12324   0011D4                     i2u566_41:
 12325   0011D4  EF17  F009         	goto	i2l5702
 12326   0011D8                     i2u566_40:
 12327   0011D8  5001               	movf	i2___fladd@b^0,w,c
 12328   0011DA  5C05               	subwf	i2___fladd@a^0,w,c
 12329   0011DC  6E09               	movwf	??i2___fladd^0,c
 12330   0011DE  5002               	movf	(i2___fladd@b+1)^0,w,c
 12331   0011E0  5806               	subwfb	(i2___fladd@a+1)^0,w,c
 12332   0011E2  6E0A               	movwf	(??i2___fladd+1)^0,c
 12333   0011E4  5003               	movf	(i2___fladd@b+2)^0,w,c
 12334   0011E6  5807               	subwfb	(i2___fladd@a+2)^0,w,c
 12335   0011E8  6E0B               	movwf	(??i2___fladd+2)^0,c
 12336   0011EA  5004               	movf	(i2___fladd@b+3)^0,w,c
 12337   0011EC  5808               	subwfb	(i2___fladd@a+3)^0,w,c
 12338   0011EE  6E0C               	movwf	(??i2___fladd+3)^0,c
 12339   0011F0  0EFF               	movlw	255
 12340   0011F2  2409               	addwf	??i2___fladd^0,w,c
 12341   0011F4  6E01               	movwf	i2___fladd@b^0,c
 12342   0011F6  0EFF               	movlw	255
 12343   0011F8  200A               	addwfc	(??i2___fladd+1)^0,w,c
 12344   0011FA  6E02               	movwf	(i2___fladd@b+1)^0,c
 12345   0011FC  0EFF               	movlw	255
 12346   0011FE  200B               	addwfc	(??i2___fladd+2)^0,w,c
 12347   001200  6E03               	movwf	(i2___fladd@b+2)^0,c
 12348   001202  0EFF               	movlw	255
 12349   001204  200C               	addwfc	(??i2___fladd+3)^0,w,c
 12350   001206  6E04               	movwf	(i2___fladd@b+3)^0,c
 12351   001208  0E80               	movlw	128
 12352   00120A  1A0D               	xorwf	i2___fladd@signs^0,f,c
 12353   00120C  6C10               	negf	i2___fladd@grs^0,c
 12354   00120E  5010               	movf	i2___fladd@grs^0,w,c
 12355   001210  A4D8               	btfss	status,2,c
 12356   001212  EF0D  F009         	goto	i2u567_41
 12357   001216  EF0F  F009         	goto	i2u567_40
 12358   00121A                     i2u567_41:
 12359   00121A  EF1F  F009         	goto	i2l916
 12360   00121E                     i2u567_40:
 12361   00121E  0E01               	movlw	1
 12362   001220  2601               	addwf	i2___fladd@b^0,f,c
 12363   001222  0E00               	movlw	0
 12364   001224  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 12365   001226  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 12366   001228  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 12367   00122A  EF1F  F009         	goto	i2l916
 12368   00122E                     i2l5702:
 12369   00122E  5005               	movf	i2___fladd@a^0,w,c
 12370   001230  5E01               	subwf	i2___fladd@b^0,f,c
 12371   001232  5006               	movf	(i2___fladd@a+1)^0,w,c
 12372   001234  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
 12373   001236  5007               	movf	(i2___fladd@a+2)^0,w,c
 12374   001238  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
 12375   00123A  5008               	movf	(i2___fladd@a+3)^0,w,c
 12376   00123C  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
 12377   00123E                     i2l916:
 12378   00123E  5001               	movf	i2___fladd@b^0,w,c
 12379   001240  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 12380   001242  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 12381   001244  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 12382   001246  A4D8               	btfss	status,2,c
 12383   001248  EF28  F009         	goto	i2u568_41
 12384   00124C  EF2A  F009         	goto	i2u568_40
 12385   001250                     i2u568_41:
 12386   001250  EF5F  F009         	goto	i2l5726
 12387   001254                     i2u568_40:
 12388   001254  5010               	movf	i2___fladd@grs^0,w,c
 12389   001256  A4D8               	btfss	status,2,c
 12390   001258  EF30  F009         	goto	i2u569_41
 12391   00125C  EF32  F009         	goto	i2u569_40
 12392   001260                     i2u569_41:
 12393   001260  EF5F  F009         	goto	i2l5726
 12394   001264                     i2u569_40:
 12395   001264  0E00               	movlw	0
 12396   001266  6E01               	movwf	?i2___fladd^0,c
 12397   001268  0E00               	movlw	0
 12398   00126A  6E02               	movwf	(?i2___fladd+1)^0,c
 12399   00126C  0E00               	movlw	0
 12400   00126E  6E03               	movwf	(?i2___fladd+2)^0,c
 12401   001270  0E00               	movlw	0
 12402   001272  6E04               	movwf	(?i2___fladd+3)^0,c
 12403   001274  EFFA  F009         	goto	i2l908
 12404   001278                     i2l5710:
 12405   001278  90D8               	bcf	status,0,c
 12406   00127A  3601               	rlcf	i2___fladd@b^0,f,c
 12407   00127C  3602               	rlcf	(i2___fladd@b+1)^0,f,c
 12408   00127E  3603               	rlcf	(i2___fladd@b+2)^0,f,c
 12409   001280  3604               	rlcf	(i2___fladd@b+3)^0,f,c
 12410   001282  AE10               	btfss	i2___fladd@grs^0,7,c
 12411   001284  EF46  F009         	goto	i2u570_41
 12412   001288  EF48  F009         	goto	i2u570_40
 12413   00128C                     i2u570_41:
 12414   00128C  EF49  F009         	goto	i2l5716
 12415   001290                     i2u570_40:
 12416   001290  8001               	bsf	i2___fladd@b^0,0,c
 12417   001292                     i2l5716:
 12418   001292  A010               	btfss	i2___fladd@grs^0,0,c
 12419   001294  EF4E  F009         	goto	i2u571_41
 12420   001298  EF50  F009         	goto	i2u571_40
 12421   00129C                     i2u571_41:
 12422   00129C  EF54  F009         	goto	i2l5720
 12423   0012A0                     i2u571_40:
 12424   0012A0  80D8               	bsf	status,0,c
 12425   0012A2  3610               	rlcf	i2___fladd@grs^0,f,c
 12426   0012A4  EF56  F009         	goto	i2l5722
 12427   0012A8                     i2l5720:
 12428   0012A8  90D8               	bcf	status,0,c
 12429   0012AA  3610               	rlcf	i2___fladd@grs^0,f,c
 12430   0012AC                     i2l5722:
 12431   0012AC  500F               	movf	i2___fladd@bexp^0,w,c
 12432   0012AE  B4D8               	btfsc	status,2,c
 12433   0012B0  EF5C  F009         	goto	i2u572_41
 12434   0012B4  EF5E  F009         	goto	i2u572_40
 12435   0012B8                     i2u572_41:
 12436   0012B8  EF5F  F009         	goto	i2l5726
 12437   0012BC                     i2u572_40:
 12438   0012BC  060F               	decf	i2___fladd@bexp^0,f,c
 12439   0012BE                     i2l5726:
 12440   0012BE  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 12441   0012C0  EF64  F009         	goto	i2u573_41
 12442   0012C4  EF66  F009         	goto	i2u573_40
 12443   0012C8                     i2u573_41:
 12444   0012C8  EF3C  F009         	goto	i2l5710
 12445   0012CC                     i2u573_40:
 12446   0012CC                     i2l5728:
 12447   0012CC  0E00               	movlw	0
 12448   0012CE  6E0E               	movwf	i2___fladd@aexp^0,c
 12449   0012D0  AE10               	btfss	i2___fladd@grs^0,7,c
 12450   0012D2  EF6D  F009         	goto	i2u574_41
 12451   0012D6  EF6F  F009         	goto	i2u574_40
 12452   0012DA                     i2u574_41:
 12453   0012DA  EF87  F009         	goto	i2l925
 12454   0012DE                     i2u574_40:
 12455   0012DE  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 12456   0012E2  0E7F               	movlw	127
 12457   0012E4  1609               	andwf	??i2___fladd^0,f,c
 12458   0012E6  B4D8               	btfsc	status,2,c
 12459   0012E8  EF78  F009         	goto	i2u575_41
 12460   0012EC  EF7A  F009         	goto	i2u575_40
 12461   0012F0                     i2u575_41:
 12462   0012F0  EF7E  F009         	goto	i2l926
 12463   0012F4                     i2u575_40:
 12464   0012F4                     i2l5734:
 12465   0012F4  0E01               	movlw	1
 12466   0012F6  6E0E               	movwf	i2___fladd@aexp^0,c
 12467   0012F8  EF87  F009         	goto	i2l925
 12468   0012FC                     i2l926:
 12469   0012FC  A001               	btfss	i2___fladd@b^0,0,c
 12470   0012FE  EF83  F009         	goto	i2u576_41
 12471   001302  EF85  F009         	goto	i2u576_40
 12472   001306                     i2u576_41:
 12473   001306  EF87  F009         	goto	i2l925
 12474   00130A                     i2u576_40:
 12475   00130A  EF7A  F009         	goto	i2l5734
 12476   00130E                     i2l925:
 12477   00130E  500E               	movf	i2___fladd@aexp^0,w,c
 12478   001310  B4D8               	btfsc	status,2,c
 12479   001312  EF8D  F009         	goto	i2u577_41
 12480   001316  EF8F  F009         	goto	i2u577_40
 12481   00131A                     i2u577_41:
 12482   00131A  EFBA  F009         	goto	i2l5746
 12483   00131E                     i2u577_40:
 12484   00131E  0E01               	movlw	1
 12485   001320  2601               	addwf	i2___fladd@b^0,f,c
 12486   001322  0E00               	movlw	0
 12487   001324  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 12488   001326  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 12489   001328  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 12490   00132A  A004               	btfss	(i2___fladd@b+3)^0,0,c
 12491   00132C  EF9A  F009         	goto	i2u578_41
 12492   001330  EF9C  F009         	goto	i2u578_40
 12493   001334                     i2u578_41:
 12494   001334  EFBA  F009         	goto	i2l5746
 12495   001338                     i2u578_40:
 12496   001338  C001  F009         	movff	i2___fladd@b,??i2___fladd
 12497   00133C  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 12498   001340  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 12499   001344  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 12500   001348  340C               	rlcf	(??i2___fladd+3)^0,w,c
 12501   00134A  320C               	rrcf	(??i2___fladd+3)^0,f,c
 12502   00134C  320B               	rrcf	(??i2___fladd+2)^0,f,c
 12503   00134E  320A               	rrcf	(??i2___fladd+1)^0,f,c
 12504   001350  3209               	rrcf	??i2___fladd^0,f,c
 12505   001352  C009  F001         	movff	??i2___fladd,i2___fladd@b
 12506   001356  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 12507   00135A  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 12508   00135E  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 12509   001362  280F               	incf	i2___fladd@bexp^0,w,c
 12510   001364  B4D8               	btfsc	status,2,c
 12511   001366  EFB7  F009         	goto	i2u579_41
 12512   00136A  EFB9  F009         	goto	i2u579_40
 12513   00136E                     i2u579_41:
 12514   00136E  EFBA  F009         	goto	i2l5746
 12515   001372                     i2u579_40:
 12516   001372  2A0F               	incf	i2___fladd@bexp^0,f,c
 12517   001374                     i2l5746:
 12518   001374  280F               	incf	i2___fladd@bexp^0,w,c
 12519   001376  B4D8               	btfsc	status,2,c
 12520   001378  EFC0  F009         	goto	i2u580_41
 12521   00137C  EFC2  F009         	goto	i2u580_40
 12522   001380                     i2u580_41:
 12523   001380  EFCA  F009         	goto	i2l5750
 12524   001384                     i2u580_40:
 12525   001384  500F               	movf	i2___fladd@bexp^0,w,c
 12526   001386  A4D8               	btfss	status,2,c
 12527   001388  EFC8  F009         	goto	i2u581_41
 12528   00138C  EFCA  F009         	goto	i2u581_40
 12529   001390                     i2u581_41:
 12530   001390  EFDC  F009         	goto	i2l5754
 12531   001394                     i2u581_40:
 12532   001394                     i2l5750:
 12533   001394  0E00               	movlw	0
 12534   001396  6E01               	movwf	i2___fladd@b^0,c
 12535   001398  0E00               	movlw	0
 12536   00139A  6E02               	movwf	(i2___fladd@b+1)^0,c
 12537   00139C  0E00               	movlw	0
 12538   00139E  6E03               	movwf	(i2___fladd@b+2)^0,c
 12539   0013A0  0E00               	movlw	0
 12540   0013A2  6E04               	movwf	(i2___fladd@b+3)^0,c
 12541   0013A4  500F               	movf	i2___fladd@bexp^0,w,c
 12542   0013A6  A4D8               	btfss	status,2,c
 12543   0013A8  EFD8  F009         	goto	i2u582_41
 12544   0013AC  EFDA  F009         	goto	i2u582_40
 12545   0013B0                     i2u582_41:
 12546   0013B0  EFDC  F009         	goto	i2l5754
 12547   0013B4                     i2u582_40:
 12548   0013B4  0E00               	movlw	0
 12549   0013B6  6E0D               	movwf	i2___fladd@signs^0,c
 12550   0013B8                     i2l5754:
 12551   0013B8  A00F               	btfss	i2___fladd@bexp^0,0,c
 12552   0013BA  EFE1  F009         	goto	i2u583_41
 12553   0013BE  EFE3  F009         	goto	i2u583_40
 12554   0013C2                     i2u583_41:
 12555   0013C2  EFE6  F009         	goto	i2l5758
 12556   0013C6                     i2u583_40:
 12557   0013C6  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 12558   0013C8  EFE7  F009         	goto	i2l5760
 12559   0013CC                     i2l5758:
 12560   0013CC  9E03               	bcf	(i2___fladd@b+2)^0,7,c
 12561   0013CE                     i2l5760:
 12562   0013CE  90D8               	bcf	status,0,c
 12563   0013D0  300F               	rrcf	i2___fladd@bexp^0,w,c
 12564   0013D2  6E04               	movwf	(i2___fladd@b+3)^0,c
 12565   0013D4  AE0D               	btfss	i2___fladd@signs^0,7,c
 12566   0013D6  EFEF  F009         	goto	i2u584_41
 12567   0013DA  EFF1  F009         	goto	i2u584_40
 12568   0013DE                     i2u584_41:
 12569   0013DE  EFF2  F009         	goto	i2l5766
 12570   0013E2                     i2u584_40:
 12571   0013E2  8E04               	bsf	(i2___fladd@b+3)^0,7,c
 12572   0013E4                     i2l5766:
 12573   0013E4  C001  F001         	movff	i2___fladd@b,?i2___fladd
 12574   0013E8  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 12575   0013EC  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 12576   0013F0  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 12577   0013F4                     i2l908:
 12578   0013F4  0012               	return		;funcret
 12579   0013F6                     __end_ofi2___fladd:
 12580                           	callstack 0
 12581                           
 12582                           	psect	rparam
 12583   000000                     
 12584                           	psect	temp
 12585   00004E                     btemp:
 12586                           	callstack 0
 12587   00004E                     	ds	1
 12588   000000                     int$flags	set	btemp
 12589   000000                     wtemp8	set	btemp+1
 12590   000000                     ttemp5	set	btemp+1
 12591   000000                     ttemp6	set	btemp+4
 12592   000000                     ttemp7	set	btemp+8
 12593                           
 12594                           	psect	idloc
 12595                           
 12596                           ;Config register IDLOC0 @ 0x200000
 12597                           ;	unspecified, using default values
 12598   200000                     	org	2097152
 12599   200000  FF                 	db	255
 12600                           
 12601                           ;Config register IDLOC1 @ 0x200001
 12602                           ;	unspecified, using default values
 12603   200001                     	org	2097153
 12604   200001  FF                 	db	255
 12605                           
 12606                           ;Config register IDLOC2 @ 0x200002
 12607                           ;	unspecified, using default values
 12608   200002                     	org	2097154
 12609   200002  FF                 	db	255
 12610                           
 12611                           ;Config register IDLOC3 @ 0x200003
 12612                           ;	unspecified, using default values
 12613   200003                     	org	2097155
 12614   200003  FF                 	db	255
 12615                           
 12616                           ;Config register IDLOC4 @ 0x200004
 12617                           ;	unspecified, using default values
 12618   200004                     	org	2097156
 12619   200004  FF                 	db	255
 12620                           
 12621                           ;Config register IDLOC5 @ 0x200005
 12622                           ;	unspecified, using default values
 12623   200005                     	org	2097157
 12624   200005  FF                 	db	255
 12625                           
 12626                           ;Config register IDLOC6 @ 0x200006
 12627                           ;	unspecified, using default values
 12628   200006                     	org	2097158
 12629   200006  FF                 	db	255
 12630                           
 12631                           ;Config register IDLOC7 @ 0x200007
 12632                           ;	unspecified, using default values
 12633   200007                     	org	2097159
 12634   200007  FF                 	db	255
 12635                           
 12636                           	psect	config
 12637                           
 12638                           ;Config register CONFIG1L @ 0x300000
 12639                           ;	PLL Prescaler Selection bits
 12640                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12641                           ;	System Clock Postscaler Selection bits
 12642                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12643                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12644                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12645   300000                     	org	3145728
 12646   300000  00                 	db	0
 12647                           
 12648                           ;Config register CONFIG1H @ 0x300001
 12649                           ;	Oscillator Selection bits
 12650                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
 12651                           ;	Fail-Safe Clock Monitor Enable bit
 12652                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12653                           ;	Internal/External Oscillator Switchover bit
 12654                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12655   300001                     	org	3145729
 12656   300001  0B                 	db	11
 12657                           
 12658                           ;Config register CONFIG2L @ 0x300002
 12659                           ;	Power-up Timer Enable bit
 12660                           ;	PWRT = ON, PWRT enabled
 12661                           ;	Brown-out Reset Enable bits
 12662                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12663                           ;	Brown-out Reset Voltage bits
 12664                           ;	BORV = 3, Minimum setting 2.05V
 12665                           ;	USB Voltage Regulator Enable bit
 12666                           ;	VREGEN = OFF, USB voltage regulator disabled
 12667   300002                     	org	3145730
 12668   300002  18                 	db	24
 12669                           
 12670                           ;Config register CONFIG2H @ 0x300003
 12671                           ;	Watchdog Timer Enable bit
 12672                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12673                           ;	Watchdog Timer Postscale Select bits
 12674                           ;	WDTPS = 32768, 1:32768
 12675   300003                     	org	3145731
 12676   300003  1E                 	db	30
 12677                           
 12678                           ; Padding undefined space
 12679   300004                     	org	3145732
 12680   300004  FF                 	db	255
 12681                           
 12682                           ;Config register CONFIG3H @ 0x300005
 12683                           ;	CCP2 MUX bit
 12684                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12685                           ;	PORTB A/D Enable bit
 12686                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 12687                           ;	Low-Power Timer 1 Oscillator Enable bit
 12688                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12689                           ;	MCLR Pin Enable bit
 12690                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12691   300005                     	org	3145733
 12692   300005  83                 	db	131
 12693                           
 12694                           ;Config register CONFIG4L @ 0x300006
 12695                           ;	Stack Full/Underflow Reset Enable bit
 12696                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12697                           ;	Single-Supply ICSP Enable bit
 12698                           ;	LVP = OFF, Single-Supply ICSP disabled
 12699                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12700                           ;	ICPRT = OFF, ICPORT disabled
 12701                           ;	Extended Instruction Set Enable bit
 12702                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12703                           ;	Background Debugger Enable bit
 12704                           ;	DEBUG = 0x1, unprogrammed default
 12705   300006                     	org	3145734
 12706   300006  81                 	db	129
 12707                           
 12708                           ; Padding undefined space
 12709   300007                     	org	3145735
 12710   300007  FF                 	db	255
 12711                           
 12712                           ;Config register CONFIG5L @ 0x300008
 12713                           ;	Code Protection bit
 12714                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12715                           ;	Code Protection bit
 12716                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12717                           ;	Code Protection bit
 12718                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12719                           ;	Code Protection bit
 12720                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12721   300008                     	org	3145736
 12722   300008  0F                 	db	15
 12723                           
 12724                           ;Config register CONFIG5H @ 0x300009
 12725                           ;	Boot Block Code Protection bit
 12726                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12727                           ;	Data EEPROM Code Protection bit
 12728                           ;	CPD = OFF, Data EEPROM is not code-protected
 12729   300009                     	org	3145737
 12730   300009  C0                 	db	192
 12731                           
 12732                           ;Config register CONFIG6L @ 0x30000A
 12733                           ;	Write Protection bit
 12734                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12735                           ;	Write Protection bit
 12736                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12737                           ;	Write Protection bit
 12738                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12739                           ;	Write Protection bit
 12740                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12741   30000A                     	org	3145738
 12742   30000A  0F                 	db	15
 12743                           
 12744                           ;Config register CONFIG6H @ 0x30000B
 12745                           ;	Configuration Register Write Protection bit
 12746                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12747                           ;	Boot Block Write Protection bit
 12748                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12749                           ;	Data EEPROM Write Protection bit
 12750                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12751   30000B                     	org	3145739
 12752   30000B  E0                 	db	224
 12753                           
 12754                           ;Config register CONFIG7L @ 0x30000C
 12755                           ;	Table Read Protection bit
 12756                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12757                           ;	Table Read Protection bit
 12758                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12759                           ;	Table Read Protection bit
 12760                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12761                           ;	Table Read Protection bit
 12762                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12763   30000C                     	org	3145740
 12764   30000C  0F                 	db	15
 12765                           
 12766                           ;Config register CONFIG7H @ 0x30000D
 12767                           ;	Boot Block Table Read Protection bit
 12768                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12769   30000D                     	org	3145741
 12770   30000D  40                 	db	64
 12771                           tosu	equ	0xFFF
 12772                           tosh	equ	0xFFE
 12773                           tosl	equ	0xFFD
 12774                           stkptr	equ	0xFFC
 12775                           pclatu	equ	0xFFB
 12776                           pclath	equ	0xFFA
 12777                           pcl	equ	0xFF9
 12778                           tblptru	equ	0xFF8
 12779                           tblptrh	equ	0xFF7
 12780                           tblptrl	equ	0xFF6
 12781                           tablat	equ	0xFF5
 12782                           prodh	equ	0xFF4
 12783                           prodl	equ	0xFF3
 12784                           indf0	equ	0xFEF
 12785                           postinc0	equ	0xFEE
 12786                           postdec0	equ	0xFED
 12787                           preinc0	equ	0xFEC
 12788                           plusw0	equ	0xFEB
 12789                           fsr0h	equ	0xFEA
 12790                           fsr0l	equ	0xFE9
 12791                           wreg	equ	0xFE8
 12792                           indf1	equ	0xFE7
 12793                           postinc1	equ	0xFE6
 12794                           postdec1	equ	0xFE5
 12795                           preinc1	equ	0xFE4
 12796                           plusw1	equ	0xFE3
 12797                           fsr1h	equ	0xFE2
 12798                           fsr1l	equ	0xFE1
 12799                           bsr	equ	0xFE0
 12800                           indf2	equ	0xFDF
 12801                           postinc2	equ	0xFDE
 12802                           postdec2	equ	0xFDD
 12803                           preinc2	equ	0xFDC
 12804                           plusw2	equ	0xFDB
 12805                           fsr2h	equ	0xFDA
 12806                           fsr2l	equ	0xFD9
 12807                           status	equ	0xFD8

Data Sizes:
    Strings     264
    Constant    8
    Data        20
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160    106     159
    BANK1           256     17      97
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_33(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_33(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1453$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_32(CODE[6]), STR_30(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> STRING_VALUE_IN_ML(BANK0[5]), STRING_VAL_TYPED(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1374$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1374$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(2) Largest target is 8
		 -> SENSOR(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STRING_VALUE_IN_ML(BANK0[5]), STR_31(CODE[9]), STRING_VAL_TYPED(BANK0[5]), STR_29(CODE[7]), 
		 -> STR_28(CODE[17]), STR_27(CODE[8]), STR_26(CODE[17]), STR_25(CODE[8]), 
		 -> STR_24(CODE[8]), STR_23(CODE[17]), STR_22(CODE[8]), STR_21(CODE[8]), 
		 -> STR_20(CODE[16]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[16]), 
		 -> STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[17]), STR_13(CODE[8]), 
		 -> STR_12(CODE[8]), STR_11(CODE[17]), STR_10(CODE[12]), STR_9(CODE[17]), 
		 -> STR_8(CODE[12]), STR_7(CODE[17]), STR_6(CODE[6]), STR_5(CODE[17]), 
		 -> STR_4(CODE[2]), STR_3(CODE[6]), STR_2(CODE[17]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _WELCOME->_Lcd_Set_Cursor
    _USER_VALUE->_Lcd_Write_String
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _vfpfcnvrt->_efgtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR_TIMER0 in COMRAM

    _ISR_TIMER0->i2___fladd

Critical Paths under _main in BANK0

    _FILL->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_FILL
    _FILL->_sprintf

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   71055
                                             15 BANK1      2     2      0
                               _FILL
                    _Keypad_Get_Char
                        _Keypad_Init
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                         _USER_VALUE
                            _WELCOME
 ---------------------------------------------------------------------------------
 (1) _WELCOME                                              6     6      0    4038
                                             24 COMRAM     6     6      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _USER_VALUE                                           2     2      0    7414
                                             26 COMRAM     2     2      0
                    _Keypad_Get_Char
                          _Lcd_Blink
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Keypad_Get_Char                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                             19 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                15    13      2     996
                                             20 COMRAM    15    13      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FILL                                                 2     2      0   51477
                                             13 BANK1      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                         _TMR0_COUNT
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   36635
                                             98 BANK0      8     0      8
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   35951
                                             90 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6   35439
                                             67 BANK0     23    17      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4755
                                             43 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             16 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             16 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   26450
                                             59 COMRAM     2     2      0
                                             16 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     497
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3343
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     857
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             55 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4117
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3552
                                             16 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3593
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1346
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2903
                                             30 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1584
                                             22 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _TMR0_COUNT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    2700
                                             20 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                             17 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    3614
                                             19 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                             17 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_TIMER0                                          0     0      0    2036
                          i2___fladd
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FILL
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _TMR0_COUNT
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
   _Keypad_Get_Char
   _Keypad_Init
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   _USER_VALUE
     _Keypad_Get_Char
     _Lcd_Blink
       _Lcd_Cmd
     _Lcd_Clear
     _Lcd_NoBlink
       _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
     ___wmul
   _WELCOME
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char

 _ISR_TIMER0 (ROOT)
   i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      36        0.0%
BIGRAM             3EE      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     11      61       6       37.9%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6A      9F       4       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITBIGSFRlll        20      0       0      34        0.0%
BITBIGSFR_1lll      1D      0       0      28        0.0%
BITBIGSFR_5h         9      0       0      19        0.0%
BITBIGSFR_1hl        8      0       0      25        0.0%
BITBIGSFR_1hh        6      0       0      24        0.0%
BITBIGSFRllhh        5      0       0      32        0.0%
BITBIGSFRhh          5      0       0      29        0.0%
BITBIGSFRlhh         4      0       0      30        0.0%
BITBIGSFR_2h         4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      21        0.0%
BITBIGSFR_3          3      0       0      22        0.0%
BITBIGSFR_1lh        2      0       0      26        0.0%
BITBIGSFR_5l         2      0       0      20        0.0%
BITBIGSFRllhl        1      0       0      33        0.0%
BITBIGSFR_1llh       1      0       0      27        0.0%
BITBIGSFRlhl         1      0       0      31        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14D      35        0.0%
DATA                 0      0     14D      38        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 06 19:25:27 2023

                  _USER_VALUE 1864                  ___fldiv@aexp 0037                  ___fldiv@bexp 0036  
                ___fldiv@sign 002F           ___wmul@multiplicand 0013                           l204 2A46  
                         l230 4062                           l222 4036                           l302 2F20  
                         l143 2B92                           l320 24A8                           l160 3AD4  
                         l233 4064                           l305 443E                           l321 2486  
                         l161 3B14                           l145 2C54                           l226 404C  
                         l218 4020                           l154 445A                           l330 2506  
                         l236 43F0                           l308 444C                           l252 3EAA  
                         l324 2782                           l245 3BE6                           l261 3F28  
                         l317 4414                           l341 25F0                           l333 2570  
                         l325 24E8                           l350 2656                           l342 25CE  
                         l334 254E                           l326 24C6                           l270 4430  
                         l182 1A1A                           l239 4468                           l255 437E  
                         l249 3BE6                           l361 2740                           l353 26B8  
                         l345 2638                           l337 25B0                           l329 2528  
                         l273 4422                           l362 271E                           l354 2696  
                         l346 2616                           l338 258E                           l371 43D0  
                         l195 1C9A                           l187 1A6A                           l357 2700  
                         l349 2678                           l630 3E2A                           l366 275E  
                         l358 26DE                           l641 383C                           _CAL 00FB  
                         l636 37F6                           l900 0C52                           l645 4346  
                         l901 0C18                           l816 3A2A                           l809 3A0A  
                         l826 3CB6                           l819 3C96                           l916 0D7E  
                         l908 0F34                           l668 3738                           l925 0E4E  
                         l941 4244                           l926 0E3C                           l953 245E  
                         l955 22BE                           l964 2304                           l966 237C  
                         l958 2282                           l967 236A                           l992 1F56  
                         l985 1D60                           l994 1FCE                           l995 1FBC  
                         l899 0C64                           l989 20C4                           _PR2 000FCB  
                 i2___fladd@a 0005                   i2___fladd@b 0001                           _pad 3F2A  
                         wreg 000FE8                  ___flmul@aexp 001E                  ___flmul@bexp 0023  
         __end_of_Lcd_NoBlink 4424                  ___flmul@sign 001D                  ___flmul@temp 0028  
                ___flmul@prod 0024         Lcd_CGRAM_CreateChar@i 001C                  ___fltol@exp1 001A  
                        l1002 2086                          l1101 03A4                          l1103 01EA  
                        l1040 3480                          l1033 3424                          l1026 338C  
                        l1131 07EC                          l1029 34E8                          l1150 3170  
                        l1303 42CE                          l1207 4162                          l1240 362A  
                        l1312 430E                          l1160 3334                          l1152 3178  
                        l1217 393A                          l1049 40BE                          l1306 446A  
                        l1243 3632                          l1083 3F4C                          l1252 307A  
                        l1087 3FA2                          l1184 1862                          l1249 3136  
                        l1274 3FF8                          l1098 0A74                          l1259 43AA  
                        l1267 428A                          l1283 41B2                          l1277 4008  
                        l1295 3D80                          l2600 26CE                          l5010 445C  
                        l2602 26EC                          l5020 3B4A                          l5012 3B18  
                        l5100 348E                          l2612 274E                          l5030 3B90  
                        l5022 3B5C                          l5014 3B28                          l5110 34D6  
                        l5102 3490                          l2614 276C                          l2606 270E  
                        l5040 3BD6                          l5032 3BA2                          l5024 3B6E  
                        l5016 3B3A                          l5112 34D8                          l5104 3494  
                        l5200 2DBE                          l5120 3E3E                          l2608 272C  
                        l2560 2514                          l2552 24B6                          l2544 2460  
                        l5042 3BDC                          l5034 3BA8                          l5026 3B74  
                        l5018 3B40                          l5050 3EEC                          l5106 34B8  
                        l5210 2DEC                          l5130 3E76                          l5122 3E4C  
                        l2618 2780                          l2570 257E                          l2554 24D4  
                        l2546 2476                          l5036 3BB2                          l5028 3B7E  
                        l5044 3EAC                          l5052 444E                          l5108 34C8  
                        l5220 2E2C                          l5212 2E00                          l5140 3E94  
                        l5132 3E7C                          l5124 3E52                          l5116 3E2C  
                        l2572 259C                          l2564 253E                          l2548 2494  
                        l5038 3BC4                          l5046 3EB8                          l5070 3338  
                        l2726 4406                          l5230 2E46                          l5222 2E2E  
                        l5206 2DC2                          l5150 2CBE                          l5142 3E9A  
                        l5134 3E82                          l5126 3E60                          l5118 3E38  
                        l2590 2664                          l2582 2606                          l2566 255C  
                        l2558 24F6                          l5054 4424                          l5048 3EE8  
                        l5072 3348                          l6200 0B8A                          l7000 0670  
                        l5232 2E6E                          l5224 2E42                          l5208 2DEA  
                        l5160 2CE2                          l5152 2CC2                          l5144 3EA0  
                        l5136 3E88                          l5128 3E66                          l2584 2624  
                        l2576 25BE                          l5056 4416                          l5090 340E  
                        l5082 33C6                          l5074 3356                          l6210 0B9E  
                        l6202 0B8E                          l6130 3CB8                          l7002 06C6  
                        l7010 0718                          l5242 2E88                          l5234 2E70  
                        l5218 2E04                          l5170 2CFC                          l5162 2CE4  
                        l5250 2EC6                          l5146 3EA6                          l5138 3E8E  
                        l2594 2686                          l2578 25DC                          l5092 341A  
                        l5084 33CE                          l5076 339C                          l6300 0DFC  
                        l6220 0BB2                          l6212 0BA2                          l6204 0B92  
                        l6140 3D3A                          l6132 3CCA                          l7020 074A  
                        l7012 0728                          l7004 06CC                          l7100 314A  
                        l5244 2EB0                          l5236 2E84                          l5172 2D24  
                        l5164 2CF8                          l5148 4432                          l2596 26A4  
                        l2588 2646                          l5260 3A30                          l5094 3456  
                        l5086 33DA                          l5078 33B2                          l6310 0E34  
                        l6302 0DFE                          l6230 0C10                          l6214 0BA6  
                        l6206 0B96                          l6222 0BB6                          l6150 0A92  
                        l6134 3CDC                          l7030 081C                          l7022 07C2  
                        l7014 0730                          l7006 0700                          l7110 31B8  
                        l7102 3164                          l5246 2EB2                          l5182 2D3E  
                        l5174 2D26                          l5158 2CC6                          l5270 3A62  
                        l5262 3A3A                          ?_pad 0021                          l5096 3462  
                        l5088 340C                          l6400 21A8                          l6320 0EB2  
                        l6304 0E0C                          l6240 0C46                          l6232 0C26  
                        l6224 0BBA                          l6216 0BAA                          l6208 0B9A  
                        l6152 0AA2                          l6160 0ACC                          l6144 0A76  
                        l6136 3CE6                          l7040 0842                          l7032 0820  
                        l7024 07E2                          l7016 0736                          l7008 0714  
                        l7120 32B4                          l7112 322E                          l7104 31A0  
                        l5256 4440                          l5184 2D66                          l5176 2D3A  
                        l5272 3A66                          l5098 3470                          l6402 21B8  
                        l6410 21D8                          l6330 0EF8                          l6314 0E5E  
                        l6322 0EB4                          l6306 0E10                          l6250 0C96  
                        l6242 0C50                          l6234 0C32                          l6226 0BE4  
                        l6218 0BAE                          l6170 0AFC                          l6162 0ADC  
                        l6154 0AB2                          l6146 0A82                          l6138 3D04  
                        l7050 0876                          l7042 0848                          l7034 0826  
                        l7026 07FE                          l7018 073E                          l7122 32D2  
                        l7114 3236                          l7106 31A8                          l7210 1634  
                        l7202 1572                          l5194 2D80                          l5186 2D68  
                        l5290 3AD6                          l5282 3A94                          l5274 3A82  
                        l5266 3A42                          l5258 3A2C                          l7140 351E  
                        l7132 34EA                          l6420 2216                          l6412 21E8  
                        l6404 21C0                          l6500 1CA8                          l6340 0F22  
                        l6332 0F06                          l6324 0EC4                          l6316 0E6A  
                        l6308 0E1E                          l6260 0CD2                          l6252 0CA6  
                        l6244 0C72                          l6236 0C36                          l6228 0C00  
                        l6180 0B3C                          l6172 0B0A                          l6164 0AE2  
                        l6156 0AC2                          l6148 0A90                          l7052 087C  
                        l7036 082E                          l7028 080C                          l7044 084E  
                        l7060 0914                          l7124 32EC                          l7116 323C  
                        l7108 31B2                          l7220 16A0                          l7204 15AC  
                        l5196 2DA8                          l5188 2D7C                          l5292 3AE4  
                        l5284 3AA2                          l5276 3A8C                          l5268 3A50  
                        l4830 4022                          l7142 3552                          l7134 34FE  
                        l6430 225E                          l6422 2226                          l6414 21E8  
                        l6406 21C4                          l6510 1CE8                          l6502 1CB6  
                        l6342 0F24                          l6334 0F0C                          l6326 0ED4  
                        l6318 0E78                          l6270 0D18                          l6262 0CE0  
                        l6254 0CB4                          l6246 0C82                          l6238 0C44  
                        l6190 0B76                          l6182 0B3E                          l6174 0B0C  
                        l6166 0AF4                          l6158 0AC4                          l6350 42AA  
                        l7070 0996                          l7062 0932                          l7054 08D4  
                        l7046 0860                          l7038 083E                          l7126 3306  
                        l7118 32A0                          l7222 16B2                          l7230 16CA  
                        l7206 15BC                          l7310 40A6                          l7302 4066  
                        l5198 2DAA                          l5294 3AFE                          l5286 3AB4  
                        l4840 405C                          l4832 4030                          l7144 355A  
                        l6440 22AC                          l6432 2272                          l6424 2236  
                        l6360 20C6                          l6600 1FEA                          l6520 1D18  
                        l6512 1CEE                          l6504 1CB8                          l6336 0F0E  
                        l6328 0EF4                          l6280 0D94                          l6272 0D4C  
                        l6264 0CE2                          l6256 0CC2                          l6192 0B7A  
                        l6176 0B1C                          l6184 0B46                          l6168 0AF6  
                        l6352 42AE                          l7080 09E4                          l7072 09A4  
                        l7064 094E                          l7056 0908                          l7048 0872  
                        l7128 3314                          l7240 1784                          l7224 16BA  
                        l7232 16FC                          l7216 1664                          l7208 15D8  
                        l7304 4078                          l7400 1A86                          l7320 1882  
                        l5296 3B0E                          l5288 3AB8                          l4834 4038  
                        l4826 400C                          l6354 43AC                          l7154 35CC  
                        l7146 3562                          l7138 3502                          l6450 22F4  
                        l6442 22BC                          l6434 2280                          l6426 2246  
                        l6418 21FC                          l6370 2102                          l6362 20D2  
                        l6610 2054                          l6602 1FF8                          l6530 1D50  
                        l6522 1D1A                          l6514 1CFE                          l6506 1CC8  
                        l6338 0F14                          l6290 0DD0                          l6282 0DA4  
                        l6274 0D4E                          l6266 0CEC                          l6258 0CCE  
                        l6194 0B7E                          l6186 0B56                          l6178 0B2C  
                        l6346 428C                          l7090 0A4C                          l7082 09EA  
                        l7074 09BC                          l7066 0956                          l7058 0910  
                        l7250 17FC                          l7242 17AE                          l7234 171C  
                        l7226 16C2                          l7218 1690                          l7170 1436  
                        l7306 4080                          l7410 1ABA                          l7402 1A92  
                        l7330 18AA                          l7322 188C                          l7314 1864  
                        l5298 3B10                          l4836 4046                          l4828 401A  
                        l6356 43C8                          l7156 35FC                          l7148 3596  
                        l6460 2334                          l6452 2302                          l6444 22CE  
                        l6436 228C                          l6428 224E                          l6380 2132  
                        l6372 2112                          l6364 20E0                          l6620 20AA  
                        l6612 206E                          l6604 2022                          l6540 1DA0  
                        l6532 1D70                          l6524 1D2A                          l6516 1D04  
                        l6508 1CD8                          l6292 0DD2                          l6276 0D5E  
                        l6268 0CF2                          l6196 0B82                          l6188 0B68  
                        l6348 4298                          l7092 0A54                          l7084 0A08  
                        l7068 0966                          l7244 17CE                          l7236 1750  
                        l7252 1828                          l7172 143A                          l7164 13F6  
                        l7308 4088                          l7420 1AEC                          l7412 1AC6  
                        l7404 1A9A                          l7340 18EC                          l7332 18B2  
                        l7324 1898                          l7316 186C                          l4838 404E  
                        l7158 360E                          l6470 23A6                          l6462 2362  
                        l6446 22E4                          l6454 2314                          l6438 22AA  
                        l6390 2168                          l6382 2138                          l6374 2114  
                        l6366 20E2                          l6614 208A                          l6622 20B0  
                        l6606 2026                          l6550 1DF0                          l6542 1DAA  
                        l6534 1D80                          l6526 1D3A                          l6518 1D0A  
                        l6294 0DE0                          l6286 0DB8                          l6278 0D6E  
                        l6198 0B86                          l6630 4210                          l6702 36C4  
                        l7078 09CE                          l7086 0A26                          l7190 14D8  
                        l7182 1466                          l7174 1446                          l7166 141A  
                        l7510 27B8                          l7502 2784                          l7422 1AF4  
                        l7414 1AD2                          l7406 1AA4                          l7342 18F0  
                        l7334 18B8                          l7350 191C                          l7326 18A2  
                        l7318 1876                          l6480 241E                          l6472 23D0  
                        l6456 2322                          l6448 22EA                          l6392 2178  
                        l6384 2146                          l6368 20F2                          l6376 211C  
                        l6640 3DEE                          l6624 20B4                          l6616 209A  
                        l6608 2040                          l6560 1E32                          l6552 1DFC  
                        l6544 1DC0                          l6528 1D4A                          l6296 0DE8  
                        l6288 0DC2                          l6720 3728                          l6712 36EC  
                        l6704 36CE                          l6800 42E0                          l7088 0A36  
                        l7096 3138                          l7192 14E6                          l7176 1448  
                        l7184 149A                          l7168 1428                          l7256 183A  
                        l7520 2800                          l7512 27C2                          l7504 2788  
                        l7440 1B46                          l7432 1B24                          l7424 1AFE  
                        l7416 1AD6                          l7408 1AB0                          l7360 196A  
                        l7352 1930                          l7344 18F6                          l7336 18C8  
                        l7328 18A6                          l7600 2A60                          l4970 434A  
                        l6490 2454                          l6482 243A                          l6466 238C  
                        l6474 23D4                          l6458 2326                          l6394 217A  
                        l6386 2148                          l6378 212C                          l6642 3DFE  
                        l6634 3D82                          l6650 373A                          l6618 20A8  
                        l6570 1E94                          l6562 1E42                          l6554 1E0A  
                        l6546 1DCC                          l6538 1D94                          l6298 0DEC  
                        l6714 36F8                          l6706 36D8                          l6810 2F9A  
                        l6802 3FA4                          l6730 396E                          l7098 3148  
                        l7194 150A                          l7186 14AC                          l7178 145A  
                        l7530 283E                          l7522 280C                          l7514 27CE  
                        l7506 27A2                          l7450 1B76                          l7442 1B50  
                        l7434 1B28                          l7426 1B0A                          l7418 1AE0  
                        l7362 196E                          l7354 1936                          l7370 199E  
                        l7338 18DA                          l7346 1902                          l7610 2A8E  
                        l7602 2A62                          l4980 436A                          l4972 4356  
                        l6484 243E                          l6476 23EE                          l6468 2398  
                        l6388 2158                          l6396 2182                          l6644 3E22  
                        l6636 3DB0                          l6660 37C4                          l6652 3768  
                        l6580 1F3C                          l6572 1EB0                          l6564 1E5C  
                        l6556 1E16                          l6548 1DE4                          l6628 4200  
                        l6716 3708                          l6820 306A                          l6812 2FAE  
                        l6804 3FC2                          l6900 0114                          l6740 39F0  
                        l6732 3982                          l6724 393C                          l7196 1544  
                        l7188 14D0                          l7292 4112                          l7540 28B2  
                        l7532 2840                          l7524 2816                          l7516 27D8  
                        l7508 27AC                          l7460 1BA2                          l7452 1B7A  
                        l7444 1B5C                          l7436 1B32                          l7428 1B14  
                        l7380 1A04                          l7372 19AE                          l7364 1974  
                        l7356 1946                          l7348 1910                          l7620 2AB8  
                        l7612 2A92                          l7604 2A70                          l4990 43D4  
                        l4982 436C                          l4974 4358                          l6486 244C  
                        l6478 2404                          l6398 2192                          l6646 3E28  
                        l6638 3DC0                          l6662 37D6                          l6654 3778  
                        l6590 1F78                          l6582 1F46                          l6574 1EDA  
                        l6566 1E6C                          l6558 1E26                          l6718 3718  
                        l6830 3126                          l6814 2FBC                          l6822 309E  
                        l6806 2F22                          l6910 0170                          l6742 39F2  
                        l6734 3990                          l6726 3948                          l6750 3C0E  
                        l7198 1564                          l7294 411E                          l7550 2928  
                        l7542 28B8                          l7534 288C                          l7526 2822  
                        l7518 27F6                          l7470 1BCC                          l7462 1BAE  
                        l7454 1B84                          l7446 1B66                          l7438 1B3E  
                        l7390 1A5A                          l7382 1A0E                          l7374 19CE  
                        l7358 1958                          l7366 1984                          l7630 2AC8  
                        l7622 2ABA                          l7614 2AAC                          l7606 2A7C  
                        l4992 43D6                          l4984 4372                          l4976 4360  
                        l6488 2452                          l6664 37E4                          l6656 37A6  
                        l6592 1F86                          l6584 1F54                          l6576 1F10  
                        l6568 1E88                          l6672 4310                          l6680 3634  
                        l6824 30DA                          l6808 2F42                          l6840 4188  
                        l6912 0176                          l6904 0134                          l6744 3A04  
                        l6736 39A2                          l6728 3966                          l6760 3C90  
                        l6752 3C22                          l7296 413C                          l7560 2972  
                        l7552 2936                          l7544 28EC                          l7536 289C  
                        l7528 2824                          l7480 1C00                          l7472 1BD6  
                        l7464 1BB8                          l7456 1B90                          l7392 1A5C  
                        l7384 1A28                          l7376 19E8                          l7368 1992  
                        l7640 2AE2                          l7632 2ACA                          l7624 2ABC  
                        l7616 2AB0                          l7608 2A8A                          l4994 43DC  
                        l4986 4374                          l4978 4362                          l6850 4246  
                        l6666 3834                          l6658 37B6                          l6594 1FB4  
                        l6586 1F66                          l6578 1F1E                          l6498 1C9C  
                        l6674 4326                          l6690 368A                          l6682 364A  
                        l6826 30EE                          l6818 302E                          l6842 4194  
                        l6834 4164                          l6770 3F6C                          l6762 3F2A  
                        l6930 0200                          l6914 017E                          l6906 015A  
                        l6922 019A                          l6738 39D0                          l6754 3C30  
                        l6746 3BE8                          l7298 4158                          l7570 29F4  
                        l7562 2974                          l7554 2946                          l7546 2912  
                        l7538 28AE                          l7490 1C28                          l7482 1C0A  
                        l7474 1BE2                          l7458 1B98                          l7394 1A6C  
                        l7386 1A44                          l7378 1A00                          l7650 2B20  
                        l7642 2AF4                          l7634 2AD0                          l7626 2AC0  
                        l7618 2AB4                          l4996 43DE                          l4988 437C  
                        l6852 424A                          l6668 383A                          l6588 1F74  
                        l6676 4336                          l6692 369A                          l6780 389C  
                        l6828 3116                          l6836 4178                          l6844 4198  
                        l6772 3F70                          l6764 3F38                          l6940 02F6  
                        l6932 0234                          l6924 01B4                          l6908 016C  
                        l6756 3C5E                          l6748 3C06                          l7580 2A24  
                        l7572 29F6                          l7564 2984                          l7556 2954  
                        l7548 291C                          l7492 1C34                          l7476 1BEA  
                        l7468 1BC8                          l7396 1A78                          l7388 1A4E  
                        l7660 2B70                          l7652 2B38                          l7644 2AFC  
                        l7636 2AD4                          l7628 2AC4                          l4998 43EE  
                        l6846 4380                          l6854 425E                          l6598 1FDE  
                        l6694 369E                          l6686 365E                          l6790 38EE  
                        l6782 38C4                          l6838 4184                          l6774 3F8E  
                        l6766 3F44                          l6950 03AC                          l6942 032A  
                        l6934 0272                          l6870 003A                          l6862 0012  
                        l6758 3C7E                          l7574 2A06                          l7558 2958  
                        l7566 2990                          l7494 1C3E                          l7486 1C1A  
                        l7478 1BF4                          l7398 1A7C                          l7670 2BC6  
                        l7662 2B86                          l7654 2B46                          l7646 2B0A  
                        l7638 2ADC                          l7590 2A52                          l7582 2A48  
                        l6856 4280                          l6696 36AC                          l6688 3688  
                        l6784 38D0                          l6776 383E                          l6768 3F58  
                        l6960 03DC                          l6952 03BC                          l6944 0332  
                        l6936 02A4                          l6928 01FA                          l6880 0090  
                        l6872 005E                          l6864 0018                          l7576 2A08  
                        l7568 29C2                          l7488 1C1E                          l7496 1C4E  
                        l7680 2C16                          l7672 2BE0                          l7664 2B8A  
                        l7656 2B5A                          l7648 2B18                          l7592 2A58  
                        l7584 2A4C                          l6858 4284                          l6794 3932  
                        l6778 385E                          l6962 03EE                          l6970 042E  
                        l6954 03C8                          l6938 02E2                          l6890 00E0  
                        l6882 009C                          l6874 0068                          l6866 0028  
                        l7578 2A22                          l7682 2C22                          l7674 2BEA  
                        l7666 2BA0                          l7690 2C6E                          l7658 2B64  
                        l7594 2A5A                          l7586 2A4E                          l6788 38DC  
                        l6980 0516                          l6972 0436                          l6964 03FC  
                        l6956 03D0                          l6948 0372                          l6892 00E4  
                        l6884 00A4                          l6876 0070                          l6868 0036  
                        l7684 2C3A                          l7676 2BF6                          l7668 2BBA  
                        l7596 2A5C                          l7588 2A50                          l6798 42D0  
                        l6990 05D4                          l6982 054A                          l6974 0446  
                        l6966 0414                          l6958 03D8                          l6894 00EA  
                        l6878 0080                          l6886 00A8                          l7686 2C48  
                        l7678 2C0C                          l7694 2C82                          l7598 2A5E  
                        l6992 05EA                          l6976 045A                          l6984 0550  
                        l6968 0426                          l6896 00F2                          l6888 00CE  
                        l7960 148C                          l7688 2C62                          l7970 3580  
                        l6994 061C                          l6986 056E                          l6978 04BE  
                        l6898 010A                          l7962 1682                          l7954 2C9A  
                        l6996 062C                          l6988 05A2                          l7964 16DE  
                        l7956 1C64                          l6998 063C                          l7966 1798  
                        l7958 2EDA                          l7968 181A                          STR_1 7C46  
                        STR_2 7C7B                          STR_3 7D2E                          STR_4 7C46  
                        STR_5 7C37                          STR_6 7D2E                          STR_7 7CBF  
                        STR_8 7CFC                          STR_9 7C6A               ?_Lcd_CGRAM_Init 0001  
                        _FILL 2784                          u2000 253E                          u2001 253A  
                        u2010 255C                          u2011 2558                          u2100 2686  
                        u2020 257E                          u2101 2682                          u2021 257A  
                        u2110 26A4                          u2030 259C                          u2111 26A0  
                        u2031 2598                          u2120 26CE                          u2040 25BE  
                        u2121 26CA                          u2041 25BA                          u2130 26EC  
                        u2050 25DC                          u2131 26E8                          u2051 25D8  
                        u2140 270E                          u2060 2606                          u2141 270A  
                        u2061 2602                          u2150 272C                          u2070 2624  
                        _LATB 000F8A                          u2151 2728                          u2071 2620  
                        _LATC 000F8B                          u2160 274E                          u2080 2646  
                        u2161 274A                          u2081 2642                          _LATE 000F8D  
                        u2170 276C                          u2090 2664                          u2171 2768  
                        u2091 2660                          u5100 3348                          u5101 3344  
                        u5030 3B28                          u5110 3356                          u5031 3B24  
                        u5111 3352                          u5040 3B5C                          u5120 33B2  
                        u6000 0AA2                          u5200 2CF4                          u5041 3B58  
                        u5121 33AE                          u6001 0A9E                          u5201 2CF0  
                        u5050 3B90                          u5130 3408                          u6010 0AB2  
                        u5210 2D36                          u5051 3B8C                          u5131 3404  
                        u6011 0AAE                          u5211 2D32                          u5060 3BC4  
                        u5140 3452                          u6100 0BFE                          u6020 0AF4  
                        u5220 2D78                          u1940 2476                          u5061 3BC0  
                        u5141 344E                          u6021 0AF0                          u5221 2D74  
                        u1941 2472                          u5070 3EE4                          u5150 3470  
                        u6110 0C26                          u6030 0B0A                          u5230 2DBA  
                        u1950 2494                          u5151 346C                          u6111 0C22  
                        u6031 0B06                          u5231 2DB6                          u1951 2490  
                        u5080 3F18                          u5160 3480                          u6200 0D5E  
                        u6120 0C44                          u6040 0B1C                          u7000 39D0  
                        u5240 2DFC                          u1960 24B6                          u5161 347C  
                        u6201 0D5A                          u6121 0C40                          u6041 0B18  
                        u7001 39CC                          u5241 2DF8                          u1961 24B2  
                        u5090 3F28                          u5170 348E                          u6210 0D94  
                        u6130 0C64                          u6050 0B2C                          u7010 3C06  
                        u5250 2E3E                          u1970 24D4                          u5091 3F24  
                        u5171 348A                          u6211 0D90                          u6131 0C60  
                        u6051 0B28                          u7011 3C02                          u5251 2E3A  
                        u1971 24D0                          u5180 34C8                          u6300 0E5E  
                        u6220 0DA4                          u6140 0C72                          u6060 0B68  
                        u7020 3C30                          u5260 2E80                          u1980 24F6  
                        u5077 3EDA                          u5181 34C4                          u6301 0E5A  
                        u6221 0DA0                          u6141 0C6E                          u6061 0B64  
                        u7021 3C2C                          u5261 2E7C                          u1981 24F2  
                        u5190 34D6                          u6310 0E78                          u6230 0DD0  
                        u6150 0C82                          u6070 0B76                          u7110 3928  
                        u7030 3C5E                          u5270 2EC2                          u1990 2514  
                        u5087 3F0E                          u5191 34D2                          u6311 0E74  
                        u6231 0DCC                          u6151 0C7E                          u6071 0B72  
                        u7111 3922                          u7031 3C5A                          u5271 2EBE  
                        u1991 2510                          u6400 20F2                          u6320 0EB2  
                        u6240 0DE0                          u6160 0CB4                          u6080 0BE4  
                        u7120 392A                          u7200 304E                          u7040 3F38  
                        u5280 3A82                          u8000 2AF4                          u6401 20EE  
                        u6321 0EAE                          u6241 0DDC                          u6161 0CB0  
                        u6081 0BE0                          u7105 3900                          u7041 3F34  
                        u5281 3A7E                          u8001 2AF0                          u6410 2102  
                        u6330 0EC4                          u6250 0DFC                          u6170 0CC2  
                        u6090 0BFC                          u7210 306A                          u7050 3F8E  
                        u7130 430E                          u5290 3AD4                          u8010 2B0A  
                        u6411 20FE                          u6331 0EC0                          u6251 0DF8  
                        u6171 0CBE                          u6091 0BF6                          u7211 3066  
                        u7051 3F8A                          u7131 430A                          u5291 3AD0  
                        u8011 2B06                          u6500 22CE                          u6420 2146  
                        u6340 0ED4                          u6260 0E0C                          u6180 0CE0  
                        u7060 387E                          u7220 30BE                          u7140 3FC2  
                        u7300 0036                          u8020 2B18                          u6501 22CA  
                        u6421 2142                          u6341 0ED0                          u6261 0E08  
                        u6181 0CDC                          u7205 3044                          u7141 3FBE  
                        u7301 0032                          u8021 2B14                          u4910 401A  
                        u6510 22E4                          u6430 2158                          u6350 0EF4  
                        u6270 0E1E                          u6190 0D18                          u7070 389C  
                        u7230 30DA                          u7150 2F6C                          u7310 0080  
                        u8030 2B46                          u4911 4016                          u6511 22E0  
                        u6431 2154                          u6351 0EF0                          u6271 0E1A  
                        u6191 0D14                          u7071 3898                          u7231 30D6  
                        u7311 007C                          u8031 2B42                          u4920 4030  
                        u6600 241E                          u6520 2302                          u6440 2168  
                        u6360 0F06                          u6280 0E34                          u7080 38C4  
                        u7240 3116                          u7160 2F9A                          u7400 02E2  
                        u7320 0090                          u8040 2B82                          u4921 402C  
                        u6601 241A                          u6521 22FE                          u6441 2164  
                        u6361 0F02                          u6281 0E30                          u7081 38C0  
                        u7065 3874                          u7241 3112                          u7225 30B4  
                        u7161 2F96                          u7401 02DE                          u7321 008C  
                        u8041 2B7E                          u4930 4046                          u6610 244C  
                        u6530 2322                          u6450 21A8                          u6370 0F22  
                        u6290 0E4A                          u7090 38EE                          u7170 2FBC  
                        u7250 41B2                          u7410 036E                          u7330 00CE  
                        u8050 2BA0                          u4931 4042                          u6611 2448  
                        u6531 231E                          u6451 21A4                          u6371 0F1E  
                        u6291 0E46                          u7091 38EA                          u7171 2FB8  
                        u7155 2F62                          u7251 41AE                          u7411 036A  
                        u7331 00CA                          u8051 2B9C                          u8107 2B2C  
                        u4940 405C                          u7260 43A4                          u6540 2334  
                        u6460 21E8                          u6700 1EFA                          u6620 1CB6  
                        u6380 42CE                          u7500 062C                          u7420 03A4  
                        u7340 00E0                          u8060 2C48                          u4941 4058  
                        u7261 439E                          u6541 2330                          u6461 21E4  
                        u6621 1CB2                          u6381 42CA                          u7501 0628  
                        u7421 03A0                          u7341 00DC                          u8061 2C44  
                        u8117 2C2E                          u7270 43A6                          u6550 2362  
                        u6470 225E                          u6390 20E0                          u6710 1F54  
                        u6630 1CC8                          u7190 302A                          u7510 06C6  
                        u7430 03BC                          u7350 015A                          u8070 2C62  
                        u6551 235E                          u6471 225A                          u6391 20DC  
                        u6711 1F50                          u6631 1CC4                          u7191 3026  
                        u7511 06C2                          u7431 03B8                          u7351 0156  
                        u8207 247C                          u8127 3A48                          u8071 2C5E  
                        u7280 425E                          u6560 2378                          u6480 2280  
                        u6800 20A8                          u6720 1F74                          u6640 1CD8  
                        u7600 09B8                          u7520 0714                          u7440 03EE  
                        u7360 016C                          u8080 2C82                          u7281 425A  
                        u6561 2374                          u6481 227C                          u6801 20A4  
                        u6721 1F70                          u6705 1EF0                          u6641 1CD4  
                        u7185 2FD0                          u7521 0710                          u7441 03EA  
                        u7361 0168                          u8217 249A                          u8137 3A9A  
                        u8081 2C7E                          u7290 4280                          u6570 238C  
                        u6490 22AA                          u6810 3DB0                          u6730 1F86  
                        u6650 1D18                          u7186 2FDA                          u7610 09CA  
                        u7530 07C2                          u7450 03FC                          u7370 01E6  
                        u7291 427C                          u6571 2388                          u6491 22A6  
                        u6811 3DAC                          u6731 1F82                          u6651 1D14  
                        u7187 2FEA                          u7611 09C6                          u7531 07BE  
                        u7451 03F8                          u7371 01E2                          u8307 25C4  
                        u8227 24BC                          u8147 3ADC                          u6580 23A6  
                        u6820 3DEE                          u6740 1FB4                          u6660 1D2A  
                        u6900 364A                          u7620 0A08                          u7540 07FE  
                        u7460 0426                          u7380 0272                          u7700 3306  
                        u6581 23A2                          u6821 3DEA                          u6741 1FB0  
                        u6661 1D26                          u6901 3646                          u7621 0A04  
                        u7541 07FA                          u7461 0422                          u7381 026E  
                        u7701 3302                          u8317 25E2                          u8237 24DA  
                        u8157 3AF0                          u6590 23EE                          u6830 3E22  
                        u6750 1FCA                          u6670 1D3A                          u6910 367E  
                        u5950 3CCA                          u7630 0A26                          u7550 080C  
                        u7470 056E                          u7390 02A4                          u7710 3314  
                        u6591 23EA                          u6831 3E1E                          u6751 1FC6  
                        u6671 1D36                          u5951 3CC6                          u7631 0A22  
                        u7551 0808                          u7471 056A                          u7391 02A0  
                        u7711 3310                          u8407 2714                          u8327 260C  
                        u8247 24FC                          u8167 3B06                          u7720 351E  
                        u6840 3768                          u6760 1FDE                          u6680 1D70  
                        u6920 36AC                          u5960 3CDC                          u7640 0A36  
                        u7560 0860                          u7480 05D4                          u7800 15AC  
                        u7721 351A                          u6841 3764                          u6761 1FDA  
                        u6681 1D6C                          u6921 36A8                          u5961 3CD8  
                        u7641 0A32                          u7561 085C                          u7481 05D0  
                        u7801 15A8                          u8417 2732                          u8337 262A  
                        u8257 251A                          u8177 19D8                          u8097 2A9E  
                        u7730 354E                          u6850 37A6                          u6770 1FF8  
                        u6690 1D80                          u6930 36C0                          u5970 3D04  
                        u7570 0932                          u7490 061C                          u7650 3148  
                        u7810 15D8                          u7731 354A                          u6851 37A2  
                        u6771 1FF4                          u6691 1D7C                          u6931 36BC  
                        u6915 3674                          u5971 3D00                          u7571 092E  
                        u7491 0618                          u7651 3144                          u7811 15D4  
                        u8507 2A14                          u8427 2754                          u8347 264C  
                        u8267 2544                          u8187 19F2                          u7740 35FC  
                        u6860 37C4                          u6780 2040                          u6940 36E8  
                        u5980 3D3A                          u7580 094E                          u7660 3164  
                        u7820 1718                          u7900 1958                          u7741 35F8  
                        u6861 37C0                          u6781 203C                          u6941 36E4  
                        u5981 3D36                          u7581 094A                          u7661 3160  
                        u7821 1714                          u8517 2A38                          u8437 2772  
                        u8357 266A                          u8277 2562                          u8197 1A32  
                        u7901 1954                          u7750 360E                          u6870 37E4  
                        u6790 206E                          u5990 0A90                          u6950 3708  
                        u7590 09B6                          u7670 32B4                          u7830 4158  
                        u7910 196A                          u8527 4364                          u7751 360A  
                        u6871 37E0                          u6791 206A                          u5991 0A8C  
                        u6951 3704                          u7591 09B0                          u7671 32B0  
                        u7831 4154                          u8447 3E44                          u8367 268C  
                        u8287 2584                          u7911 1966                          u6880 3834  
                        u6960 3718                          u7680 32D2                          u7760 141A  
                        u7920 1992                          u7840 18C8                          u8537 4376  
                        u6881 3830                          u6961 3714                          u7681 32CE  
                        u7761 1416                          u8457 3E58                          u8377 26AA  
                        u8297 25A2                          u7921 198E                          u7841 18C4  
                        u6890 4326                          u7690 32EC                          u7770 14AC  
                        u7930 19AE                          u7850 18DA                          u8547 43E4  
                        u6891 4322                          u6971 3942                          u7691 32E8  
                        u7771 14A8                          u8467 3E6C                          u8387 26D4  
                        u7931 19AA                          u7851 18D6                          u6980 3966  
                        u7780 14D0                          u7940 1A28                          u7860 18EC  
                        u6981 3962                          u7781 14CC                          u8477 2794  
                        u8397 26F2                          u7941 1A24                          u7861 18E8  
                        u6990 3990                          u7790 150A                          u7950 1A6A  
                        u7870 1910                          u6991 398C                          u7791 1506  
                        u8487 2830                          u7951 1A66                          u7871 190C  
                        u7960 2936                          u7880 192C                          u8497 2964  
                        u7961 2932                          u7881 1928                          u7970 2954  
                        u7890 1946                          u7971 2950                          u7891 1942  
                        u7980 29C2                          u7981 29BE                          u7990 29F4  
                        u7991 29F0                          _TMR2 000FCC               __end_of_WELCOME 3B16  
           ?_Lcd_Write_String 0015                          _dbuf 0100                          _labs 3FA4  
                        _atoi 34EA                          _main 2A48                          _num1 0042  
                        _num2 0044                          _prec 00DC                          pad@i 0028  
                        pad@p 0025                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 002A                          fsr2l 000FD9                          btemp 004E  
                        _utoa 3138                 ___fpclassifyf 383E                          prodh 000FF4  
                        prodl 000FF3                          start 000E            ??_Lcd_Write_String 0017  
             ___fldiv@new_exp 0030               __end_of_Lcd_Cmd 43F2                   ?_ISR_TIMER0 0001  
                ___param_bank 000000                         ??_pad 0027                         ?_FILL 0001  
               ___fltol@sign1 0019                         ?_labs 0011                         ?_atoi 0017  
             __end_of___fladd 0F36                         ?_main 0001               __end_of___fldiv 2460  
             __end_of___flneg 4348                         STR_10 7CF0                         STR_11 7CAE  
                       STR_12 7D11                         STR_20 7CE0                         STR_21 7D11  
                       STR_13 7D19                         STR_22 7D19                         STR_30 7D3C  
                       STR_14 7C9D                         STR_15 7D11                         STR_31 7D08  
                       STR_23 7C48                         STR_24 7D11                         STR_16 7D19  
                       STR_32 7D28                         STR_25 7D19                         STR_33 7D34  
                       STR_17 7CD0                         STR_18 7D11                         STR_26 7C59  
                       STR_27 7D11                         STR_19 7D19                         STR_36 7D38  
                       STR_28 7C8C              ?_Lcd_CGRAM_Close 0001                         STR_29 7D21  
             __end_of___flmul 20C6               __end_of___flsub 4246               __end_of___fltol 373A  
                       ?_utoa 002C               __end_of___lodiv 3A2C                         _T2CON 000FCA  
                       _NAME1 00EB                         _NAME2 00F6               __end_of___lomod 3CB8  
                       i2l124 41FC                         i2l900 1112                         i2l901 10D8  
                       i2l916 123E                         i2l908 13F4                         i2l925 130E  
                       i2l926 12FC                         i2l899 1124                 ??_Keypad_Init 0011  
                 ?_TMR0_COUNT 0001                  vfpfcnvrt@fmt 00A5                         _TMR0L 000FD6  
                       _PULSE 003E                 i2___fladd@grs 0010                         _flags 00E0  
                       _fputc 3CB8                         _fputs 428C               __end_of_isdigit 43AC  
                       labs@a 0011                         atoi@n 001E                         pad@fp 0021  
                       atoi@s 0017                         _width 00DA                         _putch 446A  
             __end_of_isspace 428C                         tablat 000FF5                         ttemp5 004F  
                       ttemp6 0052                         ttemp7 0056                         utoa@d 002E  
                       utoa@i 006C                         utoa@n 0064                         utoa@p 0060  
                       utoa@w 0062                         status 000FD8                         wtemp8 004F  
             __end_of_sprintf 40C0                ?___fpclassifyf 0011              ___lodiv@dividend 0011  
                __end_of_FILL 2A48              __end_of_Lcd_Init 3EAC              __end_of_Lcd_Port 4066  
             __initialization 40C0                   ?_USER_VALUE 0001                  __end_of_labs 400A  
                __end_of_atoi 3634                  __end_of_main 2CBC                  __end_of_utoa 3336  
                      ??_FILL 015D                   _Lcd_NoBlink 4416                        ??_labs 0015  
                      ??_atoi 0019                        ??_main 015F                        ??_utoa 0036  
               __activetblptr 000002              ___lodiv@quotient 0021       Lcd_CGRAM_CreateChar@add 001B  
                   ??_WELCOME 0019                        ?_fputc 0011                        ?_fputs 001A  
                      _CCPR1L 000FBE                        _CCPR2L 000FBB                        ?_putch 0001  
         __end_of_Keypad_Init 4416                        i2l5600 0FDC                        i2l5610 1016  
                      i2l5602 0FEC                        i2l5700 121E                        i2l5620 1042  
                      i2l5612 1028                        i2l5604 0FFC                        i2l5710 1278  
                      i2l5702 122E                        i2l5630 1056                        i2l5622 1046  
                      i2l5614 1036                        i2l5606 0FFE                        i2l5720 12A8  
                      i2l5712 1282                        i2l5704 1254                        i2l5640 106A  
                      i2l5632 105A                        i2l5624 104A                        i2l5616 103A  
                      i2l5608 1006                        i2l5730 12D0                        i2l5722 12AC  
                      i2l5714 1290                        i2l5706 1264                        i2l5650 10A4  
                      i2l5642 106E                        i2l5634 105E                        i2l5626 104E  
                      i2l5618 103E                        i2l5570 0F42                        i2l5740 132A  
                      i2l5732 12DE                        i2l5724 12BC                        i2l5716 1292  
                      i2l5660 10F6                        i2l5652 10C0                        i2l5644 1072  
                      i2l5636 1062                        i2l5628 1052                        i2l5580 0F82  
                      i2l5572 0F50                        i2l5750 1394                        i2l5742 1338  
                      i2l5734 12F4                        i2l5718 12A0                        i2l5726 12BE  
                      i2l5670 1142                        i2l5662 1104                        i2l5654 10D0  
                      i2l5638 1066                        i2l5646 1076                        i2l5590 0FB4  
                      i2l5582 0F84                        i2l5574 0F52                        i2l5760 13CE  
                      i2l5752 13B4                        i2l5744 1372                        i2l5680 1182  
                      i2l5728 12CC                        i2l5664 1106                        i2l5656 10E6  
                      i2l5648 107A                        i2l5592 0FB6                        i2l5576 0F62  
                      i2l5584 0F8C                        i2l5568 0F36                        i2l5762 13D4  
                      i2l5754 13B8                        i2l5738 131E                        i2l5746 1374  
                      i2l5690 11AC                        i2l5682 118E                        i2l5674 1156  
                      i2l5666 1110                        i2l5658 10F2                        i2l5594 0FBC  
                      i2l5586 0F9C                        i2l5578 0F72                        i2l5770 41B6  
                      i2l5764 13E2                        i2l5756 13C6                        i2l5748 1384  
                      i2l5684 1192                        i2l5676 1166                        i2l5668 1132  
                      i2l5692 11B2                        i2l5596 0FCA                        i2l5588 0FA2  
                      i2l5772 41C4                        i2l5766 13E4                        i2l5758 13CC  
                      i2l5694 11D8                        i2l5686 11A0                        i2l5678 1174  
                      i2l5598 0FCC                        i2l5774 41F8                        i2l5696 120C  
                      i2l5688 11A2                        i2l5776 41FA                        i2l5698 120E  
                      _OSCCON 000FD3                     ??_Lcd_Cmd 0012                 vfpfcnvrt@done 00AD  
                      _SENSOR 7C2F                        _TMR2ON 007E52                        __CHAR1 004B  
                      __CHAR2 004C              __end_of___xxtofl 34EA                i2___fladd@aexp 000E  
              i2___fladd@bexp 000F                  vfprintf@cfmt 00C0                        ___flge 373A  
                      ___fleq 3D82  Lcd_CGRAM_CreateChar@chardata 0015                     ??___fladd 0019  
                      ___wmul 43AC                     ??___fldiv 0027                     ??___flneg 0015  
                   ??___flmul 0019                     ??___flsub 0032                     ??___fltol 0015  
                   ??___lodiv 0021                     ??___lomod 0021                        _efgtoa 0012  
                      _floorf 2F22                        _memcpy 4164                        clear_0 40E6  
                      clear_1 40F2                        clear_2 40FE                        isa$std 000001  
             _PULSES_TO_REACH 00D6                        pad@buf 0023                        _strcpy 42D0  
                      fputc@c 0011                        fputs@c 001E                        fputs@i 001F  
                      fputs@s 001A             __end_ofi2___fladd 13F6                     ??_isdigit 0013  
             ___fpclassifyf@e 0019               ___fpclassifyf@u 001B               ___fpclassifyf@x 0011  
                __mediumconst 7C2E                     ??_isspace 0013                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 0001  
            __end_of_vfprintf 4164                        utoa@fp 002C                     ??_sprintf 003E  
             Lcd_Set_Cursor@a 0015               Lcd_Set_Cursor@b 0014               Lcd_Set_Cursor@y 0017  
             Lcd_Set_Cursor@z 0016                    ___flge@ff1 002A                    ___flge@ff2 002E  
             ??___fpclassifyf 0015                  ___xxtofl@arg 001B     Lcd_CGRAM_CreateChar@i_821 001D  
   Lcd_CGRAM_CreateChar@i_822 001E     Lcd_CGRAM_CreateChar@i_823 001F     Lcd_CGRAM_CreateChar@i_824 0020  
   Lcd_CGRAM_CreateChar@i_825 0021     Lcd_CGRAM_CreateChar@i_826 0022     Lcd_CGRAM_CreateChar@i_827 0023  
                ___xxtofl@exp 001A                  ___xxtofl@val 0011                    ___fleq@ff1 0011  
                  ___fleq@ff2 0015                    __accesstop 0060       __end_of__initialization 4104  
                  ___flneg@f1 0011             __end_of_Lcd_Clear 446A             __end_of_Lcd_Blink 4432  
               ___rparam_used 000001                    ___fltol@f1 0011                __pcstackCOMRAM 0001  
                __pidataBANK0 43F2                 __end_of_fputc 3D82                 __end_of_fputs 42D0  
               __end_of_putch 446C                _Lcd_Set_Cursor 3B16                   _Keypad_Init 4406  
            ??_Lcd_CGRAM_Init 0014                     ?_Lcd_Init 0001                     ?_Lcd_Port 0001  
                     ??_fputc 0015                       ??_fputs 001E                       ??_putch 0011  
                  __pbssBANK0 00CA                    __pbssBANK1 0100                  ??_ISR_TIMER0 0011  
                     ?___flge 002A                       ?___fleq 0011                       ?___wmul 0011  
                     ?_efgtoa 0070                       _CCP1CON 000FBD                       _CCP2CON 000FBA  
                     ?_floorf 0038                       ?_memcpy 0011        __end_of_Lcd_Set_Cursor 3BE8  
                     ?_strcpy 0011                  ??_TMR0_COUNT 0011                     ?___xxtofl 0011  
                     _WELCOME 3A2C                    ??_Lcd_Init 0014                    ??_Lcd_Port 0011  
          __end_of_ISR_TIMER0 4200              ___lomod@dividend 0011                _Lcd_Write_Char 4348  
                     _Lcd_Cmd 43D2               i2___fladd@signs 000D                       __Hparam 0000  
                     __Lparam 0000                    _flow_pulse 00DE            __end_of_TMR0_COUNT 445C  
                ??_USER_VALUE 001B                       ___fladd 0A76                       ___fldiv 20C6  
                     ___flneg 4310                       ___flmul 1C9C                       ___flsub 4200  
                     ___fltol 3634                       ___lodiv 393C                       ___lomod 3BE8  
                   ?_vfprintf 00BA                       __pcinit 40C0                       __ramtop 0800  
             ?_Lcd_Set_Cursor 0014                  ?_Lcd_NoBlink 0001                       __ptext0 2A48  
                     __ptext1 3A2C                       __ptext2 1864                       __ptext3 4416  
                     __ptext4 4424                       __ptext5 2460                       __ptext6 3E2C  
                     __ptext7 4432                       __ptext8 2CBC                       __ptext9 4440  
                   _T0CONbits 000FD5                       _isdigit 4380                    ??___xxtofl 0015  
                     _isspace 4246                       efgtoa@c 0076                       efgtoa@d 0082  
                     efgtoa@e 0086                       efgtoa@f 0072                       efgtoa@g 0099  
                     efgtoa@h 008E                       efgtoa@i 0096                       efgtoa@l 0092  
                     efgtoa@m 0084                       efgtoa@n 009D                       efgtoa@p 0079  
                     efgtoa@t 007B                       efgtoa@u 009F                       efgtoa@w 008C  
                     atoi@neg 001C                       _sprintf 4066        __end_of_Lcd_Write_Char 4380  
              __pintcode_body 41B4          end_of_initialization 4104            __end_of_USER_VALUE 1C9C  
                     floorf@e 006A                       floorf@m 0066                       floorf@u 006C  
                     floorf@x 0038             ??_Keypad_Get_Char 0011                       memcpy@d 0018  
                     memcpy@n 0015                       memcpy@s 001A                       fputc@fp 0013  
               __Lmediumconst 7C2E                       int_func 41B4                       fputs@fp 001C  
                   _SELECTED2 004A             __end_of_vfpfcnvrt 1864                    efgtoa@mode 0080  
                  efgtoa@sign 0098                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
            vfpfcnvrt@convarg 00AF                     Lcd_Port@a 0011                    ??_vfprintf 003E  
                     strcpy@d 0017                       strcpy@s 0015                     _PORTAbits 000F80  
                   _PORTBbits 000F81                     _PORTDbits 000F83                   ___fladd@grs 0020  
               ___xxtofl@sign 0019                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
                 ___fldiv@grs 0032                   ___fldiv@rem 002B                     i2___fladd 0F36  
             ?_Lcd_Write_Char 0001             Lcd_Write_String@a 0015             Lcd_Write_String@i 0019  
                 ___flmul@grs 001F                __end_of_SENSOR 7C37                     _Lcd_Clear 445C  
                   _Lcd_Blink 4424                __end_of___flge 383E                __end_of___fleq 3E2C  
                 vfpfcnvrt@ap 00A7                   vfpfcnvrt@cp 00B8                   vfpfcnvrt@fp 00A3  
              __end_of___wmul 43D2              _Lcd_Write_String 3EAC                __end_of_efgtoa 0A76  
              __end_of_floorf 3138                __end_of_memcpy 41B4                    floorf@F526 00CA  
__end_of_Lcd_CGRAM_CreateChar 2F22                  ?_Keypad_Init 0001                __end_of_strcpy 4310  
         start_initialization 40C0               ___lodiv@divisor 0019               ___lodiv@counter 0029  
                 __end_of_pad 3FA4                    ?i2___fladd 0001         __end_of___fpclassifyf 393C  
           ??_Lcd_CGRAM_Close 0014                   vfprintf@fmt 00BC                    ?_Lcd_Clear 0001  
                    ??___flge 0032                      ??___fleq 0019                    ?_Lcd_Blink 0001  
                    ??___wmul 0015                      ??_efgtoa 003C                   __pdataBANK0 00EB  
                    ??_floorf 0060                      ??_memcpy 0017               Lcd_Write_Char@a 0014  
             Lcd_Write_Char@y 0013                      ??_strcpy 0015                     ___fladd@a 0015  
                   ___fladd@b 0011                     ___fldiv@a 0023                     ___fldiv@b 001F  
                   ___flmul@a 0015                     ___flmul@b 0011                   __pbssCOMRAM 003E  
                   ___flsub@a 002E                     ___flsub@b 002A                 __pcstackBANK0 0060  
               __pcstackBANK1 0150                      ?_WELCOME 0001                      ?_Lcd_Cmd 0001  
                 _efgtoa$1512 007D              ??_Lcd_Set_Cursor 0015                     __pintcode 0008  
                    WELCOME@a 001B                 __pmediumconst 7C2E                      ?___fladd 0011  
                    ?___fldiv 001F                      ?___flneg 0011                      ?___flmul 0011  
                    ?___flsub 002A                      ?___fltol 0011                      ?___lodiv 0011  
                    ?___lomod 0011               ___lomod@divisor 0019               _Keypad_Get_Char 2460  
             ___lomod@counter 0021                      ?_isdigit 0011                      ?_isspace 0011  
                 ??i2___fladd 0009                      ?_sprintf 00C2                ___wmul@product 0015  
                    _LATAbits 000F89                      _LATBbits 000F8A                      _LATCbits 000F8B  
        _Lcd_CGRAM_CreateChar 2CBC                  WELCOME@a_631 001D                      Lcd_Cmd@a 0013  
                    i2u550_40 0FCA                      i2u550_41 0FC6                      i2u551_40 0FDC  
                    i2u551_41 0FD8                      i2u560_40 1124                      i2u552_40 0FEC  
                    i2u560_41 1120                      i2u552_41 0FE8                      i2u561_40 1132  
                    i2u553_40 1028                      i2u561_41 112E                      i2u553_41 1024  
                    i2u570_40 1290                      i2u562_40 1142                      i2u554_40 1036  
                    i2u546_40 0F50                      i2u570_41 128C                      i2u562_41 113E  
                    i2u554_41 1032                      i2u546_41 0F4C                      i2u571_40 12A0  
                    i2u563_40 1174                      i2u555_40 10A4                      i2u547_40 0F62  
                    i2u571_41 129C                      i2u563_41 1170                      i2u555_41 10A0  
                    i2u547_41 0F5E                      i2u580_40 1384                      i2u572_40 12BC  
                    i2u564_40 1182                      i2u556_40 10BC                      i2u548_40 0F72  
                    i2u580_41 1380                      i2u572_41 12B8                      i2u564_41 117E  
                    i2u556_41 10B6                      i2u548_41 0F6E                      i2u581_40 1394  
                    i2u573_40 12CC                      i2u565_40 11A0                      i2u557_40 10BE  
                    i2u549_40 0FB4                      i2u581_41 1390                      i2u573_41 12C8  
                    i2u565_41 119C                      i2u549_41 0FB0                      i2u582_40 13B4  
                    i2u574_40 12DE                      i2u566_40 11D8                      i2u558_40 10E6  
                    i2u582_41 13B0                      i2u574_41 12DA                      i2u566_41 11D4  
                    i2u558_41 10E2                      i2u583_40 13C6                      i2u575_40 12F4  
                    i2u567_40 121E                      i2u559_40 1104                      i2u583_41 13C2  
                    i2u575_41 12F0                      i2u567_41 121A                      i2u559_41 1100  
                    i2u584_40 13E2                      i2u576_40 130A                      i2u568_40 1254  
                    i2u584_41 13DE                      i2u576_41 1306                      i2u568_41 1250  
                    i2u577_40 131E                      i2u569_40 1264                      i2u585_40 41C4  
                    i2u577_41 131A                      i2u569_41 1260                      i2u585_41 41C0  
                    i2u578_40 1338                      i2u578_41 1334                      i2u579_40 1372  
                    i2u579_41 136E                   ??_Lcd_Clear 0014                   ??_Lcd_Blink 0014  
                   _vfpfcnvrt 13F6                    _ADCON1bits 000FC1             ___wmul@multiplier 0011  
            ??_Lcd_Write_Char 0012                  _isspace$1598 0015                      _Lcd_Init 3E2C  
                    _Lcd_Port 400A                    vfpfcnvrt@c 00B7                     copy_data0 40D4  
    __end_of_Lcd_Write_String 3F2A         ?_Lcd_CGRAM_CreateChar 0015                      __Hrparam 0000  
                   memcpy@tmp 0017                    vfprintf@ap 00BE                      __Lrparam 0000  
                  vfprintf@fp 00BA       __end_of_Keypad_Get_Char 2784                    ?_vfpfcnvrt 00A3  
          ___fpclassifyf@F465 00CE                    sprintf@fmt 00C4                      ___xxtofl 3336  
             _Lcd_CGRAM_Close 4440                      __ptext10 4406                      __ptext11 2784  
                    __ptext20 3F2A                      __ptext12 4066                      __ptext21 428C  
                    __ptext13 4112                      __ptext30 0A76                      __ptext22 3CB8  
                    __ptext14 13F6                      __ptext31 4310                      __ptext23 446A  
                    __ptext15 3138                      __ptext40 3336                      __ptext32 1C9C  
                    __ptext24 4164                      __ptext16 3BE8                      __ptext41 444E  
                    __ptext33 373A                      __ptext25 3FA4                      __ptext17 393C  
                    __ptext42 3EAC                      __ptext34 3D82                      __ptext26 2F22  
                    __ptext18 0012                      __ptext43 4348                      __ptext35 20C6  
                    __ptext27 383E                      __ptext19 42D0                      __ptext44 3B16  
                    __ptext36 34EA                      __ptext28 3634                      __ptext45 445C  
                    __ptext37 4246                      __ptext29 4200                      __ptext46 43D2  
                    __ptext38 4380                      __ptext47 400A                      __ptext39 43AC  
                    __ptext49 0F36                    strcpy@dest 0011                      efgtoa@fp 0070  
                    efgtoa@ne 0077                      efgtoa@pp 007F                      efgtoa@ou 0088  
                    isa$xinst 000000                      int$flags 004E                      _vfprintf 4112  
                 _VALUE_IN_ML 00D2                    _INTCONbits 000FF2                      memcpy@d1 0011  
                    memcpy@s1 0013                      isdigit@c 0011                   _PROFILE_NUM 0046  
          Lcd_Write_Char@temp 0012                      intlevel2 0000                     sprintf@ap 0150  
      ??_Lcd_CGRAM_CreateChar 0017                _Lcd_CGRAM_Init 4432                      isspace@c 0011  
                   strcpy@src 0013                    _ISR_TIMER0 0008                    _SHIFT_TEXT 004D  
                 efgtoa@nmode 0081              ?_Keypad_Get_Char 0001                   ??_vfpfcnvrt 00A9  
          Lcd_Set_Cursor@temp 0018                 ??_Lcd_NoBlink 0014       __end_of_Lcd_CGRAM_Close 444E  
                    sprintf@f 0152                      sprintf@s 00C2                    _TMR0_COUNT 444E  
          _STRING_VALUE_IN_ML 00E1                 ___fladd@signs 001D        __end_of_Lcd_CGRAM_Init 4440  
                ___fladd@aexp 001E                  ___fladd@bexp 001F                _CURRENT_OPTION 0048  
            _STRING_VAL_TYPED 00E6  
